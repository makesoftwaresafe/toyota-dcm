From c0c4984395d5cc77aa6dd1ee635b3f68c6a5fb85 Mon Sep 17 00:00:00 2001
From: Guillermo Vidal <guillermo.vidal@continental-corporation.com>
Date: Tue, 13 Nov 2012 10:00:28 -0600
Subject: [PATCH 03/15] Made it compile with Vivace

Ticket-Id: BZ223
Change-Id: I6b607415885cf391fde01eb2367429137209d66a
---
 configure.ac         |   12 ++++++++----
 src/shared/missing.h |    2 ++
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/configure.ac b/configure.ac
index 3b1715f..c50f0f3 100644
--- a/configure.ac
+++ b/configure.ac
@@ -17,7 +17,7 @@
 #  You should have received a copy of the GNU Lesser General Public License
 #  along with systemd; If not, see <http://www.gnu.org/licenses/>.
 
-AC_PREREQ([2.64])
+AC_PREREQ([2.68])
 
 AC_INIT([systemd],
         [206],
@@ -139,9 +139,9 @@ CC_CHECK_FLAGS_APPEND([with_cflags], [CFLAGS], [\
         -fno-strict-aliasing \
         -fvisibility=hidden \
         -ffunction-sections \
-        -fdata-sections \
-        -fstack-protector \
-        --param=ssp-buffer-size=4])
+        -fdata-sections])
+dnl        -fstack-protector \
+dnl        --param=ssp-buffer-size=4
 AC_SUBST([OUR_CFLAGS], $with_cflags)
 
 AS_CASE([$CFLAGS], [*-O[[12345g\ ]]*], [
@@ -485,6 +485,7 @@ AC_SUBST(XATTR_LIBS)
 AM_CONDITIONAL([HAVE_XATTR], [test "x$have_xattr" != xno])
 
 # ------------------------------------------------------------------------------
+
 AC_ARG_ENABLE([smack], AS_HELP_STRING([--disable-smack],[Disable optional SMACK support]),
                 [case "${enableval}" in
                         yes) have_smack=yes ;;
@@ -510,6 +511,9 @@ if test "x${have_smack}" = xyes ; then
 fi
 
 # ------------------------------------------------------------------------------
+=======
+AC_DEFUN([AM_PATH_LIBGCRYPT],[:])
+
 AC_ARG_ENABLE([gcrypt],
         AS_HELP_STRING([--disable-gcrypt],[Disable optional GCRYPT support]),
                 [case "${enableval}" in
diff --git a/src/shared/missing.h b/src/shared/missing.h
index 534b3cc..48280c1 100644
--- a/src/shared/missing.h
+++ b/src/shared/missing.h
@@ -254,6 +254,8 @@ static inline int name_to_handle_at(int fd, const char *name, struct file_handle
 #ifndef HAVE_SECURE_GETENV
 #  ifdef HAVE___SECURE_GETENV
 #    define secure_getenv __secure_getenv
+#  elif defined __UCLIBC__
+#    define secure_getenv getenv
 #  else
 #    error neither secure_getenv nor __secure_getenv are available
 #  endif
-- 
1.7.9.5

