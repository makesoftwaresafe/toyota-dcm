From bb617d3003c733450400e1332bda88b9b434142f Mon Sep 17 00:00:00 2001
From: Guillermo Vidal <guillermo.vidal@continental-corporation.com>
Date: Mon, 21 Nov 2011 20:29:53 -0600
Subject: [PATCH 04/15] Extracted original tarball mpc-0.9.tar.gz into mpc

---
 mpc/AUTHORS               |    6 +
 mpc/COPYING.LIB           |  504 ++
 mpc/INSTALL               |   86 +
 mpc/Makefile.am           |    8 +
 mpc/Makefile.in           |  773 +++
 mpc/Makefile.vc           |  418 ++
 mpc/NEWS                  |  107 +
 mpc/README                |    3 +
 mpc/TODO                  |   19 +
 mpc/aclocal.m4            |  998 +++
 mpc/config.guess          | 1502 +++++
 mpc/config.h.in           |  117 +
 mpc/config.sub            | 1714 ++++++
 mpc/configure             |14712 +++++++++++++++++++++++++++++++++++++++++++++
 mpc/configure.ac          |  214 +
 mpc/depcomp               |  630 ++
 mpc/doc/Makefile.am       |    2 +
 mpc/doc/Makefile.in       |  646 ++
 mpc/doc/mdate-sh          |  205 +
 mpc/doc/mpc.info          | 1322 ++++
 mpc/doc/mpc.texi          | 1223 ++++
 mpc/doc/stamp-vti         |    4 +
 mpc/doc/texinfo.tex       | 9291 ++++++++++++++++++++++++++++
 mpc/doc/version.texi      |    4 +
 mpc/install-sh            |  520 ++
 mpc/ltmain.sh             | 8413 ++++++++++++++++++++++++++
 mpc/m4/ax_c_check_flag.m4 |   92 +
 mpc/m4/libtool.m4         | 7377 +++++++++++++++++++++++
 mpc/m4/ltoptions.m4       |  368 ++
 mpc/m4/ltsugar.m4         |  123 +
 mpc/m4/ltversion.m4       |   23 +
 mpc/m4/lt~obsolete.m4     |   92 +
 mpc/m4/mpc.m4             |  166 +
 mpc/missing               |  376 ++
 mpc/src/Makefile.am       |   17 +
 mpc/src/Makefile.in       |  619 ++
 mpc/src/abs.c             |   29 +
 mpc/src/acos.c            |  230 +
 mpc/src/acosh.c           |   77 +
 mpc/src/add.c             |   34 +
 mpc/src/add_fr.c          |   34 +
 mpc/src/add_si.c          |   33 +
 mpc/src/add_ui.c          |   34 +
 mpc/src/arg.c             |   28 +
 mpc/src/asin.c            |  228 +
 mpc/src/asinh.c           |   56 +
 mpc/src/atan.c            |  361 ++
 mpc/src/atanh.c           |   53 +
 mpc/src/clear.c           |   29 +
 mpc/src/cmp.c             |   34 +
 mpc/src/cmp_si_si.c       |   35 +
 mpc/src/conj.c            |   33 +
 mpc/src/cosh.c            |   36 +
 mpc/src/div.c             |  389 ++
 mpc/src/div_2exp.c        |   33 +
 mpc/src/div_fr.c          |   40 +
 mpc/src/div_ui.c          |   33 +
 mpc/src/exp.c             |  192 +
 mpc/src/fma.c             |  135 +
 mpc/src/fr_div.c          |   40 +
 mpc/src/fr_sub.c          |   35 +
 mpc/src/get.c             |   42 +
 mpc/src/get_prec.c        |   29 +
 mpc/src/get_prec2.c       |   30 +
 mpc/src/get_str.c         |  216 +
 mpc/src/get_version.c     |   28 +
 mpc/src/imag.c            |   28 +
 mpc/src/init2.c           |   29 +
 mpc/src/init3.c           |   29 +
 mpc/src/inp_str.c         |  239 +
 mpc/src/log.c             |  152 +
 mpc/src/logging.c         |  145 +
 mpc/src/mem.c             |   47 +
 mpc/src/mpc-impl.h        |  168 +
 mpc/src/mpc-log.h         |   52 +
 mpc/src/mpc.h             |  284 +
 mpc/src/mul.c             |  526 ++
 mpc/src/mul_2exp.c        |   33 +
 mpc/src/mul_fr.c          |   44 +
 mpc/src/mul_i.c           |   81 +
 mpc/src/mul_si.c          |   33 +
 mpc/src/mul_ui.c          |   33 +
 mpc/src/neg.c             |   33 +
 mpc/src/norm.c            |   91 +
 mpc/src/out_str.c         |   40 +
 mpc/src/pow.c             |  697 +++
 mpc/src/pow_d.c           |   39 +
 mpc/src/pow_fr.c          |   38 +
 mpc/src/pow_ld.c          |   39 +
 mpc/src/pow_si.c          |   31 +
 mpc/src/pow_ui.c          |  170 +
 mpc/src/pow_z.c           |   48 +
 mpc/src/proj.c            |   44 +
 mpc/src/real.c            |   28 +
 mpc/src/set.c             |   33 +
 mpc/src/set_prec.c        |   29 +
 mpc/src/set_str.c         |   43 +
 mpc/src/set_x.c           |  105 +
 mpc/src/set_x_x.c         |   79 +
 mpc/src/sin_cos.c         |  430 ++
 mpc/src/sinh.c            |   48 +
 mpc/src/sqr.c             |  241 +
 mpc/src/sqrt.c            |  369 ++
 mpc/src/strtoc.c          |   88 +
 mpc/src/sub.c             |   33 +
 mpc/src/sub_fr.c          |   35 +
 mpc/src/sub_ui.c          |   34 +
 mpc/src/swap.c            |   30 +
 mpc/src/tan.c             |  285 +
 mpc/src/tanh.c            |   48 +
 mpc/src/uceil_log2.c      |   34 +
 mpc/src/ui_div.c          |   37 +
 mpc/src/ui_ui_sub.c       |   35 +
 mpc/src/urandom.c         |   33 +
 mpc/tests/Makefile.am     |   29 +
 mpc/tests/Makefile.in     | 1115 ++++
 mpc/tests/abs.dat         |   86 +
 mpc/tests/acos.dat        |  129 +
 mpc/tests/acosh.dat       |  123 +
 mpc/tests/add.dat         |  117 +
 mpc/tests/add_fr.dat      |  121 +
 mpc/tests/arg.dat         |   76 +
 mpc/tests/asin.dat        |  128 +
 mpc/tests/asinh.dat       |  122 +
 mpc/tests/atan.dat        |  144 +
 mpc/tests/atanh.dat       |  113 +
 mpc/tests/comparisons.c   |   46 +
 mpc/tests/conj.dat        |  111 +
 mpc/tests/cos.dat         |   87 +
 mpc/tests/cosh.dat        |  135 +
 mpc/tests/div.dat         | 2430 ++++++++
 mpc/tests/div_fr.dat      |  370 ++
 mpc/tests/exp.dat         |  120 +
 mpc/tests/fma.dat         |   29 +
 mpc/tests/fr_div.dat      |  383 ++
 mpc/tests/fr_sub.dat      |  370 ++
 mpc/tests/inp_str.dat     |  165 +
 mpc/tests/log.dat         |  163 +
 mpc/tests/memory.c        |  198 +
 mpc/tests/mpc-tests.h     |  204 +
 mpc/tests/mul.dat         |  144 +
 mpc/tests/mul_fr.dat      |  370 ++
 mpc/tests/neg.dat         |  111 +
 mpc/tests/norm.dat        |   81 +
 mpc/tests/pow.dat         |  440 ++
 mpc/tests/pow_ui.dat      |   97 +
 mpc/tests/proj.dat        |   75 +
 mpc/tests/random.c        |  165 +
 mpc/tests/read_data.c     |  889 +++
 mpc/tests/sin.dat         |  165 +
 mpc/tests/sinh.dat        |   86 +
 mpc/tests/sqr.dat         |  147 +
 mpc/tests/sqrt.dat        |  140 +
 mpc/tests/strtoc.dat      |  170 +
 mpc/tests/sub.dat         |   96 +
 mpc/tests/sub_fr.dat      |  380 ++
 mpc/tests/tabs.c          |   37 +
 mpc/tests/tacos.c         |   37 +
 mpc/tests/tacosh.c        |   58 +
 mpc/tests/tadd.c          |   71 +
 mpc/tests/tadd_fr.c       |   73 +
 mpc/tests/tadd_si.c       |   69 +
 mpc/tests/tadd_ui.c       |   69 +
 mpc/tests/tan.dat         |  130 +
 mpc/tests/tanh.dat        |   83 +
 mpc/tests/targ.c          |   37 +
 mpc/tests/tasin.c         |   37 +
 mpc/tests/tasinh.c        |   58 +
 mpc/tests/tatan.c         |   38 +
 mpc/tests/tatanh.c        |   58 +
 mpc/tests/tconj.c         |   37 +
 mpc/tests/tcos.c          |   66 +
 mpc/tests/tcosh.c         |  136 +
 mpc/tests/tdiv.c          |  128 +
 mpc/tests/tdiv_2exp.c     |   36 +
 mpc/tests/tdiv_fr.c       |   37 +
 mpc/tests/tdiv_ui.c       |   36 +
 mpc/tests/texp.c          |   37 +
 mpc/tests/tfma.c          |   37 +
 mpc/tests/tfr_div.c       |   35 +
 mpc/tests/tfr_sub.c       |   36 +
 mpc/tests/tgeneric.c      | 1341 +++++
 mpc/tests/tget_version.c  |   54 +
 mpc/tests/timag.c         |   36 +
 mpc/tests/tio_str.c       |  255 +
 mpc/tests/tlog.c          |   38 +
 mpc/tests/tmul.c          |  222 +
 mpc/tests/tmul_2exp.c     |   36 +
 mpc/tests/tmul_fr.c       |   37 +
 mpc/tests/tmul_i.c        |   97 +
 mpc/tests/tmul_si.c       |   35 +
 mpc/tests/tmul_ui.c       |   36 +
 mpc/tests/tneg.c          |   36 +
 mpc/tests/tnorm.c         |   37 +
 mpc/tests/tpow.c          |   37 +
 mpc/tests/tpow_d.c        |   62 +
 mpc/tests/tpow_fr.c       |   48 +
 mpc/tests/tpow_ld.c       |   44 +
 mpc/tests/tpow_si.c       |   91 +
 mpc/tests/tpow_ui.c       |  122 +
 mpc/tests/tpow_z.c        |   47 +
 mpc/tests/tprec.c         |   70 +
 mpc/tests/tproj.c         |   37 +
 mpc/tests/treal.c         |   36 +
 mpc/tests/treimref.c      |   49 +
 mpc/tests/tset.c          |  440 ++
 mpc/tests/tsin.c          |   37 +
 mpc/tests/tsin_cos.c      |   36 +
 mpc/tests/tsinh.c         |   37 +
 mpc/tests/tsqr.c          |  190 +
 mpc/tests/tsqrt.c         |   37 +
 mpc/tests/tstrtoc.c       |  167 +
 mpc/tests/tsub.c          |   37 +
 mpc/tests/tsub_fr.c       |   37 +
 mpc/tests/tsub_ui.c       |   36 +
 mpc/tests/ttan.c          |  265 +
 mpc/tests/ttanh.c         |   37 +
 mpc/tests/tui_div.c       |  103 +
 mpc/tests/tui_ui_sub.c    |   36 +
 219 files changed, 77134 insertions(+)
 create mode 100644 mpc/AUTHORS
 create mode 100644 mpc/COPYING.LIB
 create mode 100644 mpc/ChangeLog
 create mode 100644 mpc/INSTALL
 create mode 100644 mpc/Makefile.am
 create mode 100644 mpc/Makefile.in
 create mode 100644 mpc/Makefile.vc
 create mode 100644 mpc/NEWS
 create mode 100644 mpc/README
 create mode 100644 mpc/TODO
 create mode 100644 mpc/aclocal.m4
 create mode 100755 mpc/config.guess
 create mode 100644 mpc/config.h.in
 create mode 100755 mpc/config.sub
 create mode 100755 mpc/configure
 create mode 100644 mpc/configure.ac
 create mode 100755 mpc/depcomp
 create mode 100644 mpc/doc/Makefile.am
 create mode 100644 mpc/doc/Makefile.in
 create mode 100755 mpc/doc/mdate-sh
 create mode 100644 mpc/doc/mpc.info
 create mode 100644 mpc/doc/mpc.texi
 create mode 100644 mpc/doc/stamp-vti
 create mode 100644 mpc/doc/texinfo.tex
 create mode 100644 mpc/doc/version.texi
 create mode 100755 mpc/install-sh
 create mode 100755 mpc/ltmain.sh
 create mode 100644 mpc/m4/ax_c_check_flag.m4
 create mode 100644 mpc/m4/libtool.m4
 create mode 100644 mpc/m4/ltoptions.m4
 create mode 100644 mpc/m4/ltsugar.m4
 create mode 100644 mpc/m4/ltversion.m4
 create mode 100644 mpc/m4/lt~obsolete.m4
 create mode 100644 mpc/m4/mpc.m4
 create mode 100755 mpc/missing
 create mode 100644 mpc/src/Makefile.am
 create mode 100644 mpc/src/Makefile.in
 create mode 100644 mpc/src/abs.c
 create mode 100644 mpc/src/acos.c
 create mode 100644 mpc/src/acosh.c
 create mode 100644 mpc/src/add.c
 create mode 100644 mpc/src/add_fr.c
 create mode 100644 mpc/src/add_si.c
 create mode 100644 mpc/src/add_ui.c
 create mode 100644 mpc/src/arg.c
 create mode 100644 mpc/src/asin.c
 create mode 100644 mpc/src/asinh.c
 create mode 100644 mpc/src/atan.c
 create mode 100644 mpc/src/atanh.c
 create mode 100644 mpc/src/clear.c
 create mode 100644 mpc/src/cmp.c
 create mode 100644 mpc/src/cmp_si_si.c
 create mode 100644 mpc/src/conj.c
 create mode 100644 mpc/src/cosh.c
 create mode 100644 mpc/src/div.c
 create mode 100644 mpc/src/div_2exp.c
 create mode 100644 mpc/src/div_fr.c
 create mode 100644 mpc/src/div_ui.c
 create mode 100644 mpc/src/exp.c
 create mode 100644 mpc/src/fma.c
 create mode 100644 mpc/src/fr_div.c
 create mode 100644 mpc/src/fr_sub.c
 create mode 100644 mpc/src/get.c
 create mode 100644 mpc/src/get_prec.c
 create mode 100644 mpc/src/get_prec2.c
 create mode 100644 mpc/src/get_str.c
 create mode 100644 mpc/src/get_version.c
 create mode 100644 mpc/src/imag.c
 create mode 100644 mpc/src/init2.c
 create mode 100644 mpc/src/init3.c
 create mode 100644 mpc/src/inp_str.c
 create mode 100644 mpc/src/log.c
 create mode 100644 mpc/src/logging.c
 create mode 100644 mpc/src/mem.c
 create mode 100644 mpc/src/mpc-impl.h
 create mode 100644 mpc/src/mpc-log.h
 create mode 100644 mpc/src/mpc.h
 create mode 100644 mpc/src/mul.c
 create mode 100644 mpc/src/mul_2exp.c
 create mode 100644 mpc/src/mul_fr.c
 create mode 100644 mpc/src/mul_i.c
 create mode 100644 mpc/src/mul_si.c
 create mode 100644 mpc/src/mul_ui.c
 create mode 100644 mpc/src/neg.c
 create mode 100644 mpc/src/norm.c
 create mode 100644 mpc/src/out_str.c
 create mode 100644 mpc/src/pow.c
 create mode 100644 mpc/src/pow_d.c
 create mode 100644 mpc/src/pow_fr.c
 create mode 100644 mpc/src/pow_ld.c
 create mode 100644 mpc/src/pow_si.c
 create mode 100644 mpc/src/pow_ui.c
 create mode 100644 mpc/src/pow_z.c
 create mode 100644 mpc/src/proj.c
 create mode 100644 mpc/src/real.c
 create mode 100644 mpc/src/set.c
 create mode 100644 mpc/src/set_prec.c
 create mode 100644 mpc/src/set_str.c
 create mode 100644 mpc/src/set_x.c
 create mode 100644 mpc/src/set_x_x.c
 create mode 100644 mpc/src/sin_cos.c
 create mode 100644 mpc/src/sinh.c
 create mode 100644 mpc/src/sqr.c
 create mode 100644 mpc/src/sqrt.c
 create mode 100644 mpc/src/strtoc.c
 create mode 100644 mpc/src/sub.c
 create mode 100644 mpc/src/sub_fr.c
 create mode 100644 mpc/src/sub_ui.c
 create mode 100644 mpc/src/swap.c
 create mode 100644 mpc/src/tan.c
 create mode 100644 mpc/src/tanh.c
 create mode 100644 mpc/src/uceil_log2.c
 create mode 100644 mpc/src/ui_div.c
 create mode 100644 mpc/src/ui_ui_sub.c
 create mode 100644 mpc/src/urandom.c
 create mode 100644 mpc/tests/Makefile.am
 create mode 100644 mpc/tests/Makefile.in
 create mode 100644 mpc/tests/abs.dat
 create mode 100644 mpc/tests/acos.dat
 create mode 100644 mpc/tests/acosh.dat
 create mode 100644 mpc/tests/add.dat
 create mode 100644 mpc/tests/add_fr.dat
 create mode 100644 mpc/tests/arg.dat
 create mode 100644 mpc/tests/asin.dat
 create mode 100644 mpc/tests/asinh.dat
 create mode 100644 mpc/tests/atan.dat
 create mode 100644 mpc/tests/atanh.dat
 create mode 100644 mpc/tests/comparisons.c
 create mode 100644 mpc/tests/conj.dat
 create mode 100644 mpc/tests/cos.dat
 create mode 100644 mpc/tests/cosh.dat
 create mode 100644 mpc/tests/div.dat
 create mode 100644 mpc/tests/div_fr.dat
 create mode 100644 mpc/tests/exp.dat
 create mode 100644 mpc/tests/fma.dat
 create mode 100644 mpc/tests/fr_div.dat
 create mode 100644 mpc/tests/fr_sub.dat
 create mode 100644 mpc/tests/inp_str.dat
 create mode 100644 mpc/tests/log.dat
 create mode 100644 mpc/tests/memory.c
 create mode 100644 mpc/tests/mpc-tests.h
 create mode 100755 mpc/tests/mul.dat
 create mode 100644 mpc/tests/mul_fr.dat
 create mode 100644 mpc/tests/neg.dat
 create mode 100644 mpc/tests/norm.dat
 create mode 100644 mpc/tests/pow.dat
 create mode 100644 mpc/tests/pow_ui.dat
 create mode 100644 mpc/tests/proj.dat
 create mode 100644 mpc/tests/random.c
 create mode 100644 mpc/tests/read_data.c
 create mode 100644 mpc/tests/sin.dat
 create mode 100644 mpc/tests/sinh.dat
 create mode 100644 mpc/tests/sqr.dat
 create mode 100644 mpc/tests/sqrt.dat
 create mode 100644 mpc/tests/strtoc.dat
 create mode 100644 mpc/tests/sub.dat
 create mode 100644 mpc/tests/sub_fr.dat
 create mode 100644 mpc/tests/tabs.c
 create mode 100644 mpc/tests/tacos.c
 create mode 100644 mpc/tests/tacosh.c
 create mode 100644 mpc/tests/tadd.c
 create mode 100644 mpc/tests/tadd_fr.c
 create mode 100644 mpc/tests/tadd_si.c
 create mode 100644 mpc/tests/tadd_ui.c
 create mode 100644 mpc/tests/tan.dat
 create mode 100644 mpc/tests/tanh.dat
 create mode 100644 mpc/tests/targ.c
 create mode 100644 mpc/tests/tasin.c
 create mode 100644 mpc/tests/tasinh.c
 create mode 100644 mpc/tests/tatan.c
 create mode 100644 mpc/tests/tatanh.c
 create mode 100644 mpc/tests/tconj.c
 create mode 100644 mpc/tests/tcos.c
 create mode 100644 mpc/tests/tcosh.c
 create mode 100644 mpc/tests/tdiv.c
 create mode 100644 mpc/tests/tdiv_2exp.c
 create mode 100644 mpc/tests/tdiv_fr.c
 create mode 100644 mpc/tests/tdiv_ui.c
 create mode 100644 mpc/tests/texp.c
 create mode 100644 mpc/tests/tfma.c
 create mode 100644 mpc/tests/tfr_div.c
 create mode 100644 mpc/tests/tfr_sub.c
 create mode 100644 mpc/tests/tgeneric.c
 create mode 100644 mpc/tests/tget_version.c
 create mode 100644 mpc/tests/timag.c
 create mode 100644 mpc/tests/tio_str.c
 create mode 100644 mpc/tests/tlog.c
 create mode 100644 mpc/tests/tmul.c
 create mode 100644 mpc/tests/tmul_2exp.c
 create mode 100644 mpc/tests/tmul_fr.c
 create mode 100644 mpc/tests/tmul_i.c
 create mode 100644 mpc/tests/tmul_si.c
 create mode 100644 mpc/tests/tmul_ui.c
 create mode 100644 mpc/tests/tneg.c
 create mode 100644 mpc/tests/tnorm.c
 create mode 100644 mpc/tests/tpow.c
 create mode 100644 mpc/tests/tpow_d.c
 create mode 100644 mpc/tests/tpow_fr.c
 create mode 100644 mpc/tests/tpow_ld.c
 create mode 100644 mpc/tests/tpow_si.c
 create mode 100644 mpc/tests/tpow_ui.c
 create mode 100644 mpc/tests/tpow_z.c
 create mode 100644 mpc/tests/tprec.c
 create mode 100644 mpc/tests/tproj.c
 create mode 100644 mpc/tests/treal.c
 create mode 100644 mpc/tests/treimref.c
 create mode 100644 mpc/tests/tset.c
 create mode 100644 mpc/tests/tsin.c
 create mode 100644 mpc/tests/tsin_cos.c
 create mode 100644 mpc/tests/tsinh.c
 create mode 100644 mpc/tests/tsqr.c
 create mode 100644 mpc/tests/tsqrt.c
 create mode 100644 mpc/tests/tstrtoc.c
 create mode 100644 mpc/tests/tsub.c
 create mode 100644 mpc/tests/tsub_fr.c
 create mode 100644 mpc/tests/tsub_ui.c
 create mode 100644 mpc/tests/ttan.c
 create mode 100644 mpc/tests/ttanh.c
 create mode 100644 mpc/tests/tui_div.c
 create mode 100644 mpc/tests/tui_ui_sub.c

diff --git a/mpc/AUTHORS b/mpc/AUTHORS
new file mode 100644
index 0000000..2179395
--- /dev/null
+++ b/mpc/AUTHORS
@@ -0,0 +1,6 @@
+Main authors:
+   Andreas Enge
+   Philipe Théveny
+   Paul Zimmermann
+
+Mickaël Gastineau has contributed the file Makefile.vc.
diff --git a/mpc/COPYING.LIB b/mpc/COPYING.LIB
new file mode 100644
index 0000000..b1e3f5a
--- /dev/null
+++ b/mpc/COPYING.LIB
@@ -0,0 +1,504 @@
+		  GNU LESSER GENERAL PUBLIC LICENSE
+		       Version 2.1, February 1999
+
+ Copyright (C) 1991, 1999 Free Software Foundation, Inc.
+     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+[This is the first released version of the Lesser GPL.  It also counts
+ as the successor of the GNU Library Public License, version 2, hence
+ the version number 2.1.]
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+Licenses are intended to guarantee your freedom to share and change
+free software--to make sure the software is free for all its users.
+
+  This license, the Lesser General Public License, applies to some
+specially designated software packages--typically libraries--of the
+Free Software Foundation and other authors who decide to use it.  You
+can use it too, but we suggest you first think carefully about whether
+this license or the ordinary General Public License is the better
+strategy to use in any particular case, based on the explanations below.
+
+  When we speak of free software, we are referring to freedom of use,
+not price.  Our General Public Licenses are designed to make sure that
+you have the freedom to distribute copies of free software (and charge
+for this service if you wish); that you receive source code or can get
+it if you want it; that you can change the software and use pieces of
+it in new free programs; and that you are informed that you can do
+these things.
+
+  To protect your rights, we need to make restrictions that forbid
+distributors to deny you these rights or to ask you to surrender these
+rights.  These restrictions translate to certain responsibilities for
+you if you distribute copies of the library or if you modify it.
+
+  For example, if you distribute copies of the library, whether gratis
+or for a fee, you must give the recipients all the rights that we gave
+you.  You must make sure that they, too, receive or can get the source
+code.  If you link other code with the library, you must provide
+complete object files to the recipients, so that they can relink them
+with the library after making changes to the library and recompiling
+it.  And you must show them these terms so they know their rights.
+
+  We protect your rights with a two-step method: (1) we copyright the
+library, and (2) we offer you this license, which gives you legal
+permission to copy, distribute and/or modify the library.
+
+  To protect each distributor, we want to make it very clear that
+there is no warranty for the free library.  Also, if the library is
+modified by someone else and passed on, the recipients should know
+that what they have is not the original version, so that the original
+author's reputation will not be affected by problems that might be
+introduced by others.
+
+  Finally, software patents pose a constant threat to the existence of
+any free program.  We wish to make sure that a company cannot
+effectively restrict the users of a free program by obtaining a
+restrictive license from a patent holder.  Therefore, we insist that
+any patent license obtained for a version of the library must be
+consistent with the full freedom of use specified in this license.
+
+  Most GNU software, including some libraries, is covered by the
+ordinary GNU General Public License.  This license, the GNU Lesser
+General Public License, applies to certain designated libraries, and
+is quite different from the ordinary General Public License.  We use
+this license for certain libraries in order to permit linking those
+libraries into non-free programs.
+
+  When a program is linked with a library, whether statically or using
+a shared library, the combination of the two is legally speaking a
+combined work, a derivative of the original library.  The ordinary
+General Public License therefore permits such linking only if the
+entire combination fits its criteria of freedom.  The Lesser General
+Public License permits more lax criteria for linking other code with
+the library.
+
+  We call this license the "Lesser" General Public License because it
+does Less to protect the user's freedom than the ordinary General
+Public License.  It also provides other free software developers Less
+of an advantage over competing non-free programs.  These disadvantages
+are the reason we use the ordinary General Public License for many
+libraries.  However, the Lesser license provides advantages in certain
+special circumstances.
+
+  For example, on rare occasions, there may be a special need to
+encourage the widest possible use of a certain library, so that it becomes
+a de-facto standard.  To achieve this, non-free programs must be
+allowed to use the library.  A more frequent case is that a free
+library does the same job as widely used non-free libraries.  In this
+case, there is little to gain by limiting the free library to free
+software only, so we use the Lesser General Public License.
+
+  In other cases, permission to use a particular library in non-free
+programs enables a greater number of people to use a large body of
+free software.  For example, permission to use the GNU C Library in
+non-free programs enables many more people to use the whole GNU
+operating system, as well as its variant, the GNU/Linux operating
+system.
+
+  Although the Lesser General Public License is Less protective of the
+users' freedom, it does ensure that the user of a program that is
+linked with the Library has the freedom and the wherewithal to run
+that program using a modified version of the Library.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.  Pay close attention to the difference between a
+"work based on the library" and a "work that uses the library".  The
+former contains code derived from the library, whereas the latter must
+be combined with the library in order to run.
+
+		  GNU LESSER GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License Agreement applies to any software library or other
+program which contains a notice placed by the copyright holder or
+other authorized party saying it may be distributed under the terms of
+this Lesser General Public License (also called "this License").
+Each licensee is addressed as "you".
+
+  A "library" means a collection of software functions and/or data
+prepared so as to be conveniently linked with application programs
+(which use some of those functions and data) to form executables.
+
+  The "Library", below, refers to any such software library or work
+which has been distributed under these terms.  A "work based on the
+Library" means either the Library or any derivative work under
+copyright law: that is to say, a work containing the Library or a
+portion of it, either verbatim or with modifications and/or translated
+straightforwardly into another language.  (Hereinafter, translation is
+included without limitation in the term "modification".)
+
+  "Source code" for a work means the preferred form of the work for
+making modifications to it.  For a library, complete source code means
+all the source code for all modules it contains, plus any associated
+interface definition files, plus the scripts used to control compilation
+and installation of the library.
+
+  Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running a program using the Library is not restricted, and output from
+such a program is covered only if its contents constitute a work based
+on the Library (independent of the use of the Library in a tool for
+writing it).  Whether that is true depends on what the Library does
+and what the program that uses the Library does.
+  
+  1. You may copy and distribute verbatim copies of the Library's
+complete source code as you receive it, in any medium, provided that
+you conspicuously and appropriately publish on each copy an
+appropriate copyright notice and disclaimer of warranty; keep intact
+all the notices that refer to this License and to the absence of any
+warranty; and distribute a copy of this License along with the
+Library.
+
+  You may charge a fee for the physical act of transferring a copy,
+and you may at your option offer warranty protection in exchange for a
+fee.
+
+  2. You may modify your copy or copies of the Library or any portion
+of it, thus forming a work based on the Library, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) The modified work must itself be a software library.
+
+    b) You must cause the files modified to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    c) You must cause the whole of the work to be licensed at no
+    charge to all third parties under the terms of this License.
+
+    d) If a facility in the modified Library refers to a function or a
+    table of data to be supplied by an application program that uses
+    the facility, other than as an argument passed when the facility
+    is invoked, then you must make a good faith effort to ensure that,
+    in the event an application does not supply such function or
+    table, the facility still operates, and performs whatever part of
+    its purpose remains meaningful.
+
+    (For example, a function in a library to compute square roots has
+    a purpose that is entirely well-defined independent of the
+    application.  Therefore, Subsection 2d requires that any
+    application-supplied function or table used by this function must
+    be optional: if the application does not supply it, the square
+    root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Library,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Library, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library
+with the Library (or with a work based on the Library) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may opt to apply the terms of the ordinary GNU General Public
+License instead of this License to a given copy of the Library.  To do
+this, you must alter all the notices that refer to this License, so
+that they refer to the ordinary GNU General Public License, version 2,
+instead of to this License.  (If a newer version than version 2 of the
+ordinary GNU General Public License has appeared, then you can specify
+that version instead if you wish.)  Do not make any other change in
+these notices.
+
+  Once this change is made in a given copy, it is irreversible for
+that copy, so the ordinary GNU General Public License applies to all
+subsequent copies and derivative works made from that copy.
+
+  This option is useful when you wish to copy part of the code of
+the Library into a program that is not a library.
+
+  4. You may copy and distribute the Library (or a portion or
+derivative of it, under Section 2) in object code or executable form
+under the terms of Sections 1 and 2 above provided that you accompany
+it with the complete corresponding machine-readable source code, which
+must be distributed under the terms of Sections 1 and 2 above on a
+medium customarily used for software interchange.
+
+  If distribution of object code is made by offering access to copy
+from a designated place, then offering equivalent access to copy the
+source code from the same place satisfies the requirement to
+distribute the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  5. A program that contains no derivative of any portion of the
+Library, but is designed to work with the Library by being compiled or
+linked with it, is called a "work that uses the Library".  Such a
+work, in isolation, is not a derivative work of the Library, and
+therefore falls outside the scope of this License.
+
+  However, linking a "work that uses the Library" with the Library
+creates an executable that is a derivative of the Library (because it
+contains portions of the Library), rather than a "work that uses the
+library".  The executable is therefore covered by this License.
+Section 6 states terms for distribution of such executables.
+
+  When a "work that uses the Library" uses material from a header file
+that is part of the Library, the object code for the work may be a
+derivative work of the Library even though the source code is not.
+Whether this is true is especially significant if the work can be
+linked without the Library, or if the work is itself a library.  The
+threshold for this to be true is not precisely defined by law.
+
+  If such an object file uses only numerical parameters, data
+structure layouts and accessors, and small macros and small inline
+functions (ten lines or less in length), then the use of the object
+file is unrestricted, regardless of whether it is legally a derivative
+work.  (Executables containing this object code plus portions of the
+Library will still fall under Section 6.)
+
+  Otherwise, if the work is a derivative of the Library, you may
+distribute the object code for the work under the terms of Section 6.
+Any executables containing that work also fall under Section 6,
+whether or not they are linked directly with the Library itself.
+
+  6. As an exception to the Sections above, you may also combine or
+link a "work that uses the Library" with the Library to produce a
+work containing portions of the Library, and distribute that work
+under terms of your choice, provided that the terms permit
+modification of the work for the customer's own use and reverse
+engineering for debugging such modifications.
+
+  You must give prominent notice with each copy of the work that the
+Library is used in it and that the Library and its use are covered by
+this License.  You must supply a copy of this License.  If the work
+during execution displays copyright notices, you must include the
+copyright notice for the Library among them, as well as a reference
+directing the user to the copy of this License.  Also, you must do one
+of these things:
+
+    a) Accompany the work with the complete corresponding
+    machine-readable source code for the Library including whatever
+    changes were used in the work (which must be distributed under
+    Sections 1 and 2 above); and, if the work is an executable linked
+    with the Library, with the complete machine-readable "work that
+    uses the Library", as object code and/or source code, so that the
+    user can modify the Library and then relink to produce a modified
+    executable containing the modified Library.  (It is understood
+    that the user who changes the contents of definitions files in the
+    Library will not necessarily be able to recompile the application
+    to use the modified definitions.)
+
+    b) Use a suitable shared library mechanism for linking with the
+    Library.  A suitable mechanism is one that (1) uses at run time a
+    copy of the library already present on the user's computer system,
+    rather than copying library functions into the executable, and (2)
+    will operate properly with a modified version of the library, if
+    the user installs one, as long as the modified version is
+    interface-compatible with the version that the work was made with.
+
+    c) Accompany the work with a written offer, valid for at
+    least three years, to give the same user the materials
+    specified in Subsection 6a, above, for a charge no more
+    than the cost of performing this distribution.
+
+    d) If distribution of the work is made by offering access to copy
+    from a designated place, offer equivalent access to copy the above
+    specified materials from the same place.
+
+    e) Verify that the user has already received a copy of these
+    materials or that you have already sent this user a copy.
+
+  For an executable, the required form of the "work that uses the
+Library" must include any data and utility programs needed for
+reproducing the executable from it.  However, as a special exception,
+the materials to be distributed need not include anything that is
+normally distributed (in either source or binary form) with the major
+components (compiler, kernel, and so on) of the operating system on
+which the executable runs, unless that component itself accompanies
+the executable.
+
+  It may happen that this requirement contradicts the license
+restrictions of other proprietary libraries that do not normally
+accompany the operating system.  Such a contradiction means you cannot
+use both them and the Library together in an executable that you
+distribute.
+
+  7. You may place library facilities that are a work based on the
+Library side-by-side in a single library together with other library
+facilities not covered by this License, and distribute such a combined
+library, provided that the separate distribution of the work based on
+the Library and of the other library facilities is otherwise
+permitted, and provided that you do these two things:
+
+    a) Accompany the combined library with a copy of the same work
+    based on the Library, uncombined with any other library
+    facilities.  This must be distributed under the terms of the
+    Sections above.
+
+    b) Give prominent notice with the combined library of the fact
+    that part of it is a work based on the Library, and explaining
+    where to find the accompanying uncombined form of the same work.
+
+  8. You may not copy, modify, sublicense, link with, or distribute
+the Library except as expressly provided under this License.  Any
+attempt otherwise to copy, modify, sublicense, link with, or
+distribute the Library is void, and will automatically terminate your
+rights under this License.  However, parties who have received copies,
+or rights, from you under this License will not have their licenses
+terminated so long as such parties remain in full compliance.
+
+  9. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Library or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Library (or any work based on the
+Library), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Library or works based on it.
+
+  10. Each time you redistribute the Library (or any work based on the
+Library), the recipient automatically receives a license from the
+original licensor to copy, distribute, link with or modify the Library
+subject to these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties with
+this License.
+
+  11. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Library at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Library by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under any
+particular circumstance, the balance of the section is intended to apply,
+and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  12. If the distribution and/or use of the Library is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Library under this License may add
+an explicit geographical distribution limitation excluding those countries,
+so that distribution is permitted only in or among countries not thus
+excluded.  In such case, this License incorporates the limitation as if
+written in the body of this License.
+
+  13. The Free Software Foundation may publish revised and/or new
+versions of the Lesser General Public License from time to time.
+Such new versions will be similar in spirit to the present version,
+but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Library
+specifies a version number of this License which applies to it and
+"any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Library does not specify a
+license version number, you may choose any version ever published by
+the Free Software Foundation.
+
+  14. If you wish to incorporate parts of the Library into other free
+programs whose distribution conditions are incompatible with these,
+write to the author to ask for permission.  For software which is
+copyrighted by the Free Software Foundation, write to the Free
+Software Foundation; we sometimes make exceptions for this.  Our
+decision will be guided by the two goals of preserving the free status
+of all derivatives of our free software and of promoting the sharing
+and reuse of software generally.
+
+			    NO WARRANTY
+
+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+		     END OF TERMS AND CONDITIONS
+
+           How to Apply These Terms to Your New Libraries
+
+  If you develop a new library, and you want it to be of the greatest
+possible use to the public, we recommend making it free software that
+everyone can redistribute and change.  You can do so by permitting
+redistribution under these terms (or, alternatively, under the terms of the
+ordinary General Public License).
+
+  To apply these terms, attach the following notices to the library.  It is
+safest to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least the
+"copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the library's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) any later version.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library; if not, write to the Free Software
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+Also add information on how to contact you by electronic and paper mail.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a "copyright disclaimer" for the library, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the
+  library `Frob' (a library for tweaking knobs) written by James Random Hacker.
+
+  <signature of Ty Coon>, 1 April 1990
+  Ty Coon, President of Vice
+
+That's all there is to it!
+
+
diff --git a/mpc/ChangeLog b/mpc/ChangeLog
new file mode 100644
index 0000000..e69de29
diff --git a/mpc/INSTALL b/mpc/INSTALL
new file mode 100644
index 0000000..8da9cc4
--- /dev/null
+++ b/mpc/INSTALL
@@ -0,0 +1,86 @@
+                        Installing MPC
+                        ==============
+
+This is for the impatient, for deeper explanations see Installing MPC chapter
+in the Texinfo documentation (type 'info mpc.info').
+
+0. You first need to install GMP and MPFR. See <http://gmplib.org/>
+   and <http://www.mpfr.org>.
+   MPC requires GMP version 4.3.2 or later and MPFR version 2.4.2 or later.
+
+1. In the directory of the MPC archive, type
+
+      tar xzf mpc-0.9.tar.gz
+      cd mpc-0.9
+      ./configure
+      make
+
+   This assumes that GMP and MPFR are installed in a directory searched by
+   default by the compiler. Otherwise, use --with-gmp=DIR or --with-mpfr=DIR
+   (see the Texinfo documentation).
+
+2. You can optionally run the test suit, type
+
+      make check
+
+3. To install the MPC library, type
+
+      make install
+
+      By default, the files are copied into /usr/local subdirectories. You
+      need write permissions on these directories.
+
+4. You can optionally create documentation, type
+
+      make dvi
+
+   or
+
+      make ps
+
+   This requires the Texinfo package (version 4.2 at least).
+
+In case of difficulties, please send a description of the problem to
+<mpc-discuss@lists.gforge.inria.fr>.
+
+##############################################################################
+
+Note for AIX users:
+===================
+
+If GMP was built with the 64-bit ABI, before building and testing MPC,
+it might be necessary to set the OBJECT_MODE environment variable to 64
+by, e.g.,
+   export OBJECT_MODE=64
+This has been tested with the C compiler IBM XL C/C++ Enterprise Edition
+V8.0 for AIX, version: 08.00.0000.0021, GMP 4.2.4 and MPFR 2.4.1.
+
+##############################################################################
+
+Note for Windows users:
+=======================
+
+There is a special file Makefile.vc for Windows, contributed by Mickael
+Gastineau. This file works both for the Windows Server 2003 R2 Platform SDK,
+and for the Windows SDK of Vista. To use it, simply replace "make" by
+"nmake /f makefile.vc" in the above instructions:
+
+compilation :
+nmake /f makefile.vc GMP=<gmp_install_dir> MPFR=<mpfr_install_dir>
+
+clean :
+nmake /f makefile.vc GMP=<gmp_install_dir> MPFR=<mpfr_install_dir> clean
+
+check :
+nmake /f makefile.vc GMP=<gmp_install_dir> MPFR=<mpfr_install_dir> check
+
+For any issue related to the makefile.vc file, please contact directly
+Mickael Gastineau at <gastineau at imcce dot fr> (replace 'at' by '@',
+and 'dot' by '.').
+
+If you want to compile mpc with mingw in the msys shell, you might need to
+add the following to the configure command (or in your environment):
+
+LDFLAGS=-L/usr/local/lib CPPFLAGS=-I/usr/local/include
+
+(reported by Sisyphus)
diff --git a/mpc/Makefile.am b/mpc/Makefile.am
new file mode 100644
index 0000000..d7846db
--- /dev/null
+++ b/mpc/Makefile.am
@@ -0,0 +1,8 @@
+## Makefile.am -- Process this file with automake to produce Makefile.in
+ACLOCAL_AMFLAGS = -I m4
+
+SUBDIRS = src tests doc
+
+EXTRA_HEADERS = src/mpc-log.h
+include_HEADERS = src/mpc.h @MPC_LOG_H@
+EXTRA_DIST = src/mpc-log.h tests/tgeneric.c Makefile.vc
diff --git a/mpc/Makefile.in b/mpc/Makefile.in
new file mode 100644
index 0000000..bec74e6
--- /dev/null
+++ b/mpc/Makefile.in
@@ -0,0 +1,773 @@
+# Makefile.in generated by automake 1.11.1 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
+# Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+subdir = .
+DIST_COMMON = README $(am__configure_deps) $(include_HEADERS) \
+	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
+	$(srcdir)/config.h.in $(top_srcdir)/configure AUTHORS \
+	COPYING.LIB ChangeLog INSTALL NEWS TODO config.guess \
+	config.sub depcomp install-sh ltmain.sh missing
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_c_check_flag.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/mpc.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
+ configure.lineno config.status.lineno
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-dvi-recursive install-exec-recursive \
+	install-html-recursive install-info-recursive \
+	install-pdf-recursive install-ps-recursive install-recursive \
+	installcheck-recursive installdirs-recursive pdf-recursive \
+	ps-recursive uninstall-recursive
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__installdirs = "$(DESTDIR)$(includedir)"
+HEADERS = $(include_HEADERS)
+RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
+  distclean-recursive maintainer-clean-recursive
+AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
+	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
+	distdir dist dist-all distcheck
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+distdir = $(PACKAGE)-$(VERSION)
+top_distdir = $(distdir)
+am__remove_distdir = \
+  { test ! -d "$(distdir)" \
+    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
+         && rm -fr "$(distdir)"; }; }
+am__relativize = \
+  dir0=`pwd`; \
+  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
+  sed_rest='s,^[^/]*/*,,'; \
+  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
+  sed_butlast='s,/*[^/]*$$,,'; \
+  while test -n "$$dir1"; do \
+    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
+    if test "$$first" != "."; then \
+      if test "$$first" = ".."; then \
+        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
+        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
+      else \
+        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
+        if test "$$first2" = "$$first"; then \
+          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
+        else \
+          dir2="../$$dir2"; \
+        fi; \
+        dir0="$$dir0"/"$$first"; \
+      fi; \
+    fi; \
+    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
+  done; \
+  reldir="$$dir2"
+DIST_ARCHIVES = $(distdir).tar.gz
+GZIP_ENV = --best
+distuninstallcheck_listfiles = find . -type f -print
+distcleancheck_listfiles = find . -type f -print
+ACLOCAL = @ACLOCAL@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+GREP = @GREP@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+MPC_LOG_H = @MPC_LOG_H@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WARNINGCFLAGS = @WARNINGCFLAGS@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_ECHO = @lt_ECHO@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+ACLOCAL_AMFLAGS = -I m4
+SUBDIRS = src tests doc
+EXTRA_HEADERS = src/mpc-log.h
+include_HEADERS = src/mpc.h @MPC_LOG_H@
+EXTRA_DIST = src/mpc-log.h tests/tgeneric.c Makefile.vc
+all: config.h
+	$(MAKE) $(AM_MAKEFLAGS) all-recursive
+
+.SUFFIXES:
+am--refresh:
+	@:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
+	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    echo ' $(SHELL) ./config.status'; \
+	    $(SHELL) ./config.status;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	$(SHELL) ./config.status --recheck
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	$(am__cd) $(srcdir) && $(AUTOCONF)
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
+$(am__aclocal_m4_deps):
+
+config.h: stamp-h1
+	@if test ! -f $@; then \
+	  rm -f stamp-h1; \
+	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
+	else :; fi
+
+stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
+	@rm -f stamp-h1
+	cd $(top_builddir) && $(SHELL) ./config.status config.h
+$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
+	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
+	rm -f stamp-h1
+	touch $@
+
+distclean-hdr:
+	-rm -f config.h stamp-h1
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+distclean-libtool:
+	-rm -f libtool config.lt
+install-includeHEADERS: $(include_HEADERS)
+	@$(NORMAL_INSTALL)
+	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
+	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
+	for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
+	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
+	done
+
+uninstall-includeHEADERS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
+	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
+	test -n "$$files" || exit 0; \
+	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
+	cd "$(DESTDIR)$(includedir)" && rm -f $$files
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@fail= failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+$(RECURSIVE_CLEAN_TARGETS):
+	@fail= failcom='exit 1'; \
+	for f in x $$MAKEFLAGS; do \
+	  case $$f in \
+	    *=* | --[!k]*);; \
+	    *k*) failcom='fail=yes';; \
+	  esac; \
+	done; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	  || eval $$failcom; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	set x; \
+	here=`pwd`; \
+	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	  empty_fix=.; \
+	else \
+	  include_option=--include; \
+	  empty_fix=; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test ! -f $$subdir/TAGS || \
+	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	$(am__remove_distdir)
+	test -d "$(distdir)" || mkdir "$(distdir)"
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || $(MKDIR_P) "$(distdir)/$$subdir" \
+	    || exit 1; \
+	  fi; \
+	done
+	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
+	    $(am__relativize); \
+	    new_distdir=$$reldir; \
+	    dir1=$$subdir; dir2="$(top_distdir)"; \
+	    $(am__relativize); \
+	    new_top_distdir=$$reldir; \
+	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
+	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
+	    ($(am__cd) $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="$$new_top_distdir" \
+	        distdir="$$new_distdir" \
+		am__remove_distdir=: \
+		am__skip_length_check=: \
+		am__skip_mode_fix=: \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+	-test -n "$(am__skip_mode_fix)" \
+	|| find "$(distdir)" -type d ! -perm -755 \
+		-exec chmod u+rwx,go+rx {} \; -o \
+	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
+	|| chmod -R a+r "$(distdir)"
+dist-gzip: distdir
+	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+dist-bzip2: distdir
+	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
+	$(am__remove_distdir)
+
+dist-lzma: distdir
+	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
+	$(am__remove_distdir)
+
+dist-xz: distdir
+	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
+	$(am__remove_distdir)
+
+dist-tarZ: distdir
+	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
+	$(am__remove_distdir)
+
+dist-shar: distdir
+	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
+	$(am__remove_distdir)
+
+dist-zip: distdir
+	-rm -f $(distdir).zip
+	zip -rq $(distdir).zip $(distdir)
+	$(am__remove_distdir)
+
+dist dist-all: distdir
+	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+# This target untars the dist file and tries a VPATH configuration.  Then
+# it guarantees that the distribution is self-contained by making another
+# tarfile.
+distcheck: dist
+	case '$(DIST_ARCHIVES)' in \
+	*.tar.gz*) \
+	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
+	*.tar.bz2*) \
+	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
+	*.tar.lzma*) \
+	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
+	*.tar.xz*) \
+	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
+	*.tar.Z*) \
+	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
+	*.shar.gz*) \
+	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
+	*.zip*) \
+	  unzip $(distdir).zip ;;\
+	esac
+	chmod -R a-w $(distdir); chmod a+w $(distdir)
+	mkdir $(distdir)/_build
+	mkdir $(distdir)/_inst
+	chmod a-w $(distdir)
+	test -d $(distdir)/_build || exit 0; \
+	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
+	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
+	  && am__cwd=`pwd` \
+	  && $(am__cd) $(distdir)/_build \
+	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
+	    $(DISTCHECK_CONFIGURE_FLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
+	  && $(MAKE) $(AM_MAKEFLAGS) check \
+	  && $(MAKE) $(AM_MAKEFLAGS) install \
+	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
+	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
+	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
+	        distuninstallcheck \
+	  && chmod -R a-w "$$dc_install_base" \
+	  && ({ \
+	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
+	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
+	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
+	  && rm -rf "$$dc_destdir" \
+	  && $(MAKE) $(AM_MAKEFLAGS) dist \
+	  && rm -rf $(DIST_ARCHIVES) \
+	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
+	  && cd "$$am__cwd" \
+	  || exit 1
+	$(am__remove_distdir)
+	@(echo "$(distdir) archives ready for distribution: "; \
+	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
+	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
+distuninstallcheck:
+	@$(am__cd) '$(distuninstallcheck_dir)' \
+	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
+	   || { echo "ERROR: files left after uninstall:" ; \
+	        if test -n "$(DESTDIR)"; then \
+	          echo "  (check DESTDIR support)"; \
+	        fi ; \
+	        $(distuninstallcheck_listfiles) ; \
+	        exit 1; } >&2
+distcleancheck: distclean
+	@if test '$(srcdir)' = . ; then \
+	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
+	  exit 1 ; \
+	fi
+	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
+	  || { echo "ERROR: files left in build directory after distclean:" ; \
+	       $(distcleancheck_listfiles) ; \
+	       exit 1; } >&2
+check-am: all-am
+check: check-recursive
+all-am: Makefile $(HEADERS) config.h
+installdirs: installdirs-recursive
+installdirs-am:
+	for dir in "$(DESTDIR)$(includedir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-hdr \
+	distclean-libtool distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+html-am:
+
+info: info-recursive
+
+info-am:
+
+install-data-am: install-includeHEADERS
+
+install-dvi: install-dvi-recursive
+
+install-dvi-am:
+
+install-exec-am:
+
+install-html: install-html-recursive
+
+install-html-am:
+
+install-info: install-info-recursive
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-recursive
+
+install-pdf-am:
+
+install-ps: install-ps-recursive
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -rf $(top_srcdir)/autom4te.cache
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic mostlyclean-libtool
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-includeHEADERS
+
+.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all \
+	ctags-recursive install-am install-strip tags-recursive
+
+.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
+	all all-am am--refresh check check-am clean clean-generic \
+	clean-libtool ctags ctags-recursive dist dist-all dist-bzip2 \
+	dist-gzip dist-lzma dist-shar dist-tarZ dist-xz dist-zip \
+	distcheck distclean distclean-generic distclean-hdr \
+	distclean-libtool distclean-tags distcleancheck distdir \
+	distuninstallcheck dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-dvi \
+	install-dvi-am install-exec install-exec-am install-html \
+	install-html-am install-includeHEADERS install-info \
+	install-info-am install-man install-pdf install-pdf-am \
+	install-ps install-ps-am install-strip installcheck \
+	installcheck-am installdirs installdirs-am maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-generic \
+	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
+	uninstall uninstall-am uninstall-includeHEADERS
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff --git a/mpc/Makefile.vc b/mpc/Makefile.vc
new file mode 100644
index 0000000..5456507
--- /dev/null
+++ b/mpc/Makefile.vc
@@ -0,0 +1,418 @@
+# Makefile for the MPC library (Windows version).
+#
+# Copyright (C) INRIA - CNRS, 2002, 2004, 2005, 2007, 2008, 2009, 2010, 2011
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+
+# usage:
+#  nmake /f Makefile.vc clean
+#       clean the temporaries objects
+#
+#  nmake /f Makefile.vc  STATIC=0|1 GMPDIR=gmpdirectory MPFRDIR=mpfrdirectory
+#      compile MPC
+#
+#  nmake /f Makefile.vc  STATIC=0|1 install GMPDIR=gmpdirectory MPFRDIR=mpfrdirectory  DESTDIR=installdirectory
+#      install MPC to installdirectory
+#
+#  nmake /f Makefile.vc  STATIC=0|1 check GMPDIR=gmpdirectory MPFRDIR=mpfrdirectory
+#      perform tests on MPC
+#
+#  GMPDIR : specify the location where GMP is installed
+#  MPFRDIR : specify the location where MPFR is installed
+#  DESTDIR : specify the location where MPC will be installed
+#  STATIC  : specify if a static or dynamic library of MPC will be created
+#            STATIC=1  : build a static library
+#            STATIC=0  : build a dynamic library (DLL)
+#            A dynamic library is created by default if STATIC is omitted (STATIC=0)
+#  ENABLELOGGING  : specify if MPC functions calls are logged
+#            ENABLELOGGING=1  : MPC functions calls are logged
+#            ENABLELOGGING=0  : MPC functions calls are not logged (default)
+#            Functions calls are not logged by default if ENABLELOGGING is omitted (ENABLELOGGING=0)
+
+
+CPP = cl.exe
+CC = cl.exe
+CDEFAULTFLAGS=/O2 /GR- /MD /nologo /EHs
+
+VERSION=0.9
+
+######################## do not edit below this line ##########################
+
+DIRMPC=.\src
+DIRMPCTESTS=.\tests\\
+
+!if "$(STATIC)" == "0"
+LIBRARY = libmpc.dll
+LINKER = link.exe /DLL
+GMPMUSTBEDLL=/D__GMP_LIBGMP_DLL
+!else
+LIBRARY = libmpc.lib
+LINKER = lib.exe
+GMPMUSTBEDLL=
+!endif
+
+#check for logging. if yes then add logging.c to the library
+!if "$(ENABLELOGGING)" == "1"
+CPPOBJECTS_LOGGING = $(DIRMPC)\logging.obj
+CPPLINKOBJECTS_LOGGING = logging.obj
+LIBS_LOGGING = kernel32.lib
+!else
+CPPOBJECTS_LOGGING =
+CPPLINKOBJECTS_LOGGING =
+LIBS_LOGGING =
+!endif
+
+
+INCLUDES = /I$(DIRMPC) /I$(GMPDIR)\include  /I$(MPFR)\include
+CKERNELFLAGS = $(CDEFAULTFLAGS) $(GMPMUSTBEDLL)   $(INCLUDES)
+CFLAGS = $(CKERNELFLAGS)  /D__MPC_WITHIN_MPC /D_GMP_IEEE_FLOATS /DHAVE_CONFIG_H
+
+TESTCOMPILE=$(CC) $(CKERNELFLAGS) $(DIRMPCTESTS)\tgeneric.c $(DIRMPCTESTS)\comparisons.c $(DIRMPCTESTS)\memory.c $(DIRMPCTESTS)\read_data.c $(DIRMPCTESTS)\random.c $(DIRMPCTESTS)
+MIDTESTCOMPILE=/link  /out:$(DIRMPCTESTS)
+ENDTESTCOMPILE=/LIBPATH:"$(GMPDIR)\lib" libmpc.lib libmpfr.lib libgmp.lib $(LIBS_LOGGING)
+
+
+#generate the CPPOBJECTS : goto src and execute
+# ls *.c | sed "s/\.c/\.obj/" | awk ' { printf("$(DIRMPC)\\%s \\\n",$1); } '
+#generate the CPPLINKOBJECTS : goto src and execute
+# ls *.c | sed "s/\.c/\.obj/" | awk ' { printf("%s \\\n",$1); } '
+#generate the list for tests : goto tests and execute
+# ls t*.c | sed "s/\.c//" | grep -v tgeneric| grep -v comparisons | grep -v read_data | grep -v random | awk ' { printf("\t$(TESTCOMPILE)%s.c  $(MIDTESTCOMPILE)%s.exe $(ENDTESTCOMPILE)\n\tcd $(DIRMPCTESTS) && %s.exe && cd ..\n",$1,$1,$1,$1); } '
+
+LIBRARYLIB = libmpc.lib
+
+CPPOBJECTS = $(DIRMPC)\abs.obj \
+$(DIRMPC)\acos.obj \
+$(DIRMPC)\acosh.obj \
+$(DIRMPC)\add.obj \
+$(DIRMPC)\add_fr.obj \
+$(DIRMPC)\add_si.obj \
+$(DIRMPC)\add_ui.obj \
+$(DIRMPC)\arg.obj \
+$(DIRMPC)\asin.obj \
+$(DIRMPC)\asinh.obj \
+$(DIRMPC)\atan.obj \
+$(DIRMPC)\atanh.obj \
+$(DIRMPC)\clear.obj \
+$(DIRMPC)\cmp.obj \
+$(DIRMPC)\cmp_si_si.obj \
+$(DIRMPC)\conj.obj \
+$(DIRMPC)\cosh.obj \
+$(DIRMPC)\div.obj \
+$(DIRMPC)\div_2exp.obj \
+$(DIRMPC)\div_fr.obj \
+$(DIRMPC)\div_ui.obj \
+$(DIRMPC)\exp.obj \
+$(DIRMPC)\fma.obj \
+$(DIRMPC)\fr_div.obj \
+$(DIRMPC)\fr_sub.obj \
+$(DIRMPC)\get.obj \
+$(DIRMPC)\get_prec.obj \
+$(DIRMPC)\get_prec2.obj \
+$(DIRMPC)\get_str.obj \
+$(DIRMPC)\get_version.obj \
+$(DIRMPC)\imag.obj \
+$(DIRMPC)\init2.obj \
+$(DIRMPC)\init3.obj \
+$(DIRMPC)\inp_str.obj \
+$(DIRMPC)\log.obj \
+$(DIRMPC)\mem.obj \
+$(DIRMPC)\mul.obj \
+$(DIRMPC)\mul_2exp.obj \
+$(DIRMPC)\mul_fr.obj \
+$(DIRMPC)\mul_i.obj \
+$(DIRMPC)\mul_si.obj \
+$(DIRMPC)\mul_ui.obj \
+$(DIRMPC)\neg.obj \
+$(DIRMPC)\norm.obj \
+$(DIRMPC)\out_str.obj \
+$(DIRMPC)\pow.obj \
+$(DIRMPC)\pow_d.obj \
+$(DIRMPC)\pow_fr.obj \
+$(DIRMPC)\pow_ld.obj \
+$(DIRMPC)\pow_si.obj \
+$(DIRMPC)\pow_ui.obj \
+$(DIRMPC)\pow_z.obj \
+$(DIRMPC)\proj.obj \
+$(DIRMPC)\real.obj \
+$(DIRMPC)\set.obj \
+$(DIRMPC)\set_prec.obj \
+$(DIRMPC)\set_str.obj \
+$(DIRMPC)\set_x.obj \
+$(DIRMPC)\set_x_x.obj \
+$(DIRMPC)\sin_cos.obj \
+$(DIRMPC)\sinh.obj \
+$(DIRMPC)\sqr.obj \
+$(DIRMPC)\sqrt.obj \
+$(DIRMPC)\strtoc.obj \
+$(DIRMPC)\sub.obj \
+$(DIRMPC)\sub_fr.obj \
+$(DIRMPC)\sub_ui.obj \
+$(DIRMPC)\swap.obj \
+$(DIRMPC)\tan.obj \
+$(DIRMPC)\tanh.obj \
+$(DIRMPC)\uceil_log2.obj \
+$(DIRMPC)\ui_div.obj \
+$(DIRMPC)\ui_ui_sub.obj $(CPPOBJECTS_LOGGING) \
+$(DIRMPC)\urandom.obj
+
+CPPLINKOBJECTS = abs.obj \
+acos.obj \
+acosh.obj \
+add.obj \
+add_fr.obj \
+add_si.obj \
+add_ui.obj \
+arg.obj \
+asin.obj \
+asinh.obj \
+atan.obj \
+atanh.obj \
+clear.obj \
+cmp.obj \
+cmp_si_si.obj \
+conj.obj \
+cosh.obj \
+div.obj \
+div_2exp.obj \
+div_fr.obj \
+div_ui.obj \
+exp.obj \
+fma.obj \
+fr_div.obj \
+fr_sub.obj \
+get.obj \
+get_prec.obj \
+get_prec2.obj \
+get_str.obj \
+get_version.obj \
+imag.obj \
+init2.obj \
+init3.obj \
+inp_str.obj \
+log.obj \
+mem.obj \
+mul.obj \
+mul_2exp.obj \
+mul_fr.obj \
+mul_i.obj \
+mul_si.obj \
+mul_ui.obj \
+neg.obj \
+norm.obj \
+out_str.obj \
+pow.obj \
+pow_d.obj \
+pow_fr.obj \
+pow_ld.obj \
+pow_si.obj \
+pow_ui.obj \
+pow_z.obj \
+proj.obj \
+real.obj \
+set.obj \
+set_prec.obj \
+set_str.obj \
+set_x.obj \
+set_x_x.obj \
+sin_cos.obj \
+sinh.obj \
+sqr.obj \
+sqrt.obj \
+strtoc.obj \
+sub.obj \
+sub_fr.obj \
+sub_ui.obj \
+swap.obj \
+tan.obj \
+tanh.obj \
+uceil_log2.obj \
+ui_div.obj \
+ui_ui_sub.obj $(CPPLINKOBJECTS_LOGGING) \
+urandom.obj
+
+#
+# Link target: automatically builds its object dependencies before
+# executing its link command.
+#
+
+$(LIBRARY): $(DIRMPC)config.h $(CPPOBJECTS)
+	$(LINKER) /out:$@ $(CPPLINKOBJECTS) /LIBPATH:"$(GMPDIR)\lib" libmpfr.lib libgmp.lib $(LIBS_LOGGING)
+
+$(DIRMPC)config.h :
+	echo #define PACKAGE_STRING "mpc"           >$(DIRMPC)\config.h
+	echo #define PACKAGE_VERSION "$(VERSION)"   >>$(DIRMPC)\config.h
+	echo #define STDC_HEADERS 1                 >>$(DIRMPC)\config.h
+	echo #define dlsym(handle, name) GetProcAddress(GetModuleHandle(handle), name)   >>$(DIRMPC)\config.h
+	echo #include "windows.h"   >>$(DIRMPC)\config.h
+
+
+#
+# Clean target: "nmake /f Makefile.vc clean" to remove unwanted
+#               objects and executables.
+#
+
+clean:
+	del *.obj $(CPPLINKOBJECTS) $(LIBRARY) *.tlh  $(DIRMPC)config.h *.dll *.lib *.exe
+
+
+
+#
+# install target: "nmake /f Makefile.vc install DESTDIR=xxx" to perform the installation.
+#
+
+install: $(LIBRARY)
+	-mkdir $(DESTDIR)
+	-mkdir $(DESTDIR)\include
+	copy $(DIRMPC)\mpc.h $(DESTDIR)\include
+	-mkdir $(DESTDIR)\lib
+	copy $(LIBRARY) $(DESTDIR)\lib
+	copy $(LIBRARYLIB) $(DESTDIR)\lib
+
+#
+# check target: "nmake /f Makefile.vc check GMPDIR=xxx MPFRDIR=xxx" to perform the installation.
+#
+check : test
+test :
+	-copy $(GMPDIR)\lib\*gmp*.dll $(DIRMPCTESTS)
+	-copy $(MPFRDIR)\lib\*mpfr*.dll $(DIRMPCTESTS)
+	copy $(LIBRARY)  $(DIRMPCTESTS)
+	$(TESTCOMPILE)tabs.c  $(MIDTESTCOMPILE)tabs.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tabs.exe && cd ..
+	$(TESTCOMPILE)tacos.c  $(MIDTESTCOMPILE)tacos.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tacos.exe && cd ..
+	$(TESTCOMPILE)tacosh.c	$(MIDTESTCOMPILE)tacosh.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tacosh.exe && cd ..
+	$(TESTCOMPILE)tadd.c  $(MIDTESTCOMPILE)tadd.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tadd.exe && cd ..
+	$(TESTCOMPILE)tadd_fr.c	 $(MIDTESTCOMPILE)tadd_fr.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tadd_fr.exe && cd ..
+	$(TESTCOMPILE)tadd_si.c	 $(MIDTESTCOMPILE)tadd_si.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tadd_si.exe && cd ..
+	$(TESTCOMPILE)tadd_ui.c	 $(MIDTESTCOMPILE)tadd_ui.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tadd_ui.exe && cd ..
+	$(TESTCOMPILE)targ.c  $(MIDTESTCOMPILE)targ.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && targ.exe && cd ..
+	$(TESTCOMPILE)tasin.c  $(MIDTESTCOMPILE)tasin.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tasin.exe && cd ..
+	$(TESTCOMPILE)tasinh.c	$(MIDTESTCOMPILE)tasinh.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tasinh.exe && cd ..
+	$(TESTCOMPILE)tatan.c  $(MIDTESTCOMPILE)tatan.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tatan.exe && cd ..
+	$(TESTCOMPILE)tatanh.c	$(MIDTESTCOMPILE)tatanh.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tatanh.exe && cd ..
+	$(TESTCOMPILE)tconj.c  $(MIDTESTCOMPILE)tconj.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tconj.exe && cd ..
+	$(TESTCOMPILE)tcos.c  $(MIDTESTCOMPILE)tcos.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tcos.exe && cd ..
+	$(TESTCOMPILE)tcosh.c  $(MIDTESTCOMPILE)tcosh.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tcosh.exe && cd ..
+	$(TESTCOMPILE)tdiv.c  $(MIDTESTCOMPILE)tdiv.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tdiv.exe && cd ..
+	$(TESTCOMPILE)tdiv_2exp.c  $(MIDTESTCOMPILE)tdiv_2exp.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tdiv_2exp.exe && cd ..
+	$(TESTCOMPILE)tdiv_fr.c	 $(MIDTESTCOMPILE)tdiv_fr.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tdiv_fr.exe && cd ..
+	$(TESTCOMPILE)tdiv_ui.c	 $(MIDTESTCOMPILE)tdiv_ui.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tdiv_ui.exe && cd ..
+	$(TESTCOMPILE)texp.c  $(MIDTESTCOMPILE)texp.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && texp.exe && cd ..
+	$(TESTCOMPILE)tfma.c  $(MIDTESTCOMPILE)tfma.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tfma.exe && cd ..
+	$(TESTCOMPILE)tfr_div.c	 $(MIDTESTCOMPILE)tfr_div.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tfr_div.exe && cd ..
+	$(TESTCOMPILE)tfr_sub.c	 $(MIDTESTCOMPILE)tfr_sub.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tfr_sub.exe && cd ..
+	$(TESTCOMPILE)tget_version.c  $(MIDTESTCOMPILE)tget_version.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tget_version.exe && cd ..
+	$(TESTCOMPILE)timag.c  $(MIDTESTCOMPILE)timag.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && timag.exe && cd ..
+	$(TESTCOMPILE)tio_str.c	 $(MIDTESTCOMPILE)tio_str.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tio_str.exe && cd ..
+	$(TESTCOMPILE)tlog.c  $(MIDTESTCOMPILE)tlog.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tlog.exe && cd ..
+	$(TESTCOMPILE)tmul.c  $(MIDTESTCOMPILE)tmul.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tmul.exe && cd ..
+	$(TESTCOMPILE)tmul_2exp.c  $(MIDTESTCOMPILE)tmul_2exp.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tmul_2exp.exe && cd ..
+	$(TESTCOMPILE)tmul_fr.c	 $(MIDTESTCOMPILE)tmul_fr.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tmul_fr.exe && cd ..
+	$(TESTCOMPILE)tmul_i.c	$(MIDTESTCOMPILE)tmul_i.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tmul_i.exe && cd ..
+	$(TESTCOMPILE)tmul_si.c	 $(MIDTESTCOMPILE)tmul_si.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tmul_si.exe && cd ..
+	$(TESTCOMPILE)tmul_ui.c	 $(MIDTESTCOMPILE)tmul_ui.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tmul_ui.exe && cd ..
+	$(TESTCOMPILE)tneg.c  $(MIDTESTCOMPILE)tneg.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tneg.exe && cd ..
+	$(TESTCOMPILE)tnorm.c  $(MIDTESTCOMPILE)tnorm.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tnorm.exe && cd ..
+	$(TESTCOMPILE)tpow.c  $(MIDTESTCOMPILE)tpow.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tpow.exe && cd ..
+	$(TESTCOMPILE)tpow_d.c	$(MIDTESTCOMPILE)tpow_d.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tpow_d.exe && cd ..
+	$(TESTCOMPILE)tpow_fr.c	 $(MIDTESTCOMPILE)tpow_fr.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tpow_fr.exe && cd ..
+	$(TESTCOMPILE)tpow_ld.c	 $(MIDTESTCOMPILE)tpow_ld.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tpow_ld.exe && cd ..
+	$(TESTCOMPILE)tpow_si.c	 $(MIDTESTCOMPILE)tpow_si.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tpow_si.exe && cd ..
+	$(TESTCOMPILE)tpow_ui.c	 $(MIDTESTCOMPILE)tpow_ui.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tpow_ui.exe && cd ..
+	$(TESTCOMPILE)tpow_z.c	$(MIDTESTCOMPILE)tpow_z.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tpow_z.exe && cd ..
+	$(TESTCOMPILE)tprec.c  $(MIDTESTCOMPILE)tprec.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tprec.exe && cd ..
+	$(TESTCOMPILE)tproj.c  $(MIDTESTCOMPILE)tproj.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tproj.exe && cd ..
+	$(TESTCOMPILE)treal.c  $(MIDTESTCOMPILE)treal.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && treal.exe && cd ..
+	$(TESTCOMPILE)treimref.c  $(MIDTESTCOMPILE)treimref.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && treimref.exe && cd ..
+	$(TESTCOMPILE)tset.c  $(MIDTESTCOMPILE)tset.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tset.exe && cd ..
+	$(TESTCOMPILE)tsin.c  $(MIDTESTCOMPILE)tsin.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tsin.exe && cd ..
+	$(TESTCOMPILE)tsin_cos.c  $(MIDTESTCOMPILE)tsin_cos.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tsin_cos.exe && cd ..
+	$(TESTCOMPILE)tsinh.c  $(MIDTESTCOMPILE)tsinh.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tsinh.exe && cd ..
+	$(TESTCOMPILE)tsqr.c  $(MIDTESTCOMPILE)tsqr.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tsqr.exe && cd ..
+	$(TESTCOMPILE)tsqrt.c  $(MIDTESTCOMPILE)tsqrt.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tsqrt.exe && cd ..
+	$(TESTCOMPILE)tstrtoc.c	 $(MIDTESTCOMPILE)tstrtoc.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tstrtoc.exe && cd ..
+	$(TESTCOMPILE)tsub.c  $(MIDTESTCOMPILE)tsub.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tsub.exe && cd ..
+	$(TESTCOMPILE)tsub_fr.c	 $(MIDTESTCOMPILE)tsub_fr.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tsub_fr.exe && cd ..
+	$(TESTCOMPILE)tsub_ui.c	 $(MIDTESTCOMPILE)tsub_ui.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tsub_ui.exe && cd ..
+	$(TESTCOMPILE)ttan.c  $(MIDTESTCOMPILE)ttan.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && ttan.exe && cd ..
+	$(TESTCOMPILE)ttanh.c  $(MIDTESTCOMPILE)ttanh.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && ttanh.exe && cd ..
+	$(TESTCOMPILE)tui_div.c	 $(MIDTESTCOMPILE)tui_div.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tui_div.exe && cd ..
+	$(TESTCOMPILE)tui_ui_sub.c  $(MIDTESTCOMPILE)tui_ui_sub.exe $(ENDTESTCOMPILE)
+	cd $(DIRMPCTESTS) && tui_ui_sub.exe && cd ..
+	@echo --------------------------------------------------
+	@echo All tests passed
+	@echo --------------------------------------------------
diff --git a/mpc/NEWS b/mpc/NEWS
new file mode 100644
index 0000000..1337af3
--- /dev/null
+++ b/mpc/NEWS
@@ -0,0 +1,107 @@
+Changes in version 0.9:
+  - New functions:
+    - mpc_set_dc, mpc_set_ldc, mpc_get_dc, mpc_get_ldc for converting
+      between mpc type variables and C variables of type double _Complex
+      or long double _Complex
+    - mpc_sin_cos, computing simultaneously the sine and cosine
+  - Speed-ups:
+    - mpc_pow_si through binary exponentiation
+    - mpc_pow_z when the exponent fits in a long
+    - mpc_tan through the use of mpc_sin_cos
+  - Bug fixes:
+    - trigonometric functions: infinite loop due to overflow for large arguments
+    - exp: close to infinite loop for argument close to 0
+    - sqrt: close to infinite loop for argument close to 1
+    - add_si: replaced macro by function, since the macro evaluated the same
+      expression twice
+  - Logging feature for debugging:
+      ./configure --enable-logging
+      #include "mpc-log.h" instead of #include "mpc.h"
+  - Minimally required library versions: gmp 4.3.2, mpfr 2.4.2
+
+Changes in version 0.8.2:
+  - Speed-up of mpc_pow_ui through binary exponentiation
+
+Changes in version 0.8.1:
+  - Bug fixes:
+    - acosh, asinh, atanh: swap of precisions between real and imaginary parts
+    - atan: memory leak
+    - log: wrong ternary value in data file; masked by bug in mpfr-2.4.1
+
+Changes in version 0.8 ("Dianthus deltoides"):
+  - New functions:
+    - mpc_asin, mpc_acos, mpc_atan, mpc_asinh, mpc_acosh, mpc_atanh,
+      mpc_pow_d, mpc_pow_ld, mpc_pow_si, mpc_pow_ui, mpc_pow_z, mpc_pow_fr
+  - Bug fixes:
+    - ui_div: real divisor
+
+Changes in version 0.7 ("Campanula uniflora"):
+  - New functions: mpc_pow, mpc_set_nan, mpc_swap
+  - Bug fixes:
+    - log: along branch cut
+    - norm: infinite loop in case of overflow
+    - ui_div, div, fr_div: handling of division by 0 and infinities
+      following the example code of the C99 standard
+    - compilation with g++
+  - Makefile.vc updated (thanks to Mickael Gastineau)
+  - Minimal gmp version is 4.2
+  - Changed MPC_SET_X_Y macro
+  - Functions mpc_random and mpc_random2 removed
+
+Changes in version 0.6 ("Bellis perennis"):
+  - New functions: mpc_get_str, mpc_set_str, mpc_strtoc, mpc_set_uj,
+    mpc_set_sj, mpc_set_ld, mpc_set_ld_ld, mpc_set_si_si, mpc_set_uj_uj,
+    mpc_set_sj_sj, mpc_set_f, mpc_set_f_f, mpc_set_q, mpc_set_q_q, mpc_set_z,
+    mpc_set_z_z and mpc_free_str
+  - New macro: MPC_SET_X_Y
+  - mpc_set_ui_fr removed
+  - Default precision removed, as well as init and all init_set
+    combinations; use init2 and init3, followed by set, instead
+  - exp, log, cos, sin, tan, cosh, sinh, tanh and sqrt return
+    inexact value
+  - inp_str returns inexact value and the number of read characters
+    in an additional parameter
+  - Get default $CC and $CFLAGS from gmp.h (__GMP_CC / __GMP_CFLAGS,
+    which are available as of GMP 4.2.3)
+  - Bug fixes:
+    - mpc_get_version and MPC_VERSION_STRING agree
+    - Compilation on i686-pc-cygwin and i686-pc-mingw32 fixed
+
+Changes in version 0.5.2:
+  - New macros:
+    - version number: MPC_VERSION_NUM, MPC_VERSION
+  - Makefile.vc updated (thanks to Mickael Gastineau)
+  - Compilation on Debian-Gnu-Linux-PowerPC and MacOsX
+    fixed (thanks to Laurent Fousse and Mickael Gastineau)
+
+Changes in version 0.5.1:
+  - New functions:
+    - mpc_set_fr_fr
+    - mpc_real, mpc_imag
+    - mpc_arg, mpc_proj
+  - New macros:
+    - version number: MPC_VERSION_MAJOR, MPC_VERSION_MINOR,
+      MPC_VERSION_PATCHLEVEL, MPC_VERSION_STRING
+    - references to number parts: mpc_realref and mpc_imagref
+  - Test framework rewritten
+  - Configure checks for recent gmp (>= 4.2) and mpfr (>= 2.3.1)
+    libraries
+  - New configure options: --with-gmp-lib, --with-gmp-include,
+     --with-mpfr-lib, and --with-mpfr-include
+  - Export declarations for MSWindows, makefile.vc updated (thanks to
+    Mickael Gastineau)
+  - Optimisations:
+    - mul_fr, sin, cos
+  - Bug fixes:
+    - configure looks for gmp first, then for mpfr
+    - cos, div, div_fr, fr_sub, mul_fr, set_fr, sqr
+    - fix handling of special values: exp, log, mul, norm, sqr, sqrt
+
+Changes in version 0.5 ("Aconitum neomontanum"):
+  - Support for autotools
+  - New functions:
+     - logarithm
+     - trigonometric functions: cos, tan
+     - hyperbolic functions: cosh, sinh, tanh
+  - Bug fixes:
+    - sqrt with directed rounding
diff --git a/mpc/README b/mpc/README
new file mode 100644
index 0000000..f703deb
--- /dev/null
+++ b/mpc/README
@@ -0,0 +1,3 @@
+mpc is a complex floating-point library with exact rounding.
+It is based on the GNU MPFR floating-point library (http://www.mpfr.org/),
+which is itself based on the GNU MP library (http://gmplib.org/).
diff --git a/mpc/TODO b/mpc/TODO
new file mode 100644
index 0000000..77bedf6
--- /dev/null
+++ b/mpc/TODO
@@ -0,0 +1,19 @@
+Bench:
+- from Andreas Enge 9 June 2009:
+  Scripts and web page comparing timings with different systems,
+  as done for mpfr at http://www.mpfr.org/mpfr-2.4.0/timings.html
+
+New functions to implement:
+- from Andreas Enge and Philippe Théveny 17 July 2008
+  agm (and complex logarithm with agm ?)
+- from Andreas Enge 25 June 2009:
+  correctly rounded roots of unity zeta_n^i
+- implement a root-finding algorithm using the Durand-Kerner method
+  (cf http://en.wikipedia.org/wiki/Durand%E2%80%93Kerner_method)
+  See also the CEVAL algorithm from Yap and Sagraloff:
+  http://www.mpi-inf.mpg.de/~msagralo/ceval.pdf
+
+New tests to add:
+- from Andreas Enge and Philippe Théveny 9 April 2008
+  correct handling of Nan and infinities in the case of
+  intermediate overflows while the result may fit (we need special code)
diff --git a/mpc/aclocal.m4 b/mpc/aclocal.m4
new file mode 100644
index 0000000..c50734c
--- /dev/null
+++ b/mpc/aclocal.m4
@@ -0,0 +1,998 @@
+# generated automatically by aclocal 1.11.1 -*- Autoconf -*-
+
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
+# 2005, 2006, 2007, 2008, 2009  Free Software Foundation, Inc.
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+m4_ifndef([AC_AUTOCONF_VERSION],
+  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
+m4_if(m4_defn([AC_AUTOCONF_VERSION]), [2.67],,
+[m4_warning([this file was generated for autoconf 2.67.
+You have another version of autoconf.  It may work, but is not guaranteed to.
+If you have problems, you may need to regenerate the build system entirely.
+To do so, use the procedure documented by the package, typically `autoreconf'.])])
+
+# Copyright (C) 2002, 2003, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# AM_AUTOMAKE_VERSION(VERSION)
+# ----------------------------
+# Automake X.Y traces this macro to ensure aclocal.m4 has been
+# generated from the m4 files accompanying Automake X.Y.
+# (This private macro should not be called outside this file.)
+AC_DEFUN([AM_AUTOMAKE_VERSION],
+[am__api_version='1.11'
+dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
+dnl require some minimum version.  Point them to the right macro.
+m4_if([$1], [1.11.1], [],
+      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
+])
+
+# _AM_AUTOCONF_VERSION(VERSION)
+# -----------------------------
+# aclocal traces this macro to find the Autoconf version.
+# This is a private macro too.  Using m4_define simplifies
+# the logic in aclocal, which can simply ignore this definition.
+m4_define([_AM_AUTOCONF_VERSION], [])
+
+# AM_SET_CURRENT_AUTOMAKE_VERSION
+# -------------------------------
+# Call AM_AUTOMAKE_VERSION and AM_AUTOMAKE_VERSION so they can be traced.
+# This function is AC_REQUIREd by AM_INIT_AUTOMAKE.
+AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION],
+[AM_AUTOMAKE_VERSION([1.11.1])dnl
+m4_ifndef([AC_AUTOCONF_VERSION],
+  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
+_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
+
+# AM_AUX_DIR_EXPAND                                         -*- Autoconf -*-
+
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# For projects using AC_CONFIG_AUX_DIR([foo]), Autoconf sets
+# $ac_aux_dir to `$srcdir/foo'.  In other projects, it is set to
+# `$srcdir', `$srcdir/..', or `$srcdir/../..'.
+#
+# Of course, Automake must honor this variable whenever it calls a
+# tool from the auxiliary directory.  The problem is that $srcdir (and
+# therefore $ac_aux_dir as well) can be either absolute or relative,
+# depending on how configure is run.  This is pretty annoying, since
+# it makes $ac_aux_dir quite unusable in subdirectories: in the top
+# source directory, any form will work fine, but in subdirectories a
+# relative path needs to be adjusted first.
+#
+# $ac_aux_dir/missing
+#    fails when called from a subdirectory if $ac_aux_dir is relative
+# $top_srcdir/$ac_aux_dir/missing
+#    fails if $ac_aux_dir is absolute,
+#    fails when called from a subdirectory in a VPATH build with
+#          a relative $ac_aux_dir
+#
+# The reason of the latter failure is that $top_srcdir and $ac_aux_dir
+# are both prefixed by $srcdir.  In an in-source build this is usually
+# harmless because $srcdir is `.', but things will broke when you
+# start a VPATH build or use an absolute $srcdir.
+#
+# So we could use something similar to $top_srcdir/$ac_aux_dir/missing,
+# iff we strip the leading $srcdir from $ac_aux_dir.  That would be:
+#   am_aux_dir='\$(top_srcdir)/'`expr "$ac_aux_dir" : "$srcdir//*\(.*\)"`
+# and then we would define $MISSING as
+#   MISSING="\${SHELL} $am_aux_dir/missing"
+# This will work as long as MISSING is not called from configure, because
+# unfortunately $(top_srcdir) has no meaning in configure.
+# However there are other variables, like CC, which are often used in
+# configure, and could therefore not use this "fixed" $ac_aux_dir.
+#
+# Another solution, used here, is to always expand $ac_aux_dir to an
+# absolute PATH.  The drawback is that using absolute paths prevent a
+# configured tree to be moved without reconfiguration.
+
+AC_DEFUN([AM_AUX_DIR_EXPAND],
+[dnl Rely on autoconf to set up CDPATH properly.
+AC_PREREQ([2.50])dnl
+# expand $ac_aux_dir to an absolute path
+am_aux_dir=`cd $ac_aux_dir && pwd`
+])
+
+# AM_CONDITIONAL                                            -*- Autoconf -*-
+
+# Copyright (C) 1997, 2000, 2001, 2003, 2004, 2005, 2006, 2008
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 9
+
+# AM_CONDITIONAL(NAME, SHELL-CONDITION)
+# -------------------------------------
+# Define a conditional.
+AC_DEFUN([AM_CONDITIONAL],
+[AC_PREREQ(2.52)dnl
+ ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
+	[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
+AC_SUBST([$1_TRUE])dnl
+AC_SUBST([$1_FALSE])dnl
+_AM_SUBST_NOTMAKE([$1_TRUE])dnl
+_AM_SUBST_NOTMAKE([$1_FALSE])dnl
+m4_define([_AM_COND_VALUE_$1], [$2])dnl
+if $2; then
+  $1_TRUE=
+  $1_FALSE='#'
+else
+  $1_TRUE='#'
+  $1_FALSE=
+fi
+AC_CONFIG_COMMANDS_PRE(
+[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
+  AC_MSG_ERROR([[conditional "$1" was never defined.
+Usually this means the macro was only invoked conditionally.]])
+fi])])
+
+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2009
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 10
+
+# There are a few dirty hacks below to avoid letting `AC_PROG_CC' be
+# written in clear, in which case automake, when reading aclocal.m4,
+# will think it sees a *use*, and therefore will trigger all it's
+# C support machinery.  Also note that it means that autoscan, seeing
+# CC etc. in the Makefile, will ask for an AC_PROG_CC use...
+
+
+# _AM_DEPENDENCIES(NAME)
+# ----------------------
+# See how the compiler implements dependency checking.
+# NAME is "CC", "CXX", "GCJ", or "OBJC".
+# We try a few techniques and use that to set a single cache variable.
+#
+# We don't AC_REQUIRE the corresponding AC_PROG_CC since the latter was
+# modified to invoke _AM_DEPENDENCIES(CC); we would have a circular
+# dependency, and given that the user is not expected to run this macro,
+# just rely on AC_PROG_CC.
+AC_DEFUN([_AM_DEPENDENCIES],
+[AC_REQUIRE([AM_SET_DEPDIR])dnl
+AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
+AC_REQUIRE([AM_MAKE_INCLUDE])dnl
+AC_REQUIRE([AM_DEP_TRACK])dnl
+
+ifelse([$1], CC,   [depcc="$CC"   am_compiler_list=],
+       [$1], CXX,  [depcc="$CXX"  am_compiler_list=],
+       [$1], OBJC, [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
+       [$1], UPC,  [depcc="$UPC"  am_compiler_list=],
+       [$1], GCJ,  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
+                   [depcc="$$1"   am_compiler_list=])
+
+AC_CACHE_CHECK([dependency style of $depcc],
+               [am_cv_$1_dependencies_compiler_type],
+[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
+  # We make a subdir and do the tests there.  Otherwise we can end up
+  # making bogus files that we don't know about and never remove.  For
+  # instance it was reported that on HP-UX the gcc test will end up
+  # making a dummy file named `D' -- because `-MD' means `put the output
+  # in D'.
+  mkdir conftest.dir
+  # Copy depcomp to subdir because otherwise we won't find it if we're
+  # using a relative directory.
+  cp "$am_depcomp" conftest.dir
+  cd conftest.dir
+  # We will build objects and dependencies in a subdirectory because
+  # it helps to detect inapplicable dependency modes.  For instance
+  # both Tru64's cc and ICC support -MD to output dependencies as a
+  # side effect of compilation, but ICC will put the dependencies in
+  # the current directory while Tru64 will put them in the object
+  # directory.
+  mkdir sub
+
+  am_cv_$1_dependencies_compiler_type=none
+  if test "$am_compiler_list" = ""; then
+     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
+  fi
+  am__universal=false
+  m4_case([$1], [CC],
+    [case " $depcc " in #(
+     *\ -arch\ *\ -arch\ *) am__universal=true ;;
+     esac],
+    [CXX],
+    [case " $depcc " in #(
+     *\ -arch\ *\ -arch\ *) am__universal=true ;;
+     esac])
+
+  for depmode in $am_compiler_list; do
+    # Setup a source with many dependencies, because some compilers
+    # like to wrap large dependency lists on column 80 (with \), and
+    # we should not choose a depcomp mode which is confused by this.
+    #
+    # We need to recreate these files for each test, as the compiler may
+    # overwrite some of them when testing with obscure command lines.
+    # This happens at least with the AIX C compiler.
+    : > sub/conftest.c
+    for i in 1 2 3 4 5 6; do
+      echo '#include "conftst'$i'.h"' >> sub/conftest.c
+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
+      # Solaris 8's {/usr,}/bin/sh.
+      touch sub/conftst$i.h
+    done
+    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
+
+    # We check with `-c' and `-o' for the sake of the "dashmstdout"
+    # mode.  It turns out that the SunPro C++ compiler does not properly
+    # handle `-M -o', and we need to detect this.  Also, some Intel
+    # versions had trouble with output in subdirs
+    am__obj=sub/conftest.${OBJEXT-o}
+    am__minus_obj="-o $am__obj"
+    case $depmode in
+    gcc)
+      # This depmode causes a compiler race in universal mode.
+      test "$am__universal" = false || continue
+      ;;
+    nosideeffect)
+      # after this tag, mechanisms are not by side-effect, so they'll
+      # only be used when explicitly requested
+      if test "x$enable_dependency_tracking" = xyes; then
+	continue
+      else
+	break
+      fi
+      ;;
+    msvisualcpp | msvcmsys)
+      # This compiler won't grok `-c -o', but also, the minuso test has
+      # not run yet.  These depmodes are late enough in the game, and
+      # so weak that their functioning should not be impacted.
+      am__obj=conftest.${OBJEXT-o}
+      am__minus_obj=
+      ;;
+    none) break ;;
+    esac
+    if depmode=$depmode \
+       source=sub/conftest.c object=$am__obj \
+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
+       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
+         >/dev/null 2>conftest.err &&
+       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+      # icc doesn't choke on unknown options, it will just issue warnings
+      # or remarks (even with -Werror).  So we grep stderr for any message
+      # that says an option was ignored or not supported.
+      # When given -MP, icc 7.0 and 7.1 complain thusly:
+      #   icc: Command line warning: ignoring option '-M'; no argument required
+      # The diagnosis changed in icc 8.0:
+      #   icc: Command line remark: option '-MP' not supported
+      if (grep 'ignoring option' conftest.err ||
+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+        am_cv_$1_dependencies_compiler_type=$depmode
+        break
+      fi
+    fi
+  done
+
+  cd ..
+  rm -rf conftest.dir
+else
+  am_cv_$1_dependencies_compiler_type=none
+fi
+])
+AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
+AM_CONDITIONAL([am__fastdep$1], [
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
+])
+
+
+# AM_SET_DEPDIR
+# -------------
+# Choose a directory name for dependency files.
+# This macro is AC_REQUIREd in _AM_DEPENDENCIES
+AC_DEFUN([AM_SET_DEPDIR],
+[AC_REQUIRE([AM_SET_LEADING_DOT])dnl
+AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
+])
+
+
+# AM_DEP_TRACK
+# ------------
+AC_DEFUN([AM_DEP_TRACK],
+[AC_ARG_ENABLE(dependency-tracking,
+[  --disable-dependency-tracking  speeds up one-time build
+  --enable-dependency-tracking   do not reject slow dependency extractors])
+if test "x$enable_dependency_tracking" != xno; then
+  am_depcomp="$ac_aux_dir/depcomp"
+  AMDEPBACKSLASH='\'
+fi
+AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
+AC_SUBST([AMDEPBACKSLASH])dnl
+_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
+])
+
+# Generate code to set up dependency tracking.              -*- Autoconf -*-
+
+# Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2008
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+#serial 5
+
+# _AM_OUTPUT_DEPENDENCY_COMMANDS
+# ------------------------------
+AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS],
+[{
+  # Autoconf 2.62 quotes --file arguments for eval, but not when files
+  # are listed without --file.  Let's play safe and only enable the eval
+  # if we detect the quoting.
+  case $CONFIG_FILES in
+  *\'*) eval set x "$CONFIG_FILES" ;;
+  *)   set x $CONFIG_FILES ;;
+  esac
+  shift
+  for mf
+  do
+    # Strip MF so we end up with the name of the file.
+    mf=`echo "$mf" | sed -e 's/:.*$//'`
+    # Check whether this is an Automake generated Makefile or not.
+    # We used to match only the files named `Makefile.in', but
+    # some people rename them; so instead we look at the file content.
+    # Grep'ing the first line is not enough: some people post-process
+    # each Makefile.in and add a new line on top of each file to say so.
+    # Grep'ing the whole file is not good either: AIX grep has a line
+    # limit of 2048, but all sed's we know have understand at least 4000.
+    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
+      dirpart=`AS_DIRNAME("$mf")`
+    else
+      continue
+    fi
+    # Extract the definition of DEPDIR, am__include, and am__quote
+    # from the Makefile without running `make'.
+    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
+    test -z "$DEPDIR" && continue
+    am__include=`sed -n 's/^am__include = //p' < "$mf"`
+    test -z "am__include" && continue
+    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
+    # When using ansi2knr, U may be empty or an underscore; expand it
+    U=`sed -n 's/^U = //p' < "$mf"`
+    # Find all dependency output files, they are included files with
+    # $(DEPDIR) in their names.  We invoke sed twice because it is the
+    # simplest approach to changing $(DEPDIR) to its actual value in the
+    # expansion.
+    for file in `sed -n "
+      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
+	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
+      # Make sure the directory exists.
+      test -f "$dirpart/$file" && continue
+      fdir=`AS_DIRNAME(["$file"])`
+      AS_MKDIR_P([$dirpart/$fdir])
+      # echo "creating $dirpart/$file"
+      echo '# dummy' > "$dirpart/$file"
+    done
+  done
+}
+])# _AM_OUTPUT_DEPENDENCY_COMMANDS
+
+
+# AM_OUTPUT_DEPENDENCY_COMMANDS
+# -----------------------------
+# This macro should only be invoked once -- use via AC_REQUIRE.
+#
+# This code is only required when automatic dependency tracking
+# is enabled.  FIXME.  This creates each `.P' file that we will
+# need in order to bootstrap the dependency handling code.
+AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],
+[AC_CONFIG_COMMANDS([depfiles],
+     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
+     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
+])
+
+# Do all the work for Automake.                             -*- Autoconf -*-
+
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
+# 2005, 2006, 2008, 2009 Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 16
+
+# This macro actually does too much.  Some checks are only needed if
+# your package does certain things.  But this isn't really a big deal.
+
+# AM_INIT_AUTOMAKE(PACKAGE, VERSION, [NO-DEFINE])
+# AM_INIT_AUTOMAKE([OPTIONS])
+# -----------------------------------------------
+# The call with PACKAGE and VERSION arguments is the old style
+# call (pre autoconf-2.50), which is being phased out.  PACKAGE
+# and VERSION should now be passed to AC_INIT and removed from
+# the call to AM_INIT_AUTOMAKE.
+# We support both call styles for the transition.  After
+# the next Automake release, Autoconf can make the AC_INIT
+# arguments mandatory, and then we can depend on a new Autoconf
+# release and drop the old call support.
+AC_DEFUN([AM_INIT_AUTOMAKE],
+[AC_PREREQ([2.62])dnl
+dnl Autoconf wants to disallow AM_ names.  We explicitly allow
+dnl the ones we care about.
+m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
+AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
+AC_REQUIRE([AC_PROG_INSTALL])dnl
+if test "`cd $srcdir && pwd`" != "`pwd`"; then
+  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
+  # is not polluted with repeated "-I."
+  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
+  # test to see if srcdir already configured
+  if test -f $srcdir/config.status; then
+    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
+  fi
+fi
+
+# test whether we have cygpath
+if test -z "$CYGPATH_W"; then
+  if (cygpath --version) >/dev/null 2>/dev/null; then
+    CYGPATH_W='cygpath -w'
+  else
+    CYGPATH_W=echo
+  fi
+fi
+AC_SUBST([CYGPATH_W])
+
+# Define the identity of the package.
+dnl Distinguish between old-style and new-style calls.
+m4_ifval([$2],
+[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
+ AC_SUBST([PACKAGE], [$1])dnl
+ AC_SUBST([VERSION], [$2])],
+[_AM_SET_OPTIONS([$1])dnl
+dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
+m4_if(m4_ifdef([AC_PACKAGE_NAME], 1)m4_ifdef([AC_PACKAGE_VERSION], 1), 11,,
+  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
+ AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
+ AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl
+
+_AM_IF_OPTION([no-define],,
+[AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
+ AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])dnl
+
+# Some tools Automake needs.
+AC_REQUIRE([AM_SANITY_CHECK])dnl
+AC_REQUIRE([AC_ARG_PROGRAM])dnl
+AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})
+AM_MISSING_PROG(AUTOCONF, autoconf)
+AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})
+AM_MISSING_PROG(AUTOHEADER, autoheader)
+AM_MISSING_PROG(MAKEINFO, makeinfo)
+AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
+AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
+AC_REQUIRE([AM_PROG_MKDIR_P])dnl
+# We need awk for the "check" target.  The system "awk" is bad on
+# some platforms.
+AC_REQUIRE([AC_PROG_AWK])dnl
+AC_REQUIRE([AC_PROG_MAKE_SET])dnl
+AC_REQUIRE([AM_SET_LEADING_DOT])dnl
+_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
+	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
+			     [_AM_PROG_TAR([v7])])])
+_AM_IF_OPTION([no-dependencies],,
+[AC_PROVIDE_IFELSE([AC_PROG_CC],
+		  [_AM_DEPENDENCIES(CC)],
+		  [define([AC_PROG_CC],
+			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
+AC_PROVIDE_IFELSE([AC_PROG_CXX],
+		  [_AM_DEPENDENCIES(CXX)],
+		  [define([AC_PROG_CXX],
+			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
+AC_PROVIDE_IFELSE([AC_PROG_OBJC],
+		  [_AM_DEPENDENCIES(OBJC)],
+		  [define([AC_PROG_OBJC],
+			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
+])
+_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl
+dnl The `parallel-tests' driver may need to know about EXEEXT, so add the
+dnl `am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro
+dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.
+AC_CONFIG_COMMANDS_PRE(dnl
+[m4_provide_if([_AM_COMPILER_EXEEXT],
+  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl
+])
+
+dnl Hook into `_AC_COMPILER_EXEEXT' early to learn its expansion.  Do not
+dnl add the conditional right here, as _AC_COMPILER_EXEEXT may be further
+dnl mangled by Autoconf and run in a shell conditional statement.
+m4_define([_AC_COMPILER_EXEEXT],
+m4_defn([_AC_COMPILER_EXEEXT])[m4_provide([_AM_COMPILER_EXEEXT])])
+
+
+# When config.status generates a header, we must update the stamp-h file.
+# This file resides in the same directory as the config header
+# that is generated.  The stamp files are numbered to have different names.
+
+# Autoconf calls _AC_AM_CONFIG_HEADER_HOOK (when defined) in the
+# loop where config.status creates the headers, so we can generate
+# our stamp files there.
+AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK],
+[# Compute $1's index in $config_headers.
+_am_arg=$1
+_am_stamp_count=1
+for _am_header in $config_headers :; do
+  case $_am_header in
+    $_am_arg | $_am_arg:* )
+      break ;;
+    * )
+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
+  esac
+done
+echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
+
+# Copyright (C) 2001, 2003, 2005, 2008  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# AM_PROG_INSTALL_SH
+# ------------------
+# Define $install_sh.
+AC_DEFUN([AM_PROG_INSTALL_SH],
+[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
+if test x"${install_sh}" != xset; then
+  case $am_aux_dir in
+  *\ * | *\	*)
+    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
+  *)
+    install_sh="\${SHELL} $am_aux_dir/install-sh"
+  esac
+fi
+AC_SUBST(install_sh)])
+
+# Copyright (C) 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 2
+
+# Check whether the underlying file-system supports filenames
+# with a leading dot.  For instance MS-DOS doesn't.
+AC_DEFUN([AM_SET_LEADING_DOT],
+[rm -rf .tst 2>/dev/null
+mkdir .tst 2>/dev/null
+if test -d .tst; then
+  am__leading_dot=.
+else
+  am__leading_dot=_
+fi
+rmdir .tst 2>/dev/null
+AC_SUBST([am__leading_dot])])
+
+# Add --enable-maintainer-mode option to configure.         -*- Autoconf -*-
+# From Jim Meyering
+
+# Copyright (C) 1996, 1998, 2000, 2001, 2002, 2003, 2004, 2005, 2008
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 5
+
+# AM_MAINTAINER_MODE([DEFAULT-MODE])
+# ----------------------------------
+# Control maintainer-specific portions of Makefiles.
+# Default is to disable them, unless `enable' is passed literally.
+# For symmetry, `disable' may be passed as well.  Anyway, the user
+# can override the default with the --enable/--disable switch.
+AC_DEFUN([AM_MAINTAINER_MODE],
+[m4_case(m4_default([$1], [disable]),
+       [enable], [m4_define([am_maintainer_other], [disable])],
+       [disable], [m4_define([am_maintainer_other], [enable])],
+       [m4_define([am_maintainer_other], [enable])
+        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])
+AC_MSG_CHECKING([whether to am_maintainer_other maintainer-specific portions of Makefiles])
+  dnl maintainer-mode's default is 'disable' unless 'enable' is passed
+  AC_ARG_ENABLE([maintainer-mode],
+[  --][am_maintainer_other][-maintainer-mode  am_maintainer_other make rules and dependencies not useful
+			  (and sometimes confusing) to the casual installer],
+      [USE_MAINTAINER_MODE=$enableval],
+      [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))
+  AC_MSG_RESULT([$USE_MAINTAINER_MODE])
+  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
+  MAINT=$MAINTAINER_MODE_TRUE
+  AC_SUBST([MAINT])dnl
+]
+)
+
+AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])
+
+# Check to see how 'make' treats includes.	            -*- Autoconf -*-
+
+# Copyright (C) 2001, 2002, 2003, 2005, 2009  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 4
+
+# AM_MAKE_INCLUDE()
+# -----------------
+# Check to see how make treats includes.
+AC_DEFUN([AM_MAKE_INCLUDE],
+[am_make=${MAKE-make}
+cat > confinc << 'END'
+am__doit:
+	@echo this is the am__doit target
+.PHONY: am__doit
+END
+# If we don't find an include directive, just comment out the code.
+AC_MSG_CHECKING([for style of include used by $am_make])
+am__include="#"
+am__quote=
+_am_result=none
+# First try GNU make style include.
+echo "include confinc" > confmf
+# Ignore all kinds of additional output from `make'.
+case `$am_make -s -f confmf 2> /dev/null` in #(
+*the\ am__doit\ target*)
+  am__include=include
+  am__quote=
+  _am_result=GNU
+  ;;
+esac
+# Now try BSD make style include.
+if test "$am__include" = "#"; then
+   echo '.include "confinc"' > confmf
+   case `$am_make -s -f confmf 2> /dev/null` in #(
+   *the\ am__doit\ target*)
+     am__include=.include
+     am__quote="\""
+     _am_result=BSD
+     ;;
+   esac
+fi
+AC_SUBST([am__include])
+AC_SUBST([am__quote])
+AC_MSG_RESULT([$_am_result])
+rm -f confinc confmf
+])
+
+# Fake the existence of programs that GNU maintainers use.  -*- Autoconf -*-
+
+# Copyright (C) 1997, 1999, 2000, 2001, 2003, 2004, 2005, 2008
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 6
+
+# AM_MISSING_PROG(NAME, PROGRAM)
+# ------------------------------
+AC_DEFUN([AM_MISSING_PROG],
+[AC_REQUIRE([AM_MISSING_HAS_RUN])
+$1=${$1-"${am_missing_run}$2"}
+AC_SUBST($1)])
+
+
+# AM_MISSING_HAS_RUN
+# ------------------
+# Define MISSING if not defined so far and test if it supports --run.
+# If it does, set am_missing_run to use it, otherwise, to nothing.
+AC_DEFUN([AM_MISSING_HAS_RUN],
+[AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
+AC_REQUIRE_AUX_FILE([missing])dnl
+if test x"${MISSING+set}" != xset; then
+  case $am_aux_dir in
+  *\ * | *\	*)
+    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
+  *)
+    MISSING="\${SHELL} $am_aux_dir/missing" ;;
+  esac
+fi
+# Use eval to expand $SHELL
+if eval "$MISSING --run true"; then
+  am_missing_run="$MISSING --run "
+else
+  am_missing_run=
+  AC_MSG_WARN([`missing' script is too old or missing])
+fi
+])
+
+# Copyright (C) 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# AM_PROG_MKDIR_P
+# ---------------
+# Check for `mkdir -p'.
+AC_DEFUN([AM_PROG_MKDIR_P],
+[AC_PREREQ([2.60])dnl
+AC_REQUIRE([AC_PROG_MKDIR_P])dnl
+dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,
+dnl while keeping a definition of mkdir_p for backward compatibility.
+dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.
+dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of
+dnl Makefile.ins that do not define MKDIR_P, so we do our own
+dnl adjustment using top_builddir (which is defined more often than
+dnl MKDIR_P).
+AC_SUBST([mkdir_p], ["$MKDIR_P"])dnl
+case $mkdir_p in
+  [[\\/$]]* | ?:[[\\/]]*) ;;
+  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
+esac
+])
+
+# Helper functions for option handling.                     -*- Autoconf -*-
+
+# Copyright (C) 2001, 2002, 2003, 2005, 2008  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 4
+
+# _AM_MANGLE_OPTION(NAME)
+# -----------------------
+AC_DEFUN([_AM_MANGLE_OPTION],
+[[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
+
+# _AM_SET_OPTION(NAME)
+# ------------------------------
+# Set option NAME.  Presently that only means defining a flag for this option.
+AC_DEFUN([_AM_SET_OPTION],
+[m4_define(_AM_MANGLE_OPTION([$1]), 1)])
+
+# _AM_SET_OPTIONS(OPTIONS)
+# ----------------------------------
+# OPTIONS is a space-separated list of Automake options.
+AC_DEFUN([_AM_SET_OPTIONS],
+[m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
+
+# _AM_IF_OPTION(OPTION, IF-SET, [IF-NOT-SET])
+# -------------------------------------------
+# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.
+AC_DEFUN([_AM_IF_OPTION],
+[m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
+
+# Check to make sure that the build environment is sane.    -*- Autoconf -*-
+
+# Copyright (C) 1996, 1997, 2000, 2001, 2003, 2005, 2008
+# Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 5
+
+# AM_SANITY_CHECK
+# ---------------
+AC_DEFUN([AM_SANITY_CHECK],
+[AC_MSG_CHECKING([whether build environment is sane])
+# Just in case
+sleep 1
+echo timestamp > conftest.file
+# Reject unsafe characters in $srcdir or the absolute working directory
+# name.  Accept space and tab only in the latter.
+am_lf='
+'
+case `pwd` in
+  *[[\\\"\#\$\&\'\`$am_lf]]*)
+    AC_MSG_ERROR([unsafe absolute working directory name]);;
+esac
+case $srcdir in
+  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
+    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;
+esac
+
+# Do `set' in a subshell so we don't clobber the current shell's
+# arguments.  Must try -L first in case configure is actually a
+# symlink; some systems play weird games with the mod time of symlinks
+# (eg FreeBSD returns the mod time of the symlink's containing
+# directory).
+if (
+   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
+   if test "$[*]" = "X"; then
+      # -L didn't work.
+      set X `ls -t "$srcdir/configure" conftest.file`
+   fi
+   rm -f conftest.file
+   if test "$[*]" != "X $srcdir/configure conftest.file" \
+      && test "$[*]" != "X conftest.file $srcdir/configure"; then
+
+      # If neither matched, then we have a broken ls.  This can happen
+      # if, for instance, CONFIG_SHELL is bash and it inherits a
+      # broken ls alias from the environment.  This has actually
+      # happened.  Such a system could not be considered "sane".
+      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
+alias in your environment])
+   fi
+
+   test "$[2]" = conftest.file
+   )
+then
+   # Ok.
+   :
+else
+   AC_MSG_ERROR([newly created file is older than distributed files!
+Check your system clock])
+fi
+AC_MSG_RESULT(yes)])
+
+# Copyright (C) 2001, 2003, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# AM_PROG_INSTALL_STRIP
+# ---------------------
+# One issue with vendor `install' (even GNU) is that you can't
+# specify the program used to strip binaries.  This is especially
+# annoying in cross-compiling environments, where the build's strip
+# is unlikely to handle the host's binaries.
+# Fortunately install-sh will honor a STRIPPROG variable, so we
+# always use install-sh in `make install-strip', and initialize
+# STRIPPROG with the value of the STRIP variable (set by the user).
+AC_DEFUN([AM_PROG_INSTALL_STRIP],
+[AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
+# Installed binaries are usually stripped using `strip' when the user
+# run `make install-strip'.  However `strip' might not be the right
+# tool to use in cross-compilation environments, therefore Automake
+# will honor the `STRIP' environment variable to overrule this program.
+dnl Don't test for $cross_compiling = yes, because it might be `maybe'.
+if test "$cross_compiling" != no; then
+  AC_CHECK_TOOL([STRIP], [strip], :)
+fi
+INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
+AC_SUBST([INSTALL_STRIP_PROGRAM])])
+
+# Copyright (C) 2006, 2008  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 2
+
+# _AM_SUBST_NOTMAKE(VARIABLE)
+# ---------------------------
+# Prevent Automake from outputting VARIABLE = @VARIABLE@ in Makefile.in.
+# This macro is traced by Automake.
+AC_DEFUN([_AM_SUBST_NOTMAKE])
+
+# AM_SUBST_NOTMAKE(VARIABLE)
+# ---------------------------
+# Public sister of _AM_SUBST_NOTMAKE.
+AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
+
+# Check how to create a tarball.                            -*- Autoconf -*-
+
+# Copyright (C) 2004, 2005  Free Software Foundation, Inc.
+#
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# serial 2
+
+# _AM_PROG_TAR(FORMAT)
+# --------------------
+# Check how to create a tarball in format FORMAT.
+# FORMAT should be one of `v7', `ustar', or `pax'.
+#
+# Substitute a variable $(am__tar) that is a command
+# writing to stdout a FORMAT-tarball containing the directory
+# $tardir.
+#     tardir=directory && $(am__tar) > result.tar
+#
+# Substitute a variable $(am__untar) that extract such
+# a tarball read from stdin.
+#     $(am__untar) < result.tar
+AC_DEFUN([_AM_PROG_TAR],
+[# Always define AMTAR for backward compatibility.
+AM_MISSING_PROG([AMTAR], [tar])
+m4_if([$1], [v7],
+     [am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'],
+     [m4_case([$1], [ustar],, [pax],,
+              [m4_fatal([Unknown tar format])])
+AC_MSG_CHECKING([how to create a $1 tar archive])
+# Loop over all known methods to create a tar archive until one works.
+_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
+_am_tools=${am_cv_prog_tar_$1-$_am_tools}
+# Do not fold the above two line into one, because Tru64 sh and
+# Solaris sh will not grok spaces in the rhs of `-'.
+for _am_tool in $_am_tools
+do
+  case $_am_tool in
+  gnutar)
+    for _am_tar in tar gnutar gtar;
+    do
+      AM_RUN_LOG([$_am_tar --version]) && break
+    done
+    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
+    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
+    am__untar="$_am_tar -xf -"
+    ;;
+  plaintar)
+    # Must skip GNU tar: if it does not support --format= it doesn't create
+    # ustar tarball either.
+    (tar --version) >/dev/null 2>&1 && continue
+    am__tar='tar chf - "$$tardir"'
+    am__tar_='tar chf - "$tardir"'
+    am__untar='tar xf -'
+    ;;
+  pax)
+    am__tar='pax -L -x $1 -w "$$tardir"'
+    am__tar_='pax -L -x $1 -w "$tardir"'
+    am__untar='pax -r'
+    ;;
+  cpio)
+    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
+    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
+    am__untar='cpio -i -H $1 -d'
+    ;;
+  none)
+    am__tar=false
+    am__tar_=false
+    am__untar=false
+    ;;
+  esac
+
+  # If the value was cached, stop now.  We just wanted to have am__tar
+  # and am__untar set.
+  test -n "${am_cv_prog_tar_$1}" && break
+
+  # tar/untar a dummy directory, and stop if the command works
+  rm -rf conftest.dir
+  mkdir conftest.dir
+  echo GrepMe > conftest.dir/file
+  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
+  rm -rf conftest.dir
+  if test -s conftest.tar; then
+    AM_RUN_LOG([$am__untar <conftest.tar])
+    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
+  fi
+done
+rm -rf conftest.dir
+
+AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
+AC_MSG_RESULT([$am_cv_prog_tar_$1])])
+AC_SUBST([am__tar])
+AC_SUBST([am__untar])
+]) # _AM_PROG_TAR
+
+m4_include([m4/ax_c_check_flag.m4])
+m4_include([m4/libtool.m4])
+m4_include([m4/ltoptions.m4])
+m4_include([m4/ltsugar.m4])
+m4_include([m4/ltversion.m4])
+m4_include([m4/lt~obsolete.m4])
+m4_include([m4/mpc.m4])
diff --git a/mpc/config.guess b/mpc/config.guess
new file mode 100755
index 0000000..c2246a4
--- /dev/null
+++ b/mpc/config.guess
@@ -0,0 +1,1502 @@
+#! /bin/sh
+# Attempt to guess a canonical system name.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
+#   Free Software Foundation, Inc.
+
+timestamp='2009-12-30'
+
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA
+# 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+
+# Originally written by Per Bothner.  Please send patches (context
+# diff format) to <config-patches@gnu.org> and include a ChangeLog
+# entry.
+#
+# This script attempts to guess a canonical system name similar to
+# config.sub.  If it succeeds, it prints the system name on stdout, and
+# exits with 0.  Otherwise, it exits with 1.
+#
+# You can get the latest version of this script from:
+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION]
+
+Output the configuration name of the system \`$me' is run on.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.guess ($timestamp)
+
+Originally written by Per Bothner.
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
+2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010 Free
+Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help" >&2
+       exit 1 ;;
+    * )
+       break ;;
+  esac
+done
+
+if test $# != 0; then
+  echo "$me: too many arguments$help" >&2
+  exit 1
+fi
+
+trap 'exit 1' 1 2 15
+
+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a
+# compiler to aid in system detection is discouraged as it requires
+# temporary files to be created and, as you can see below, it is a
+# headache to deal with in a portable fashion.
+
+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
+# use `HOST_CC' if defined, but it is deprecated.
+
+# Portable tmp directory creation inspired by the Autoconf team.
+
+set_cc_for_build='
+trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
+trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
+: ${TMPDIR=/tmp} ;
+ { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+ { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
+ { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
+dummy=$tmp/dummy ;
+tmpfiles="$dummy.c $dummy.o $dummy.rel $dummy" ;
+case $CC_FOR_BUILD,$HOST_CC,$CC in
+ ,,)    echo "int x;" > $dummy.c ;
+	for c in cc gcc c89 c99 ; do
+	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
+	     CC_FOR_BUILD="$c"; break ;
+	  fi ;
+	done ;
+	if test x"$CC_FOR_BUILD" = x ; then
+	  CC_FOR_BUILD=no_compiler_found ;
+	fi
+	;;
+ ,,*)   CC_FOR_BUILD=$CC ;;
+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
+esac ; set_cc_for_build= ;'
+
+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.
+# (ghazi@noc.rutgers.edu 1994-08-24)
+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
+	PATH=$PATH:/.attbin ; export PATH
+fi
+
+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
+
+# Note: order is significant - the case branches are not exclusive.
+
+case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
+    *:NetBSD:*:*)
+	# NetBSD (nbsd) targets should (where applicable) match one or
+	# more of the tupples: *-*-netbsdelf*, *-*-netbsdaout*,
+	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
+	# switched to ELF, *-*-netbsd* would select the old
+	# object file format.  This provides both forward
+	# compatibility and a consistent mechanism for selecting the
+	# object file format.
+	#
+	# Note: NetBSD doesn't particularly care about the vendor
+	# portion of the name.  We always set it to "unknown".
+	sysctl="sysctl -n hw.machine_arch"
+	UNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \
+	    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`
+	case "${UNAME_MACHINE_ARCH}" in
+	    armeb) machine=armeb-unknown ;;
+	    arm*) machine=arm-unknown ;;
+	    sh3el) machine=shl-unknown ;;
+	    sh3eb) machine=sh-unknown ;;
+	    sh5el) machine=sh5le-unknown ;;
+	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
+	esac
+	# The Operating System including object format, if it has switched
+	# to ELF recently, or will in the future.
+	case "${UNAME_MACHINE_ARCH}" in
+	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
+		eval $set_cc_for_build
+		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
+			| grep -q __ELF__
+		then
+		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
+		    # Return netbsd for either.  FIX?
+		    os=netbsd
+		else
+		    os=netbsdelf
+		fi
+		;;
+	    *)
+	        os=netbsd
+		;;
+	esac
+	# The OS release
+	# Debian GNU/NetBSD machines have a different userland, and
+	# thus, need a distinct triplet. However, they do not need
+	# kernel version information, so it can be replaced with a
+	# suitable tag, in the style of linux-gnu.
+	case "${UNAME_VERSION}" in
+	    Debian*)
+		release='-gnu'
+		;;
+	    *)
+		release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
+		;;
+	esac
+	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
+	# contains redundant information, the shorter form:
+	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
+	echo "${machine}-${os}${release}"
+	exit ;;
+    *:OpenBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
+	echo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}
+	exit ;;
+    *:ekkoBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
+	exit ;;
+    *:SolidBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}
+	exit ;;
+    macppc:MirBSD:*:*)
+	echo powerpc-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
+    *:MirBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}
+	exit ;;
+    alpha:OSF1:*:*)
+	case $UNAME_RELEASE in
+	*4.0)
+		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
+		;;
+	*5.*)
+	        UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
+		;;
+	esac
+	# According to Compaq, /usr/sbin/psrinfo has been available on
+	# OSF/1 and Tru64 systems produced since 1995.  I hope that
+	# covers most systems running today.  This code pipes the CPU
+	# types through head -n 1, so we only detect the type of CPU 0.
+	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
+	case "$ALPHA_CPU_TYPE" in
+	    "EV4 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV4.5 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "LCA4 (21066/21068)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV5 (21164)")
+		UNAME_MACHINE="alphaev5" ;;
+	    "EV5.6 (21164A)")
+		UNAME_MACHINE="alphaev56" ;;
+	    "EV5.6 (21164PC)")
+		UNAME_MACHINE="alphapca56" ;;
+	    "EV5.7 (21164PC)")
+		UNAME_MACHINE="alphapca57" ;;
+	    "EV6 (21264)")
+		UNAME_MACHINE="alphaev6" ;;
+	    "EV6.7 (21264A)")
+		UNAME_MACHINE="alphaev67" ;;
+	    "EV6.8CB (21264C)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8AL (21264B)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8CX (21264D)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.9A (21264/EV69A)")
+		UNAME_MACHINE="alphaev69" ;;
+	    "EV7 (21364)")
+		UNAME_MACHINE="alphaev7" ;;
+	    "EV7.9 (21364A)")
+		UNAME_MACHINE="alphaev79" ;;
+	esac
+	# A Pn.n version is a patched version.
+	# A Vn.n version is a released version.
+	# A Tn.n version is a released field test version.
+	# A Xn.n version is an unreleased experimental baselevel.
+	# 1.2 uses "1.2" for uname -r.
+	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+	exit ;;
+    Alpha\ *:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# Should we change UNAME_MACHINE based on the output of uname instead
+	# of the specific Alpha model?
+	echo alpha-pc-interix
+	exit ;;
+    21064:Windows_NT:50:3)
+	echo alpha-dec-winnt3.5
+	exit ;;
+    Amiga*:UNIX_System_V:4.0:*)
+	echo m68k-unknown-sysv4
+	exit ;;
+    *:[Aa]miga[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-amigaos
+	exit ;;
+    *:[Mm]orph[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-morphos
+	exit ;;
+    *:OS/390:*:*)
+	echo i370-ibm-openedition
+	exit ;;
+    *:z/VM:*:*)
+	echo s390-ibm-zvmoe
+	exit ;;
+    *:OS400:*:*)
+        echo powerpc-ibm-os400
+	exit ;;
+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
+	echo arm-acorn-riscix${UNAME_RELEASE}
+	exit ;;
+    arm:riscos:*:*|arm:RISCOS:*:*)
+	echo arm-unknown-riscos
+	exit ;;
+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
+	echo hppa1.1-hitachi-hiuxmpp
+	exit ;;
+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
+	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
+	if test "`(/bin/universe) 2>/dev/null`" = att ; then
+		echo pyramid-pyramid-sysv3
+	else
+		echo pyramid-pyramid-bsd
+	fi
+	exit ;;
+    NILE*:*:*:dcosx)
+	echo pyramid-pyramid-svr4
+	exit ;;
+    DRS?6000:unix:4.0:6*)
+	echo sparc-icl-nx6
+	exit ;;
+    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)
+	case `/usr/bin/uname -p` in
+	    sparc) echo sparc-icl-nx7; exit ;;
+	esac ;;
+    s390x:SunOS:*:*)
+	echo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4H:SunOS:5.*:*)
+	echo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
+	echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)
+	echo i386-pc-auroraux${UNAME_RELEASE}
+	exit ;;
+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)
+	eval $set_cc_for_build
+	SUN_ARCH="i386"
+	# If there is a compiler, see if it is configured for 64-bit objects.
+	# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.
+	# This test works for both compilers.
+	if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
+	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
+		(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
+		grep IS_64BIT_ARCH >/dev/null
+	    then
+		SUN_ARCH="x86_64"
+	    fi
+	fi
+	echo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:6*:*)
+	# According to config.sub, this is the proper way to canonicalize
+	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
+	# it's likely to be more like Solaris than SunOS4.
+	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    sun4*:SunOS:*:*)
+	case "`/usr/bin/arch -k`" in
+	    Series*|S4*)
+		UNAME_RELEASE=`uname -v`
+		;;
+	esac
+	# Japanese Language versions have a version number like `4.1.3-JL'.
+	echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
+	exit ;;
+    sun3*:SunOS:*:*)
+	echo m68k-sun-sunos${UNAME_RELEASE}
+	exit ;;
+    sun*:*:4.2BSD:*)
+	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
+	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
+	case "`/bin/arch`" in
+	    sun3)
+		echo m68k-sun-sunos${UNAME_RELEASE}
+		;;
+	    sun4)
+		echo sparc-sun-sunos${UNAME_RELEASE}
+		;;
+	esac
+	exit ;;
+    aushp:SunOS:*:*)
+	echo sparc-auspex-sunos${UNAME_RELEASE}
+	exit ;;
+    # The situation for MiNT is a little confusing.  The machine name
+    # can be virtually everything (everything which is not
+    # "atarist" or "atariste" at least should have a processor
+    # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
+    # to the lowercase version "mint" (or "freemint").  Finally
+    # the system name "TOS" denotes a system which is actually not
+    # MiNT.  But MiNT is downward compatible to TOS, so this should
+    # be no problem.
+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
+        echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+        exit ;;
+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
+        echo m68k-atari-mint${UNAME_RELEASE}
+	exit ;;
+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
+        echo m68k-milan-mint${UNAME_RELEASE}
+        exit ;;
+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
+        echo m68k-hades-mint${UNAME_RELEASE}
+        exit ;;
+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
+        echo m68k-unknown-mint${UNAME_RELEASE}
+        exit ;;
+    m68k:machten:*:*)
+	echo m68k-apple-machten${UNAME_RELEASE}
+	exit ;;
+    powerpc:machten:*:*)
+	echo powerpc-apple-machten${UNAME_RELEASE}
+	exit ;;
+    RISC*:Mach:*:*)
+	echo mips-dec-mach_bsd4.3
+	exit ;;
+    RISC*:ULTRIX:*:*)
+	echo mips-dec-ultrix${UNAME_RELEASE}
+	exit ;;
+    VAX*:ULTRIX*:*:*)
+	echo vax-dec-ultrix${UNAME_RELEASE}
+	exit ;;
+    2020:CLIX:*:* | 2430:CLIX:*:*)
+	echo clipper-intergraph-clix${UNAME_RELEASE}
+	exit ;;
+    mips:*:*:UMIPS | mips:*:*:RISCos)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+#ifdef __cplusplus
+#include <stdio.h>  /* for printf() prototype */
+	int main (int argc, char *argv[]) {
+#else
+	int main (argc, argv) int argc; char *argv[]; {
+#endif
+	#if defined (host_mips) && defined (MIPSEB)
+	#if defined (SYSTYPE_SYSV)
+	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_SVR4)
+	  printf ("mips-mips-riscos%ssvr4\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
+	  printf ("mips-mips-riscos%sbsd\n", argv[1]); exit (0);
+	#endif
+	#endif
+	  exit (-1);
+	}
+EOF
+	$CC_FOR_BUILD -o $dummy $dummy.c &&
+	  dummyarg=`echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` &&
+	  SYSTEM_NAME=`$dummy $dummyarg` &&
+	    { echo "$SYSTEM_NAME"; exit; }
+	echo mips-mips-riscos${UNAME_RELEASE}
+	exit ;;
+    Motorola:PowerMAX_OS:*:*)
+	echo powerpc-motorola-powermax
+	exit ;;
+    Motorola:*:4.3:PL8-*)
+	echo powerpc-harris-powermax
+	exit ;;
+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
+	echo powerpc-harris-powermax
+	exit ;;
+    Night_Hawk:Power_UNIX:*:*)
+	echo powerpc-harris-powerunix
+	exit ;;
+    m88k:CX/UX:7*:*)
+	echo m88k-harris-cxux7
+	exit ;;
+    m88k:*:4*:R4*)
+	echo m88k-motorola-sysv4
+	exit ;;
+    m88k:*:3*:R3*)
+	echo m88k-motorola-sysv3
+	exit ;;
+    AViiON:dgux:*:*)
+        # DG/UX returns AViiON for all architectures
+        UNAME_PROCESSOR=`/usr/bin/uname -p`
+	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
+	then
+	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
+	       [ ${TARGET_BINARY_INTERFACE}x = x ]
+	    then
+		echo m88k-dg-dgux${UNAME_RELEASE}
+	    else
+		echo m88k-dg-dguxbcs${UNAME_RELEASE}
+	    fi
+	else
+	    echo i586-dg-dgux${UNAME_RELEASE}
+	fi
+ 	exit ;;
+    M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
+	echo m88k-dolphin-sysv3
+	exit ;;
+    M88*:*:R3*:*)
+	# Delta 88k system running SVR3
+	echo m88k-motorola-sysv3
+	exit ;;
+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
+	echo m88k-tektronix-sysv3
+	exit ;;
+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
+	echo m68k-tektronix-bsd
+	exit ;;
+    *:IRIX*:*:*)
+	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
+	exit ;;
+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
+	echo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id
+	exit ;;               # Note that: echo "'`uname -s`'" gives 'AIX '
+    i*86:AIX:*:*)
+	echo i386-ibm-aix
+	exit ;;
+    ia64:AIX:*:*)
+	if [ -x /usr/bin/oslevel ] ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
+	exit ;;
+    *:AIX:2:3)
+	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
+		eval $set_cc_for_build
+		sed 's/^		//' << EOF >$dummy.c
+		#include <sys/systemcfg.h>
+
+		main()
+			{
+			if (!__power_pc())
+				exit(1);
+			puts("powerpc-ibm-aix3.2.5");
+			exit(0);
+			}
+EOF
+		if $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`
+		then
+			echo "$SYSTEM_NAME"
+		else
+			echo rs6000-ibm-aix3.2.5
+		fi
+	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
+		echo rs6000-ibm-aix3.2.4
+	else
+		echo rs6000-ibm-aix3.2
+	fi
+	exit ;;
+    *:AIX:*:[456])
+	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
+	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
+		IBM_ARCH=rs6000
+	else
+		IBM_ARCH=powerpc
+	fi
+	if [ -x /usr/bin/oslevel ] ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
+	exit ;;
+    *:AIX:*:*)
+	echo rs6000-ibm-aix
+	exit ;;
+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)
+	echo romp-ibm-bsd4.4
+	exit ;;
+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
+	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
+	exit ;;                             # report: romp-ibm BSD 4.3
+    *:BOSX:*:*)
+	echo rs6000-bull-bosx
+	exit ;;
+    DPX/2?00:B.O.S.:*:*)
+	echo m68k-bull-sysv3
+	exit ;;
+    9000/[34]??:4.3bsd:1.*:*)
+	echo m68k-hp-bsd
+	exit ;;
+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
+	echo m68k-hp-bsd4.4
+	exit ;;
+    9000/[34678]??:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	case "${UNAME_MACHINE}" in
+	    9000/31? )            HP_ARCH=m68000 ;;
+	    9000/[34]?? )         HP_ARCH=m68k ;;
+	    9000/[678][0-9][0-9])
+		if [ -x /usr/bin/getconf ]; then
+		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
+                    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
+                    case "${sc_cpu_version}" in
+                      523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
+                      528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
+                      532)                      # CPU_PA_RISC2_0
+                        case "${sc_kernel_bits}" in
+                          32) HP_ARCH="hppa2.0n" ;;
+                          64) HP_ARCH="hppa2.0w" ;;
+			  '') HP_ARCH="hppa2.0" ;;   # HP-UX 10.20
+                        esac ;;
+                    esac
+		fi
+		if [ "${HP_ARCH}" = "" ]; then
+		    eval $set_cc_for_build
+		    sed 's/^              //' << EOF >$dummy.c
+
+              #define _HPUX_SOURCE
+              #include <stdlib.h>
+              #include <unistd.h>
+
+              int main ()
+              {
+              #if defined(_SC_KERNEL_BITS)
+                  long bits = sysconf(_SC_KERNEL_BITS);
+              #endif
+                  long cpu  = sysconf (_SC_CPU_VERSION);
+
+                  switch (cpu)
+              	{
+              	case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
+              	case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
+              	case CPU_PA_RISC2_0:
+              #if defined(_SC_KERNEL_BITS)
+              	    switch (bits)
+              		{
+              		case 64: puts ("hppa2.0w"); break;
+              		case 32: puts ("hppa2.0n"); break;
+              		default: puts ("hppa2.0"); break;
+              		} break;
+              #else  /* !defined(_SC_KERNEL_BITS) */
+              	    puts ("hppa2.0"); break;
+              #endif
+              	default: puts ("hppa1.0"); break;
+              	}
+                  exit (0);
+              }
+EOF
+		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    test -z "$HP_ARCH" && HP_ARCH=hppa
+		fi ;;
+	esac
+	if [ ${HP_ARCH} = "hppa2.0w" ]
+	then
+	    eval $set_cc_for_build
+
+	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
+	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
+	    # generating 64-bit code.  GNU and HP use different nomenclature:
+	    #
+	    # $ CC_FOR_BUILD=cc ./config.guess
+	    # => hppa2.0w-hp-hpux11.23
+	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
+	    # => hppa64-hp-hpux11.23
+
+	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |
+		grep -q __LP64__
+	    then
+		HP_ARCH="hppa2.0w"
+	    else
+		HP_ARCH="hppa64"
+	    fi
+	fi
+	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
+	exit ;;
+    ia64:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	echo ia64-hp-hpux${HPUX_REV}
+	exit ;;
+    3050*:HI-UX:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#include <unistd.h>
+	int
+	main ()
+	{
+	  long cpu = sysconf (_SC_CPU_VERSION);
+	  /* The order matters, because CPU_IS_HP_MC68K erroneously returns
+	     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct
+	     results, however.  */
+	  if (CPU_IS_PA_RISC (cpu))
+	    {
+	      switch (cpu)
+		{
+		  case CPU_PA_RISC1_0: puts ("hppa1.0-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC1_1: puts ("hppa1.1-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC2_0: puts ("hppa2.0-hitachi-hiuxwe2"); break;
+		  default: puts ("hppa-hitachi-hiuxwe2"); break;
+		}
+	    }
+	  else if (CPU_IS_HP_MC68K (cpu))
+	    puts ("m68k-hitachi-hiuxwe2");
+	  else puts ("unknown-hitachi-hiuxwe2");
+	  exit (0);
+	}
+EOF
+	$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&
+		{ echo "$SYSTEM_NAME"; exit; }
+	echo unknown-hitachi-hiuxwe2
+	exit ;;
+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
+	echo hppa1.1-hp-bsd
+	exit ;;
+    9000/8??:4.3bsd:*:*)
+	echo hppa1.0-hp-bsd
+	exit ;;
+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
+	echo hppa1.0-hp-mpeix
+	exit ;;
+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
+	echo hppa1.1-hp-osf
+	exit ;;
+    hp8??:OSF1:*:*)
+	echo hppa1.0-hp-osf
+	exit ;;
+    i*86:OSF1:*:*)
+	if [ -x /usr/sbin/sysversion ] ; then
+	    echo ${UNAME_MACHINE}-unknown-osf1mk
+	else
+	    echo ${UNAME_MACHINE}-unknown-osf1
+	fi
+	exit ;;
+    parisc*:Lites*:*:*)
+	echo hppa1.1-hp-lites
+	exit ;;
+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
+	echo c1-convex-bsd
+        exit ;;
+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
+	if getsysinfo -f scalar_acc
+	then echo c32-convex-bsd
+	else echo c2-convex-bsd
+	fi
+        exit ;;
+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
+	echo c34-convex-bsd
+        exit ;;
+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
+	echo c38-convex-bsd
+        exit ;;
+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
+	echo c4-convex-bsd
+        exit ;;
+    CRAY*Y-MP:*:*:*)
+	echo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*[A-Z]90:*:*:*)
+	echo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \
+	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
+	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \
+	      -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*TS:*:*:*)
+	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*T3E:*:*:*)
+	echo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    CRAY*SV1:*:*:*)
+	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    *:UNICOS/mp:*:*)
+	echo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit ;;
+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
+	FUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+        FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
+        echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+        exit ;;
+    5000:UNIX_System_V:4.*:*)
+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+        FUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`
+        echo "sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+	exit ;;
+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
+	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
+	exit ;;
+    sparc*:BSD/OS:*:*)
+	echo sparc-unknown-bsdi${UNAME_RELEASE}
+	exit ;;
+    *:BSD/OS:*:*)
+	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
+	exit ;;
+    *:FreeBSD:*:*)
+	case ${UNAME_MACHINE} in
+	    pc98)
+		echo i386-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	    amd64)
+		echo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	    *)
+		echo ${UNAME_MACHINE}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+	esac
+	exit ;;
+    i*:CYGWIN*:*)
+	echo ${UNAME_MACHINE}-pc-cygwin
+	exit ;;
+    *:MINGW*:*)
+	echo ${UNAME_MACHINE}-pc-mingw32
+	exit ;;
+    i*:windows32*:*)
+    	# uname -m includes "-pc" on this system.
+    	echo ${UNAME_MACHINE}-mingw32
+	exit ;;
+    i*:PW*:*)
+	echo ${UNAME_MACHINE}-pc-pw32
+	exit ;;
+    *:Interix*:*)
+    	case ${UNAME_MACHINE} in
+	    x86)
+		echo i586-pc-interix${UNAME_RELEASE}
+		exit ;;
+	    authenticamd | genuineintel | EM64T)
+		echo x86_64-unknown-interix${UNAME_RELEASE}
+		exit ;;
+	    IA64)
+		echo ia64-unknown-interix${UNAME_RELEASE}
+		exit ;;
+	esac ;;
+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)
+	echo i${UNAME_MACHINE}-pc-mks
+	exit ;;
+    8664:Windows_NT:*)
+	echo x86_64-pc-mks
+	exit ;;
+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
+	# UNAME_MACHINE based on the output of uname instead of i386?
+	echo i586-pc-interix
+	exit ;;
+    i*:UWIN*:*)
+	echo ${UNAME_MACHINE}-pc-uwin
+	exit ;;
+    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
+	echo x86_64-unknown-cygwin
+	exit ;;
+    p*:CYGWIN*:*)
+	echo powerpcle-unknown-cygwin
+	exit ;;
+    prep*:SunOS:5.*:*)
+	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit ;;
+    *:GNU:*:*)
+	# the GNU system
+	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
+	exit ;;
+    *:GNU/*:*:*)
+	# other systems with GNU libc and userland
+	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu
+	exit ;;
+    i*86:Minix:*:*)
+	echo ${UNAME_MACHINE}-pc-minix
+	exit ;;
+    alpha:Linux:*:*)
+	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
+	  EV5)   UNAME_MACHINE=alphaev5 ;;
+	  EV56)  UNAME_MACHINE=alphaev56 ;;
+	  PCA56) UNAME_MACHINE=alphapca56 ;;
+	  PCA57) UNAME_MACHINE=alphapca56 ;;
+	  EV6)   UNAME_MACHINE=alphaev6 ;;
+	  EV67)  UNAME_MACHINE=alphaev67 ;;
+	  EV68*) UNAME_MACHINE=alphaev68 ;;
+        esac
+	objdump --private-headers /bin/sh | grep -q ld.so.1
+	if test "$?" = 0 ; then LIBC="libc1" ; else LIBC="" ; fi
+	echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}
+	exit ;;
+    arm*:Linux:*:*)
+	eval $set_cc_for_build
+	if echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \
+	    | grep -q __ARM_EABI__
+	then
+	    echo ${UNAME_MACHINE}-unknown-linux-gnu
+	else
+	    echo ${UNAME_MACHINE}-unknown-linux-gnueabi
+	fi
+	exit ;;
+    avr32*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    cris:Linux:*:*)
+	echo cris-axis-linux-gnu
+	exit ;;
+    crisv32:Linux:*:*)
+	echo crisv32-axis-linux-gnu
+	exit ;;
+    frv:Linux:*:*)
+    	echo frv-unknown-linux-gnu
+	exit ;;
+    i*86:Linux:*:*)
+	LIBC=gnu
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#ifdef __dietlibc__
+	LIBC=dietlibc
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC'`
+	echo "${UNAME_MACHINE}-pc-linux-${LIBC}"
+	exit ;;
+    ia64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    m32r*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    m68*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    mips:Linux:*:* | mips64:Linux:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#undef CPU
+	#undef ${UNAME_MACHINE}
+	#undef ${UNAME_MACHINE}el
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	CPU=${UNAME_MACHINE}el
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	CPU=${UNAME_MACHINE}
+	#else
+	CPU=
+	#endif
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`
+	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-gnu"; exit; }
+	;;
+    or32:Linux:*:*)
+	echo or32-unknown-linux-gnu
+	exit ;;
+    padre:Linux:*:*)
+	echo sparc-unknown-linux-gnu
+	exit ;;
+    parisc64:Linux:*:* | hppa64:Linux:*:*)
+	echo hppa64-unknown-linux-gnu
+	exit ;;
+    parisc:Linux:*:* | hppa:Linux:*:*)
+	# Look for CPU level
+	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
+	  PA7*) echo hppa1.1-unknown-linux-gnu ;;
+	  PA8*) echo hppa2.0-unknown-linux-gnu ;;
+	  *)    echo hppa-unknown-linux-gnu ;;
+	esac
+	exit ;;
+    ppc64:Linux:*:*)
+	echo powerpc64-unknown-linux-gnu
+	exit ;;
+    ppc:Linux:*:*)
+	echo powerpc-unknown-linux-gnu
+	exit ;;
+    s390:Linux:*:* | s390x:Linux:*:*)
+	echo ${UNAME_MACHINE}-ibm-linux
+	exit ;;
+    sh64*:Linux:*:*)
+    	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    sh*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    sparc:Linux:*:* | sparc64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    vax:Linux:*:*)
+	echo ${UNAME_MACHINE}-dec-linux-gnu
+	exit ;;
+    x86_64:Linux:*:*)
+	echo x86_64-unknown-linux-gnu
+	exit ;;
+    xtensa*:Linux:*:*)
+    	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit ;;
+    i*86:DYNIX/ptx:4*:*)
+	# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.
+	# earlier versions are messed up and put the nodename in both
+	# sysname and nodename.
+	echo i386-sequent-sysv4
+	exit ;;
+    i*86:UNIX_SV:4.2MP:2.*)
+        # Unixware is an offshoot of SVR4, but it has its own version
+        # number series starting with 2...
+        # I am not positive that other SVR4 systems won't match this,
+	# I just have to hope.  -- rms.
+        # Use sysv4.2uw... so that sysv4* matches it.
+	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
+	exit ;;
+    i*86:OS/2:*:*)
+	# If we were able to find `uname', then EMX Unix compatibility
+	# is probably installed.
+	echo ${UNAME_MACHINE}-pc-os2-emx
+	exit ;;
+    i*86:XTS-300:*:STOP)
+	echo ${UNAME_MACHINE}-unknown-stop
+	exit ;;
+    i*86:atheos:*:*)
+	echo ${UNAME_MACHINE}-unknown-atheos
+	exit ;;
+    i*86:syllable:*:*)
+	echo ${UNAME_MACHINE}-pc-syllable
+	exit ;;
+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)
+	echo i386-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    i*86:*DOS:*:*)
+	echo ${UNAME_MACHINE}-pc-msdosdjgpp
+	exit ;;
+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
+	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
+	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
+		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
+	else
+		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
+	fi
+	exit ;;
+    i*86:*:5:[678]*)
+    	# UnixWare 7.x, OpenUNIX and OpenServer 6.
+	case `/bin/uname -X | grep "^Machine"` in
+	    *486*)	     UNAME_MACHINE=i486 ;;
+	    *Pentium)	     UNAME_MACHINE=i586 ;;
+	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
+	esac
+	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
+	exit ;;
+    i*86:*:3.2:*)
+	if test -f /usr/options/cb.name; then
+		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
+		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
+	elif /bin/uname -X 2>/dev/null >/dev/null ; then
+		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
+		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
+		(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \
+			&& UNAME_MACHINE=i586
+		(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
+	else
+		echo ${UNAME_MACHINE}-pc-sysv32
+	fi
+	exit ;;
+    pc:*:*:*)
+	# Left here for compatibility:
+        # uname -m prints for DJGPP always 'pc', but it prints nothing about
+        # the processor, so we play safe by assuming i586.
+	# Note: whatever this is, it MUST be the same as what config.sub
+	# prints for the "djgpp" host, or else GDB configury will decide that
+	# this is a cross-build.
+	echo i586-pc-msdosdjgpp
+        exit ;;
+    Intel:Mach:3*:*)
+	echo i386-pc-mach3
+	exit ;;
+    paragon:*:*:*)
+	echo i860-intel-osf1
+	exit ;;
+    i860:*:4.*:*) # i860-SVR4
+	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
+	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
+	else # Add other i860-SVR4 vendors below as they are discovered.
+	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
+	fi
+	exit ;;
+    mini*:CTIX:SYS*5:*)
+	# "miniframe"
+	echo m68010-convergent-sysv
+	exit ;;
+    mc68k:UNIX:SYSTEM5:3.51m)
+	echo m68k-convergent-sysv
+	exit ;;
+    M680?0:D-NIX:5.3:*)
+	echo m68k-diab-dnix
+	exit ;;
+    M68*:*:R3V[5678]*:*)
+	test -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;
+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)
+	OS_REL=''
+	test -r /etc/.relid \
+	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
+        /bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+          && { echo i486-ncr-sysv4; exit; } ;;
+    NCR*:*:4.2:* | MPRAS*:*:4.2:*)
+	OS_REL='.3'
+	test -r /etc/.relid \
+	    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }
+	/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \
+	    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
+	echo m68k-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    mc68030:UNIX_System_V:4.*:*)
+	echo m68k-atari-sysv4
+	exit ;;
+    TSUNAMI:LynxOS:2.*:*)
+	echo sparc-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    rs6000:LynxOS:2.*:*)
+	echo rs6000-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)
+	echo powerpc-unknown-lynxos${UNAME_RELEASE}
+	exit ;;
+    SM[BE]S:UNIX_SV:*:*)
+	echo mips-dde-sysv${UNAME_RELEASE}
+	exit ;;
+    RM*:ReliantUNIX-*:*:*)
+	echo mips-sni-sysv4
+	exit ;;
+    RM*:SINIX-*:*:*)
+	echo mips-sni-sysv4
+	exit ;;
+    *:SINIX-*:*:*)
+	if uname -p 2>/dev/null >/dev/null ; then
+		UNAME_MACHINE=`(uname -p) 2>/dev/null`
+		echo ${UNAME_MACHINE}-sni-sysv4
+	else
+		echo ns32k-sni-sysv
+	fi
+	exit ;;
+    PENTIUM:*:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort
+                      # says <Richard.M.Bartel@ccMail.Census.GOV>
+        echo i586-unisys-sysv4
+        exit ;;
+    *:UNIX_System_V:4*:FTX*)
+	# From Gerald Hewes <hewes@openmarket.com>.
+	# How about differentiating between stratus architectures? -djm
+	echo hppa1.1-stratus-sysv4
+	exit ;;
+    *:*:*:FTX*)
+	# From seanf@swdc.stratus.com.
+	echo i860-stratus-sysv4
+	exit ;;
+    i*86:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo ${UNAME_MACHINE}-stratus-vos
+	exit ;;
+    *:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo hppa1.1-stratus-vos
+	exit ;;
+    mc68*:A/UX:*:*)
+	echo m68k-apple-aux${UNAME_RELEASE}
+	exit ;;
+    news*:NEWS-OS:6*:*)
+	echo mips-sony-newsos6
+	exit ;;
+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
+	if [ -d /usr/nec ]; then
+	        echo mips-nec-sysv${UNAME_RELEASE}
+	else
+	        echo mips-unknown-sysv${UNAME_RELEASE}
+	fi
+        exit ;;
+    BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
+	echo powerpc-be-beos
+	exit ;;
+    BeMac:BeOS:*:*)	# BeOS running on Mac or Mac clone, PPC only.
+	echo powerpc-apple-beos
+	exit ;;
+    BePC:BeOS:*:*)	# BeOS running on Intel PC compatible.
+	echo i586-pc-beos
+	exit ;;
+    BePC:Haiku:*:*)	# Haiku running on Intel PC compatible.
+	echo i586-pc-haiku
+	exit ;;
+    SX-4:SUPER-UX:*:*)
+	echo sx4-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-5:SUPER-UX:*:*)
+	echo sx5-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-6:SUPER-UX:*:*)
+	echo sx6-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-7:SUPER-UX:*:*)
+	echo sx7-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-8:SUPER-UX:*:*)
+	echo sx8-nec-superux${UNAME_RELEASE}
+	exit ;;
+    SX-8R:SUPER-UX:*:*)
+	echo sx8r-nec-superux${UNAME_RELEASE}
+	exit ;;
+    Power*:Rhapsody:*:*)
+	echo powerpc-apple-rhapsody${UNAME_RELEASE}
+	exit ;;
+    *:Rhapsody:*:*)
+	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
+	exit ;;
+    *:Darwin:*:*)
+	UNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown
+	case $UNAME_PROCESSOR in
+	    i386)
+		eval $set_cc_for_build
+		if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
+		  if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \
+		      (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
+		      grep IS_64BIT_ARCH >/dev/null
+		  then
+		      UNAME_PROCESSOR="x86_64"
+		  fi
+		fi ;;
+	    unknown) UNAME_PROCESSOR=powerpc ;;
+	esac
+	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
+	exit ;;
+    *:procnto*:*:* | *:QNX:[0123456789]*:*)
+	UNAME_PROCESSOR=`uname -p`
+	if test "$UNAME_PROCESSOR" = "x86"; then
+		UNAME_PROCESSOR=i386
+		UNAME_MACHINE=pc
+	fi
+	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
+	exit ;;
+    *:QNX:*:4*)
+	echo i386-pc-qnx
+	exit ;;
+    NSE-?:NONSTOP_KERNEL:*:*)
+	echo nse-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    NSR-?:NONSTOP_KERNEL:*:*)
+	echo nsr-tandem-nsk${UNAME_RELEASE}
+	exit ;;
+    *:NonStop-UX:*:*)
+	echo mips-compaq-nonstopux
+	exit ;;
+    BS2000:POSIX*:*:*)
+	echo bs2000-siemens-sysv
+	exit ;;
+    DS/*:UNIX_System_V:*:*)
+	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
+	exit ;;
+    *:Plan9:*:*)
+	# "uname -m" is not consistent, so use $cputype instead. 386
+	# is converted to i386 for consistency with other x86
+	# operating systems.
+	if test "$cputype" = "386"; then
+	    UNAME_MACHINE=i386
+	else
+	    UNAME_MACHINE="$cputype"
+	fi
+	echo ${UNAME_MACHINE}-unknown-plan9
+	exit ;;
+    *:TOPS-10:*:*)
+	echo pdp10-unknown-tops10
+	exit ;;
+    *:TENEX:*:*)
+	echo pdp10-unknown-tenex
+	exit ;;
+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
+	echo pdp10-dec-tops20
+	exit ;;
+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
+	echo pdp10-xkl-tops20
+	exit ;;
+    *:TOPS-20:*:*)
+	echo pdp10-unknown-tops20
+	exit ;;
+    *:ITS:*:*)
+	echo pdp10-unknown-its
+	exit ;;
+    SEI:*:*:SEIUX)
+        echo mips-sei-seiux${UNAME_RELEASE}
+	exit ;;
+    *:DragonFly:*:*)
+	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
+	exit ;;
+    *:*VMS:*:*)
+    	UNAME_MACHINE=`(uname -p) 2>/dev/null`
+	case "${UNAME_MACHINE}" in
+	    A*) echo alpha-dec-vms ; exit ;;
+	    I*) echo ia64-dec-vms ; exit ;;
+	    V*) echo vax-dec-vms ; exit ;;
+	esac ;;
+    *:XENIX:*:SysV)
+	echo i386-pc-xenix
+	exit ;;
+    i*86:skyos:*:*)
+	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'
+	exit ;;
+    i*86:rdos:*:*)
+	echo ${UNAME_MACHINE}-pc-rdos
+	exit ;;
+    i*86:AROS:*:*)
+	echo ${UNAME_MACHINE}-pc-aros
+	exit ;;
+esac
+
+#echo '(No uname command or uname output not recognized.)' 1>&2
+#echo "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" 1>&2
+
+eval $set_cc_for_build
+cat >$dummy.c <<EOF
+#ifdef _SEQUENT_
+# include <sys/types.h>
+# include <sys/utsname.h>
+#endif
+main ()
+{
+#if defined (sony)
+#if defined (MIPSEB)
+  /* BFD wants "bsd" instead of "newsos".  Perhaps BFD should be changed,
+     I don't know....  */
+  printf ("mips-sony-bsd\n"); exit (0);
+#else
+#include <sys/param.h>
+  printf ("m68k-sony-newsos%s\n",
+#ifdef NEWSOS4
+          "4"
+#else
+	  ""
+#endif
+         ); exit (0);
+#endif
+#endif
+
+#if defined (__arm) && defined (__acorn) && defined (__unix)
+  printf ("arm-acorn-riscix\n"); exit (0);
+#endif
+
+#if defined (hp300) && !defined (hpux)
+  printf ("m68k-hp-bsd\n"); exit (0);
+#endif
+
+#if defined (NeXT)
+#if !defined (__ARCHITECTURE__)
+#define __ARCHITECTURE__ "m68k"
+#endif
+  int version;
+  version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
+  if (version < 4)
+    printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
+  else
+    printf ("%s-next-openstep%d\n", __ARCHITECTURE__, version);
+  exit (0);
+#endif
+
+#if defined (MULTIMAX) || defined (n16)
+#if defined (UMAXV)
+  printf ("ns32k-encore-sysv\n"); exit (0);
+#else
+#if defined (CMU)
+  printf ("ns32k-encore-mach\n"); exit (0);
+#else
+  printf ("ns32k-encore-bsd\n"); exit (0);
+#endif
+#endif
+#endif
+
+#if defined (__386BSD__)
+  printf ("i386-pc-bsd\n"); exit (0);
+#endif
+
+#if defined (sequent)
+#if defined (i386)
+  printf ("i386-sequent-dynix\n"); exit (0);
+#endif
+#if defined (ns32000)
+  printf ("ns32k-sequent-dynix\n"); exit (0);
+#endif
+#endif
+
+#if defined (_SEQUENT_)
+    struct utsname un;
+
+    uname(&un);
+
+    if (strncmp(un.version, "V2", 2) == 0) {
+	printf ("i386-sequent-ptx2\n"); exit (0);
+    }
+    if (strncmp(un.version, "V1", 2) == 0) { /* XXX is V1 correct? */
+	printf ("i386-sequent-ptx1\n"); exit (0);
+    }
+    printf ("i386-sequent-ptx\n"); exit (0);
+
+#endif
+
+#if defined (vax)
+# if !defined (ultrix)
+#  include <sys/param.h>
+#  if defined (BSD)
+#   if BSD == 43
+      printf ("vax-dec-bsd4.3\n"); exit (0);
+#   else
+#    if BSD == 199006
+      printf ("vax-dec-bsd4.3reno\n"); exit (0);
+#    else
+      printf ("vax-dec-bsd\n"); exit (0);
+#    endif
+#   endif
+#  else
+    printf ("vax-dec-bsd\n"); exit (0);
+#  endif
+# else
+    printf ("vax-dec-ultrix\n"); exit (0);
+# endif
+#endif
+
+#if defined (alliant) && defined (i860)
+  printf ("i860-alliant-bsd\n"); exit (0);
+#endif
+
+  exit (1);
+}
+EOF
+
+$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && SYSTEM_NAME=`$dummy` &&
+	{ echo "$SYSTEM_NAME"; exit; }
+
+# Apollos put the system type in the environment.
+
+test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit; }
+
+# Convex versions that predate uname can use getsysinfo(1)
+
+if [ -x /usr/convex/getsysinfo ]
+then
+    case `getsysinfo -f cpu_type` in
+    c1*)
+	echo c1-convex-bsd
+	exit ;;
+    c2*)
+	if getsysinfo -f scalar_acc
+	then echo c32-convex-bsd
+	else echo c2-convex-bsd
+	fi
+	exit ;;
+    c34*)
+	echo c34-convex-bsd
+	exit ;;
+    c38*)
+	echo c38-convex-bsd
+	exit ;;
+    c4*)
+	echo c4-convex-bsd
+	exit ;;
+    esac
+fi
+
+cat >&2 <<EOF
+$0: unable to guess system type
+
+This script, last modified $timestamp, has failed to recognize
+the operating system you are using. It is advised that you
+download the most up to date version of the config scripts from
+
+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
+and
+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD
+
+If the version you run ($0) is already up to date, please
+send the following data and any information you think might be
+pertinent to <config-patches@gnu.org> in order to provide the needed
+information to handle your system.
+
+config.guess timestamp = $timestamp
+
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`
+
+hostinfo               = `(hostinfo) 2>/dev/null`
+/bin/universe          = `(/bin/universe) 2>/dev/null`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
+/bin/arch              = `(/bin/arch) 2>/dev/null`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
+
+UNAME_MACHINE = ${UNAME_MACHINE}
+UNAME_RELEASE = ${UNAME_RELEASE}
+UNAME_SYSTEM  = ${UNAME_SYSTEM}
+UNAME_VERSION = ${UNAME_VERSION}
+EOF
+
+exit 1
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff --git a/mpc/config.h.in b/mpc/config.h.in
new file mode 100644
index 0000000..1de50f8
--- /dev/null
+++ b/mpc/config.h.in
@@ -0,0 +1,117 @@
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define to 1 if you have the <complex.h> header file. */
+#undef HAVE_COMPLEX_H
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#undef HAVE_DLFCN_H
+
+/* Define to 1 if you have the `dup' function. */
+#undef HAVE_DUP
+
+/* Define to 1 if you have the `dup2' function. */
+#undef HAVE_DUP2
+
+/* Define to 1 if you have the `fileno' function. */
+#undef HAVE_FILENO
+
+/* Define to 1 if you have the `gettimeofday' function. */
+#undef HAVE_GETTIMEOFDAY
+
+/* Define to 1 if the system has the type `intptr_t'. */
+#undef HAVE_INTPTR_T
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#undef HAVE_INTTYPES_H
+
+/* Library dl present */
+#undef HAVE_LIBDL
+
+/* Define to 1 if you have the `m' library (-lm). */
+#undef HAVE_LIBM
+
+/* Define to 1 if you have the <limits.h> header file. */
+#undef HAVE_LIMITS_H
+
+/* Define to 1 if you have the `localeconv' function. */
+#undef HAVE_LOCALECONV
+
+/* Define to 1 if you have the <locale.h> header file. */
+#undef HAVE_LOCALE_H
+
+/* Define to 1 if you have the <memory.h> header file. */
+#undef HAVE_MEMORY_H
+
+/* Define to 1 if you have the `setlocale' function. */
+#undef HAVE_SETLOCALE
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#undef HAVE_STDINT_H
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#undef HAVE_STDLIB_H
+
+/* Define to 1 if you have the <strings.h> header file. */
+#undef HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#undef HAVE_STRING_H
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#undef HAVE_SYS_STAT_H
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#undef HAVE_SYS_TIME_H
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#undef HAVE_SYS_TYPES_H
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#undef HAVE_UNISTD_H
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#undef LT_OBJDIR
+
+/* Do not check mpc_out_str on stdout */
+#undef NO_STREAM_REDIRECTION
+
+/* Name of package */
+#undef PACKAGE
+
+/* Define to the address where bug reports for this package should be sent. */
+#undef PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#undef PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#undef PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#undef PACKAGE_TARNAME
+
+/* Define to the home page for this package. */
+#undef PACKAGE_URL
+
+/* Define to the version of this package. */
+#undef PACKAGE_VERSION
+
+/* Define to 1 if you have the ANSI C header files. */
+#undef STDC_HEADERS
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#undef TIME_WITH_SYS_TIME
+
+/* Version number of package */
+#undef VERSION
+
+/* Define to empty if `const' does not conform to ANSI C. */
+#undef const
+
+/* Define to the type of a signed integer type wide enough to hold a pointer,
+   if such a type exists, and if the system does not define it. */
+#undef intptr_t
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+#undef size_t
diff --git a/mpc/config.sub b/mpc/config.sub
new file mode 100755
index 0000000..c2d1257
--- /dev/null
+++ b/mpc/config.sub
@@ -0,0 +1,1714 @@
+#! /bin/sh
+# Configuration validation subroutine script.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010
+#   Free Software Foundation, Inc.
+
+timestamp='2010-01-22'
+
+# This file is (in principle) common to ALL GNU software.
+# The presence of a machine in this file suggests that SOME GNU software
+# can handle that machine.  It does not imply ALL GNU software can.
+#
+# This file is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA
+# 02110-1301, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+
+# Please send patches to <config-patches@gnu.org>.  Submit a context
+# diff and a properly formatted GNU ChangeLog entry.
+#
+# Configuration subroutine to validate and canonicalize a configuration type.
+# Supply the specified configuration type as an argument.
+# If it is invalid, we print an error message on stderr and exit with code 1.
+# Otherwise, we print the canonical config type on stdout and succeed.
+
+# You can get the latest version of this script from:
+# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD
+
+# This file is supposed to be the same for all GNU packages
+# and recognize all the CPU types, system types and aliases
+# that are meaningful with *any* GNU software.
+# Each package is responsible for reporting which valid configurations
+# it does not support.  The user should be able to distinguish
+# a failure to support a valid configuration from a meaningless
+# configuration.
+
+# The goal of this file is to map all the various variations of a given
+# machine specification into a single specification in the form:
+#	CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM
+# or in some cases, the newer four-part form:
+#	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
+# It is wrong to echo any other type of specification.
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION] CPU-MFR-OPSYS
+       $0 [OPTION] ALIAS
+
+Canonicalize a configuration name.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.sub ($timestamp)
+
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
+2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010 Free
+Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit ;;
+    --version | -v )
+       echo "$version" ; exit ;;
+    --help | --h* | -h )
+       echo "$usage"; exit ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help"
+       exit 1 ;;
+
+    *local*)
+       # First pass through any local machine types.
+       echo $1
+       exit ;;
+
+    * )
+       break ;;
+  esac
+done
+
+case $# in
+ 0) echo "$me: missing argument$help" >&2
+    exit 1;;
+ 1) ;;
+ *) echo "$me: too many arguments$help" >&2
+    exit 1;;
+esac
+
+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
+# Here we must recognize all the valid KERNEL-OS combinations.
+maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
+case $maybe_os in
+  nto-qnx* | linux-gnu* | linux-dietlibc | linux-newlib* | linux-uclibc* | \
+  uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | \
+  kopensolaris*-gnu* | \
+  storm-chaos* | os2-emx* | rtmk-nova*)
+    os=-$maybe_os
+    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
+    ;;
+  *)
+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`
+    if [ $basic_machine != $1 ]
+    then os=`echo $1 | sed 's/.*-/-/'`
+    else os=; fi
+    ;;
+esac
+
+### Let's recognize common machines as not being operating systems so
+### that things like config.sub decstation-3100 work.  We also
+### recognize some manufacturers as not being operating systems, so we
+### can provide default operating systems below.
+case $os in
+	-sun*os*)
+		# Prevent following clause from handling this invalid input.
+		;;
+	-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \
+	-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \
+	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \
+	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
+	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
+	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
+	-apple | -axis | -knuth | -cray | -microblaze)
+		os=
+		basic_machine=$1
+		;;
+        -bluegene*)
+	        os=-cnk
+		;;
+	-sim | -cisco | -oki | -wec | -winbond)
+		os=
+		basic_machine=$1
+		;;
+	-scout)
+		;;
+	-wrs)
+		os=-vxworks
+		basic_machine=$1
+		;;
+	-chorusos*)
+		os=-chorusos
+		basic_machine=$1
+		;;
+ 	-chorusrdb)
+ 		os=-chorusrdb
+		basic_machine=$1
+ 		;;
+	-hiux*)
+		os=-hiuxwe2
+		;;
+	-sco6)
+		os=-sco5v6
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco5)
+		os=-sco3.2v5
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco4)
+		os=-sco3.2v4
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2.[4-9]*)
+		os=`echo $os | sed -e 's/sco3.2./sco3.2v/'`
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2v[4-9]*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco5v6*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco*)
+		os=-sco3.2v2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-udk*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-isc)
+		os=-isc2.2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-clix*)
+		basic_machine=clipper-intergraph
+		;;
+	-isc*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-lynx*)
+		os=-lynxos
+		;;
+	-ptx*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`
+		;;
+	-windowsnt*)
+		os=`echo $os | sed -e 's/windowsnt/winnt/'`
+		;;
+	-psos*)
+		os=-psos
+		;;
+	-mint | -mint[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+esac
+
+# Decode aliases for certain CPU-COMPANY combinations.
+case $basic_machine in
+	# Recognize the basic CPU types without company name.
+	# Some are omitted here because they have special meanings below.
+	1750a | 580 \
+	| a29k \
+	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
+	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
+	| am33_2.0 \
+	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr | avr32 \
+	| bfin \
+	| c4x | clipper \
+	| d10v | d30v | dlx | dsp16xx \
+	| fido | fr30 | frv \
+	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+	| i370 | i860 | i960 | ia64 \
+	| ip2k | iq2000 \
+	| lm32 \
+	| m32c | m32r | m32rle | m68000 | m68k | m88k \
+	| maxq | mb | microblaze | mcore | mep | metag \
+	| mips | mipsbe | mipseb | mipsel | mipsle \
+	| mips16 \
+	| mips64 | mips64el \
+	| mips64octeon | mips64octeonel \
+	| mips64orion | mips64orionel \
+	| mips64r5900 | mips64r5900el \
+	| mips64vr | mips64vrel \
+	| mips64vr4100 | mips64vr4100el \
+	| mips64vr4300 | mips64vr4300el \
+	| mips64vr5000 | mips64vr5000el \
+	| mips64vr5900 | mips64vr5900el \
+	| mipsisa32 | mipsisa32el \
+	| mipsisa32r2 | mipsisa32r2el \
+	| mipsisa64 | mipsisa64el \
+	| mipsisa64r2 | mipsisa64r2el \
+	| mipsisa64sb1 | mipsisa64sb1el \
+	| mipsisa64sr71k | mipsisa64sr71kel \
+	| mipstx39 | mipstx39el \
+	| mn10200 | mn10300 \
+	| moxie \
+	| mt \
+	| msp430 \
+	| nios | nios2 \
+	| ns16k | ns32k \
+	| or32 \
+	| pdp10 | pdp11 | pj | pjl \
+	| powerpc | powerpc64 | powerpc64le | powerpcle | ppcbe \
+	| pyramid \
+	| rx \
+	| score \
+	| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
+	| sh64 | sh64le \
+	| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \
+	| sparcv8 | sparcv9 | sparcv9b | sparcv9v \
+	| spu | strongarm \
+	| tahoe | thumb | tic4x | tic80 | tron \
+	| ubicom32 \
+	| v850 | v850e \
+	| we32k \
+	| x86 | xc16x | xscale | xscalee[bl] | xstormy16 | xtensa \
+	| z8k | z80)
+		basic_machine=$basic_machine-unknown
+		;;
+	m6811 | m68hc11 | m6812 | m68hc12 | picochip)
+		# Motorola 68HC11/12.
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
+		;;
+	ms1)
+		basic_machine=mt-unknown
+		;;
+
+	# We use `pc' rather than `unknown'
+	# because (1) that's what they normally are, and
+	# (2) the word "unknown" tends to confuse beginning users.
+	i*86 | x86_64)
+	  basic_machine=$basic_machine-pc
+	  ;;
+	# Object if more than one company name word.
+	*-*-*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+	# Recognize the basic CPU types with company name.
+	580-* \
+	| a29k-* \
+	| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \
+	| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \
+	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \
+	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
+	| avr-* | avr32-* \
+	| bfin-* | bs2000-* \
+	| c[123]* | c30-* | [cjt]90-* | c4x-* | c54x-* | c55x-* | c6x-* \
+	| clipper-* | craynv-* | cydra-* \
+	| d10v-* | d30v-* | dlx-* \
+	| elxsi-* \
+	| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \
+	| h8300-* | h8500-* \
+	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
+	| i*86-* | i860-* | i960-* | ia64-* \
+	| ip2k-* | iq2000-* \
+	| lm32-* \
+	| m32c-* | m32r-* | m32rle-* \
+	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
+	| m88110-* | m88k-* | maxq-* | mcore-* | metag-* | microblaze-* \
+	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
+	| mips16-* \
+	| mips64-* | mips64el-* \
+	| mips64octeon-* | mips64octeonel-* \
+	| mips64orion-* | mips64orionel-* \
+	| mips64r5900-* | mips64r5900el-* \
+	| mips64vr-* | mips64vrel-* \
+	| mips64vr4100-* | mips64vr4100el-* \
+	| mips64vr4300-* | mips64vr4300el-* \
+	| mips64vr5000-* | mips64vr5000el-* \
+	| mips64vr5900-* | mips64vr5900el-* \
+	| mipsisa32-* | mipsisa32el-* \
+	| mipsisa32r2-* | mipsisa32r2el-* \
+	| mipsisa64-* | mipsisa64el-* \
+	| mipsisa64r2-* | mipsisa64r2el-* \
+	| mipsisa64sb1-* | mipsisa64sb1el-* \
+	| mipsisa64sr71k-* | mipsisa64sr71kel-* \
+	| mipstx39-* | mipstx39el-* \
+	| mmix-* \
+	| mt-* \
+	| msp430-* \
+	| nios-* | nios2-* \
+	| none-* | np1-* | ns16k-* | ns32k-* \
+	| orion-* \
+	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
+	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* | ppcbe-* \
+	| pyramid-* \
+	| romp-* | rs6000-* | rx-* \
+	| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \
+	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
+	| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \
+	| sparclite-* \
+	| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | strongarm-* | sv1-* | sx?-* \
+	| tahoe-* | thumb-* \
+	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
+	| tile-* | tilegx-* \
+	| tron-* \
+	| ubicom32-* \
+	| v850-* | v850e-* | vax-* \
+	| we32k-* \
+	| x86-* | x86_64-* | xc16x-* | xps100-* | xscale-* | xscalee[bl]-* \
+	| xstormy16-* | xtensa*-* \
+	| ymp-* \
+	| z8k-* | z80-*)
+		;;
+	# Recognize the basic CPU types without company name, with glob match.
+	xtensa*)
+		basic_machine=$basic_machine-unknown
+		;;
+	# Recognize the various machine names and aliases which stand
+	# for a CPU type and a company and sometimes even an OS.
+	386bsd)
+		basic_machine=i386-unknown
+		os=-bsd
+		;;
+	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
+		basic_machine=m68000-att
+		;;
+	3b*)
+		basic_machine=we32k-att
+		;;
+	a29khif)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+    	abacus)
+		basic_machine=abacus-unknown
+		;;
+	adobe68k)
+		basic_machine=m68010-adobe
+		os=-scout
+		;;
+	alliant | fx80)
+		basic_machine=fx80-alliant
+		;;
+	altos | altos3068)
+		basic_machine=m68k-altos
+		;;
+	am29k)
+		basic_machine=a29k-none
+		os=-bsd
+		;;
+	amd64)
+		basic_machine=x86_64-pc
+		;;
+	amd64-*)
+		basic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	amdahl)
+		basic_machine=580-amdahl
+		os=-sysv
+		;;
+	amiga | amiga-*)
+		basic_machine=m68k-unknown
+		;;
+	amigaos | amigados)
+		basic_machine=m68k-unknown
+		os=-amigaos
+		;;
+	amigaunix | amix)
+		basic_machine=m68k-unknown
+		os=-sysv4
+		;;
+	apollo68)
+		basic_machine=m68k-apollo
+		os=-sysv
+		;;
+	apollo68bsd)
+		basic_machine=m68k-apollo
+		os=-bsd
+		;;
+	aros)
+		basic_machine=i386-pc
+		os=-aros
+		;;
+	aux)
+		basic_machine=m68k-apple
+		os=-aux
+		;;
+	balance)
+		basic_machine=ns32k-sequent
+		os=-dynix
+		;;
+	blackfin)
+		basic_machine=bfin-unknown
+		os=-linux
+		;;
+	blackfin-*)
+		basic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	bluegene*)
+		basic_machine=powerpc-ibm
+		os=-cnk
+		;;
+	c90)
+		basic_machine=c90-cray
+		os=-unicos
+		;;
+        cegcc)
+		basic_machine=arm-unknown
+		os=-cegcc
+		;;
+	convex-c1)
+		basic_machine=c1-convex
+		os=-bsd
+		;;
+	convex-c2)
+		basic_machine=c2-convex
+		os=-bsd
+		;;
+	convex-c32)
+		basic_machine=c32-convex
+		os=-bsd
+		;;
+	convex-c34)
+		basic_machine=c34-convex
+		os=-bsd
+		;;
+	convex-c38)
+		basic_machine=c38-convex
+		os=-bsd
+		;;
+	cray | j90)
+		basic_machine=j90-cray
+		os=-unicos
+		;;
+	craynv)
+		basic_machine=craynv-cray
+		os=-unicosmp
+		;;
+	cr16)
+		basic_machine=cr16-unknown
+		os=-elf
+		;;
+	crds | unos)
+		basic_machine=m68k-crds
+		;;
+	crisv32 | crisv32-* | etraxfs*)
+		basic_machine=crisv32-axis
+		;;
+	cris | cris-* | etrax*)
+		basic_machine=cris-axis
+		;;
+	crx)
+		basic_machine=crx-unknown
+		os=-elf
+		;;
+	da30 | da30-*)
+		basic_machine=m68k-da30
+		;;
+	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
+		basic_machine=mips-dec
+		;;
+	decsystem10* | dec10*)
+		basic_machine=pdp10-dec
+		os=-tops10
+		;;
+	decsystem20* | dec20*)
+		basic_machine=pdp10-dec
+		os=-tops20
+		;;
+	delta | 3300 | motorola-3300 | motorola-delta \
+	      | 3300-motorola | delta-motorola)
+		basic_machine=m68k-motorola
+		;;
+	delta88)
+		basic_machine=m88k-motorola
+		os=-sysv3
+		;;
+	dicos)
+		basic_machine=i686-pc
+		os=-dicos
+		;;
+	djgpp)
+		basic_machine=i586-pc
+		os=-msdosdjgpp
+		;;
+	dpx20 | dpx20-*)
+		basic_machine=rs6000-bull
+		os=-bosx
+		;;
+	dpx2* | dpx2*-bull)
+		basic_machine=m68k-bull
+		os=-sysv3
+		;;
+	ebmon29k)
+		basic_machine=a29k-amd
+		os=-ebmon
+		;;
+	elxsi)
+		basic_machine=elxsi-elxsi
+		os=-bsd
+		;;
+	encore | umax | mmax)
+		basic_machine=ns32k-encore
+		;;
+	es1800 | OSE68k | ose68k | ose | OSE)
+		basic_machine=m68k-ericsson
+		os=-ose
+		;;
+	fx2800)
+		basic_machine=i860-alliant
+		;;
+	genix)
+		basic_machine=ns32k-ns
+		;;
+	gmicro)
+		basic_machine=tron-gmicro
+		os=-sysv
+		;;
+	go32)
+		basic_machine=i386-pc
+		os=-go32
+		;;
+	h3050r* | hiux*)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	h8300hms)
+		basic_machine=h8300-hitachi
+		os=-hms
+		;;
+	h8300xray)
+		basic_machine=h8300-hitachi
+		os=-xray
+		;;
+	h8500hms)
+		basic_machine=h8500-hitachi
+		os=-hms
+		;;
+	harris)
+		basic_machine=m88k-harris
+		os=-sysv3
+		;;
+	hp300-*)
+		basic_machine=m68k-hp
+		;;
+	hp300bsd)
+		basic_machine=m68k-hp
+		os=-bsd
+		;;
+	hp300hpux)
+		basic_machine=m68k-hp
+		os=-hpux
+		;;
+	hp3k9[0-9][0-9] | hp9[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k2[0-9][0-9] | hp9k31[0-9])
+		basic_machine=m68000-hp
+		;;
+	hp9k3[2-9][0-9])
+		basic_machine=m68k-hp
+		;;
+	hp9k6[0-9][0-9] | hp6[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k7[0-79][0-9] | hp7[0-79][0-9])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k78[0-9] | hp78[0-9])
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][13679] | hp8[0-9][13679])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][0-9] | hp8[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hppa-next)
+		os=-nextstep3
+		;;
+	hppaosf)
+		basic_machine=hppa1.1-hp
+		os=-osf
+		;;
+	hppro)
+		basic_machine=hppa1.1-hp
+		os=-proelf
+		;;
+	i370-ibm* | ibm*)
+		basic_machine=i370-ibm
+		;;
+# I'm not sure what "Sysv32" means.  Should this be sysv3.2?
+	i*86v32)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv32
+		;;
+	i*86v4*)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv4
+		;;
+	i*86v)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv
+		;;
+	i*86sol2)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-solaris2
+		;;
+	i386mach)
+		basic_machine=i386-mach
+		os=-mach
+		;;
+	i386-vsta | vsta)
+		basic_machine=i386-unknown
+		os=-vsta
+		;;
+	iris | iris4d)
+		basic_machine=mips-sgi
+		case $os in
+		    -irix*)
+			;;
+		    *)
+			os=-irix4
+			;;
+		esac
+		;;
+	isi68 | isi)
+		basic_machine=m68k-isi
+		os=-sysv
+		;;
+	m68knommu)
+		basic_machine=m68k-unknown
+		os=-linux
+		;;
+	m68knommu-*)
+		basic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	m88k-omron*)
+		basic_machine=m88k-omron
+		;;
+	magnum | m3230)
+		basic_machine=mips-mips
+		os=-sysv
+		;;
+	merlin)
+		basic_machine=ns32k-utek
+		os=-sysv
+		;;
+        microblaze)
+		basic_machine=microblaze-xilinx
+		;;
+	mingw32)
+		basic_machine=i386-pc
+		os=-mingw32
+		;;
+	mingw32ce)
+		basic_machine=arm-unknown
+		os=-mingw32ce
+		;;
+	miniframe)
+		basic_machine=m68000-convergent
+		;;
+	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+	mips3*-*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
+		;;
+	mips3*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown
+		;;
+	monitor)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	morphos)
+		basic_machine=powerpc-unknown
+		os=-morphos
+		;;
+	msdos)
+		basic_machine=i386-pc
+		os=-msdos
+		;;
+	ms1-*)
+		basic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`
+		;;
+	mvs)
+		basic_machine=i370-ibm
+		os=-mvs
+		;;
+	ncr3000)
+		basic_machine=i486-ncr
+		os=-sysv4
+		;;
+	netbsd386)
+		basic_machine=i386-unknown
+		os=-netbsd
+		;;
+	netwinder)
+		basic_machine=armv4l-rebel
+		os=-linux
+		;;
+	news | news700 | news800 | news900)
+		basic_machine=m68k-sony
+		os=-newsos
+		;;
+	news1000)
+		basic_machine=m68030-sony
+		os=-newsos
+		;;
+	news-3600 | risc-news)
+		basic_machine=mips-sony
+		os=-newsos
+		;;
+	necv70)
+		basic_machine=v70-nec
+		os=-sysv
+		;;
+	next | m*-next )
+		basic_machine=m68k-next
+		case $os in
+		    -nextstep* )
+			;;
+		    -ns2*)
+		      os=-nextstep2
+			;;
+		    *)
+		      os=-nextstep3
+			;;
+		esac
+		;;
+	nh3000)
+		basic_machine=m68k-harris
+		os=-cxux
+		;;
+	nh[45]000)
+		basic_machine=m88k-harris
+		os=-cxux
+		;;
+	nindy960)
+		basic_machine=i960-intel
+		os=-nindy
+		;;
+	mon960)
+		basic_machine=i960-intel
+		os=-mon960
+		;;
+	nonstopux)
+		basic_machine=mips-compaq
+		os=-nonstopux
+		;;
+	np1)
+		basic_machine=np1-gould
+		;;
+	nsr-tandem)
+		basic_machine=nsr-tandem
+		;;
+	op50n-* | op60c-*)
+		basic_machine=hppa1.1-oki
+		os=-proelf
+		;;
+	openrisc | openrisc-*)
+		basic_machine=or32-unknown
+		;;
+	os400)
+		basic_machine=powerpc-ibm
+		os=-os400
+		;;
+	OSE68000 | ose68000)
+		basic_machine=m68000-ericsson
+		os=-ose
+		;;
+	os68k)
+		basic_machine=m68k-none
+		os=-os68k
+		;;
+	pa-hitachi)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	paragon)
+		basic_machine=i860-intel
+		os=-osf
+		;;
+	parisc)
+		basic_machine=hppa-unknown
+		os=-linux
+		;;
+	parisc-*)
+		basic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`
+		os=-linux
+		;;
+	pbd)
+		basic_machine=sparc-tti
+		;;
+	pbb)
+		basic_machine=m68k-tti
+		;;
+	pc532 | pc532-*)
+		basic_machine=ns32k-pc532
+		;;
+	pc98)
+		basic_machine=i386-pc
+		;;
+	pc98-*)
+		basic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium | p5 | k5 | k6 | nexgen | viac3)
+		basic_machine=i586-pc
+		;;
+	pentiumpro | p6 | 6x86 | athlon | athlon_*)
+		basic_machine=i686-pc
+		;;
+	pentiumii | pentium2 | pentiumiii | pentium3)
+		basic_machine=i686-pc
+		;;
+	pentium4)
+		basic_machine=i786-pc
+		;;
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
+		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumpro-* | p6-* | 6x86-* | athlon-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium4-*)
+		basic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pn)
+		basic_machine=pn-gould
+		;;
+	power)	basic_machine=power-ibm
+		;;
+	ppc)	basic_machine=powerpc-unknown
+		;;
+	ppc-*)	basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppcle | powerpclittle | ppc-le | powerpc-little)
+		basic_machine=powerpcle-unknown
+		;;
+	ppcle-* | powerpclittle-*)
+		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64)	basic_machine=powerpc64-unknown
+		;;
+	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
+		basic_machine=powerpc64le-unknown
+		;;
+	ppc64le-* | powerpc64little-*)
+		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ps2)
+		basic_machine=i386-ibm
+		;;
+	pw32)
+		basic_machine=i586-unknown
+		os=-pw32
+		;;
+	rdos)
+		basic_machine=i386-pc
+		os=-rdos
+		;;
+	rom68k)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	rm[46]00)
+		basic_machine=mips-siemens
+		;;
+	rtpc | rtpc-*)
+		basic_machine=romp-ibm
+		;;
+	s390 | s390-*)
+		basic_machine=s390-ibm
+		;;
+	s390x | s390x-*)
+		basic_machine=s390x-ibm
+		;;
+	sa29200)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	sb1)
+		basic_machine=mipsisa64sb1-unknown
+		;;
+	sb1el)
+		basic_machine=mipsisa64sb1el-unknown
+		;;
+	sde)
+		basic_machine=mipsisa32-sde
+		os=-elf
+		;;
+	sei)
+		basic_machine=mips-sei
+		os=-seiux
+		;;
+	sequent)
+		basic_machine=i386-sequent
+		;;
+	sh)
+		basic_machine=sh-hitachi
+		os=-hms
+		;;
+	sh5el)
+		basic_machine=sh5le-unknown
+		;;
+	sh64)
+		basic_machine=sh64-unknown
+		;;
+	sparclite-wrs | simso-wrs)
+		basic_machine=sparclite-wrs
+		os=-vxworks
+		;;
+	sps7)
+		basic_machine=m68k-bull
+		os=-sysv2
+		;;
+	spur)
+		basic_machine=spur-unknown
+		;;
+	st2000)
+		basic_machine=m68k-tandem
+		;;
+	stratus)
+		basic_machine=i860-stratus
+		os=-sysv4
+		;;
+	sun2)
+		basic_machine=m68000-sun
+		;;
+	sun2os3)
+		basic_machine=m68000-sun
+		os=-sunos3
+		;;
+	sun2os4)
+		basic_machine=m68000-sun
+		os=-sunos4
+		;;
+	sun3os3)
+		basic_machine=m68k-sun
+		os=-sunos3
+		;;
+	sun3os4)
+		basic_machine=m68k-sun
+		os=-sunos4
+		;;
+	sun4os3)
+		basic_machine=sparc-sun
+		os=-sunos3
+		;;
+	sun4os4)
+		basic_machine=sparc-sun
+		os=-sunos4
+		;;
+	sun4sol2)
+		basic_machine=sparc-sun
+		os=-solaris2
+		;;
+	sun3 | sun3-*)
+		basic_machine=m68k-sun
+		;;
+	sun4)
+		basic_machine=sparc-sun
+		;;
+	sun386 | sun386i | roadrunner)
+		basic_machine=i386-sun
+		;;
+	sv1)
+		basic_machine=sv1-cray
+		os=-unicos
+		;;
+	symmetry)
+		basic_machine=i386-sequent
+		os=-dynix
+		;;
+	t3e)
+		basic_machine=alphaev5-cray
+		os=-unicos
+		;;
+	t90)
+		basic_machine=t90-cray
+		os=-unicos
+		;;
+	tic54x | c54x*)
+		basic_machine=tic54x-unknown
+		os=-coff
+		;;
+	tic55x | c55x*)
+		basic_machine=tic55x-unknown
+		os=-coff
+		;;
+	tic6x | c6x*)
+		basic_machine=tic6x-unknown
+		os=-coff
+		;;
+        # This must be matched before tile*.
+        tilegx*)
+		basic_machine=tilegx-unknown
+		os=-linux-gnu
+		;;
+	tile*)
+		basic_machine=tile-unknown
+		os=-linux-gnu
+		;;
+	tx39)
+		basic_machine=mipstx39-unknown
+		;;
+	tx39el)
+		basic_machine=mipstx39el-unknown
+		;;
+	toad1)
+		basic_machine=pdp10-xkl
+		os=-tops20
+		;;
+	tower | tower-32)
+		basic_machine=m68k-ncr
+		;;
+	tpf)
+		basic_machine=s390x-ibm
+		os=-tpf
+		;;
+	udi29k)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	ultra3)
+		basic_machine=a29k-nyu
+		os=-sym1
+		;;
+	v810 | necv810)
+		basic_machine=v810-nec
+		os=-none
+		;;
+	vaxv)
+		basic_machine=vax-dec
+		os=-sysv
+		;;
+	vms)
+		basic_machine=vax-dec
+		os=-vms
+		;;
+	vpp*|vx|vx-*)
+		basic_machine=f301-fujitsu
+		;;
+	vxworks960)
+		basic_machine=i960-wrs
+		os=-vxworks
+		;;
+	vxworks68)
+		basic_machine=m68k-wrs
+		os=-vxworks
+		;;
+	vxworks29k)
+		basic_machine=a29k-wrs
+		os=-vxworks
+		;;
+	w65*)
+		basic_machine=w65-wdc
+		os=-none
+		;;
+	w89k-*)
+		basic_machine=hppa1.1-winbond
+		os=-proelf
+		;;
+	xbox)
+		basic_machine=i686-pc
+		os=-mingw32
+		;;
+	xps | xps100)
+		basic_machine=xps100-honeywell
+		;;
+	ymp)
+		basic_machine=ymp-cray
+		os=-unicos
+		;;
+	z8k-*-coff)
+		basic_machine=z8k-unknown
+		os=-sim
+		;;
+	z80-*-coff)
+		basic_machine=z80-unknown
+		os=-sim
+		;;
+	none)
+		basic_machine=none-none
+		os=-none
+		;;
+
+# Here we handle the default manufacturer of certain CPU types.  It is in
+# some cases the only manufacturer, in others, it is the most popular.
+	w89k)
+		basic_machine=hppa1.1-winbond
+		;;
+	op50n)
+		basic_machine=hppa1.1-oki
+		;;
+	op60c)
+		basic_machine=hppa1.1-oki
+		;;
+	romp)
+		basic_machine=romp-ibm
+		;;
+	mmix)
+		basic_machine=mmix-knuth
+		;;
+	rs6000)
+		basic_machine=rs6000-ibm
+		;;
+	vax)
+		basic_machine=vax-dec
+		;;
+	pdp10)
+		# there are many clones, so DEC is not a safe bet
+		basic_machine=pdp10-unknown
+		;;
+	pdp11)
+		basic_machine=pdp11-dec
+		;;
+	we32k)
+		basic_machine=we32k-att
+		;;
+	sh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)
+		basic_machine=sh-unknown
+		;;
+	sparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)
+		basic_machine=sparc-sun
+		;;
+	cydra)
+		basic_machine=cydra-cydrome
+		;;
+	orion)
+		basic_machine=orion-highlevel
+		;;
+	orion105)
+		basic_machine=clipper-highlevel
+		;;
+	mac | mpw | mac-mpw)
+		basic_machine=m68k-apple
+		;;
+	pmac | pmac-mpw)
+		basic_machine=powerpc-apple
+		;;
+	*-unknown)
+		# Make sure to match an already-canonicalized machine name.
+		;;
+	*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+esac
+
+# Here we canonicalize certain aliases for manufacturers.
+case $basic_machine in
+	*-digital*)
+		basic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`
+		;;
+	*-commodore*)
+		basic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`
+		;;
+	*)
+		;;
+esac
+
+# Decode manufacturer-specific aliases for certain operating systems.
+
+if [ x"$os" != x"" ]
+then
+case $os in
+        # First match some system type aliases
+        # that might get confused with valid system types.
+	# -solaris* is a basic system type, with this one exception.
+        -auroraux)
+	        os=-auroraux
+		;;
+	-solaris1 | -solaris1.*)
+		os=`echo $os | sed -e 's|solaris1|sunos4|'`
+		;;
+	-solaris)
+		os=-solaris2
+		;;
+	-svr4*)
+		os=-sysv4
+		;;
+	-unixware*)
+		os=-sysv4.2uw
+		;;
+	-gnu/linux*)
+		os=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`
+		;;
+	# First accept the basic system types.
+	# The portable systems comes first.
+	# Each alternative MUST END IN A *, to match a version number.
+	# -sysv* is not here because it comes later, after sysvr4.
+	-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \
+	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\
+	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
+	      | -sym* | -kopensolaris* \
+	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
+	      | -aos* | -aros* \
+	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
+	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
+	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
+	      | -openbsd* | -solidbsd* \
+	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
+	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
+	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
+	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
+	      | -chorusos* | -chorusrdb* | -cegcc* \
+	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
+	      | -mingw32* | -linux-gnu* | -linux-newlib* | -linux-uclibc* \
+	      | -uxpv* | -beos* | -mpeix* | -udk* \
+	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
+	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
+	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
+	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
+	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
+	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
+	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es*)
+	# Remember, each alternative MUST END IN *, to match a version number.
+		;;
+	-qnx*)
+		case $basic_machine in
+		    x86-* | i*86-*)
+			;;
+		    *)
+			os=-nto$os
+			;;
+		esac
+		;;
+	-nto-qnx*)
+		;;
+	-nto*)
+		os=`echo $os | sed -e 's|nto|nto-qnx|'`
+		;;
+	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
+	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \
+	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
+		;;
+	-mac*)
+		os=`echo $os | sed -e 's|mac|macos|'`
+		;;
+	-linux-dietlibc)
+		os=-linux-dietlibc
+		;;
+	-linux*)
+		os=`echo $os | sed -e 's|linux|linux-gnu|'`
+		;;
+	-sunos5*)
+		os=`echo $os | sed -e 's|sunos5|solaris2|'`
+		;;
+	-sunos6*)
+		os=`echo $os | sed -e 's|sunos6|solaris3|'`
+		;;
+	-opened*)
+		os=-openedition
+		;;
+        -os400*)
+		os=-os400
+		;;
+	-wince*)
+		os=-wince
+		;;
+	-osfrose*)
+		os=-osfrose
+		;;
+	-osf*)
+		os=-osf
+		;;
+	-utek*)
+		os=-bsd
+		;;
+	-dynix*)
+		os=-bsd
+		;;
+	-acis*)
+		os=-aos
+		;;
+	-atheos*)
+		os=-atheos
+		;;
+	-syllable*)
+		os=-syllable
+		;;
+	-386bsd)
+		os=-bsd
+		;;
+	-ctix* | -uts*)
+		os=-sysv
+		;;
+	-nova*)
+		os=-rtmk-nova
+		;;
+	-ns2 )
+		os=-nextstep2
+		;;
+	-nsk*)
+		os=-nsk
+		;;
+	# Preserve the version number of sinix5.
+	-sinix5.*)
+		os=`echo $os | sed -e 's|sinix|sysv|'`
+		;;
+	-sinix*)
+		os=-sysv4
+		;;
+        -tpf*)
+		os=-tpf
+		;;
+	-triton*)
+		os=-sysv3
+		;;
+	-oss*)
+		os=-sysv3
+		;;
+	-svr4)
+		os=-sysv4
+		;;
+	-svr3)
+		os=-sysv3
+		;;
+	-sysvr4)
+		os=-sysv4
+		;;
+	# This must come after -sysvr4.
+	-sysv*)
+		;;
+	-ose*)
+		os=-ose
+		;;
+	-es1800*)
+		os=-ose
+		;;
+	-xenix)
+		os=-xenix
+		;;
+	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+		os=-mint
+		;;
+	-aros*)
+		os=-aros
+		;;
+	-kaos*)
+		os=-kaos
+		;;
+	-zvmoe)
+		os=-zvmoe
+		;;
+	-dicos*)
+		os=-dicos
+		;;
+        -nacl*)
+	        ;;
+	-none)
+		;;
+	*)
+		# Get rid of the `-' at the beginning of $os.
+		os=`echo $os | sed 's/[^-]*-//'`
+		echo Invalid configuration \`$1\': system \`$os\' not recognized 1>&2
+		exit 1
+		;;
+esac
+else
+
+# Here we handle the default operating systems that come with various machines.
+# The value should be what the vendor currently ships out the door with their
+# machine or put another way, the most popular os provided with the machine.
+
+# Note that if you're going to try to match "-MANUFACTURER" here (say,
+# "-sun"), then you have to tell the case statement up towards the top
+# that MANUFACTURER isn't an operating system.  Otherwise, code above
+# will signal an error saying that MANUFACTURER isn't an operating
+# system, and we'll never get to this point.
+
+case $basic_machine in
+        score-*)
+		os=-elf
+		;;
+        spu-*)
+		os=-elf
+		;;
+	*-acorn)
+		os=-riscix1.2
+		;;
+	arm*-rebel)
+		os=-linux
+		;;
+	arm*-semi)
+		os=-aout
+		;;
+        c4x-* | tic4x-*)
+        	os=-coff
+		;;
+	# This must come before the *-dec entry.
+	pdp10-*)
+		os=-tops20
+		;;
+	pdp11-*)
+		os=-none
+		;;
+	*-dec | vax-*)
+		os=-ultrix4.2
+		;;
+	m68*-apollo)
+		os=-domain
+		;;
+	i386-sun)
+		os=-sunos4.0.2
+		;;
+	m68000-sun)
+		os=-sunos3
+		# This also exists in the configure program, but was not the
+		# default.
+		# os=-sunos4
+		;;
+	m68*-cisco)
+		os=-aout
+		;;
+        mep-*)
+		os=-elf
+		;;
+	mips*-cisco)
+		os=-elf
+		;;
+	mips*-*)
+		os=-elf
+		;;
+	or32-*)
+		os=-coff
+		;;
+	*-tti)	# must be before sparc entry or we get the wrong os.
+		os=-sysv3
+		;;
+	sparc-* | *-sun)
+		os=-sunos4.1.1
+		;;
+	*-be)
+		os=-beos
+		;;
+	*-haiku)
+		os=-haiku
+		;;
+	*-ibm)
+		os=-aix
+		;;
+    	*-knuth)
+		os=-mmixware
+		;;
+	*-wec)
+		os=-proelf
+		;;
+	*-winbond)
+		os=-proelf
+		;;
+	*-oki)
+		os=-proelf
+		;;
+	*-hp)
+		os=-hpux
+		;;
+	*-hitachi)
+		os=-hiux
+		;;
+	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
+		os=-sysv
+		;;
+	*-cbm)
+		os=-amigaos
+		;;
+	*-dg)
+		os=-dgux
+		;;
+	*-dolphin)
+		os=-sysv3
+		;;
+	m68k-ccur)
+		os=-rtu
+		;;
+	m88k-omron*)
+		os=-luna
+		;;
+	*-next )
+		os=-nextstep
+		;;
+	*-sequent)
+		os=-ptx
+		;;
+	*-crds)
+		os=-unos
+		;;
+	*-ns)
+		os=-genix
+		;;
+	i370-*)
+		os=-mvs
+		;;
+	*-next)
+		os=-nextstep3
+		;;
+	*-gould)
+		os=-sysv
+		;;
+	*-highlevel)
+		os=-bsd
+		;;
+	*-encore)
+		os=-bsd
+		;;
+	*-sgi)
+		os=-irix
+		;;
+	*-siemens)
+		os=-sysv4
+		;;
+	*-masscomp)
+		os=-rtu
+		;;
+	f30[01]-fujitsu | f700-fujitsu)
+		os=-uxpv
+		;;
+	*-rom68k)
+		os=-coff
+		;;
+	*-*bug)
+		os=-coff
+		;;
+	*-apple)
+		os=-macos
+		;;
+	*-atari*)
+		os=-mint
+		;;
+	*)
+		os=-none
+		;;
+esac
+fi
+
+# Here we handle the case where we know the os, and the CPU type, but not the
+# manufacturer.  We pick the logical manufacturer.
+vendor=unknown
+case $basic_machine in
+	*-unknown)
+		case $os in
+			-riscix*)
+				vendor=acorn
+				;;
+			-sunos*)
+				vendor=sun
+				;;
+			-cnk*|-aix*)
+				vendor=ibm
+				;;
+			-beos*)
+				vendor=be
+				;;
+			-hpux*)
+				vendor=hp
+				;;
+			-mpeix*)
+				vendor=hp
+				;;
+			-hiux*)
+				vendor=hitachi
+				;;
+			-unos*)
+				vendor=crds
+				;;
+			-dgux*)
+				vendor=dg
+				;;
+			-luna*)
+				vendor=omron
+				;;
+			-genix*)
+				vendor=ns
+				;;
+			-mvs* | -opened*)
+				vendor=ibm
+				;;
+			-os400*)
+				vendor=ibm
+				;;
+			-ptx*)
+				vendor=sequent
+				;;
+			-tpf*)
+				vendor=ibm
+				;;
+			-vxsim* | -vxworks* | -windiss*)
+				vendor=wrs
+				;;
+			-aux*)
+				vendor=apple
+				;;
+			-hms*)
+				vendor=hitachi
+				;;
+			-mpw* | -macos*)
+				vendor=apple
+				;;
+			-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+				vendor=atari
+				;;
+			-vos*)
+				vendor=stratus
+				;;
+		esac
+		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
+		;;
+esac
+
+echo $basic_machine$os
+exit
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
diff --git a/mpc/configure b/mpc/configure
new file mode 100755
index 0000000..af06d7d
--- /dev/null
+++ b/mpc/configure
@@ -0,0 +1,14712 @@
+#! /bin/sh
+# Guess values for system-dependent variables and create Makefiles.
+# Generated by GNU Autoconf 2.67 for mpc 0.9.
+#
+# Report bugs to <mpc-discuss@lists.gforge.inria.fr>.
+#
+#
+# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
+# 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010 Free Software
+# Foundation, Inc.
+#
+#
+# This configure script is free software; the Free Software Foundation
+# gives unlimited permission to copy, distribute and modify it.
+## -------------------- ##
+## M4sh Initialization. ##
+## -------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in #(
+  *posix*) :
+    set -o posix ;; #(
+  *) :
+     ;;
+esac
+fi
+
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+# Prefer a ksh shell builtin over an external printf program on Solaris,
+# but without wasting forks for bash or zsh.
+if test -z "$BASH_VERSION$ZSH_VERSION" \
+    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='print -r --'
+  as_echo_n='print -rn --'
+elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in #(
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in #((
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+  done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  exit 1
+fi
+
+# Unset variables that we do not need and which cause bugs (e.g. in
+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
+# suppresses any "Segmentation fault" message there.  '((' could
+# trigger a bug in pdksh 5.2.14.
+for as_var in BASH_ENV ENV MAIL MAILPATH
+do eval test x\${$as_var+set} = xset \
+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test "x$CONFIG_SHELL" = x; then
+  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '\${1+\"\$@\"}'='\"\$@\"'
+  setopt NO_GLOB_SUBST
+else
+  case \`(set -o) 2>/dev/null\` in #(
+  *posix*) :
+    set -o posix ;; #(
+  *) :
+     ;;
+esac
+fi
+"
+  as_required="as_fn_return () { (exit \$1); }
+as_fn_success () { as_fn_return 0; }
+as_fn_failure () { as_fn_return 1; }
+as_fn_ret_success () { return 0; }
+as_fn_ret_failure () { return 1; }
+
+exitcode=0
+as_fn_success || { exitcode=1; echo as_fn_success failed.; }
+as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
+as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
+as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
+if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :
+
+else
+  exitcode=1; echo positional parameters were not saved.
+fi
+test x\$exitcode = x0 || exit 1"
+  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
+  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
+  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
+  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
+test \$(( 1 + 1 )) = 2 || exit 1"
+  if (eval "$as_required") 2>/dev/null; then :
+  as_have_required=yes
+else
+  as_have_required=no
+fi
+  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :
+
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+as_found=false
+for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  as_found=:
+  case $as_dir in #(
+	 /*)
+	   for as_base in sh bash ksh sh5; do
+	     # Try only shells that exist, to save several forks.
+	     as_shell=$as_dir/$as_base
+	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
+		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
+  CONFIG_SHELL=$as_shell as_have_required=yes
+		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
+  break 2
+fi
+fi
+	   done;;
+       esac
+  as_found=false
+done
+$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
+	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
+  CONFIG_SHELL=$SHELL as_have_required=yes
+fi; }
+IFS=$as_save_IFS
+
+
+      if test "x$CONFIG_SHELL" != x; then :
+  # We cannot yet assume a decent shell, so we have to provide a
+	# neutralization value for shells without unset; and this also
+	# works around shells that cannot unset nonexistent variables.
+	BASH_ENV=/dev/null
+	ENV=/dev/null
+	(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
+	export CONFIG_SHELL
+	exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
+fi
+
+    if test x$as_have_required = xno; then :
+  $as_echo "$0: This script requires a shell more modern than all"
+  $as_echo "$0: the shells that I found on your system."
+  if test x${ZSH_VERSION+set} = xset ; then
+    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
+    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
+  else
+    $as_echo "$0: Please tell bug-autoconf@gnu.org and
+$0: mpc-discuss@lists.gforge.inria.fr about your system,
+$0: including any error possibly output before this
+$0: message. Then install a modern shell, or manually run
+$0: the script under such a shell if you do have one."
+  fi
+  exit 1
+fi
+fi
+fi
+SHELL=${CONFIG_SHELL-/bin/sh}
+export SHELL
+# Unset more variables known to interfere with behavior of common tools.
+CLICOLOR_FORCE= GREP_OPTIONS=
+unset CLICOLOR_FORCE GREP_OPTIONS
+
+## --------------------- ##
+## M4sh Shell Functions. ##
+## --------------------- ##
+# as_fn_unset VAR
+# ---------------
+# Portably unset VAR.
+as_fn_unset ()
+{
+  { eval $1=; unset $1;}
+}
+as_unset=as_fn_unset
+
+# as_fn_set_status STATUS
+# -----------------------
+# Set $? to STATUS, without forking.
+as_fn_set_status ()
+{
+  return $1
+} # as_fn_set_status
+
+# as_fn_exit STATUS
+# -----------------
+# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
+as_fn_exit ()
+{
+  set +e
+  as_fn_set_status $1
+  exit $1
+} # as_fn_exit
+
+# as_fn_mkdir_p
+# -------------
+# Create "$as_dir" as a directory, including parents if necessary.
+as_fn_mkdir_p ()
+{
+
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || eval $as_mkdir_p || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"
+
+
+} # as_fn_mkdir_p
+# as_fn_append VAR VALUE
+# ----------------------
+# Append the text in VALUE to the end of the definition contained in VAR. Take
+# advantage of any shell optimizations that allow amortized linear growth over
+# repeated appends, instead of the typical quadratic growth present in naive
+# implementations.
+if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
+  eval 'as_fn_append ()
+  {
+    eval $1+=\$2
+  }'
+else
+  as_fn_append ()
+  {
+    eval $1=\$$1\$2
+  }
+fi # as_fn_append
+
+# as_fn_arith ARG...
+# ------------------
+# Perform arithmetic evaluation on the ARGs, and store the result in the
+# global $as_val. Take advantage of shells that can avoid forks. The arguments
+# must be portable across $(()) and expr.
+if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
+  eval 'as_fn_arith ()
+  {
+    as_val=$(( $* ))
+  }'
+else
+  as_fn_arith ()
+  {
+    as_val=`expr "$@" || test $? -eq 1`
+  }
+fi # as_fn_arith
+
+
+# as_fn_error STATUS ERROR [LINENO LOG_FD]
+# ----------------------------------------
+# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
+# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
+# script with STATUS, using 1 if that was 0.
+as_fn_error ()
+{
+  as_status=$1; test $as_status -eq 0 && as_status=1
+  if test "$4"; then
+    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
+  fi
+  $as_echo "$as_me: error: $2" >&2
+  as_fn_exit $as_status
+} # as_fn_error
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+
+  as_lineno_1=$LINENO as_lineno_1a=$LINENO
+  as_lineno_2=$LINENO as_lineno_2a=$LINENO
+  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
+  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
+  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
+    sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
+      N
+      :loop
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
+      t loop
+      s/-\n.*//
+    ' >$as_me.lineno &&
+  chmod +x "$as_me.lineno" ||
+    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
+  # Exit status is that of the last command.
+  exit
+}
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in #(((((
+-n*)
+  case `echo 'xy\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  xy)  ECHO_C='\c';;
+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
+       ECHO_T='	';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p='mkdir -p "$as_dir"'
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in #(
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+
+# Check that we are running under the correct shell.
+SHELL=${CONFIG_SHELL-/bin/sh}
+
+case X$lt_ECHO in
+X*--fallback-echo)
+  # Remove one level of quotation (which was required for Make).
+  ECHO=`echo "$lt_ECHO" | sed 's,\\\\\$\\$0,'$0','`
+  ;;
+esac
+
+ECHO=${lt_ECHO-echo}
+if test "X$1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X$1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' ; then
+  # Yippee, $ECHO works!
+  :
+else
+  # Restart under the correct shell.
+  exec $SHELL "$0" --no-reexec ${1+"$@"}
+fi
+
+if test "X$1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<_LT_EOF
+$*
+_LT_EOF
+  exit 0
+fi
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test -z "$lt_ECHO"; then
+  if test "X${echo_test_string+set}" != Xset; then
+    # find a string as large as possible, as long as the shell can cope with it
+    for cmd in 'sed 50q "$0"' 'sed 20q "$0"' 'sed 10q "$0"' 'sed 2q "$0"' 'echo test'; do
+      # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...
+      if { echo_test_string=`eval $cmd`; } 2>/dev/null &&
+	 { test "X$echo_test_string" = "X$echo_test_string"; } 2>/dev/null
+      then
+        break
+      fi
+    done
+  fi
+
+  if test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' &&
+     echo_testing_string=`{ $ECHO "$echo_test_string"; } 2>/dev/null` &&
+     test "X$echo_testing_string" = "X$echo_test_string"; then
+    :
+  else
+    # The Solaris, AIX, and Digital Unix default echo programs unquote
+    # backslashes.  This makes it impossible to quote backslashes using
+    #   echo "$something" | sed 's/\\/\\\\/g'
+    #
+    # So, first we look for a working echo in the user's PATH.
+
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for dir in $PATH /usr/ucb; do
+      IFS="$lt_save_ifs"
+      if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&
+         test "X`($dir/echo '\t') 2>/dev/null`" = 'X\t' &&
+         echo_testing_string=`($dir/echo "$echo_test_string") 2>/dev/null` &&
+         test "X$echo_testing_string" = "X$echo_test_string"; then
+        ECHO="$dir/echo"
+        break
+      fi
+    done
+    IFS="$lt_save_ifs"
+
+    if test "X$ECHO" = Xecho; then
+      # We didn't find a better echo, so look for alternatives.
+      if test "X`{ print -r '\t'; } 2>/dev/null`" = 'X\t' &&
+         echo_testing_string=`{ print -r "$echo_test_string"; } 2>/dev/null` &&
+         test "X$echo_testing_string" = "X$echo_test_string"; then
+        # This shell has a builtin print -r that does the trick.
+        ECHO='print -r'
+      elif { test -f /bin/ksh || test -f /bin/ksh$ac_exeext; } &&
+	   test "X$CONFIG_SHELL" != X/bin/ksh; then
+        # If we have ksh, try running configure again with it.
+        ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
+        export ORIGINAL_CONFIG_SHELL
+        CONFIG_SHELL=/bin/ksh
+        export CONFIG_SHELL
+        exec $CONFIG_SHELL "$0" --no-reexec ${1+"$@"}
+      else
+        # Try using printf.
+        ECHO='printf %s\n'
+        if test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' &&
+	   echo_testing_string=`{ $ECHO "$echo_test_string"; } 2>/dev/null` &&
+	   test "X$echo_testing_string" = "X$echo_test_string"; then
+	  # Cool, printf works
+	  :
+        elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL "$0" --fallback-echo '\t') 2>/dev/null` &&
+	     test "X$echo_testing_string" = 'X\t' &&
+	     echo_testing_string=`($ORIGINAL_CONFIG_SHELL "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	     test "X$echo_testing_string" = "X$echo_test_string"; then
+	  CONFIG_SHELL=$ORIGINAL_CONFIG_SHELL
+	  export CONFIG_SHELL
+	  SHELL="$CONFIG_SHELL"
+	  export SHELL
+	  ECHO="$CONFIG_SHELL $0 --fallback-echo"
+        elif echo_testing_string=`($CONFIG_SHELL "$0" --fallback-echo '\t') 2>/dev/null` &&
+	     test "X$echo_testing_string" = 'X\t' &&
+	     echo_testing_string=`($CONFIG_SHELL "$0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	     test "X$echo_testing_string" = "X$echo_test_string"; then
+	  ECHO="$CONFIG_SHELL $0 --fallback-echo"
+        else
+	  # maybe with a smaller string...
+	  prev=:
+
+	  for cmd in 'echo test' 'sed 2q "$0"' 'sed 10q "$0"' 'sed 20q "$0"' 'sed 50q "$0"'; do
+	    if { test "X$echo_test_string" = "X`eval $cmd`"; } 2>/dev/null
+	    then
+	      break
+	    fi
+	    prev="$cmd"
+	  done
+
+	  if test "$prev" != 'sed 50q "$0"'; then
+	    echo_test_string=`eval $prev`
+	    export echo_test_string
+	    exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} "$0" ${1+"$@"}
+	  else
+	    # Oops.  We lost completely, so just stick with echo.
+	    ECHO=echo
+	  fi
+        fi
+      fi
+    fi
+  fi
+fi
+
+# Copy echo and quote the copy suitably for passing to libtool from
+# the Makefile, instead of quoting the original, which is used later.
+lt_ECHO=$ECHO
+if test "X$lt_ECHO" = "X$CONFIG_SHELL $0 --fallback-echo"; then
+   lt_ECHO="$CONFIG_SHELL \\\$\$0 --fallback-echo"
+fi
+
+
+
+
+test -n "$DJDIR" || exec 7<&0 </dev/null
+exec 6>&1
+
+# Name of the host.
+# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,
+# so uname gets run too.
+ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+
+#
+# Initializations.
+#
+ac_default_prefix=/usr/local
+ac_clean_files=
+ac_config_libobj_dir=.
+LIBOBJS=
+cross_compiling=no
+subdirs=
+MFLAGS=
+MAKEFLAGS=
+
+# Identity of this package.
+PACKAGE_NAME='mpc'
+PACKAGE_TARNAME='mpc'
+PACKAGE_VERSION='0.9'
+PACKAGE_STRING='mpc 0.9'
+PACKAGE_BUGREPORT='mpc-discuss@lists.gforge.inria.fr'
+PACKAGE_URL=''
+
+ac_unique_file="src/mpc-impl.h"
+# Factoring default headers for most tests.
+ac_includes_default="\
+#include <stdio.h>
+#ifdef HAVE_SYS_TYPES_H
+# include <sys/types.h>
+#endif
+#ifdef HAVE_SYS_STAT_H
+# include <sys/stat.h>
+#endif
+#ifdef STDC_HEADERS
+# include <stdlib.h>
+# include <stddef.h>
+#else
+# ifdef HAVE_STDLIB_H
+#  include <stdlib.h>
+# endif
+#endif
+#ifdef HAVE_STRING_H
+# if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+#  include <memory.h>
+# endif
+# include <string.h>
+#endif
+#ifdef HAVE_STRINGS_H
+# include <strings.h>
+#endif
+#ifdef HAVE_INTTYPES_H
+# include <inttypes.h>
+#endif
+#ifdef HAVE_STDINT_H
+# include <stdint.h>
+#endif
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif"
+
+ac_subst_vars='am__EXEEXT_FALSE
+am__EXEEXT_TRUE
+LTLIBOBJS
+WARNINGCFLAGS
+MPC_LOG_H
+LIBOBJS
+OTOOL64
+OTOOL
+LIPO
+NMEDIT
+DSYMUTIL
+lt_ECHO
+RANLIB
+AR
+OBJDUMP
+LN_S
+NM
+ac_ct_DUMPBIN
+DUMPBIN
+LD
+FGREP
+LIBTOOL
+SED
+EGREP
+GREP
+CPP
+am__fastdepCC_FALSE
+am__fastdepCC_TRUE
+CCDEPMODE
+AMDEPBACKSLASH
+AMDEP_FALSE
+AMDEP_TRUE
+am__quote
+am__include
+DEPDIR
+OBJEXT
+EXEEXT
+ac_ct_CC
+CPPFLAGS
+LDFLAGS
+CFLAGS
+CC
+host_os
+host_vendor
+host_cpu
+host
+build_os
+build_vendor
+build_cpu
+build
+MAINT
+MAINTAINER_MODE_FALSE
+MAINTAINER_MODE_TRUE
+am__untar
+am__tar
+AMTAR
+am__leading_dot
+SET_MAKE
+AWK
+mkdir_p
+MKDIR_P
+INSTALL_STRIP_PROGRAM
+STRIP
+install_sh
+MAKEINFO
+AUTOHEADER
+AUTOMAKE
+AUTOCONF
+ACLOCAL
+VERSION
+PACKAGE
+CYGPATH_W
+am__isrc
+INSTALL_DATA
+INSTALL_SCRIPT
+INSTALL_PROGRAM
+target_alias
+host_alias
+build_alias
+LIBS
+ECHO_T
+ECHO_N
+ECHO_C
+DEFS
+mandir
+localedir
+libdir
+psdir
+pdfdir
+dvidir
+htmldir
+infodir
+docdir
+oldincludedir
+includedir
+localstatedir
+sharedstatedir
+sysconfdir
+datadir
+datarootdir
+libexecdir
+sbindir
+bindir
+program_transform_name
+prefix
+exec_prefix
+PACKAGE_URL
+PACKAGE_BUGREPORT
+PACKAGE_STRING
+PACKAGE_VERSION
+PACKAGE_TARNAME
+PACKAGE_NAME
+PATH_SEPARATOR
+SHELL'
+ac_subst_files=''
+ac_user_opts='
+enable_option_checking
+enable_maintainer_mode
+with_mpfr_include
+with_mpfr_lib
+with_mpfr
+with_gmp_include
+with_gmp_lib
+with_gmp
+enable_logging
+enable_dependency_tracking
+enable_shared
+enable_static
+with_pic
+enable_fast_install
+with_gnu_ld
+enable_libtool_lock
+'
+      ac_precious_vars='build_alias
+host_alias
+target_alias
+CC
+CFLAGS
+LDFLAGS
+LIBS
+CPPFLAGS
+CPP'
+
+
+# Initialize some variables set by options.
+ac_init_help=
+ac_init_version=false
+ac_unrecognized_opts=
+ac_unrecognized_sep=
+# The variables have the same names as the options, with
+# dashes changed to underlines.
+cache_file=/dev/null
+exec_prefix=NONE
+no_create=
+no_recursion=
+prefix=NONE
+program_prefix=NONE
+program_suffix=NONE
+program_transform_name=s,x,x,
+silent=
+site=
+srcdir=
+verbose=
+x_includes=NONE
+x_libraries=NONE
+
+# Installation directory options.
+# These are left unexpanded so users can "make install exec_prefix=/foo"
+# and all the variables that are supposed to be based on exec_prefix
+# by default will actually change.
+# Use braces instead of parens because sh, perl, etc. also accept them.
+# (The list follows the same order as the GNU Coding Standards.)
+bindir='${exec_prefix}/bin'
+sbindir='${exec_prefix}/sbin'
+libexecdir='${exec_prefix}/libexec'
+datarootdir='${prefix}/share'
+datadir='${datarootdir}'
+sysconfdir='${prefix}/etc'
+sharedstatedir='${prefix}/com'
+localstatedir='${prefix}/var'
+includedir='${prefix}/include'
+oldincludedir='/usr/include'
+docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
+infodir='${datarootdir}/info'
+htmldir='${docdir}'
+dvidir='${docdir}'
+pdfdir='${docdir}'
+psdir='${docdir}'
+libdir='${exec_prefix}/lib'
+localedir='${datarootdir}/locale'
+mandir='${datarootdir}/man'
+
+ac_prev=
+ac_dashdash=
+for ac_option
+do
+  # If the previous option needs an argument, assign it.
+  if test -n "$ac_prev"; then
+    eval $ac_prev=\$ac_option
+    ac_prev=
+    continue
+  fi
+
+  case $ac_option in
+  *=?*) ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
+  *=)   ac_optarg= ;;
+  *)    ac_optarg=yes ;;
+  esac
+
+  # Accept the important Cygnus configure options, so we can diagnose typos.
+
+  case $ac_dashdash$ac_option in
+  --)
+    ac_dashdash=yes ;;
+
+  -bindir | --bindir | --bindi | --bind | --bin | --bi)
+    ac_prev=bindir ;;
+  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
+    bindir=$ac_optarg ;;
+
+  -build | --build | --buil | --bui | --bu)
+    ac_prev=build_alias ;;
+  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
+    build_alias=$ac_optarg ;;
+
+  -cache-file | --cache-file | --cache-fil | --cache-fi \
+  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
+    ac_prev=cache_file ;;
+  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
+  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
+    cache_file=$ac_optarg ;;
+
+  --config-cache | -C)
+    cache_file=config.cache ;;
+
+  -datadir | --datadir | --datadi | --datad)
+    ac_prev=datadir ;;
+  -datadir=* | --datadir=* | --datadi=* | --datad=*)
+    datadir=$ac_optarg ;;
+
+  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
+  | --dataroo | --dataro | --datar)
+    ac_prev=datarootdir ;;
+  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
+  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
+    datarootdir=$ac_optarg ;;
+
+  -disable-* | --disable-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error $? "invalid feature name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"enable_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval enable_$ac_useropt=no ;;
+
+  -docdir | --docdir | --docdi | --doc | --do)
+    ac_prev=docdir ;;
+  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
+    docdir=$ac_optarg ;;
+
+  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
+    ac_prev=dvidir ;;
+  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
+    dvidir=$ac_optarg ;;
+
+  -enable-* | --enable-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error $? "invalid feature name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"enable_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval enable_$ac_useropt=\$ac_optarg ;;
+
+  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
+  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
+  | --exec | --exe | --ex)
+    ac_prev=exec_prefix ;;
+  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
+  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
+  | --exec=* | --exe=* | --ex=*)
+    exec_prefix=$ac_optarg ;;
+
+  -gas | --gas | --ga | --g)
+    # Obsolete; use --with-gas.
+    with_gas=yes ;;
+
+  -help | --help | --hel | --he | -h)
+    ac_init_help=long ;;
+  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
+    ac_init_help=recursive ;;
+  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
+    ac_init_help=short ;;
+
+  -host | --host | --hos | --ho)
+    ac_prev=host_alias ;;
+  -host=* | --host=* | --hos=* | --ho=*)
+    host_alias=$ac_optarg ;;
+
+  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
+    ac_prev=htmldir ;;
+  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
+  | --ht=*)
+    htmldir=$ac_optarg ;;
+
+  -includedir | --includedir | --includedi | --included | --include \
+  | --includ | --inclu | --incl | --inc)
+    ac_prev=includedir ;;
+  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
+  | --includ=* | --inclu=* | --incl=* | --inc=*)
+    includedir=$ac_optarg ;;
+
+  -infodir | --infodir | --infodi | --infod | --info | --inf)
+    ac_prev=infodir ;;
+  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
+    infodir=$ac_optarg ;;
+
+  -libdir | --libdir | --libdi | --libd)
+    ac_prev=libdir ;;
+  -libdir=* | --libdir=* | --libdi=* | --libd=*)
+    libdir=$ac_optarg ;;
+
+  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
+  | --libexe | --libex | --libe)
+    ac_prev=libexecdir ;;
+  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
+  | --libexe=* | --libex=* | --libe=*)
+    libexecdir=$ac_optarg ;;
+
+  -localedir | --localedir | --localedi | --localed | --locale)
+    ac_prev=localedir ;;
+  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
+    localedir=$ac_optarg ;;
+
+  -localstatedir | --localstatedir | --localstatedi | --localstated \
+  | --localstate | --localstat | --localsta | --localst | --locals)
+    ac_prev=localstatedir ;;
+  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
+  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
+    localstatedir=$ac_optarg ;;
+
+  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
+    ac_prev=mandir ;;
+  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
+    mandir=$ac_optarg ;;
+
+  -nfp | --nfp | --nf)
+    # Obsolete; use --without-fp.
+    with_fp=no ;;
+
+  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
+  | --no-cr | --no-c | -n)
+    no_create=yes ;;
+
+  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
+  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
+    no_recursion=yes ;;
+
+  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
+  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
+  | --oldin | --oldi | --old | --ol | --o)
+    ac_prev=oldincludedir ;;
+  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
+  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
+  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
+    oldincludedir=$ac_optarg ;;
+
+  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
+    ac_prev=prefix ;;
+  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
+    prefix=$ac_optarg ;;
+
+  -program-prefix | --program-prefix | --program-prefi | --program-pref \
+  | --program-pre | --program-pr | --program-p)
+    ac_prev=program_prefix ;;
+  -program-prefix=* | --program-prefix=* | --program-prefi=* \
+  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
+    program_prefix=$ac_optarg ;;
+
+  -program-suffix | --program-suffix | --program-suffi | --program-suff \
+  | --program-suf | --program-su | --program-s)
+    ac_prev=program_suffix ;;
+  -program-suffix=* | --program-suffix=* | --program-suffi=* \
+  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
+    program_suffix=$ac_optarg ;;
+
+  -program-transform-name | --program-transform-name \
+  | --program-transform-nam | --program-transform-na \
+  | --program-transform-n | --program-transform- \
+  | --program-transform | --program-transfor \
+  | --program-transfo | --program-transf \
+  | --program-trans | --program-tran \
+  | --progr-tra | --program-tr | --program-t)
+    ac_prev=program_transform_name ;;
+  -program-transform-name=* | --program-transform-name=* \
+  | --program-transform-nam=* | --program-transform-na=* \
+  | --program-transform-n=* | --program-transform-=* \
+  | --program-transform=* | --program-transfor=* \
+  | --program-transfo=* | --program-transf=* \
+  | --program-trans=* | --program-tran=* \
+  | --progr-tra=* | --program-tr=* | --program-t=*)
+    program_transform_name=$ac_optarg ;;
+
+  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
+    ac_prev=pdfdir ;;
+  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
+    pdfdir=$ac_optarg ;;
+
+  -psdir | --psdir | --psdi | --psd | --ps)
+    ac_prev=psdir ;;
+  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
+    psdir=$ac_optarg ;;
+
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil)
+    silent=yes ;;
+
+  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
+    ac_prev=sbindir ;;
+  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
+  | --sbi=* | --sb=*)
+    sbindir=$ac_optarg ;;
+
+  -sharedstatedir | --sharedstatedir | --sharedstatedi \
+  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
+  | --sharedst | --shareds | --shared | --share | --shar \
+  | --sha | --sh)
+    ac_prev=sharedstatedir ;;
+  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
+  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
+  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
+  | --sha=* | --sh=*)
+    sharedstatedir=$ac_optarg ;;
+
+  -site | --site | --sit)
+    ac_prev=site ;;
+  -site=* | --site=* | --sit=*)
+    site=$ac_optarg ;;
+
+  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
+    ac_prev=srcdir ;;
+  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
+    srcdir=$ac_optarg ;;
+
+  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
+  | --syscon | --sysco | --sysc | --sys | --sy)
+    ac_prev=sysconfdir ;;
+  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
+  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
+    sysconfdir=$ac_optarg ;;
+
+  -target | --target | --targe | --targ | --tar | --ta | --t)
+    ac_prev=target_alias ;;
+  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
+    target_alias=$ac_optarg ;;
+
+  -v | -verbose | --verbose | --verbos | --verbo | --verb)
+    verbose=yes ;;
+
+  -version | --version | --versio | --versi | --vers | -V)
+    ac_init_version=: ;;
+
+  -with-* | --with-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error $? "invalid package name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"with_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval with_$ac_useropt=\$ac_optarg ;;
+
+  -without-* | --without-*)
+    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
+      as_fn_error $? "invalid package name: $ac_useropt"
+    ac_useropt_orig=$ac_useropt
+    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
+    case $ac_user_opts in
+      *"
+"with_$ac_useropt"
+"*) ;;
+      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
+	 ac_unrecognized_sep=', ';;
+    esac
+    eval with_$ac_useropt=no ;;
+
+  --x)
+    # Obsolete; use --with-x.
+    with_x=yes ;;
+
+  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
+  | --x-incl | --x-inc | --x-in | --x-i)
+    ac_prev=x_includes ;;
+  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
+  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
+    x_includes=$ac_optarg ;;
+
+  -x-libraries | --x-libraries | --x-librarie | --x-librari \
+  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
+    ac_prev=x_libraries ;;
+  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
+  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
+    x_libraries=$ac_optarg ;;
+
+  -*) as_fn_error $? "unrecognized option: \`$ac_option'
+Try \`$0 --help' for more information"
+    ;;
+
+  *=*)
+    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
+    # Reject names that are not valid shell variable names.
+    case $ac_envvar in #(
+      '' | [0-9]* | *[!_$as_cr_alnum]* )
+      as_fn_error $? "invalid variable name: \`$ac_envvar'" ;;
+    esac
+    eval $ac_envvar=\$ac_optarg
+    export $ac_envvar ;;
+
+  *)
+    # FIXME: should be removed in autoconf 3.0.
+    $as_echo "$as_me: WARNING: you should use --build, --host, --target" >&2
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      $as_echo "$as_me: WARNING: invalid host type: $ac_option" >&2
+    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
+    ;;
+
+  esac
+done
+
+if test -n "$ac_prev"; then
+  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
+  as_fn_error $? "missing argument to $ac_option"
+fi
+
+if test -n "$ac_unrecognized_opts"; then
+  case $enable_option_checking in
+    no) ;;
+    fatal) as_fn_error $? "unrecognized options: $ac_unrecognized_opts" ;;
+    *)     $as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
+  esac
+fi
+
+# Check all directory arguments for consistency.
+for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
+		datadir sysconfdir sharedstatedir localstatedir includedir \
+		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
+		libdir localedir mandir
+do
+  eval ac_val=\$$ac_var
+  # Remove trailing slashes.
+  case $ac_val in
+    */ )
+      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
+      eval $ac_var=\$ac_val;;
+  esac
+  # Be sure to have absolute directory names.
+  case $ac_val in
+    [\\/$]* | ?:[\\/]* )  continue;;
+    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
+  esac
+  as_fn_error $? "expected an absolute directory name for --$ac_var: $ac_val"
+done
+
+# There might be people who depend on the old broken behavior: `$host'
+# used to hold the argument of --host etc.
+# FIXME: To remove some day.
+build=$build_alias
+host=$host_alias
+target=$target_alias
+
+# FIXME: To remove some day.
+if test "x$host_alias" != x; then
+  if test "x$build_alias" = x; then
+    cross_compiling=maybe
+    $as_echo "$as_me: WARNING: if you wanted to set the --build type, don't use --host.
+    If a cross compiler is detected then cross compile mode will be used" >&2
+  elif test "x$build_alias" != "x$host_alias"; then
+    cross_compiling=yes
+  fi
+fi
+
+ac_tool_prefix=
+test -n "$host_alias" && ac_tool_prefix=$host_alias-
+
+test "$silent" = yes && exec 6>/dev/null
+
+
+ac_pwd=`pwd` && test -n "$ac_pwd" &&
+ac_ls_di=`ls -di .` &&
+ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
+  as_fn_error $? "working directory cannot be determined"
+test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
+  as_fn_error $? "pwd does not report name of working directory"
+
+
+# Find the source files, if location was not specified.
+if test -z "$srcdir"; then
+  ac_srcdir_defaulted=yes
+  # Try the directory containing this script, then the parent directory.
+  ac_confdir=`$as_dirname -- "$as_myself" ||
+$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_myself" : 'X\(//\)[^/]' \| \
+	 X"$as_myself" : 'X\(//\)$' \| \
+	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_myself" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  srcdir=$ac_confdir
+  if test ! -r "$srcdir/$ac_unique_file"; then
+    srcdir=..
+  fi
+else
+  ac_srcdir_defaulted=no
+fi
+if test ! -r "$srcdir/$ac_unique_file"; then
+  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
+  as_fn_error $? "cannot find sources ($ac_unique_file) in $srcdir"
+fi
+ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
+ac_abs_confdir=`(
+	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error $? "$ac_msg"
+	pwd)`
+# When building in place, set srcdir=.
+if test "$ac_abs_confdir" = "$ac_pwd"; then
+  srcdir=.
+fi
+# Remove unnecessary trailing slashes from srcdir.
+# Double slashes in file names in object file debugging info
+# mess up M-x gdb in Emacs.
+case $srcdir in
+*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
+esac
+for ac_var in $ac_precious_vars; do
+  eval ac_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_env_${ac_var}_value=\$${ac_var}
+  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_cv_env_${ac_var}_value=\$${ac_var}
+done
+
+#
+# Report the --help message.
+#
+if test "$ac_init_help" = "long"; then
+  # Omit some internal or obsolete options to make the list less imposing.
+  # This message is too long to be a string in the A/UX 3.1 sh.
+  cat <<_ACEOF
+\`configure' configures mpc 0.9 to adapt to many kinds of systems.
+
+Usage: $0 [OPTION]... [VAR=VALUE]...
+
+To assign environment variables (e.g., CC, CFLAGS...), specify them as
+VAR=VALUE.  See below for descriptions of some of the useful variables.
+
+Defaults for the options are specified in brackets.
+
+Configuration:
+  -h, --help              display this help and exit
+      --help=short        display options specific to this package
+      --help=recursive    display the short help of all the included packages
+  -V, --version           display version information and exit
+  -q, --quiet, --silent   do not print \`checking ...' messages
+      --cache-file=FILE   cache test results in FILE [disabled]
+  -C, --config-cache      alias for \`--cache-file=config.cache'
+  -n, --no-create         do not create output files
+      --srcdir=DIR        find the sources in DIR [configure dir or \`..']
+
+Installation directories:
+  --prefix=PREFIX         install architecture-independent files in PREFIX
+                          [$ac_default_prefix]
+  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
+                          [PREFIX]
+
+By default, \`make install' will install all the files in
+\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
+an installation prefix other than \`$ac_default_prefix' using \`--prefix',
+for instance \`--prefix=\$HOME'.
+
+For better control, use the options below.
+
+Fine tuning of the installation directories:
+  --bindir=DIR            user executables [EPREFIX/bin]
+  --sbindir=DIR           system admin executables [EPREFIX/sbin]
+  --libexecdir=DIR        program executables [EPREFIX/libexec]
+  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
+  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
+  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
+  --libdir=DIR            object code libraries [EPREFIX/lib]
+  --includedir=DIR        C header files [PREFIX/include]
+  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
+  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
+  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
+  --infodir=DIR           info documentation [DATAROOTDIR/info]
+  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
+  --mandir=DIR            man documentation [DATAROOTDIR/man]
+  --docdir=DIR            documentation root [DATAROOTDIR/doc/mpc]
+  --htmldir=DIR           html documentation [DOCDIR]
+  --dvidir=DIR            dvi documentation [DOCDIR]
+  --pdfdir=DIR            pdf documentation [DOCDIR]
+  --psdir=DIR             ps documentation [DOCDIR]
+_ACEOF
+
+  cat <<\_ACEOF
+
+Program names:
+  --program-prefix=PREFIX            prepend PREFIX to installed program names
+  --program-suffix=SUFFIX            append SUFFIX to installed program names
+  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
+
+System types:
+  --build=BUILD     configure for building on BUILD [guessed]
+  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
+_ACEOF
+fi
+
+if test -n "$ac_init_help"; then
+  case $ac_init_help in
+     short | recursive ) echo "Configuration of mpc 0.9:";;
+   esac
+  cat <<\_ACEOF
+
+Optional Features:
+  --disable-option-checking  ignore unrecognized --enable/--with options
+  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
+  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
+  --enable-maintainer-mode  enable make rules and dependencies not useful
+			  (and sometimes confusing) to the casual installer
+  --enable-logging        enable logging of function calls to stderr (default
+                          = no)
+  --disable-dependency-tracking  speeds up one-time build
+  --enable-dependency-tracking   do not reject slow dependency extractors
+  --enable-shared[=PKGS]  build shared libraries [default=yes]
+  --enable-static[=PKGS]  build static libraries [default=yes]
+  --enable-fast-install[=PKGS]
+                          optimize for fast installation [default=yes]
+  --disable-libtool-lock  avoid locking (might break parallel builds)
+
+Optional Packages:
+  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
+  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-mpfr-include=DIR MPFR include directory
+  --with-mpfr-lib=DIR     MPFR lib directory
+  --with-mpfr=DIR         MPFR install directory
+  --with-gmp-include=DIR  GMP include directory
+  --with-gmp-lib=DIR      GMP lib directory
+  --with-gmp=DIR          GMP install directory
+  --with-pic              try to use only PIC/non-PIC objects [default=use
+                          both]
+  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
+
+Some influential environment variables:
+  CC          C compiler command
+  CFLAGS      C compiler flags
+  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
+              nonstandard directory <lib dir>
+  LIBS        libraries to pass to the linker, e.g. -l<library>
+  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
+              you have headers in a nonstandard directory <include dir>
+  CPP         C preprocessor
+
+Use these variables to override the choices made by `configure' or to help
+it to find libraries and programs with nonstandard names/locations.
+
+Report bugs to <mpc-discuss@lists.gforge.inria.fr>.
+_ACEOF
+ac_status=$?
+fi
+
+if test "$ac_init_help" = "recursive"; then
+  # If there are subdirs, report their specific --help.
+  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
+    test -d "$ac_dir" ||
+      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
+      continue
+    ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+    cd "$ac_dir" || { ac_status=$?; continue; }
+    # Check for guested configure.
+    if test -f "$ac_srcdir/configure.gnu"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
+    elif test -f "$ac_srcdir/configure"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure" --help=recursive
+    else
+      $as_echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
+    fi || ac_status=$?
+    cd "$ac_pwd" || { ac_status=$?; break; }
+  done
+fi
+
+test -n "$ac_init_help" && exit $ac_status
+if $ac_init_version; then
+  cat <<\_ACEOF
+mpc configure 0.9
+generated by GNU Autoconf 2.67
+
+Copyright (C) 2010 Free Software Foundation, Inc.
+This configure script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it.
+_ACEOF
+  exit
+fi
+
+## ------------------------ ##
+## Autoconf initialization. ##
+## ------------------------ ##
+
+# ac_fn_c_try_compile LINENO
+# --------------------------
+# Try to compile conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_compile ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext
+  if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  as_fn_set_status $ac_retval
+
+} # ac_fn_c_try_compile
+
+# ac_fn_c_try_cpp LINENO
+# ----------------------
+# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_cpp ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if { { ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } > conftest.i && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+    ac_retval=1
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  as_fn_set_status $ac_retval
+
+} # ac_fn_c_try_cpp
+
+# ac_fn_c_try_link LINENO
+# -----------------------
+# Try to link conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_link ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext conftest$ac_exeext
+  if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext && {
+	 test "$cross_compiling" = yes ||
+	 $as_test_x conftest$ac_exeext
+       }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
+  # interfere with the next link command; also delete a directory that is
+  # left behind by Apple's compiler.  We do this before executing the actions.
+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  as_fn_set_status $ac_retval
+
+} # ac_fn_c_try_link
+
+# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES
+# -------------------------------------------------------
+# Tests whether HEADER exists and can be compiled using the include files in
+# INCLUDES, setting the cache variable VAR accordingly.
+ac_fn_c_check_header_compile ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if eval "test \"\${$3+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+#include <$2>
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  eval "$3=yes"
+else
+  eval "$3=no"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} # ac_fn_c_check_header_compile
+
+# ac_fn_c_try_run LINENO
+# ----------------------
+# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes
+# that executables *can* be run.
+ac_fn_c_try_run ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'
+  { { case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: program exited with status $ac_status" >&5
+       $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+       ac_retval=$ac_status
+fi
+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+  as_fn_set_status $ac_retval
+
+} # ac_fn_c_try_run
+
+# ac_fn_c_check_func LINENO FUNC VAR
+# ----------------------------------
+# Tests whether FUNC exists, setting the cache variable VAR accordingly
+ac_fn_c_check_func ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if eval "test \"\${$3+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+/* Define $2 to an innocuous variant, in case <limits.h> declares $2.
+   For example, HP-UX 11i <limits.h> declares gettimeofday.  */
+#define $2 innocuous_$2
+
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char $2 (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  */
+
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+
+#undef $2
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char $2 ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined __stub_$2 || defined __stub___$2
+choke me
+#endif
+
+int
+main ()
+{
+return $2 ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$3=yes"
+else
+  eval "$3=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} # ac_fn_c_check_func
+
+# ac_fn_c_check_header_mongrel LINENO HEADER VAR INCLUDES
+# -------------------------------------------------------
+# Tests whether HEADER exists, giving a warning if it cannot be compiled using
+# the include files in INCLUDES and setting the cache variable VAR
+# accordingly.
+ac_fn_c_check_header_mongrel ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  if eval "test \"\${$3+set}\"" = set; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if eval "test \"\${$3+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+else
+  # Is the header compilable?
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 usability" >&5
+$as_echo_n "checking $2 usability... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+#include <$2>
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_header_compiler=yes
+else
+  ac_header_compiler=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_compiler" >&5
+$as_echo "$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 presence" >&5
+$as_echo_n "checking $2 presence... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <$2>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  ac_header_preproc=yes
+else
+  ac_header_preproc=no
+fi
+rm -f conftest.err conftest.i conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_preproc" >&5
+$as_echo "$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in #((
+  yes:no: )
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&5
+$as_echo "$as_me: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
+$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
+    ;;
+  no:yes:* )
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: present but cannot be compiled" >&5
+$as_echo "$as_me: WARNING: $2: present but cannot be compiled" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     check for missing prerequisite headers?" >&5
+$as_echo "$as_me: WARNING: $2:     check for missing prerequisite headers?" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: see the Autoconf documentation" >&5
+$as_echo "$as_me: WARNING: $2: see the Autoconf documentation" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&5
+$as_echo "$as_me: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
+$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
+( $as_echo "## ------------------------------------------------ ##
+## Report this to mpc-discuss@lists.gforge.inria.fr ##
+## ------------------------------------------------ ##"
+     ) | sed "s/^/$as_me: WARNING:     /" >&2
+    ;;
+esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if eval "test \"\${$3+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  eval "$3=\$ac_header_compiler"
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+fi
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} # ac_fn_c_check_header_mongrel
+
+# ac_fn_c_check_type LINENO TYPE VAR INCLUDES
+# -------------------------------------------
+# Tests whether TYPE exists after having included INCLUDES, setting cache
+# variable VAR accordingly.
+ac_fn_c_check_type ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if eval "test \"\${$3+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  eval "$3=no"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+if (sizeof ($2))
+	 return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+if (sizeof (($2)))
+	    return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+else
+  eval "$3=yes"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; test "x$as_lineno_stack" = x && { as_lineno=; unset as_lineno;}
+
+} # ac_fn_c_check_type
+cat >config.log <<_ACEOF
+This file contains any messages produced by compilers while
+running configure, to aid debugging if configure makes a mistake.
+
+It was created by mpc $as_me 0.9, which was
+generated by GNU Autoconf 2.67.  Invocation command line was
+
+  $ $0 $@
+
+_ACEOF
+exec 5>>config.log
+{
+cat <<_ASUNAME
+## --------- ##
+## Platform. ##
+## --------- ##
+
+hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
+
+/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
+/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
+/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
+/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+
+_ASUNAME
+
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    $as_echo "PATH: $as_dir"
+  done
+IFS=$as_save_IFS
+
+} >&5
+
+cat >&5 <<_ACEOF
+
+
+## ----------- ##
+## Core tests. ##
+## ----------- ##
+
+_ACEOF
+
+
+# Keep a trace of the command line.
+# Strip out --no-create and --no-recursion so they do not pile up.
+# Strip out --silent because we don't want to record it for future runs.
+# Also quote any args containing shell meta-characters.
+# Make two passes to allow for proper duplicate-argument suppression.
+ac_configure_args=
+ac_configure_args0=
+ac_configure_args1=
+ac_must_keep_next=false
+for ac_pass in 1 2
+do
+  for ac_arg
+  do
+    case $ac_arg in
+    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
+    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+    | -silent | --silent | --silen | --sile | --sil)
+      continue ;;
+    *\'*)
+      ac_arg=`$as_echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    case $ac_pass in
+    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
+    2)
+      as_fn_append ac_configure_args1 " '$ac_arg'"
+      if test $ac_must_keep_next = true; then
+	ac_must_keep_next=false # Got value, back to normal.
+      else
+	case $ac_arg in
+	  *=* | --config-cache | -C | -disable-* | --disable-* \
+	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
+	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
+	  | -with-* | --with-* | -without-* | --without-* | --x)
+	    case "$ac_configure_args0 " in
+	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
+	    esac
+	    ;;
+	  -* ) ac_must_keep_next=true ;;
+	esac
+      fi
+      as_fn_append ac_configure_args " '$ac_arg'"
+      ;;
+    esac
+  done
+done
+{ ac_configure_args0=; unset ac_configure_args0;}
+{ ac_configure_args1=; unset ac_configure_args1;}
+
+# When interrupted or exit'd, cleanup temporary files, and complete
+# config.log.  We remove comments because anyway the quotes in there
+# would cause problems or look ugly.
+# WARNING: Use '\'' to represent an apostrophe within the trap.
+# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
+trap 'exit_status=$?
+  # Save into config.log some information that might help in debugging.
+  {
+    echo
+
+    $as_echo "## ---------------- ##
+## Cache variables. ##
+## ---------------- ##"
+    echo
+    # The following way of writing the cache mishandles newlines in values,
+(
+  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
+$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
+      *) { eval $ac_var=; unset $ac_var;} ;;
+      esac ;;
+    esac
+  done
+  (set) 2>&1 |
+    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      sed -n \
+	"s/'\''/'\''\\\\'\'''\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
+      ;; #(
+    *)
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+)
+    echo
+
+    $as_echo "## ----------------- ##
+## Output variables. ##
+## ----------------- ##"
+    echo
+    for ac_var in $ac_subst_vars
+    do
+      eval ac_val=\$$ac_var
+      case $ac_val in
+      *\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+      esac
+      $as_echo "$ac_var='\''$ac_val'\''"
+    done | sort
+    echo
+
+    if test -n "$ac_subst_files"; then
+      $as_echo "## ------------------- ##
+## File substitutions. ##
+## ------------------- ##"
+      echo
+      for ac_var in $ac_subst_files
+      do
+	eval ac_val=\$$ac_var
+	case $ac_val in
+	*\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+	esac
+	$as_echo "$ac_var='\''$ac_val'\''"
+      done | sort
+      echo
+    fi
+
+    if test -s confdefs.h; then
+      $as_echo "## ----------- ##
+## confdefs.h. ##
+## ----------- ##"
+      echo
+      cat confdefs.h
+      echo
+    fi
+    test "$ac_signal" != 0 &&
+      $as_echo "$as_me: caught signal $ac_signal"
+    $as_echo "$as_me: exit $exit_status"
+  } >&5
+  rm -f core *.core core.conftest.* &&
+    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
+    exit $exit_status
+' 0
+for ac_signal in 1 2 13 15; do
+  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
+done
+ac_signal=0
+
+# confdefs.h avoids OS command line length limits that DEFS can exceed.
+rm -f -r conftest* confdefs.h
+
+$as_echo "/* confdefs.h */" > confdefs.h
+
+# Predefined preprocessor variables.
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_NAME "$PACKAGE_NAME"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_TARNAME "$PACKAGE_TARNAME"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_VERSION "$PACKAGE_VERSION"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_STRING "$PACKAGE_STRING"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
+_ACEOF
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_URL "$PACKAGE_URL"
+_ACEOF
+
+
+# Let the site file select an alternate cache file if it wants to.
+# Prefer an explicitly selected file to automatically selected ones.
+ac_site_file1=NONE
+ac_site_file2=NONE
+if test -n "$CONFIG_SITE"; then
+  # We do not want a PATH search for config.site.
+  case $CONFIG_SITE in #((
+    -*)  ac_site_file1=./$CONFIG_SITE;;
+    */*) ac_site_file1=$CONFIG_SITE;;
+    *)   ac_site_file1=./$CONFIG_SITE;;
+  esac
+elif test "x$prefix" != xNONE; then
+  ac_site_file1=$prefix/share/config.site
+  ac_site_file2=$prefix/etc/config.site
+else
+  ac_site_file1=$ac_default_prefix/share/config.site
+  ac_site_file2=$ac_default_prefix/etc/config.site
+fi
+for ac_site_file in "$ac_site_file1" "$ac_site_file2"
+do
+  test "x$ac_site_file" = xNONE && continue
+  if test /dev/null != "$ac_site_file" && test -r "$ac_site_file"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
+$as_echo "$as_me: loading site script $ac_site_file" >&6;}
+    sed 's/^/| /' "$ac_site_file" >&5
+    . "$ac_site_file" \
+      || { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "failed to load site script $ac_site_file
+See \`config.log' for more details" "$LINENO" 5 ; }
+  fi
+done
+
+if test -r "$cache_file"; then
+  # Some versions of bash will fail to source /dev/null (special files
+  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.
+  if test /dev/null != "$cache_file" && test -f "$cache_file"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
+$as_echo "$as_me: loading cache $cache_file" >&6;}
+    case $cache_file in
+      [\\/]* | ?:[\\/]* ) . "$cache_file";;
+      *)                      . "./$cache_file";;
+    esac
+  fi
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
+$as_echo "$as_me: creating cache $cache_file" >&6;}
+  >$cache_file
+fi
+
+# Check that the precious variables saved in the cache have kept the same
+# value.
+ac_cache_corrupted=false
+for ac_var in $ac_precious_vars; do
+  eval ac_old_set=\$ac_cv_env_${ac_var}_set
+  eval ac_new_set=\$ac_env_${ac_var}_set
+  eval ac_old_val=\$ac_cv_env_${ac_var}_value
+  eval ac_new_val=\$ac_env_${ac_var}_value
+  case $ac_old_set,$ac_new_set in
+    set,)
+      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
+$as_echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,set)
+      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was not set in the previous run" >&5
+$as_echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,);;
+    *)
+      if test "x$ac_old_val" != "x$ac_new_val"; then
+	# differences in whitespace do not lead to failure.
+	ac_old_val_w=`echo x $ac_old_val`
+	ac_new_val_w=`echo x $ac_new_val`
+	if test "$ac_old_val_w" != "$ac_new_val_w"; then
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' has changed since the previous run:" >&5
+$as_echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
+	  ac_cache_corrupted=:
+	else
+	  { $as_echo "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&5
+$as_echo "$as_me: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&2;}
+	  eval $ac_var=\$ac_old_val
+	fi
+	{ $as_echo "$as_me:${as_lineno-$LINENO}:   former value:  \`$ac_old_val'" >&5
+$as_echo "$as_me:   former value:  \`$ac_old_val'" >&2;}
+	{ $as_echo "$as_me:${as_lineno-$LINENO}:   current value: \`$ac_new_val'" >&5
+$as_echo "$as_me:   current value: \`$ac_new_val'" >&2;}
+      fi;;
+  esac
+  # Pass precious variables to config.status.
+  if test "$ac_new_set" = set; then
+    case $ac_new_val in
+    *\'*) ac_arg=$ac_var=`$as_echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
+    *) ac_arg=$ac_var=$ac_new_val ;;
+    esac
+    case " $ac_configure_args " in
+      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
+      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
+    esac
+  fi
+done
+if $ac_cache_corrupted; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+  { $as_echo "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
+$as_echo "$as_me: error: changes in the environment can compromise the build" >&2;}
+  as_fn_error $? "run \`make distclean' and/or \`rm $cache_file' and start over" "$LINENO" 5
+fi
+## -------------------- ##
+## Main body of script. ##
+## -------------------- ##
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+ac_config_headers="$ac_config_headers config.h"
+
+
+am__api_version='1.11'
+
+ac_aux_dir=
+for ac_dir in "$srcdir" "$srcdir/.." "$srcdir/../.."; do
+  if test -f "$ac_dir/install-sh"; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/install-sh -c"
+    break
+  elif test -f "$ac_dir/install.sh"; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/install.sh -c"
+    break
+  elif test -f "$ac_dir/shtool"; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/shtool install -c"
+    break
+  fi
+done
+if test -z "$ac_aux_dir"; then
+  as_fn_error $? "cannot find install-sh, install.sh, or shtool in \"$srcdir\" \"$srcdir/..\" \"$srcdir/../..\"" "$LINENO" 5
+fi
+
+# These three variables are undocumented and unsupported,
+# and are intended to be withdrawn in a future Autoconf release.
+# They can cause serious problems if a builder's source tree is in a directory
+# whose full name contains unusual characters.
+ac_config_guess="$SHELL $ac_aux_dir/config.guess"  # Please don't use this var.
+ac_config_sub="$SHELL $ac_aux_dir/config.sub"  # Please don't use this var.
+ac_configure="$SHELL $ac_aux_dir/configure"  # Please don't use this var.
+
+
+# Find a good install program.  We prefer a C program (faster),
+# so one script is as good as another.  But avoid the broken or
+# incompatible versions:
+# SysV /etc/install, /usr/sbin/install
+# SunOS /usr/etc/install
+# IRIX /sbin/install
+# AIX /bin/install
+# AmigaOS /C/install, which installs bootblocks on floppy discs
+# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
+# OS/2's system install, which has a completely different semantic
+# ./install, which can be erroneously created by make from ./install.sh.
+# Reject install programs that cannot install multiple files.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install" >&5
+$as_echo_n "checking for a BSD-compatible install... " >&6; }
+if test -z "$INSTALL"; then
+if test "${ac_cv_path_install+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    # Account for people who put trailing slashes in PATH elements.
+case $as_dir/ in #((
+  ./ | .// | /[cC]/* | \
+  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+  ?:[\\/]os2[\\/]install[\\/]* | ?:[\\/]OS2[\\/]INSTALL[\\/]* | \
+  /usr/ucb/* ) ;;
+  *)
+    # OSF1 and SCO ODT 3.0 have their own names for install.
+    # Don't use installbsd from OSF since it installs stuff as root
+    # by default.
+    for ac_prog in ginstall scoinst install; do
+      for ac_exec_ext in '' $ac_executable_extensions; do
+	if { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; }; then
+	  if test $ac_prog = install &&
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # AIX install.  It has an incompatible calling convention.
+	    :
+	  elif test $ac_prog = install &&
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # program-specific install script used by HP pwplus--don't use.
+	    :
+	  else
+	    rm -rf conftest.one conftest.two conftest.dir
+	    echo one > conftest.one
+	    echo two > conftest.two
+	    mkdir conftest.dir
+	    if "$as_dir/$ac_prog$ac_exec_ext" -c conftest.one conftest.two "`pwd`/conftest.dir" &&
+	      test -s conftest.one && test -s conftest.two &&
+	      test -s conftest.dir/conftest.one &&
+	      test -s conftest.dir/conftest.two
+	    then
+	      ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
+	      break 3
+	    fi
+	  fi
+	fi
+      done
+    done
+    ;;
+esac
+
+  done
+IFS=$as_save_IFS
+
+rm -rf conftest.one conftest.two conftest.dir
+
+fi
+  if test "${ac_cv_path_install+set}" = set; then
+    INSTALL=$ac_cv_path_install
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for INSTALL within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    INSTALL=$ac_install_sh
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $INSTALL" >&5
+$as_echo "$INSTALL" >&6; }
+
+# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
+# It thinks the first close brace ends the variable substitution.
+test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'
+
+test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'
+
+test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether build environment is sane" >&5
+$as_echo_n "checking whether build environment is sane... " >&6; }
+# Just in case
+sleep 1
+echo timestamp > conftest.file
+# Reject unsafe characters in $srcdir or the absolute working directory
+# name.  Accept space and tab only in the latter.
+am_lf='
+'
+case `pwd` in
+  *[\\\"\#\$\&\'\`$am_lf]*)
+    as_fn_error $? "unsafe absolute working directory name" "$LINENO" 5 ;;
+esac
+case $srcdir in
+  *[\\\"\#\$\&\'\`$am_lf\ \	]*)
+    as_fn_error $? "unsafe srcdir value: \`$srcdir'" "$LINENO" 5 ;;
+esac
+
+# Do `set' in a subshell so we don't clobber the current shell's
+# arguments.  Must try -L first in case configure is actually a
+# symlink; some systems play weird games with the mod time of symlinks
+# (eg FreeBSD returns the mod time of the symlink's containing
+# directory).
+if (
+   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
+   if test "$*" = "X"; then
+      # -L didn't work.
+      set X `ls -t "$srcdir/configure" conftest.file`
+   fi
+   rm -f conftest.file
+   if test "$*" != "X $srcdir/configure conftest.file" \
+      && test "$*" != "X conftest.file $srcdir/configure"; then
+
+      # If neither matched, then we have a broken ls.  This can happen
+      # if, for instance, CONFIG_SHELL is bash and it inherits a
+      # broken ls alias from the environment.  This has actually
+      # happened.  Such a system could not be considered "sane".
+      as_fn_error $? "ls -t appears to fail.  Make sure there is not a broken
+alias in your environment" "$LINENO" 5
+   fi
+
+   test "$2" = conftest.file
+   )
+then
+   # Ok.
+   :
+else
+   as_fn_error $? "newly created file is older than distributed files!
+Check your system clock" "$LINENO" 5
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+test "$program_prefix" != NONE &&
+  program_transform_name="s&^&$program_prefix&;$program_transform_name"
+# Use a double $ so make ignores it.
+test "$program_suffix" != NONE &&
+  program_transform_name="s&\$&$program_suffix&;$program_transform_name"
+# Double any \ or $.
+# By default was `s,x,x', remove it if useless.
+ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
+program_transform_name=`$as_echo "$program_transform_name" | sed "$ac_script"`
+
+# expand $ac_aux_dir to an absolute path
+am_aux_dir=`cd $ac_aux_dir && pwd`
+
+if test x"${MISSING+set}" != xset; then
+  case $am_aux_dir in
+  *\ * | *\	*)
+    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
+  *)
+    MISSING="\${SHELL} $am_aux_dir/missing" ;;
+  esac
+fi
+# Use eval to expand $SHELL
+if eval "$MISSING --run true"; then
+  am_missing_run="$MISSING --run "
+else
+  am_missing_run=
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \`missing' script is too old or missing" >&5
+$as_echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
+fi
+
+if test x"${install_sh}" != xset; then
+  case $am_aux_dir in
+  *\ * | *\	*)
+    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
+  *)
+    install_sh="\${SHELL} $am_aux_dir/install-sh"
+  esac
+fi
+
+# Installed binaries are usually stripped using `strip' when the user
+# run `make install-strip'.  However `strip' might not be the right
+# tool to use in cross-compilation environments, therefore Automake
+# will honor the `STRIP' environment variable to overrule this program.
+if test "$cross_compiling" != no; then
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
+$as_echo "$ac_ct_STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_STRIP" = x; then
+    STRIP=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    STRIP=$ac_ct_STRIP
+  fi
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+fi
+INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a thread-safe mkdir -p" >&5
+$as_echo_n "checking for a thread-safe mkdir -p... " >&6; }
+if test -z "$MKDIR_P"; then
+  if test "${ac_cv_path_mkdir+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/opt/sfw/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in mkdir gmkdir; do
+	 for ac_exec_ext in '' $ac_executable_extensions; do
+	   { test -f "$as_dir/$ac_prog$ac_exec_ext" && $as_test_x "$as_dir/$ac_prog$ac_exec_ext"; } || continue
+	   case `"$as_dir/$ac_prog$ac_exec_ext" --version 2>&1` in #(
+	     'mkdir (GNU coreutils) '* | \
+	     'mkdir (coreutils) '* | \
+	     'mkdir (fileutils) '4.1*)
+	       ac_cv_path_mkdir=$as_dir/$ac_prog$ac_exec_ext
+	       break 3;;
+	   esac
+	 done
+       done
+  done
+IFS=$as_save_IFS
+
+fi
+
+  test -d ./--version && rmdir ./--version
+  if test "${ac_cv_path_mkdir+set}" = set; then
+    MKDIR_P="$ac_cv_path_mkdir -p"
+  else
+    # As a last resort, use the slow shell script.  Don't cache a
+    # value for MKDIR_P within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the value is a relative name.
+    MKDIR_P="$ac_install_sh -d"
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $MKDIR_P" >&5
+$as_echo "$MKDIR_P" >&6; }
+
+mkdir_p="$MKDIR_P"
+case $mkdir_p in
+  [\\/$]* | ?:[\\/]*) ;;
+  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
+esac
+
+for ac_prog in gawk mawk nawk awk
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AWK+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AWK"; then
+  ac_cv_prog_AWK="$AWK" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AWK="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AWK=$ac_cv_prog_AWK
+if test -n "$AWK"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
+$as_echo "$AWK" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$AWK" && break
+done
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} sets \$(MAKE)" >&5
+$as_echo_n "checking whether ${MAKE-make} sets \$(MAKE)... " >&6; }
+set x ${MAKE-make}
+ac_make=`$as_echo "$2" | sed 's/+/p/g; s/[^a-zA-Z0-9_]/_/g'`
+if eval "test \"\${ac_cv_prog_make_${ac_make}_set+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat >conftest.make <<\_ACEOF
+SHELL = /bin/sh
+all:
+	@echo '@@@%%%=$(MAKE)=@@@%%%'
+_ACEOF
+# GNU make sometimes prints "make[1]: Entering ...", which would confuse us.
+case `${MAKE-make} -f conftest.make 2>/dev/null` in
+  *@@@%%%=?*=@@@%%%*)
+    eval ac_cv_prog_make_${ac_make}_set=yes;;
+  *)
+    eval ac_cv_prog_make_${ac_make}_set=no;;
+esac
+rm -f conftest.make
+fi
+if eval test \$ac_cv_prog_make_${ac_make}_set = yes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+  SET_MAKE=
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+  SET_MAKE="MAKE=${MAKE-make}"
+fi
+
+rm -rf .tst 2>/dev/null
+mkdir .tst 2>/dev/null
+if test -d .tst; then
+  am__leading_dot=.
+else
+  am__leading_dot=_
+fi
+rmdir .tst 2>/dev/null
+
+if test "`cd $srcdir && pwd`" != "`pwd`"; then
+  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
+  # is not polluted with repeated "-I."
+  am__isrc=' -I$(srcdir)'
+  # test to see if srcdir already configured
+  if test -f $srcdir/config.status; then
+    as_fn_error $? "source directory already configured; run \"make distclean\" there first" "$LINENO" 5
+  fi
+fi
+
+# test whether we have cygpath
+if test -z "$CYGPATH_W"; then
+  if (cygpath --version) >/dev/null 2>/dev/null; then
+    CYGPATH_W='cygpath -w'
+  else
+    CYGPATH_W=echo
+  fi
+fi
+
+
+# Define the identity of the package.
+ PACKAGE='mpc'
+ VERSION='0.9'
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE "$PACKAGE"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define VERSION "$VERSION"
+_ACEOF
+
+# Some tools Automake needs.
+
+ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal-${am__api_version}"}
+
+
+AUTOCONF=${AUTOCONF-"${am_missing_run}autoconf"}
+
+
+AUTOMAKE=${AUTOMAKE-"${am_missing_run}automake-${am__api_version}"}
+
+
+AUTOHEADER=${AUTOHEADER-"${am_missing_run}autoheader"}
+
+
+MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}
+
+# We need awk for the "check" target.  The system "awk" is bad on
+# some platforms.
+# Always define AMTAR for backward compatibility.
+
+AMTAR=${AMTAR-"${am_missing_run}tar"}
+
+am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'
+
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to enable maintainer-specific portions of Makefiles" >&5
+$as_echo_n "checking whether to enable maintainer-specific portions of Makefiles... " >&6; }
+    # Check whether --enable-maintainer-mode was given.
+if test "${enable_maintainer_mode+set}" = set; then :
+  enableval=$enable_maintainer_mode; USE_MAINTAINER_MODE=$enableval
+else
+  USE_MAINTAINER_MODE=no
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $USE_MAINTAINER_MODE" >&5
+$as_echo "$USE_MAINTAINER_MODE" >&6; }
+   if test $USE_MAINTAINER_MODE = yes; then
+  MAINTAINER_MODE_TRUE=
+  MAINTAINER_MODE_FALSE='#'
+else
+  MAINTAINER_MODE_TRUE='#'
+  MAINTAINER_MODE_FALSE=
+fi
+
+  MAINT=$MAINTAINER_MODE_TRUE
+
+
+
+# Make sure we can run config.sub.
+$SHELL "$ac_aux_dir/config.sub" sun4 >/dev/null 2>&1 ||
+  as_fn_error $? "cannot run $SHELL $ac_aux_dir/config.sub" "$LINENO" 5
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
+$as_echo_n "checking build system type... " >&6; }
+if test "${ac_cv_build+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_build_alias=$build_alias
+test "x$ac_build_alias" = x &&
+  ac_build_alias=`$SHELL "$ac_aux_dir/config.guess"`
+test "x$ac_build_alias" = x &&
+  as_fn_error $? "cannot guess build type; you must specify one" "$LINENO" 5
+ac_cv_build=`$SHELL "$ac_aux_dir/config.sub" $ac_build_alias` ||
+  as_fn_error $? "$SHELL $ac_aux_dir/config.sub $ac_build_alias failed" "$LINENO" 5
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
+$as_echo "$ac_cv_build" >&6; }
+case $ac_cv_build in
+*-*-*) ;;
+*) as_fn_error $? "invalid value of canonical build" "$LINENO" 5 ;;
+esac
+build=$ac_cv_build
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_build
+shift
+build_cpu=$1
+build_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+build_os=$*
+IFS=$ac_save_IFS
+case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking host system type" >&5
+$as_echo_n "checking host system type... " >&6; }
+if test "${ac_cv_host+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "x$host_alias" = x; then
+  ac_cv_host=$ac_cv_build
+else
+  ac_cv_host=`$SHELL "$ac_aux_dir/config.sub" $host_alias` ||
+    as_fn_error $? "$SHELL $ac_aux_dir/config.sub $host_alias failed" "$LINENO" 5
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_host" >&5
+$as_echo "$ac_cv_host" >&6; }
+case $ac_cv_host in
+*-*-*) ;;
+*) as_fn_error $? "invalid value of canonical host" "$LINENO" 5 ;;
+esac
+host=$ac_cv_host
+ac_save_IFS=$IFS; IFS='-'
+set x $ac_cv_host
+shift
+host_cpu=$1
+host_vendor=$2
+shift; shift
+# Remember, the first character of IFS is used to create $*,
+# except with old shells:
+host_os=$*
+IFS=$ac_save_IFS
+case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac
+
+
+
+
+
+# Check whether --with-mpfr_include was given.
+if test "${with_mpfr_include+set}" = set; then :
+  withval=$with_mpfr_include; CPPFLAGS="-I$withval $CPPFLAGS"
+fi
+
+
+# Check whether --with-mpfr_lib was given.
+if test "${with_mpfr_lib+set}" = set; then :
+  withval=$with_mpfr_lib; LDFLAGS="-L$withval $LDFLAGS"
+fi
+
+
+# Check whether --with-mpfr was given.
+if test "${with_mpfr+set}" = set; then :
+  withval=$with_mpfr;
+            if test -z "$with_mpfr_include" -a -z "$with_mpfr_lib" ; then
+               CPPFLAGS="-I$withval/include $CPPFLAGS"
+               LDFLAGS="-L$withval/lib $LDFLAGS"
+            else
+               { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "Do not use --with-mpfr and --with-mpfr-include/--with-mpfr-lib options simultaneously.
+See \`config.log' for more details" "$LINENO" 5 ; }
+            fi
+
+fi
+
+
+# Check whether --with-gmp_include was given.
+if test "${with_gmp_include+set}" = set; then :
+  withval=$with_gmp_include; CPPFLAGS="-I$withval $CPPFLAGS"
+fi
+
+
+# Check whether --with-gmp_lib was given.
+if test "${with_gmp_lib+set}" = set; then :
+  withval=$with_gmp_lib; LDFLAGS="-L$withval $LDFLAGS"
+fi
+
+
+# Check whether --with-gmp was given.
+if test "${with_gmp+set}" = set; then :
+  withval=$with_gmp;
+            if test -z "$with_gmp_lib" -a -z "$with_gmp_include" ; then
+               CPPFLAGS="-I$withval/include $CPPFLAGS"
+               LDFLAGS="-L$withval/lib $LDFLAGS"
+            else
+               { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "Do not use --with-gmp and --with-gmp-include/--with-gmp-lib options simultaneously.
+See \`config.log' for more details" "$LINENO" 5 ; }
+            fi
+
+fi
+
+# Check whether --enable-logging was given.
+if test "${enable_logging+set}" = set; then :
+  enableval=$enable_logging; case $enableval in
+                 yes) if test "x$enable_shared" = "xno"; then :
+  as_fn_error $? "Logging works only with shared libraries; do not mix --enable-logging and --disable-shared" "$LINENO" 5
+fi ;;
+                 no)  ;;
+                 *)   as_fn_error $? "Bad value for --enable-logging: Use yes or no" "$LINENO" 5  ;;
+              esac
+
+
+fi
+
+
+
+
+if test -n "$CFLAGS" || test -n "$CC" ; then
+   user_redefine_cc=yes
+fi
+
+# Check for programs
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "gcc", so it can be a program name with args.
+set dummy gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+if test -z "$CC"; then
+          if test -n "$ac_tool_prefix"; then
+    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="${ac_tool_prefix}cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+fi
+if test -z "$CC"; then
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+  ac_prog_rejected=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
+       ac_prog_rejected=yes
+       continue
+     fi
+    ac_cv_prog_CC="cc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+if test $ac_prog_rejected = yes; then
+  # We found a bogon in the path, so make sure we never use it.
+  set dummy $ac_cv_prog_CC
+  shift
+  if test $# != 0; then
+    # We chose a different compiler from the bogus one.
+    # However, it has the same basename, so the bogon will be chosen
+    # first if we set CC to just the basename; use the full file name.
+    shift
+    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
+  fi
+fi
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in cl.exe
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$CC" && break
+  done
+fi
+if test -z "$CC"; then
+  ac_ct_CC=$CC
+  for ac_prog in cl.exe
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_CC="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
+$as_echo "$ac_ct_CC" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_CC" && break
+done
+
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    CC=$ac_ct_CC
+  fi
+fi
+
+fi
+
+
+test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "no acceptable C compiler found in \$PATH
+See \`config.log' for more details" "$LINENO" 5 ; }
+
+# Provide some information about the compiler.
+$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
+set X $ac_compile
+ac_compiler=$2
+for ac_option in --version -v -V -qversion; do
+  { { ac_try="$ac_compiler $ac_option >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    sed '10a\
+... rest of stderr output deleted ...
+         10q' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+  fi
+  rm -f conftest.er1 conftest.err
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+done
+
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out"
+# Try to create an executable without -o first, disregard a.out.
+# It will help us diagnose broken compilers, and finding out an intuition
+# of exeext.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
+$as_echo_n "checking whether the C compiler works... " >&6; }
+ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
+
+# The possible output files:
+ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"
+
+ac_rmfiles=
+for ac_file in $ac_files
+do
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
+    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
+  esac
+done
+rm -f $ac_rmfiles
+
+if { { ac_try="$ac_link_default"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link_default") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
+# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
+# in a Makefile.  We should not override ac_cv_exeext if it was cached,
+# so that the user can short-circuit this test for compilers unknown to
+# Autoconf.
+for ac_file in $ac_files ''
+do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )
+	;;
+    [ab].out )
+	# We found the default executable, but exeext='' is most
+	# certainly right.
+	break;;
+    *.* )
+	if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no;
+	then :; else
+	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	fi
+	# We set ac_cv_exeext here because the later test for it is not
+	# safe: cross compilers may not add the suffix if given an `-o'
+	# argument, so we may need to know it at that point already.
+	# Even if this section looks crufty: it has the advantage of
+	# actually working.
+	break;;
+    * )
+	break;;
+  esac
+done
+test "$ac_cv_exeext" = no && ac_cv_exeext=
+
+else
+  ac_file=''
+fi
+if test -z "$ac_file"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+$as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error 77 "C compiler cannot create executables
+See \`config.log' for more details" "$LINENO" 5 ; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
+$as_echo_n "checking for C compiler default output file name... " >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
+$as_echo "$ac_file" >&6; }
+ac_exeext=$ac_cv_exeext
+
+rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out
+ac_clean_files=$ac_clean_files_save
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5
+$as_echo_n "checking for suffix of executables... " >&6; }
+if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  # If both `conftest.exe' and `conftest' are `present' (well, observable)
+# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
+# work properly (i.e., refer to `conftest.exe'), while it won't with
+# `rm'.
+for ac_file in conftest.exe conftest conftest.*; do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
+    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	  break;;
+    * ) break;;
+  esac
+done
+else
+  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "cannot compute suffix of executables: cannot compile and link
+See \`config.log' for more details" "$LINENO" 5 ; }
+fi
+rm -f conftest conftest$ac_cv_exeext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
+$as_echo "$ac_cv_exeext" >&6; }
+
+rm -f conftest.$ac_ext
+EXEEXT=$ac_cv_exeext
+ac_exeext=$EXEEXT
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdio.h>
+int
+main ()
+{
+FILE *f = fopen ("conftest.out", "w");
+ return ferror (f) || fclose (f) != 0;
+
+  ;
+  return 0;
+}
+_ACEOF
+ac_clean_files="$ac_clean_files conftest.out"
+# Check that the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
+$as_echo_n "checking whether we are cross compiling... " >&6; }
+if test "$cross_compiling" != yes; then
+  { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+  if { ac_try='./conftest$ac_cv_exeext'
+  { { case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_try") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; }; then
+    cross_compiling=no
+  else
+    if test "$cross_compiling" = maybe; then
+	cross_compiling=yes
+    else
+	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details" "$LINENO" 5 ; }
+    fi
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
+$as_echo "$cross_compiling" >&6; }
+
+rm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out
+ac_clean_files=$ac_clean_files_save
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5
+$as_echo_n "checking for suffix of object files... " >&6; }
+if test "${ac_cv_objext+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.o conftest.obj
+if { { ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_compile") 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then :
+  for ac_file in conftest.o conftest.obj conftest.*; do
+  test -f "$ac_file" || continue;
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;
+    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
+       break;;
+  esac
+done
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "cannot compute suffix of object files: cannot compile
+See \`config.log' for more details" "$LINENO" 5 ; }
+fi
+rm -f conftest.$ac_cv_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext" >&5
+$as_echo "$ac_cv_objext" >&6; }
+OBJEXT=$ac_cv_objext
+ac_objext=$OBJEXT
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
+$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
+if test "${ac_cv_c_compiler_gnu+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_compiler_gnu=yes
+else
+  ac_compiler_gnu=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_c_compiler_gnu=$ac_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
+$as_echo "$ac_cv_c_compiler_gnu" >&6; }
+if test $ac_compiler_gnu = yes; then
+  GCC=yes
+else
+  GCC=
+fi
+ac_test_CFLAGS=${CFLAGS+set}
+ac_save_CFLAGS=$CFLAGS
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
+$as_echo_n "checking whether $CC accepts -g... " >&6; }
+if test "${ac_cv_prog_cc_g+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_save_c_werror_flag=$ac_c_werror_flag
+   ac_c_werror_flag=yes
+   ac_cv_prog_cc_g=no
+   CFLAGS="-g"
+   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+else
+  CFLAGS=""
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+else
+  ac_c_werror_flag=$ac_save_c_werror_flag
+	 CFLAGS="-g"
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_g=yes
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_c_werror_flag=$ac_save_c_werror_flag
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
+$as_echo "$ac_cv_prog_cc_g" >&6; }
+if test "$ac_test_CFLAGS" = set; then
+  CFLAGS=$ac_save_CFLAGS
+elif test $ac_cv_prog_cc_g = yes; then
+  if test "$GCC" = yes; then
+    CFLAGS="-g -O2"
+  else
+    CFLAGS="-g"
+  fi
+else
+  if test "$GCC" = yes; then
+    CFLAGS="-O2"
+  else
+    CFLAGS=
+  fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
+$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_prog_cc_c89=no
+ac_save_CC=$CC
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_c89=$ac_arg
+fi
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
+$as_echo "none needed" >&6; } ;;
+  xno)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
+$as_echo "unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
+$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c89" != xno; then :
+
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+DEPDIR="${am__leading_dot}deps"
+
+ac_config_commands="$ac_config_commands depfiles"
+
+
+am_make=${MAKE-make}
+cat > confinc << 'END'
+am__doit:
+	@echo this is the am__doit target
+.PHONY: am__doit
+END
+# If we don't find an include directive, just comment out the code.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for style of include used by $am_make" >&5
+$as_echo_n "checking for style of include used by $am_make... " >&6; }
+am__include="#"
+am__quote=
+_am_result=none
+# First try GNU make style include.
+echo "include confinc" > confmf
+# Ignore all kinds of additional output from `make'.
+case `$am_make -s -f confmf 2> /dev/null` in #(
+*the\ am__doit\ target*)
+  am__include=include
+  am__quote=
+  _am_result=GNU
+  ;;
+esac
+# Now try BSD make style include.
+if test "$am__include" = "#"; then
+   echo '.include "confinc"' > confmf
+   case `$am_make -s -f confmf 2> /dev/null` in #(
+   *the\ am__doit\ target*)
+     am__include=.include
+     am__quote="\""
+     _am_result=BSD
+     ;;
+   esac
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $_am_result" >&5
+$as_echo "$_am_result" >&6; }
+rm -f confinc confmf
+
+# Check whether --enable-dependency-tracking was given.
+if test "${enable_dependency_tracking+set}" = set; then :
+  enableval=$enable_dependency_tracking;
+fi
+
+if test "x$enable_dependency_tracking" != xno; then
+  am_depcomp="$ac_aux_dir/depcomp"
+  AMDEPBACKSLASH='\'
+fi
+ if test "x$enable_dependency_tracking" != xno; then
+  AMDEP_TRUE=
+  AMDEP_FALSE='#'
+else
+  AMDEP_TRUE='#'
+  AMDEP_FALSE=
+fi
+
+
+
+depcc="$CC"   am_compiler_list=
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
+$as_echo_n "checking dependency style of $depcc... " >&6; }
+if test "${am_cv_CC_dependencies_compiler_type+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
+  # We make a subdir and do the tests there.  Otherwise we can end up
+  # making bogus files that we don't know about and never remove.  For
+  # instance it was reported that on HP-UX the gcc test will end up
+  # making a dummy file named `D' -- because `-MD' means `put the output
+  # in D'.
+  mkdir conftest.dir
+  # Copy depcomp to subdir because otherwise we won't find it if we're
+  # using a relative directory.
+  cp "$am_depcomp" conftest.dir
+  cd conftest.dir
+  # We will build objects and dependencies in a subdirectory because
+  # it helps to detect inapplicable dependency modes.  For instance
+  # both Tru64's cc and ICC support -MD to output dependencies as a
+  # side effect of compilation, but ICC will put the dependencies in
+  # the current directory while Tru64 will put them in the object
+  # directory.
+  mkdir sub
+
+  am_cv_CC_dependencies_compiler_type=none
+  if test "$am_compiler_list" = ""; then
+     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
+  fi
+  am__universal=false
+  case " $depcc " in #(
+     *\ -arch\ *\ -arch\ *) am__universal=true ;;
+     esac
+
+  for depmode in $am_compiler_list; do
+    # Setup a source with many dependencies, because some compilers
+    # like to wrap large dependency lists on column 80 (with \), and
+    # we should not choose a depcomp mode which is confused by this.
+    #
+    # We need to recreate these files for each test, as the compiler may
+    # overwrite some of them when testing with obscure command lines.
+    # This happens at least with the AIX C compiler.
+    : > sub/conftest.c
+    for i in 1 2 3 4 5 6; do
+      echo '#include "conftst'$i'.h"' >> sub/conftest.c
+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
+      # Solaris 8's {/usr,}/bin/sh.
+      touch sub/conftst$i.h
+    done
+    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
+
+    # We check with `-c' and `-o' for the sake of the "dashmstdout"
+    # mode.  It turns out that the SunPro C++ compiler does not properly
+    # handle `-M -o', and we need to detect this.  Also, some Intel
+    # versions had trouble with output in subdirs
+    am__obj=sub/conftest.${OBJEXT-o}
+    am__minus_obj="-o $am__obj"
+    case $depmode in
+    gcc)
+      # This depmode causes a compiler race in universal mode.
+      test "$am__universal" = false || continue
+      ;;
+    nosideeffect)
+      # after this tag, mechanisms are not by side-effect, so they'll
+      # only be used when explicitly requested
+      if test "x$enable_dependency_tracking" = xyes; then
+	continue
+      else
+	break
+      fi
+      ;;
+    msvisualcpp | msvcmsys)
+      # This compiler won't grok `-c -o', but also, the minuso test has
+      # not run yet.  These depmodes are late enough in the game, and
+      # so weak that their functioning should not be impacted.
+      am__obj=conftest.${OBJEXT-o}
+      am__minus_obj=
+      ;;
+    none) break ;;
+    esac
+    if depmode=$depmode \
+       source=sub/conftest.c object=$am__obj \
+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
+       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
+         >/dev/null 2>conftest.err &&
+       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+      # icc doesn't choke on unknown options, it will just issue warnings
+      # or remarks (even with -Werror).  So we grep stderr for any message
+      # that says an option was ignored or not supported.
+      # When given -MP, icc 7.0 and 7.1 complain thusly:
+      #   icc: Command line warning: ignoring option '-M'; no argument required
+      # The diagnosis changed in icc 8.0:
+      #   icc: Command line remark: option '-MP' not supported
+      if (grep 'ignoring option' conftest.err ||
+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+        am_cv_CC_dependencies_compiler_type=$depmode
+        break
+      fi
+    fi
+  done
+
+  cd ..
+  rm -rf conftest.dir
+else
+  am_cv_CC_dependencies_compiler_type=none
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_CC_dependencies_compiler_type" >&5
+$as_echo "$am_cv_CC_dependencies_compiler_type" >&6; }
+CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type
+
+ if
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_CC_dependencies_compiler_type" = gcc3; then
+  am__fastdepCC_TRUE=
+  am__fastdepCC_FALSE='#'
+else
+  am__fastdepCC_TRUE='#'
+  am__fastdepCC_FALSE=
+fi
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for gmp.h" >&5
+$as_echo_n "checking for gmp.h... " >&6; }
+
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include "gmp.h"
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+
+ { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+ as_fn_error $? "gmp.h can't be found, or is unusable." "$LINENO" 5
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test -z "$user_redefine_cc" ; then
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5
+$as_echo_n "checking for grep that handles long lines and -e... " >&6; }
+if test "${ac_cv_path_GREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$GREP"; then
+  ac_path_GREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in grep ggrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_GREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_GREP" && $as_test_x "$ac_path_GREP"; } || continue
+# Check for GNU ac_path_GREP and select it if it is found.
+  # Check for GNU $ac_path_GREP
+case `"$ac_path_GREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_GREP="$ac_path_GREP" ac_path_GREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'GREP' >> "conftest.nl"
+    "$ac_path_GREP" -e 'GREP$' -e '-(cannot match)-' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_GREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_GREP="$ac_path_GREP"
+      ac_path_GREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_GREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_GREP"; then
+    as_fn_error $? "no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_GREP=$GREP
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP" >&5
+$as_echo "$ac_cv_path_GREP" >&6; }
+ GREP="$ac_cv_path_GREP"
+
+
+
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CC and CFLAGS in gmp.h" >&5
+$as_echo_n "checking for CC and CFLAGS in gmp.h... " >&6; }
+   ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+$as_echo_n "checking how to run the C preprocessor... " >&6; }
+# On Suns, sometimes $CPP names a directory.
+if test -n "$CPP" && test -d "$CPP"; then
+  CPP=
+fi
+if test -z "$CPP"; then
+  if test "${ac_cv_prog_CPP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+      # Double quotes because CPP needs to be expanded
+    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+    do
+      ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+		     Syntax error
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+
+else
+  # Broken: fails on valid input.
+continue
+fi
+rm -f conftest.err conftest.i conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  # Broken: success on invalid input.
+continue
+else
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+rm -f conftest.err conftest.i conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.i conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then :
+  break
+fi
+
+    done
+    ac_cv_prog_CPP=$CPP
+
+fi
+  CPP=$ac_cv_prog_CPP
+else
+  ac_cv_prog_CPP=$CPP
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
+$as_echo "$CPP" >&6; }
+ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+		     Syntax error
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+
+else
+  # Broken: fails on valid input.
+continue
+fi
+rm -f conftest.err conftest.i conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  # Broken: success on invalid input.
+continue
+else
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+rm -f conftest.err conftest.i conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.i conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then :
+
+else
+  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
+See \`config.log' for more details" "$LINENO" 5 ; }
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for egrep" >&5
+$as_echo_n "checking for egrep... " >&6; }
+if test "${ac_cv_path_EGREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1
+   then ac_cv_path_EGREP="$GREP -E"
+   else
+     if test -z "$EGREP"; then
+  ac_path_EGREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in egrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_EGREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_EGREP" && $as_test_x "$ac_path_EGREP"; } || continue
+# Check for GNU ac_path_EGREP and select it if it is found.
+  # Check for GNU $ac_path_EGREP
+case `"$ac_path_EGREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_EGREP="$ac_path_EGREP" ac_path_EGREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'EGREP' >> "conftest.nl"
+    "$ac_path_EGREP" 'EGREP$' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_EGREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_EGREP="$ac_path_EGREP"
+      ac_path_EGREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_EGREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_EGREP"; then
+    as_fn_error $? "no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_EGREP=$EGREP
+fi
+
+   fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP" >&5
+$as_echo "$ac_cv_path_EGREP" >&6; }
+ EGREP="$ac_cv_path_EGREP"
+
+
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
+$as_echo_n "checking for a sed that does not truncate output... " >&6; }
+if test "${ac_cv_path_SED+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+     for ac_i in 1 2 3 4 5 6 7; do
+       ac_script="$ac_script$as_nl$ac_script"
+     done
+     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
+     { ac_script=; unset ac_script;}
+     if test -z "$SED"; then
+  ac_path_SED_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_SED" && $as_test_x "$ac_path_SED"; } || continue
+# Check for GNU ac_path_SED and select it if it is found.
+  # Check for GNU $ac_path_SED
+case `"$ac_path_SED" --version 2>&1` in
+*GNU*)
+  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo '' >> "conftest.nl"
+    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_SED_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_SED="$ac_path_SED"
+      ac_path_SED_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_SED_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_SED"; then
+    as_fn_error $? "no acceptable sed could be found in \$PATH" "$LINENO" 5
+  fi
+else
+  ac_cv_path_SED=$SED
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
+$as_echo "$ac_cv_path_SED" >&6; }
+ SED="$ac_cv_path_SED"
+  rm -f conftest.sed
+
+   # Get CC
+   echo "#include \"gmp.h\"" >  conftest.c
+   echo "MPC_OPTION __GMP_CC"           >> conftest.c
+   GMP_CC=`$CPP $CPPFLAGS conftest.c 2> /dev/null | $EGREP MPC_OPTION | $SED -e 's/MPC_OPTION //g' | $SED -e 's/"//g'`
+   #Get CFLAGS
+   echo "#include \"gmp.h\"" >  conftest.c
+   echo "MPC_OPTION __GMP_CFLAGS"           >> conftest.c
+   GMP_CFLAGS=`$CPP $CPPFLAGS conftest.c 2> /dev/null | $EGREP MPC_OPTION | $SED -e 's/MPC_OPTION //g'| $SED -e 's/"//g'`
+   rm -f conftest.c
+   if test "x$GMP_CFLAGS" = "x__GMP_CFLAGS" -o "x$GMP_CC" = "x__GMP_CC" ; then
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+      GMP_CFLAGS=
+      GMP_CC=
+   else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes CC=$GMP_CC CFLAGS=$GMP_CFLAGS" >&5
+$as_echo "yes CC=$GMP_CC CFLAGS=$GMP_CFLAGS" >&6; }
+   fi
+
+      if test -n "$GMP_CFLAGS" ; then
+      old_cflags=$CFLAGS
+      old_cc=$CC
+      CFLAGS=$GMP_CFLAGS
+      CC=$GMP_CC
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for CC=$GMP_CC and CFLAGS=$GMP_CFLAGS" >&5
+$as_echo_n "checking for CC=$GMP_CC and CFLAGS=$GMP_CFLAGS... " >&6; }
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+/*hello*/
+int
+main ()
+{
+/*world*/
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+         { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+else
+
+         { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+         CFLAGS=$old_cflags
+         CC=$old_cc
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+            cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+   #ifndef __GNUC__
+   #error "GCC Not Found"
+   error
+   #endif
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+      GCC=yes
+
+else
+
+      GCC=no
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   fi
+
+
+fi
+
+
+case $host in
+  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for DLL/static GMP" >&5
+$as_echo_n "checking for DLL/static GMP... " >&6; }
+   if test "$enable_shared" = yes; then
+     LDFLAGS="$LDFLAGS -no-undefined"
+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include "gmp.h"
+#if !__GMP_LIBGMP_DLL
+#error
+error
+#endif
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: DLL" >&5
+$as_echo "DLL" >&6; }
+else
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: static" >&5
+$as_echo "static" >&6; }
+  as_fn_error $? "gmp.h isn't a DLL: use --enable-static --disable-shared" "$LINENO" 5
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include "mpfr.h"
+#if !__GMP_LIBGMP_DLL
+#error
+error
+#endif
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: DLL" >&5
+$as_echo "DLL" >&6; }
+else
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: static" >&5
+$as_echo "static" >&6; }
+  as_fn_error $? "gmp.h isn't a DLL: use --enable-static --disable-shared" "$LINENO" 5
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   else
+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include "gmp.h"
+#if __GMP_LIBGMP_DLL
+#error
+error
+#endif
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: static" >&5
+$as_echo "static" >&6; }
+else
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: DLL" >&5
+$as_echo "DLL" >&6; }
+  as_fn_error $? "gmp.h is a DLL: use --disable-static --enable-shared" "$LINENO" 5
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  fi
+  ;;
+
+esac
+
+
+case `pwd` in
+  *\ * | *\	*)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&5
+$as_echo "$as_me: WARNING: Libtool does not cope well with whitespace in \`pwd\`" >&2;} ;;
+esac
+
+
+
+macro_version='2.2.6b'
+macro_revision='1.3017'
+
+
+
+
+
+
+
+
+
+
+
+
+
+ltmain="$ac_aux_dir/ltmain.sh"
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
+$as_echo_n "checking for a sed that does not truncate output... " >&6; }
+if test "${ac_cv_path_SED+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+     for ac_i in 1 2 3 4 5 6 7; do
+       ac_script="$ac_script$as_nl$ac_script"
+     done
+     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
+     { ac_script=; unset ac_script;}
+     if test -z "$SED"; then
+  ac_path_SED_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_SED" && $as_test_x "$ac_path_SED"; } || continue
+# Check for GNU ac_path_SED and select it if it is found.
+  # Check for GNU $ac_path_SED
+case `"$ac_path_SED" --version 2>&1` in
+*GNU*)
+  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo '' >> "conftest.nl"
+    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_SED_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_SED="$ac_path_SED"
+      ac_path_SED_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_SED_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_SED"; then
+    as_fn_error $? "no acceptable sed could be found in \$PATH" "$LINENO" 5
+  fi
+else
+  ac_cv_path_SED=$SED
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
+$as_echo "$ac_cv_path_SED" >&6; }
+ SED="$ac_cv_path_SED"
+  rm -f conftest.sed
+
+test -z "$SED" && SED=sed
+Xsed="$SED -e 1s/^X//"
+
+
+
+
+
+
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fgrep" >&5
+$as_echo_n "checking for fgrep... " >&6; }
+if test "${ac_cv_path_FGREP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if echo 'ab*c' | $GREP -F 'ab*c' >/dev/null 2>&1
+   then ac_cv_path_FGREP="$GREP -F"
+   else
+     if test -z "$FGREP"; then
+  ac_path_FGREP_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in fgrep; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_FGREP="$as_dir/$ac_prog$ac_exec_ext"
+      { test -f "$ac_path_FGREP" && $as_test_x "$ac_path_FGREP"; } || continue
+# Check for GNU ac_path_FGREP and select it if it is found.
+  # Check for GNU $ac_path_FGREP
+case `"$ac_path_FGREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_FGREP="$ac_path_FGREP" ac_path_FGREP_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo 'FGREP' >> "conftest.nl"
+    "$ac_path_FGREP" FGREP < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_FGREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_FGREP="$ac_path_FGREP"
+      ac_path_FGREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_FGREP_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_FGREP"; then
+    as_fn_error $? "no acceptable fgrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
+  fi
+else
+  ac_cv_path_FGREP=$FGREP
+fi
+
+   fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_FGREP" >&5
+$as_echo "$ac_cv_path_FGREP" >&6; }
+ FGREP="$ac_cv_path_FGREP"
+
+
+test -z "$GREP" && GREP=grep
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+# Check whether --with-gnu-ld was given.
+if test "${with_gnu_ld+set}" = set; then :
+  withval=$with_gnu_ld; test "$withval" = no || with_gnu_ld=yes
+else
+  with_gnu_ld=no
+fi
+
+ac_prog=ld
+if test "$GCC" = yes; then
+  # Check if gcc -print-prog-name=ld gives a path.
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
+$as_echo_n "checking for ld used by $CC... " >&6; }
+  case $host in
+  *-*-mingw*)
+    # gcc leaves a trailing carriage return which upsets mingw
+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
+  *)
+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
+  esac
+  case $ac_prog in
+    # Accept absolute paths.
+    [\\/]* | ?:[\\/]*)
+      re_direlt='/[^/][^/]*/\.\./'
+      # Canonicalize the pathname of ld
+      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
+      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
+	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
+      done
+      test -z "$LD" && LD="$ac_prog"
+      ;;
+  "")
+    # If it fails, then pretend we aren't using GCC.
+    ac_prog=ld
+    ;;
+  *)
+    # If it is relative, then search for the first ld in PATH.
+    with_gnu_ld=unknown
+    ;;
+  esac
+elif test "$with_gnu_ld" = yes; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for GNU ld" >&5
+$as_echo_n "checking for GNU ld... " >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for non-GNU ld" >&5
+$as_echo_n "checking for non-GNU ld... " >&6; }
+fi
+if test "${lt_cv_path_LD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$LD"; then
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for ac_dir in $PATH; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
+      lt_cv_path_LD="$ac_dir/$ac_prog"
+      # Check to see if the program is GNU ld.  I'd rather use --version,
+      # but apparently some variants of GNU ld only accept -v.
+      # Break only if it was the GNU/non-GNU ld that we prefer.
+      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
+      *GNU* | *'with BFD'*)
+	test "$with_gnu_ld" != no && break
+	;;
+      *)
+	test "$with_gnu_ld" != yes && break
+	;;
+      esac
+    fi
+  done
+  IFS="$lt_save_ifs"
+else
+  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+fi
+fi
+
+LD="$lt_cv_path_LD"
+if test -n "$LD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
+$as_echo "$LD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+test -z "$LD" && as_fn_error $? "no acceptable ld found in \$PATH" "$LINENO" 5
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld" >&5
+$as_echo_n "checking if the linker ($LD) is GNU ld... " >&6; }
+if test "${lt_cv_prog_gnu_ld+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  # I'd rather use --version here, but apparently some GNU lds only accept -v.
+case `$LD -v 2>&1 </dev/null` in
+*GNU* | *'with BFD'*)
+  lt_cv_prog_gnu_ld=yes
+  ;;
+*)
+  lt_cv_prog_gnu_ld=no
+  ;;
+esac
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld" >&5
+$as_echo "$lt_cv_prog_gnu_ld" >&6; }
+with_gnu_ld=$lt_cv_prog_gnu_ld
+
+
+
+
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for BSD- or MS-compatible name lister (nm)" >&5
+$as_echo_n "checking for BSD- or MS-compatible name lister (nm)... " >&6; }
+if test "${lt_cv_path_NM+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NM"; then
+  # Let the user override the test.
+  lt_cv_path_NM="$NM"
+else
+  lt_nm_to_check="${ac_tool_prefix}nm"
+  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
+    lt_nm_to_check="$lt_nm_to_check nm"
+  fi
+  for lt_tmp_nm in $lt_nm_to_check; do
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
+      IFS="$lt_save_ifs"
+      test -z "$ac_dir" && ac_dir=.
+      tmp_nm="$ac_dir/$lt_tmp_nm"
+      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
+	# Check to see if the nm accepts a BSD-compat flag.
+	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
+	#   nm: unknown option "B" ignored
+	# Tru64's nm complains that /dev/null is an invalid object file
+	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
+	*/dev/null* | *'Invalid file or object type'*)
+	  lt_cv_path_NM="$tmp_nm -B"
+	  break
+	  ;;
+	*)
+	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
+	  */dev/null*)
+	    lt_cv_path_NM="$tmp_nm -p"
+	    break
+	    ;;
+	  *)
+	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
+	    continue # so that we can try to find one that supports BSD flags
+	    ;;
+	  esac
+	  ;;
+	esac
+      fi
+    done
+    IFS="$lt_save_ifs"
+  done
+  : ${lt_cv_path_NM=no}
+fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_NM" >&5
+$as_echo "$lt_cv_path_NM" >&6; }
+if test "$lt_cv_path_NM" != "no"; then
+  NM="$lt_cv_path_NM"
+else
+  # Didn't find any BSD compatible name lister, look for dumpbin.
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in "dumpbin -symbols" "link -dump -symbols"
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DUMPBIN+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DUMPBIN"; then
+  ac_cv_prog_DUMPBIN="$DUMPBIN" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DUMPBIN="$ac_tool_prefix$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DUMPBIN=$ac_cv_prog_DUMPBIN
+if test -n "$DUMPBIN"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DUMPBIN" >&5
+$as_echo "$DUMPBIN" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+    test -n "$DUMPBIN" && break
+  done
+fi
+if test -z "$DUMPBIN"; then
+  ac_ct_DUMPBIN=$DUMPBIN
+  for ac_prog in "dumpbin -symbols" "link -dump -symbols"
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_DUMPBIN+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_DUMPBIN"; then
+  ac_cv_prog_ac_ct_DUMPBIN="$ac_ct_DUMPBIN" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_DUMPBIN="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_DUMPBIN=$ac_cv_prog_ac_ct_DUMPBIN
+if test -n "$ac_ct_DUMPBIN"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DUMPBIN" >&5
+$as_echo "$ac_ct_DUMPBIN" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  test -n "$ac_ct_DUMPBIN" && break
+done
+
+  if test "x$ac_ct_DUMPBIN" = x; then
+    DUMPBIN=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    DUMPBIN=$ac_ct_DUMPBIN
+  fi
+fi
+
+
+  if test "$DUMPBIN" != ":"; then
+    NM="$DUMPBIN"
+  fi
+fi
+test -z "$NM" && NM=nm
+
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking the name lister ($NM) interface" >&5
+$as_echo_n "checking the name lister ($NM) interface... " >&6; }
+if test "${lt_cv_nm_interface+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_nm_interface="BSD nm"
+  echo "int some_variable = 0;" > conftest.$ac_ext
+  (eval echo "\"\$as_me:5069: $ac_compile\"" >&5)
+  (eval "$ac_compile" 2>conftest.err)
+  cat conftest.err >&5
+  (eval echo "\"\$as_me:5072: $NM \\\"conftest.$ac_objext\\\"\"" >&5)
+  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
+  cat conftest.err >&5
+  (eval echo "\"\$as_me:5075: output\"" >&5)
+  cat conftest.out >&5
+  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
+    lt_cv_nm_interface="MS dumpbin"
+  fi
+  rm -f conftest*
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_nm_interface" >&5
+$as_echo "$lt_cv_nm_interface" >&6; }
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ln -s works" >&5
+$as_echo_n "checking whether ln -s works... " >&6; }
+LN_S=$as_ln_s
+if test "$LN_S" = "ln -s"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no, using $LN_S" >&5
+$as_echo "no, using $LN_S" >&6; }
+fi
+
+# find the maximum length of command line arguments
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking the maximum length of command line arguments" >&5
+$as_echo_n "checking the maximum length of command line arguments... " >&6; }
+if test "${lt_cv_sys_max_cmd_len+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+    i=0
+  teststring="ABCD"
+
+  case $build_os in
+  msdosdjgpp*)
+    # On DJGPP, this test can blow up pretty badly due to problems in libc
+    # (any single argument exceeding 2000 bytes causes a buffer overrun
+    # during glob expansion).  Even if it were fixed, the result of this
+    # check would be larger than it should be.
+    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
+    ;;
+
+  gnu*)
+    # Under GNU Hurd, this test is not required because there is
+    # no limit to the length of command line arguments.
+    # Libtool will interpret -1 as no limit whatsoever
+    lt_cv_sys_max_cmd_len=-1;
+    ;;
+
+  cygwin* | mingw* | cegcc*)
+    # On Win9x/ME, this test blows up -- it succeeds, but takes
+    # about 5 minutes as the teststring grows exponentially.
+    # Worse, since 9x/ME are not pre-emptively multitasking,
+    # you end up with a "frozen" computer, even though with patience
+    # the test eventually succeeds (with a max line length of 256k).
+    # Instead, let's just punt: use the minimum linelength reported by
+    # all of the supported platforms: 8192 (on NT/2K/XP).
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  amigaos*)
+    # On AmigaOS with pdksh, this test takes hours, literally.
+    # So we just punt and use a minimum line length of 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+    # This has been around since 386BSD, at least.  Likely further.
+    if test -x /sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
+    elif test -x /usr/sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
+    else
+      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
+    fi
+    # And add a safety zone
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    ;;
+
+  interix*)
+    # We know the value 262144 and hardcode it with a safety zone (like BSD)
+    lt_cv_sys_max_cmd_len=196608
+    ;;
+
+  osf*)
+    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
+    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
+    # nice to cause kernel panics so lets avoid the loop below.
+    # First set a reasonable default.
+    lt_cv_sys_max_cmd_len=16384
+    #
+    if test -x /sbin/sysconfig; then
+      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
+        *1*) lt_cv_sys_max_cmd_len=-1 ;;
+      esac
+    fi
+    ;;
+  sco3.2v5*)
+    lt_cv_sys_max_cmd_len=102400
+    ;;
+  sysv5* | sco5v6* | sysv4.2uw2*)
+    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
+    if test -n "$kargmax"; then
+      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[	 ]//'`
+    else
+      lt_cv_sys_max_cmd_len=32768
+    fi
+    ;;
+  *)
+    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
+    if test -n "$lt_cv_sys_max_cmd_len"; then
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    else
+      # Make teststring a little bigger before we do anything with it.
+      # a 1K string should be a reasonable start.
+      for i in 1 2 3 4 5 6 7 8 ; do
+        teststring=$teststring$teststring
+      done
+      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
+      # If test is not a shell built-in, we'll probably end up computing a
+      # maximum length that is only half of the actual maximum length, but
+      # we can't tell.
+      while { test "X"`$SHELL $0 --fallback-echo "X$teststring$teststring" 2>/dev/null` \
+	         = "XX$teststring$teststring"; } >/dev/null 2>&1 &&
+	      test $i != 17 # 1/2 MB should be enough
+      do
+        i=`expr $i + 1`
+        teststring=$teststring$teststring
+      done
+      # Only check the string length outside the loop.
+      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
+      teststring=
+      # Add a significant safety factor because C++ compilers can tack on
+      # massive amounts of additional arguments before passing them to the
+      # linker.  It appears as though 1/2 is a usable value.
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
+    fi
+    ;;
+  esac
+
+fi
+
+if test -n $lt_cv_sys_max_cmd_len ; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_sys_max_cmd_len" >&5
+$as_echo "$lt_cv_sys_max_cmd_len" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: none" >&5
+$as_echo "none" >&6; }
+fi
+max_cmd_len=$lt_cv_sys_max_cmd_len
+
+
+
+
+
+
+: ${CP="cp -f"}
+: ${MV="mv -f"}
+: ${RM="rm -f"}
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the shell understands some XSI constructs" >&5
+$as_echo_n "checking whether the shell understands some XSI constructs... " >&6; }
+# Try some XSI features
+xsi_shell=no
+( _lt_dummy="a/b/c"
+  test "${_lt_dummy##*/},${_lt_dummy%/*},"${_lt_dummy%"$_lt_dummy"}, \
+      = c,a/b,, \
+    && eval 'test $(( 1 + 1 )) -eq 2 \
+    && test "${#_lt_dummy}" -eq 5' ) >/dev/null 2>&1 \
+  && xsi_shell=yes
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xsi_shell" >&5
+$as_echo "$xsi_shell" >&6; }
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the shell understands \"+=\"" >&5
+$as_echo_n "checking whether the shell understands \"+=\"... " >&6; }
+lt_shell_append=no
+( foo=bar; set foo baz; eval "$1+=\$2" && test "$foo" = barbaz ) \
+    >/dev/null 2>&1 \
+  && lt_shell_append=yes
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_shell_append" >&5
+$as_echo "$lt_shell_append" >&6; }
+
+
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  lt_unset=unset
+else
+  lt_unset=false
+fi
+
+
+
+
+
+# test EBCDIC or ASCII
+case `echo X|tr X '\101'` in
+ A) # ASCII based system
+    # \n is not interpreted correctly by Solaris 8 /usr/ucb/tr
+  lt_SP2NL='tr \040 \012'
+  lt_NL2SP='tr \015\012 \040\040'
+  ;;
+ *) # EBCDIC based system
+  lt_SP2NL='tr \100 \n'
+  lt_NL2SP='tr \r\n \100\100'
+  ;;
+esac
+
+
+
+
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $LD option to reload object files" >&5
+$as_echo_n "checking for $LD option to reload object files... " >&6; }
+if test "${lt_cv_ld_reload_flag+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_ld_reload_flag='-r'
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_reload_flag" >&5
+$as_echo "$lt_cv_ld_reload_flag" >&6; }
+reload_flag=$lt_cv_ld_reload_flag
+case $reload_flag in
+"" | " "*) ;;
+*) reload_flag=" $reload_flag" ;;
+esac
+reload_cmds='$LD$reload_flag -o $output$reload_objs'
+case $host_os in
+  darwin*)
+    if test "$GCC" = yes; then
+      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
+    else
+      reload_cmds='$LD$reload_flag -o $output$reload_objs'
+    fi
+    ;;
+esac
+
+
+
+
+
+
+
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}objdump", so it can be a program name with args.
+set dummy ${ac_tool_prefix}objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OBJDUMP"; then
+  ac_cv_prog_OBJDUMP="$OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OBJDUMP="${ac_tool_prefix}objdump"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OBJDUMP=$ac_cv_prog_OBJDUMP
+if test -n "$OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OBJDUMP" >&5
+$as_echo "$OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OBJDUMP"; then
+  ac_ct_OBJDUMP=$OBJDUMP
+  # Extract the first word of "objdump", so it can be a program name with args.
+set dummy objdump; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OBJDUMP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OBJDUMP"; then
+  ac_cv_prog_ac_ct_OBJDUMP="$ac_ct_OBJDUMP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OBJDUMP="objdump"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OBJDUMP=$ac_cv_prog_ac_ct_OBJDUMP
+if test -n "$ac_ct_OBJDUMP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OBJDUMP" >&5
+$as_echo "$ac_ct_OBJDUMP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OBJDUMP" = x; then
+    OBJDUMP="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OBJDUMP=$ac_ct_OBJDUMP
+  fi
+else
+  OBJDUMP="$ac_cv_prog_OBJDUMP"
+fi
+
+test -z "$OBJDUMP" && OBJDUMP=objdump
+
+
+
+
+
+
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to recognize dependent libraries" >&5
+$as_echo_n "checking how to recognize dependent libraries... " >&6; }
+if test "${lt_cv_deplibs_check_method+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_file_magic_cmd='$MAGIC_CMD'
+lt_cv_file_magic_test_file=
+lt_cv_deplibs_check_method='unknown'
+# Need to set the preceding variable on all platforms that support
+# interlibrary dependencies.
+# 'none' -- dependencies not supported.
+# `unknown' -- same as none, but documents that we really don't know.
+# 'pass_all' -- all dependencies passed with no checks.
+# 'test_compile' -- check by making test program.
+# 'file_magic [[regex]]' -- check by looking for files in library path
+# which responds to the $file_magic_cmd with a given extended regex.
+# If you have `file' or equivalent on your system and you're not sure
+# whether `pass_all' will *always* work, you probably want this one.
+
+case $host_os in
+aix[4-9]*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+beos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+bsdi[45]*)
+  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib)'
+  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_test_file=/shlib/libc.so
+  ;;
+
+cygwin*)
+  # func_win32_libid is a shell function defined in ltmain.sh
+  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+  lt_cv_file_magic_cmd='func_win32_libid'
+  ;;
+
+mingw* | pw32*)
+  # Base MSYS/MinGW do not provide the 'file' command needed by
+  # func_win32_libid shell function, so use a weaker test based on 'objdump',
+  # unless we find 'file', for example because we are cross-compiling.
+  if ( file / ) >/dev/null 2>&1; then
+    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+    lt_cv_file_magic_cmd='func_win32_libid'
+  else
+    lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'
+    lt_cv_file_magic_cmd='$OBJDUMP -f'
+  fi
+  ;;
+
+cegcc)
+  # use the weaker test based on 'objdump'. See mingw*.
+  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'
+  lt_cv_file_magic_cmd='$OBJDUMP -f'
+  ;;
+
+darwin* | rhapsody*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+freebsd* | dragonfly*)
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
+    case $host_cpu in
+    i*86 )
+      # Not sure whether the presence of OpenBSD here was a mistake.
+      # Let's accept both of them until this is cleared up.
+      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[3-9]86 (compact )?demand paged shared library'
+      lt_cv_file_magic_cmd=/usr/bin/file
+      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      ;;
+    esac
+  else
+    lt_cv_deplibs_check_method=pass_all
+  fi
+  ;;
+
+gnu*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+hpux10.20* | hpux11*)
+  lt_cv_file_magic_cmd=/usr/bin/file
+  case $host_cpu in
+  ia64*)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - IA64'
+    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    ;;
+  hppa*64*)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]'
+    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl
+    ;;
+  *)
+    lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|PA-RISC[0-9].[0-9]) shared library'
+    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    ;;
+  esac
+  ;;
+
+interix[3-9]*)
+  # PIC code is broken on Interix 3.x, that's why |\.a not |_pic\.a here
+  lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|\.a)$'
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $LD in
+  *-32|*"-32 ") libmagic=32-bit;;
+  *-n32|*"-n32 ") libmagic=N32;;
+  *-64|*"-64 ") libmagic=64-bit;;
+  *) libmagic=never-match;;
+  esac
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+netbsd* | netbsdelf*-gnu)
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so|_pic\.a)$'
+  fi
+  ;;
+
+newos6*)
+  lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (executable|dynamic lib)'
+  lt_cv_file_magic_cmd=/usr/bin/file
+  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  ;;
+
+*nto* | *qnx*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+openbsd*)
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|\.so|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
+  fi
+  ;;
+
+osf3* | osf4* | osf5*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+rdos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+solaris*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv4 | sysv4.3*)
+  case $host_vendor in
+  motorola)
+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [ML]SB (shared object|dynamic lib) M[0-9][0-9]* Version [0-9]'
+    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    ;;
+  ncr)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  sequent)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method='file_magic ELF [0-9][0-9]*-bit [LM]SB (shared object|dynamic lib )'
+    ;;
+  sni)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method="file_magic ELF [0-9][0-9]*-bit [LM]SB dynamic lib"
+    lt_cv_file_magic_test_file=/lib/libc.so
+    ;;
+  siemens)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  pc)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  esac
+  ;;
+
+tpf*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+esac
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_deplibs_check_method" >&5
+$as_echo "$lt_cv_deplibs_check_method" >&6; }
+file_magic_cmd=$lt_cv_file_magic_cmd
+deplibs_check_method=$lt_cv_deplibs_check_method
+test -z "$deplibs_check_method" && deplibs_check_method=unknown
+
+
+
+
+
+
+
+
+
+
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ar", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_AR="${ac_tool_prefix}ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_AR"; then
+  ac_ct_AR=$AR
+  # Extract the first word of "ar", so it can be a program name with args.
+set dummy ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_AR+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_AR"; then
+  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_AR="ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_AR=$ac_cv_prog_ac_ct_AR
+if test -n "$ac_ct_AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR" >&5
+$as_echo "$ac_ct_AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_AR" = x; then
+    AR="false"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    AR=$ac_ct_AR
+  fi
+else
+  AR="$ac_cv_prog_AR"
+fi
+
+test -z "$AR" && AR=ar
+test -z "$AR_FLAGS" && AR_FLAGS=cru
+
+
+
+
+
+
+
+
+
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $STRIP" >&5
+$as_echo "$STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP" >&5
+$as_echo "$ac_ct_STRIP" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_STRIP" = x; then
+    STRIP=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    STRIP=$ac_ct_STRIP
+  fi
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+test -z "$STRIP" && STRIP=:
+
+
+
+
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $RANLIB" >&5
+$as_echo "$RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_RANLIB"; then
+  ac_ct_RANLIB=$RANLIB
+  # Extract the first word of "ranlib", so it can be a program name with args.
+set dummy ranlib; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_RANLIB"; then
+  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_RANLIB="ranlib"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
+if test -n "$ac_ct_RANLIB"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB" >&5
+$as_echo "$ac_ct_RANLIB" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_RANLIB" = x; then
+    RANLIB=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    RANLIB=$ac_ct_RANLIB
+  fi
+else
+  RANLIB="$ac_cv_prog_RANLIB"
+fi
+
+test -z "$RANLIB" && RANLIB=:
+
+
+
+
+
+
+# Determine commands to create old-style static archives.
+old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'
+old_postinstall_cmds='chmod 644 $oldlib'
+old_postuninstall_cmds=
+
+if test -n "$RANLIB"; then
+  case $host_os in
+  openbsd*)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$oldlib"
+    ;;
+  *)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB \$oldlib"
+    ;;
+  esac
+  old_archive_cmds="$old_archive_cmds~\$RANLIB \$oldlib"
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+
+# Check for command to grab the raw symbol name followed by C symbol from nm.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking command to parse $NM output from $compiler object" >&5
+$as_echo_n "checking command to parse $NM output from $compiler object... " >&6; }
+if test "${lt_cv_sys_global_symbol_pipe+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+# These are sane defaults that work on at least a few old systems.
+# [They come from Ultrix.  What could be older than Ultrix?!! ;)]
+
+# Character class describing NM global symbol codes.
+symcode='[BCDEGRST]'
+
+# Regexp to match symbols that can be accessed directly from C.
+sympat='\([_A-Za-z][_A-Za-z0-9]*\)'
+
+# Define system-specific variables.
+case $host_os in
+aix*)
+  symcode='[BCDT]'
+  ;;
+cygwin* | mingw* | pw32* | cegcc*)
+  symcode='[ABCDGISTW]'
+  ;;
+hpux*)
+  if test "$host_cpu" = ia64; then
+    symcode='[ABCDEGRST]'
+  fi
+  ;;
+irix* | nonstopux*)
+  symcode='[BCDEGRST]'
+  ;;
+osf*)
+  symcode='[BCDEGQRST]'
+  ;;
+solaris*)
+  symcode='[BDRT]'
+  ;;
+sco3.2v5*)
+  symcode='[DT]'
+  ;;
+sysv4.2uw2*)
+  symcode='[DT]'
+  ;;
+sysv5* | sco5v6* | unixware* | OpenUNIX*)
+  symcode='[ABDT]'
+  ;;
+sysv4)
+  symcode='[DFNSTU]'
+  ;;
+esac
+
+# If we're using GNU nm, then use its standard symbol codes.
+case `$NM -V 2>&1` in
+*GNU* | *'with BFD'*)
+  symcode='[ABCDGIRSTW]' ;;
+esac
+
+# Transform an extracted symbol line into a proper C declaration.
+# Some systems (esp. on ia64) link data and code symbols differently,
+# so use this general approach.
+lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+
+# Transform an extracted symbol line into symbol name and symbol address
+lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"\2\", (void *) \&\2},/p'"
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="sed -n -e 's/^: \([^ ]*\) $/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([^ ]*\) \(lib[^ ]*\)$/  {\"\2\", (void *) \&\2},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"lib\2\", (void *) \&\2},/p'"
+
+# Handle CRLF in mingw tool chain
+opt_cr=
+case $build_os in
+mingw*)
+  opt_cr=`$ECHO 'x\{0,1\}' | tr x '\015'` # option cr in regexp
+  ;;
+esac
+
+# Try without a prefix underscore, then with it.
+for ac_symprfx in "" "_"; do
+
+  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.
+  symxfrm="\\1 $ac_symprfx\\2 \\2"
+
+  # Write the raw and C identifiers.
+  if test "$lt_cv_nm_interface" = "MS dumpbin"; then
+    # Fake it for dumpbin and say T for any non-static function
+    # and D for any global variable.
+    # Also find C++ and __fastcall symbols from MSVC++,
+    # which start with @ or ?.
+    lt_cv_sys_global_symbol_pipe="$AWK '"\
+"     {last_section=section; section=\$ 3};"\
+"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};"\
+"     \$ 0!~/External *\|/{next};"\
+"     / 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};"\
+"     {if(hide[section]) next};"\
+"     {f=0}; \$ 0~/\(\).*\|/{f=1}; {printf f ? \"T \" : \"D \"};"\
+"     {split(\$ 0, a, /\||\r/); split(a[2], s)};"\
+"     s[1]~/^[@?]/{print s[1], s[1]; next};"\
+"     s[1]~prfx {split(s[1],t,\"@\"); print t[1], substr(t[1],length(prfx))}"\
+"     ' prfx=^$ac_symprfx"
+  else
+    lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[	 ]\($symcode$symcode*\)[	 ][	 ]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
+  fi
+
+  # Check to see that the pipe works correctly.
+  pipe_works=no
+
+  rm -f conftest*
+  cat > conftest.$ac_ext <<_LT_EOF
+#ifdef __cplusplus
+extern "C" {
+#endif
+char nm_test_var;
+void nm_test_func(void);
+void nm_test_func(void){}
+#ifdef __cplusplus
+}
+#endif
+int main(){nm_test_var='a';nm_test_func();return(0);}
+_LT_EOF
+
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    # Now try to grab the symbols.
+    nlist=conftest.nm
+    if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist\""; } >&5
+  (eval $NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s "$nlist"; then
+      # Try sorting and uniquifying the output.
+      if sort "$nlist" | uniq > "$nlist"T; then
+	mv -f "$nlist"T "$nlist"
+      else
+	rm -f "$nlist"T
+      fi
+
+      # Make sure that we snagged all the symbols we need.
+      if $GREP ' nm_test_var$' "$nlist" >/dev/null; then
+	if $GREP ' nm_test_func$' "$nlist" >/dev/null; then
+	  cat <<_LT_EOF > conftest.$ac_ext
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+_LT_EOF
+	  # Now generate the symbol file.
+	  eval "$lt_cv_sys_global_symbol_to_cdecl"' < "$nlist" | $GREP -v main >> conftest.$ac_ext'
+
+	  cat <<_LT_EOF >> conftest.$ac_ext
+
+/* The mapping between symbol names and symbols.  */
+const struct {
+  const char *name;
+  void       *address;
+}
+lt__PROGRAM__LTX_preloaded_symbols[] =
+{
+  { "@PROGRAM@", (void *) 0 },
+_LT_EOF
+	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (void *) \&\2},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
+	  cat <<\_LT_EOF >> conftest.$ac_ext
+  {0, (void *) 0}
+};
+
+/* This works around a problem in FreeBSD linker */
+#ifdef FREEBSD_WORKAROUND
+static const void *lt_preloaded_setup() {
+  return lt__PROGRAM__LTX_preloaded_symbols;
+}
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+_LT_EOF
+	  # Now try linking the two files.
+	  mv conftest.$ac_objext conftstm.$ac_objext
+	  lt_save_LIBS="$LIBS"
+	  lt_save_CFLAGS="$CFLAGS"
+	  LIBS="conftstm.$ac_objext"
+	  CFLAGS="$CFLAGS$lt_prog_compiler_no_builtin_flag"
+	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext}; then
+	    pipe_works=yes
+	  fi
+	  LIBS="$lt_save_LIBS"
+	  CFLAGS="$lt_save_CFLAGS"
+	else
+	  echo "cannot find nm_test_func in $nlist" >&5
+	fi
+      else
+	echo "cannot find nm_test_var in $nlist" >&5
+      fi
+    else
+      echo "cannot run $lt_cv_sys_global_symbol_pipe" >&5
+    fi
+  else
+    echo "$progname: failed program was:" >&5
+    cat conftest.$ac_ext >&5
+  fi
+  rm -rf conftest* conftst*
+
+  # Do not use the global_symbol_pipe unless it works.
+  if test "$pipe_works" = yes; then
+    break
+  else
+    lt_cv_sys_global_symbol_pipe=
+  fi
+done
+
+fi
+
+if test -z "$lt_cv_sys_global_symbol_pipe"; then
+  lt_cv_sys_global_symbol_to_cdecl=
+fi
+if test -z "$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: failed" >&5
+$as_echo "failed" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: ok" >&5
+$as_echo "ok" >&6; }
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+# Check whether --enable-libtool-lock was given.
+if test "${enable_libtool_lock+set}" = set; then :
+  enableval=$enable_libtool_lock;
+fi
+
+test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+
+# Some flags need to be propagated to the compiler or linker for good
+# libtool support.
+case $host in
+ia64-*-hpux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.$ac_objext` in
+      *ELF-32*)
+	HPUX_IA64_MODE="32"
+	;;
+      *ELF-64*)
+	HPUX_IA64_MODE="64"
+	;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+*-*-irix6*)
+  # Find out which ABI we are using.
+  echo '#line 6280 "configure"' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    if test "$lt_cv_prog_gnu_ld" = yes; then
+      case `/usr/bin/file conftest.$ac_objext` in
+	*32-bit*)
+	  LD="${LD-ld} -melf32bsmip"
+	  ;;
+	*N32*)
+	  LD="${LD-ld} -melf32bmipn32"
+	  ;;
+	*64-bit*)
+	  LD="${LD-ld} -melf64bmip"
+	;;
+      esac
+    else
+      case `/usr/bin/file conftest.$ac_objext` in
+	*32-bit*)
+	  LD="${LD-ld} -32"
+	  ;;
+	*N32*)
+	  LD="${LD-ld} -n32"
+	  ;;
+	*64-bit*)
+	  LD="${LD-ld} -64"
+	  ;;
+      esac
+    fi
+  fi
+  rm -rf conftest*
+  ;;
+
+x86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \
+s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.o` in
+      *32-bit*)
+	case $host in
+	  x86_64-*kfreebsd*-gnu)
+	    LD="${LD-ld} -m elf_i386_fbsd"
+	    ;;
+	  x86_64-*linux*)
+	    LD="${LD-ld} -m elf_i386"
+	    ;;
+	  ppc64-*linux*|powerpc64-*linux*)
+	    LD="${LD-ld} -m elf32ppclinux"
+	    ;;
+	  s390x-*linux*)
+	    LD="${LD-ld} -m elf_s390"
+	    ;;
+	  sparc64-*linux*)
+	    LD="${LD-ld} -m elf32_sparc"
+	    ;;
+	esac
+	;;
+      *64-bit*)
+	case $host in
+	  x86_64-*kfreebsd*-gnu)
+	    LD="${LD-ld} -m elf_x86_64_fbsd"
+	    ;;
+	  x86_64-*linux*)
+	    LD="${LD-ld} -m elf_x86_64"
+	    ;;
+	  ppc*-*linux*|powerpc*-*linux*)
+	    LD="${LD-ld} -m elf64ppc"
+	    ;;
+	  s390*-*linux*|s390*-*tpf*)
+	    LD="${LD-ld} -m elf64_s390"
+	    ;;
+	  sparc*-*linux*)
+	    LD="${LD-ld} -m elf64_sparc"
+	    ;;
+	esac
+	;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+
+*-*-sco3.2v5*)
+  # On SCO OpenServer 5, we need -belf to get full-featured binaries.
+  SAVE_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS -belf"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler needs -belf" >&5
+$as_echo_n "checking whether the C compiler needs -belf... " >&6; }
+if test "${lt_cv_cc_needs_belf+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  lt_cv_cc_needs_belf=yes
+else
+  lt_cv_cc_needs_belf=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+     ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_cc_needs_belf" >&5
+$as_echo "$lt_cv_cc_needs_belf" >&6; }
+  if test x"$lt_cv_cc_needs_belf" != x"yes"; then
+    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
+    CFLAGS="$SAVE_CFLAGS"
+  fi
+  ;;
+sparc*-*solaris*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    case `/usr/bin/file conftest.o` in
+    *64-bit*)
+      case $lt_cv_prog_gnu_ld in
+      yes*) LD="${LD-ld} -m elf64_sparc" ;;
+      *)
+	if ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then
+	  LD="${LD-ld} -64"
+	fi
+	;;
+      esac
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+esac
+
+need_locks="$enable_libtool_lock"
+
+
+  case $host_os in
+    rhapsody* | darwin*)
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}dsymutil", so it can be a program name with args.
+set dummy ${ac_tool_prefix}dsymutil; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_DSYMUTIL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$DSYMUTIL"; then
+  ac_cv_prog_DSYMUTIL="$DSYMUTIL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_DSYMUTIL="${ac_tool_prefix}dsymutil"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+DSYMUTIL=$ac_cv_prog_DSYMUTIL
+if test -n "$DSYMUTIL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $DSYMUTIL" >&5
+$as_echo "$DSYMUTIL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_DSYMUTIL"; then
+  ac_ct_DSYMUTIL=$DSYMUTIL
+  # Extract the first word of "dsymutil", so it can be a program name with args.
+set dummy dsymutil; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_DSYMUTIL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_DSYMUTIL"; then
+  ac_cv_prog_ac_ct_DSYMUTIL="$ac_ct_DSYMUTIL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_DSYMUTIL="dsymutil"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_DSYMUTIL=$ac_cv_prog_ac_ct_DSYMUTIL
+if test -n "$ac_ct_DSYMUTIL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_DSYMUTIL" >&5
+$as_echo "$ac_ct_DSYMUTIL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_DSYMUTIL" = x; then
+    DSYMUTIL=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    DSYMUTIL=$ac_ct_DSYMUTIL
+  fi
+else
+  DSYMUTIL="$ac_cv_prog_DSYMUTIL"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}nmedit", so it can be a program name with args.
+set dummy ${ac_tool_prefix}nmedit; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_NMEDIT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$NMEDIT"; then
+  ac_cv_prog_NMEDIT="$NMEDIT" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_NMEDIT="${ac_tool_prefix}nmedit"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+NMEDIT=$ac_cv_prog_NMEDIT
+if test -n "$NMEDIT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $NMEDIT" >&5
+$as_echo "$NMEDIT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_NMEDIT"; then
+  ac_ct_NMEDIT=$NMEDIT
+  # Extract the first word of "nmedit", so it can be a program name with args.
+set dummy nmedit; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_NMEDIT+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_NMEDIT"; then
+  ac_cv_prog_ac_ct_NMEDIT="$ac_ct_NMEDIT" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_NMEDIT="nmedit"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_NMEDIT=$ac_cv_prog_ac_ct_NMEDIT
+if test -n "$ac_ct_NMEDIT"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_NMEDIT" >&5
+$as_echo "$ac_ct_NMEDIT" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_NMEDIT" = x; then
+    NMEDIT=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    NMEDIT=$ac_ct_NMEDIT
+  fi
+else
+  NMEDIT="$ac_cv_prog_NMEDIT"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}lipo", so it can be a program name with args.
+set dummy ${ac_tool_prefix}lipo; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$LIPO"; then
+  ac_cv_prog_LIPO="$LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_LIPO="${ac_tool_prefix}lipo"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+LIPO=$ac_cv_prog_LIPO
+if test -n "$LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LIPO" >&5
+$as_echo "$LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_LIPO"; then
+  ac_ct_LIPO=$LIPO
+  # Extract the first word of "lipo", so it can be a program name with args.
+set dummy lipo; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_LIPO+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_LIPO"; then
+  ac_cv_prog_ac_ct_LIPO="$ac_ct_LIPO" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_LIPO="lipo"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_LIPO=$ac_cv_prog_ac_ct_LIPO
+if test -n "$ac_ct_LIPO"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_LIPO" >&5
+$as_echo "$ac_ct_LIPO" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_LIPO" = x; then
+    LIPO=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    LIPO=$ac_ct_LIPO
+  fi
+else
+  LIPO="$ac_cv_prog_LIPO"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}otool", so it can be a program name with args.
+set dummy ${ac_tool_prefix}otool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OTOOL"; then
+  ac_cv_prog_OTOOL="$OTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OTOOL="${ac_tool_prefix}otool"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OTOOL=$ac_cv_prog_OTOOL
+if test -n "$OTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OTOOL" >&5
+$as_echo "$OTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OTOOL"; then
+  ac_ct_OTOOL=$OTOOL
+  # Extract the first word of "otool", so it can be a program name with args.
+set dummy otool; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OTOOL+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OTOOL"; then
+  ac_cv_prog_ac_ct_OTOOL="$ac_ct_OTOOL" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OTOOL="otool"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OTOOL=$ac_cv_prog_ac_ct_OTOOL
+if test -n "$ac_ct_OTOOL"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL" >&5
+$as_echo "$ac_ct_OTOOL" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OTOOL" = x; then
+    OTOOL=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OTOOL=$ac_ct_OTOOL
+  fi
+else
+  OTOOL="$ac_cv_prog_OTOOL"
+fi
+
+    if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}otool64", so it can be a program name with args.
+set dummy ${ac_tool_prefix}otool64; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_OTOOL64+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$OTOOL64"; then
+  ac_cv_prog_OTOOL64="$OTOOL64" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_OTOOL64="${ac_tool_prefix}otool64"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+OTOOL64=$ac_cv_prog_OTOOL64
+if test -n "$OTOOL64"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $OTOOL64" >&5
+$as_echo "$OTOOL64" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_OTOOL64"; then
+  ac_ct_OTOOL64=$OTOOL64
+  # Extract the first word of "otool64", so it can be a program name with args.
+set dummy otool64; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_prog_ac_ct_OTOOL64+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_OTOOL64"; then
+  ac_cv_prog_ac_ct_OTOOL64="$ac_ct_OTOOL64" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_prog_ac_ct_OTOOL64="otool64"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_OTOOL64=$ac_cv_prog_ac_ct_OTOOL64
+if test -n "$ac_ct_OTOOL64"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_OTOOL64" >&5
+$as_echo "$ac_ct_OTOOL64" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_OTOOL64" = x; then
+    OTOOL64=":"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    OTOOL64=$ac_ct_OTOOL64
+  fi
+else
+  OTOOL64="$ac_cv_prog_OTOOL64"
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -single_module linker flag" >&5
+$as_echo_n "checking for -single_module linker flag... " >&6; }
+if test "${lt_cv_apple_cc_single_mod+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_apple_cc_single_mod=no
+      if test -z "${LT_MULTI_MODULE}"; then
+	# By default we will add the -single_module flag. You can override
+	# by either setting the environment variable LT_MULTI_MODULE
+	# non-empty at configure time, or by adding -multi_module to the
+	# link flags.
+	rm -rf libconftest.dylib*
+	echo "int foo(void){return 1;}" > conftest.c
+	echo "$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
+-dynamiclib -Wl,-single_module conftest.c" >&5
+	$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
+	  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err
+        _lt_result=$?
+	if test -f libconftest.dylib && test ! -s conftest.err && test $_lt_result = 0; then
+	  lt_cv_apple_cc_single_mod=yes
+	else
+	  cat conftest.err >&5
+	fi
+	rm -rf libconftest.dylib*
+	rm -f conftest.*
+      fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_apple_cc_single_mod" >&5
+$as_echo "$lt_cv_apple_cc_single_mod" >&6; }
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for -exported_symbols_list linker flag" >&5
+$as_echo_n "checking for -exported_symbols_list linker flag... " >&6; }
+if test "${lt_cv_ld_exported_symbols_list+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_ld_exported_symbols_list=no
+      save_LDFLAGS=$LDFLAGS
+      echo "_main" > conftest.sym
+      LDFLAGS="$LDFLAGS -Wl,-exported_symbols_list,conftest.sym"
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  lt_cv_ld_exported_symbols_list=yes
+else
+  lt_cv_ld_exported_symbols_list=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+	LDFLAGS="$save_LDFLAGS"
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_exported_symbols_list" >&5
+$as_echo "$lt_cv_ld_exported_symbols_list" >&6; }
+    case $host_os in
+    rhapsody* | darwin1.[012])
+      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;
+    darwin1.*)
+      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+    darwin*) # darwin 5.x on
+      # if running on 10.5 or later, the deployment target defaults
+      # to the OS version, if on x86, and 10.4, the deployment
+      # target defaults to 10.4. Don't you love it?
+      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in
+	10.0,*86*-darwin8*|10.0,*-darwin[91]*)
+	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+	10.[012]*)
+	  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+	10.*)
+	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+      esac
+    ;;
+  esac
+    if test "$lt_cv_apple_cc_single_mod" = "yes"; then
+      _lt_dar_single_mod='$single_module'
+    fi
+    if test "$lt_cv_ld_exported_symbols_list" = "yes"; then
+      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
+    else
+      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'
+    fi
+    if test "$DSYMUTIL" != ":"; then
+      _lt_dsymutil='~$DSYMUTIL $lib || :'
+    else
+      _lt_dsymutil=
+    fi
+    ;;
+  esac
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
+$as_echo_n "checking for ANSI C header files... " >&6; }
+if test "${ac_cv_header_stdc+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+#include <stdarg.h>
+#include <string.h>
+#include <float.h>
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_header_stdc=yes
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test $ac_cv_header_stdc = yes; then
+  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <string.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "memchr" >/dev/null 2>&1; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "free" >/dev/null 2>&1; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  if test "$cross_compiling" = yes; then :
+  :
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <ctype.h>
+#include <stdlib.h>
+#if ((' ' & 0x0FF) == 0x020)
+# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
+# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
+#else
+# define ISLOWER(c) \
+		   (('a' <= (c) && (c) <= 'i') \
+		     || ('j' <= (c) && (c) <= 'r') \
+		     || ('s' <= (c) && (c) <= 'z'))
+# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
+#endif
+
+#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
+int
+main ()
+{
+  int i;
+  for (i = 0; i < 256; i++)
+    if (XOR (islower (i), ISLOWER (i))
+	|| toupper (i) != TOUPPER (i))
+      return 2;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc" >&5
+$as_echo "$ac_cv_header_stdc" >&6; }
+if test $ac_cv_header_stdc = yes; then
+
+$as_echo "#define STDC_HEADERS 1" >>confdefs.h
+
+fi
+
+# On IRIX 5.3, sys/types and inttypes.h are conflicting.
+for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
+		  inttypes.h stdint.h unistd.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default
+"
+if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+
+done
+
+
+for ac_header in dlfcn.h
+do :
+  ac_fn_c_check_header_compile "$LINENO" "dlfcn.h" "ac_cv_header_dlfcn_h" "$ac_includes_default
+"
+if test "x$ac_cv_header_dlfcn_h" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_DLFCN_H 1
+_ACEOF
+
+fi
+
+done
+
+
+
+# Set options
+
+
+
+        enable_dlopen=no
+
+
+  enable_win32_dll=no
+
+
+            # Check whether --enable-shared was given.
+if test "${enable_shared+set}" = set; then :
+  enableval=$enable_shared; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_shared=yes ;;
+    no) enable_shared=no ;;
+    *)
+      enable_shared=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_shared=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_shared=yes
+fi
+
+
+
+
+
+
+
+
+
+  # Check whether --enable-static was given.
+if test "${enable_static+set}" = set; then :
+  enableval=$enable_static; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_static=yes ;;
+    no) enable_static=no ;;
+    *)
+     enable_static=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_static=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_static=yes
+fi
+
+
+
+
+
+
+
+
+
+
+# Check whether --with-pic was given.
+if test "${with_pic+set}" = set; then :
+  withval=$with_pic; pic_mode="$withval"
+else
+  pic_mode=default
+fi
+
+
+test -z "$pic_mode" && pic_mode=default
+
+
+
+
+
+
+
+  # Check whether --enable-fast-install was given.
+if test "${enable_fast_install+set}" = set; then :
+  enableval=$enable_fast_install; p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_fast_install=yes ;;
+    no) enable_fast_install=no ;;
+    *)
+      enable_fast_install=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_fast_install=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac
+else
+  enable_fast_install=yes
+fi
+
+
+
+
+
+
+
+
+
+
+
+# This can be used to rebuild libtool when needed
+LIBTOOL_DEPS="$ltmain"
+
+# Always use our own libtool.
+LIBTOOL='$(SHELL) $(top_builddir)/libtool'
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+test -z "$LN_S" && LN_S="ln -s"
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+if test -n "${ZSH_VERSION+set}" ; then
+   setopt NO_GLOB_SUBST
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for objdir" >&5
+$as_echo_n "checking for objdir... " >&6; }
+if test "${lt_cv_objdir+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  rm -f .libs 2>/dev/null
+mkdir .libs 2>/dev/null
+if test -d .libs; then
+  lt_cv_objdir=.libs
+else
+  # MS-DOS does not allow filenames that begin with a dot.
+  lt_cv_objdir=_libs
+fi
+rmdir .libs 2>/dev/null
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_objdir" >&5
+$as_echo "$lt_cv_objdir" >&6; }
+objdir=$lt_cv_objdir
+
+
+
+
+
+cat >>confdefs.h <<_ACEOF
+#define LT_OBJDIR "$lt_cv_objdir/"
+_ACEOF
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+case $host_os in
+aix3*)
+  # AIX sometimes has problems with the GCC collect2 program.  For some
+  # reason, if we set the COLLECT_NAMES environment variable, the problems
+  # vanish in a puff of smoke.
+  if test "X${COLLECT_NAMES+set}" != Xset; then
+    COLLECT_NAMES=
+    export COLLECT_NAMES
+  fi
+  ;;
+esac
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+sed_quote_subst='s/\(["`$\\]\)/\\\1/g'
+
+# Same as above, but do not quote variable references.
+double_quote_subst='s/\(["`\\]\)/\\\1/g'
+
+# Sed substitution to delay expansion of an escaped shell variable in a
+# double_quote_subst'ed string.
+delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
+
+# Sed substitution to delay expansion of an escaped single quote.
+delay_single_quote_subst='s/'\''/'\'\\\\\\\'\''/g'
+
+# Sed substitution to avoid accidental globbing in evaled expressions
+no_glob_subst='s/\*/\\\*/g'
+
+# Global variables:
+ofile=libtool
+can_build_shared=yes
+
+# All known linkers require a `.a' archive for static linking (except MSVC,
+# which needs '.lib').
+libext=a
+
+with_gnu_ld="$lt_cv_prog_gnu_ld"
+
+old_CC="$CC"
+old_CFLAGS="$CFLAGS"
+
+# Set sane defaults for various variables
+test -z "$CC" && CC=cc
+test -z "$LTCC" && LTCC=$CC
+test -z "$LTCFLAGS" && LTCFLAGS=$CFLAGS
+test -z "$LD" && LD=ld
+test -z "$ac_objext" && ac_objext=o
+
+for cc_temp in $compiler""; do
+  case $cc_temp in
+    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$ECHO "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+
+
+# Only perform the check for file, if the check method requires it
+test -z "$MAGIC_CMD" && MAGIC_CMD=file
+case $deplibs_check_method in
+file_magic*)
+  if test "$file_magic_cmd" = '$MAGIC_CMD'; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ${ac_tool_prefix}file" >&5
+$as_echo_n "checking for ${ac_tool_prefix}file... " >&6; }
+if test "${lt_cv_path_MAGIC_CMD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $MAGIC_CMD in
+[\\/*] |  ?:[\\/]*)
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/${ac_tool_prefix}file; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/${ac_tool_prefix}file"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<_LT_EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+_LT_EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac
+fi
+
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
+$as_echo "$MAGIC_CMD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+
+
+
+if test -z "$lt_cv_path_MAGIC_CMD"; then
+  if test -n "$ac_tool_prefix"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for file" >&5
+$as_echo_n "checking for file... " >&6; }
+if test "${lt_cv_path_MAGIC_CMD+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  case $MAGIC_CMD in
+[\\/*] |  ?:[\\/]*)
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/file; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/file"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<_LT_EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+_LT_EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac
+fi
+
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
+$as_echo "$MAGIC_CMD" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  else
+    MAGIC_CMD=:
+  fi
+fi
+
+  fi
+  ;;
+esac
+
+# Use C for the default configuration in the libtool script
+
+lt_save_CC="$CC"
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+# Source file extension for C test sources.
+ac_ext=c
+
+# Object file extension for compiled C test sources.
+objext=o
+objext=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="int some_variable = 0;"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='int main(){return(0);}'
+
+
+
+
+
+
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+
+# Save the default compiler, since it gets overwritten when the other
+# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.
+compiler_DEFAULT=$CC
+
+# save warnings/boilerplate of simple test code
+ac_outfile=conftest.$ac_objext
+echo "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$RM conftest*
+
+ac_outfile=conftest.$ac_objext
+echo "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$RM -r conftest*
+
+
+## CAVEAT EMPTOR:
+## There is no encapsulation within the following macros, do not change
+## the running order or otherwise move them around unless you know exactly
+## what you are doing...
+if test -n "$compiler"; then
+
+lt_prog_compiler_no_builtin_flag=
+
+if test "$GCC" = yes; then
+  lt_prog_compiler_no_builtin_flag=' -fno-builtin'
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -fno-rtti -fno-exceptions" >&5
+$as_echo_n "checking if $compiler supports -fno-rtti -fno-exceptions... " >&6; }
+if test "${lt_cv_prog_compiler_rtti_exceptions+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_rtti_exceptions=no
+   ac_outfile=conftest.$ac_objext
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="-fno-rtti -fno-exceptions"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:7672: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:7676: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_rtti_exceptions=yes
+     fi
+   fi
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_rtti_exceptions" >&5
+$as_echo "$lt_cv_prog_compiler_rtti_exceptions" >&6; }
+
+if test x"$lt_cv_prog_compiler_rtti_exceptions" = xyes; then
+    lt_prog_compiler_no_builtin_flag="$lt_prog_compiler_no_builtin_flag -fno-rtti -fno-exceptions"
+else
+    :
+fi
+
+fi
+
+
+
+
+
+
+  lt_prog_compiler_wl=
+lt_prog_compiler_pic=
+lt_prog_compiler_static=
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $compiler option to produce PIC" >&5
+$as_echo_n "checking for $compiler option to produce PIC... " >&6; }
+
+  if test "$GCC" = yes; then
+    lt_prog_compiler_wl='-Wl,'
+    lt_prog_compiler_static='-static'
+
+    case $host_os in
+      aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            lt_prog_compiler_pic='-fPIC'
+        ;;
+      m68k)
+            # FIXME: we need at least 68020 code to build shared libraries, but
+            # adding the `-m68020' flag to GCC prevents building anything better,
+            # like `-m68040'.
+            lt_prog_compiler_pic='-m68020 -resident32 -malways-restore-a4'
+        ;;
+      esac
+      ;;
+
+    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+
+    mingw* | cygwin* | pw32* | os2* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      # Although the cygwin gcc ignores -fPIC, still need this for old-style
+      # (--disable-auto-import) libraries
+      lt_prog_compiler_pic='-DDLL_EXPORT'
+      ;;
+
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      lt_prog_compiler_pic='-fno-common'
+      ;;
+
+    hpux*)
+      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit
+      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag
+      # sets the default TLS model and affects inlining.
+      case $host_cpu in
+      hppa*64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic='-fPIC'
+	;;
+      esac
+      ;;
+
+    interix[3-9]*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+
+    msdosdjgpp*)
+      # Just because we use GCC doesn't mean we suddenly get shared libraries
+      # on systems that don't support them.
+      lt_prog_compiler_can_build_shared=no
+      enable_shared=no
+      ;;
+
+    *nto* | *qnx*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      lt_prog_compiler_pic='-fPIC -shared'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	lt_prog_compiler_pic=-Kconform_pic
+      fi
+      ;;
+
+    *)
+      lt_prog_compiler_pic='-fPIC'
+      ;;
+    esac
+  else
+    # PORTME Check for flag to pass linker flags through the system compiler.
+    case $host_os in
+    aix*)
+      lt_prog_compiler_wl='-Wl,'
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	lt_prog_compiler_static='-Bstatic'
+      else
+	lt_prog_compiler_static='-bnso -bI:/lib/syscalls.exp'
+      fi
+      ;;
+
+    mingw* | cygwin* | pw32* | os2* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      lt_prog_compiler_pic='-DDLL_EXPORT'
+      ;;
+
+    hpux9* | hpux10* | hpux11*)
+      lt_prog_compiler_wl='-Wl,'
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	lt_prog_compiler_pic='+Z'
+	;;
+      esac
+      # Is there a better lt_prog_compiler_static that works with the bundled CC?
+      lt_prog_compiler_static='${wl}-a ${wl}archive'
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      lt_prog_compiler_wl='-Wl,'
+      # PIC (with -KPIC) is the default.
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    linux* | k*bsd*-gnu | kopensolaris*-gnu)
+      case $cc_basename in
+      # old Intel for x86_64 which still supported -KPIC.
+      ecc*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-KPIC'
+	lt_prog_compiler_static='-static'
+        ;;
+      # icc used to be incompatible with GCC.
+      # ICC 10 doesn't accept -KPIC any more.
+      icc* | ifort*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-fPIC'
+	lt_prog_compiler_static='-static'
+        ;;
+      # Lahey Fortran 8.1.
+      lf95*)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='--shared'
+	lt_prog_compiler_static='--static'
+	;;
+      pgcc* | pgf77* | pgf90* | pgf95*)
+        # Portland Group compilers (*not* the Pentium gcc compiler,
+	# which looks to be a dead project)
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-fpic'
+	lt_prog_compiler_static='-Bstatic'
+        ;;
+      ccc*)
+        lt_prog_compiler_wl='-Wl,'
+        # All Alpha code is PIC.
+        lt_prog_compiler_static='-non_shared'
+        ;;
+      xl*)
+	# IBM XL C 8.0/Fortran 10.1 on PPC
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-qpic'
+	lt_prog_compiler_static='-qstaticlink'
+	;;
+      *)
+	case `$CC -V 2>&1 | sed 5q` in
+	*Sun\ C*)
+	  # Sun C 5.9
+	  lt_prog_compiler_pic='-KPIC'
+	  lt_prog_compiler_static='-Bstatic'
+	  lt_prog_compiler_wl='-Wl,'
+	  ;;
+	*Sun\ F*)
+	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
+	  lt_prog_compiler_pic='-KPIC'
+	  lt_prog_compiler_static='-Bstatic'
+	  lt_prog_compiler_wl=''
+	  ;;
+	esac
+	;;
+      esac
+      ;;
+
+    newsos6)
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    *nto* | *qnx*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      lt_prog_compiler_pic='-fPIC -shared'
+      ;;
+
+    osf3* | osf4* | osf5*)
+      lt_prog_compiler_wl='-Wl,'
+      # All OSF/1 code is PIC.
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    rdos*)
+      lt_prog_compiler_static='-non_shared'
+      ;;
+
+    solaris*)
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      case $cc_basename in
+      f77* | f90* | f95*)
+	lt_prog_compiler_wl='-Qoption ld ';;
+      *)
+	lt_prog_compiler_wl='-Wl,';;
+      esac
+      ;;
+
+    sunos4*)
+      lt_prog_compiler_wl='-Qoption ld '
+      lt_prog_compiler_pic='-PIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    sysv4 | sysv4.2uw2* | sysv4.3*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec ;then
+	lt_prog_compiler_pic='-Kconform_pic'
+	lt_prog_compiler_static='-Bstatic'
+      fi
+      ;;
+
+    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_pic='-KPIC'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    unicos*)
+      lt_prog_compiler_wl='-Wl,'
+      lt_prog_compiler_can_build_shared=no
+      ;;
+
+    uts4*)
+      lt_prog_compiler_pic='-pic'
+      lt_prog_compiler_static='-Bstatic'
+      ;;
+
+    *)
+      lt_prog_compiler_can_build_shared=no
+      ;;
+    esac
+  fi
+
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    lt_prog_compiler_pic=
+    ;;
+  *)
+    lt_prog_compiler_pic="$lt_prog_compiler_pic -DPIC"
+    ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_prog_compiler_pic" >&5
+$as_echo "$lt_prog_compiler_pic" >&6; }
+
+
+
+
+
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$lt_prog_compiler_pic"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler PIC flag $lt_prog_compiler_pic works" >&5
+$as_echo_n "checking if $compiler PIC flag $lt_prog_compiler_pic works... " >&6; }
+if test "${lt_cv_prog_compiler_pic_works+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_pic_works=no
+   ac_outfile=conftest.$ac_objext
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$lt_prog_compiler_pic -DPIC"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:8011: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&5
+   echo "$as_me:8015: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_pic_works=yes
+     fi
+   fi
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works" >&5
+$as_echo "$lt_cv_prog_compiler_pic_works" >&6; }
+
+if test x"$lt_cv_prog_compiler_pic_works" = xyes; then
+    case $lt_prog_compiler_pic in
+     "" | " "*) ;;
+     *) lt_prog_compiler_pic=" $lt_prog_compiler_pic" ;;
+     esac
+else
+    lt_prog_compiler_pic=
+     lt_prog_compiler_can_build_shared=no
+fi
+
+fi
+
+
+
+
+
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$lt_prog_compiler_wl eval lt_tmp_static_flag=\"$lt_prog_compiler_static\"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler static flag $lt_tmp_static_flag works" >&5
+$as_echo_n "checking if $compiler static flag $lt_tmp_static_flag works... " >&6; }
+if test "${lt_cv_prog_compiler_static_works+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_static_works=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
+   echo "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&5
+       $ECHO "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         lt_cv_prog_compiler_static_works=yes
+       fi
+     else
+       lt_cv_prog_compiler_static_works=yes
+     fi
+   fi
+   $RM -r conftest*
+   LDFLAGS="$save_LDFLAGS"
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works" >&5
+$as_echo "$lt_cv_prog_compiler_static_works" >&6; }
+
+if test x"$lt_cv_prog_compiler_static_works" = xyes; then
+    :
+else
+    lt_prog_compiler_static=
+fi
+
+
+
+
+
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext" >&5
+$as_echo_n "checking if $compiler supports -c -o file.$ac_objext... " >&6; }
+if test "${lt_cv_prog_compiler_c_o+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_c_o=no
+   $RM -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:8116: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:8120: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $RM conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
+   $RM out/* && rmdir out
+   cd ..
+   $RM -r conftest
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o" >&5
+$as_echo "$lt_cv_prog_compiler_c_o" >&6; }
+
+
+
+
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if $compiler supports -c -o file.$ac_objext" >&5
+$as_echo_n "checking if $compiler supports -c -o file.$ac_objext... " >&6; }
+if test "${lt_cv_prog_compiler_c_o+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_prog_compiler_c_o=no
+   $RM -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:8171: $lt_compile\"" >&5)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&5
+   echo "$as_me:8175: \$? = $ac_status" >&5
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       lt_cv_prog_compiler_c_o=yes
+     fi
+   fi
+   chmod u+w . 2>&5
+   $RM conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
+   $RM out/* && rmdir out
+   cd ..
+   $RM -r conftest
+   $RM conftest*
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_c_o" >&5
+$as_echo "$lt_cv_prog_compiler_c_o" >&6; }
+
+
+
+
+hard_links="nottested"
+if test "$lt_cv_prog_compiler_c_o" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
+$as_echo_n "checking if we can lock with hard links... " >&6; }
+  hard_links=yes
+  $RM conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
+$as_echo "$hard_links" >&6; }
+  if test "$hard_links" = no; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&5
+$as_echo "$as_me: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&2;}
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+
+
+
+
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the $compiler linker ($LD) supports shared libraries" >&5
+$as_echo_n "checking whether the $compiler linker ($LD) supports shared libraries... " >&6; }
+
+  runpath_var=
+  allow_undefined_flag=
+  always_export_symbols=no
+  archive_cmds=
+  archive_expsym_cmds=
+  compiler_needs_object=no
+  enable_shared_with_static_runtimes=no
+  export_dynamic_flag_spec=
+  export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  hardcode_automatic=no
+  hardcode_direct=no
+  hardcode_direct_absolute=no
+  hardcode_libdir_flag_spec=
+  hardcode_libdir_flag_spec_ld=
+  hardcode_libdir_separator=
+  hardcode_minus_L=no
+  hardcode_shlibpath_var=unsupported
+  inherit_rpath=no
+  link_all_deplibs=unknown
+  module_cmds=
+  module_expsym_cmds=
+  old_archive_from_new_cmds=
+  old_archive_from_expsyms_cmds=
+  thread_safe_flag_spec=
+  whole_archive_flag_spec=
+  # include_expsyms should be a list of space-separated symbols to be *always*
+  # included in the symbol list
+  include_expsyms=
+  # exclude_expsyms can be an extended regexp of symbols to exclude
+  # it will be wrapped by ` (' and `)$', so one must not match beginning or
+  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
+  # as well as any symbol that contains `d'.
+  exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
+  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
+  # platforms (ab)use it in PIC code, but their linkers get confused if
+  # the symbol is explicitly referenced.  Since portable code cannot
+  # rely on this symbol name, it's probably fine to never include it in
+  # preloaded symbol tables.
+  # Exclude shared library initialization/finalization symbols.
+  extract_expsyms_cmds=
+
+  case $host_os in
+  cygwin* | mingw* | pw32* | cegcc*)
+    # FIXME: the MSVC++ port hasn't been tested in a loooong time
+    # When not using gcc, we currently assume that we are using
+    # Microsoft Visual C++.
+    if test "$GCC" != yes; then
+      with_gnu_ld=no
+    fi
+    ;;
+  interix*)
+    # we just hope/assume this is gcc and not c89 (= MSVC++)
+    with_gnu_ld=yes
+    ;;
+  openbsd*)
+    with_gnu_ld=no
+    ;;
+  linux* | k*bsd*-gnu)
+    link_all_deplibs=no
+    ;;
+  esac
+
+  ld_shlibs=yes
+  if test "$with_gnu_ld" = yes; then
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    wlarc='${wl}'
+
+    # Set some defaults for GNU ld with shared library support. These
+    # are reset later if shared libraries are not supported. Putting them
+    # here allows them to be overridden if necessary.
+    runpath_var=LD_RUN_PATH
+    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+    export_dynamic_flag_spec='${wl}--export-dynamic'
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
+      whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+    else
+      whole_archive_flag_spec=
+    fi
+    supports_anon_versioning=no
+    case `$LD -v 2>&1` in
+      *GNU\ gold*) supports_anon_versioning=yes ;;
+      *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
+      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
+      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
+      *\ 2.11.*) ;; # other 2.11 versions
+      *) supports_anon_versioning=yes ;;
+    esac
+
+    # See if GNU ld supports shared libraries.
+    case $host_os in
+    aix[3-9]*)
+      # On AIX/PPC, the GNU linker is very broken
+      if test "$host_cpu" != ia64; then
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: the GNU linker, at least up to release 2.9.1, is reported
+*** to be unable to reliably create shared libraries on AIX.
+*** Therefore, libtool is disabling shared libraries support.  If you
+*** really care for shared libraries, you may want to modify your PATH
+*** so that a non-GNU linker is found, and then restart.
+
+_LT_EOF
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            archive_expsym_cmds=''
+        ;;
+      m68k)
+            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+            hardcode_libdir_flag_spec='-L$libdir'
+            hardcode_minus_L=yes
+        ;;
+      esac
+      ;;
+
+    beos*)
+      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	allow_undefined_flag=unsupported
+	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	# support --undefined.  This deserves some investigation.  FIXME
+	archive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    cygwin* | mingw* | pw32* | cegcc*)
+      # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
+      # as there is no search path for DLLs.
+      hardcode_libdir_flag_spec='-L$libdir'
+      allow_undefined_flag=unsupported
+      always_export_symbols=no
+      enable_shared_with_static_runtimes=yes
+      export_symbols_cmds='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[BCDGRS][ ]/s/.*[ ]\([^ ]*\)/\1 DATA/'\'' | $SED -e '\''/^[AITW][ ]/s/.*[ ]//'\'' | sort | uniq > $export_symbols'
+
+      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
+        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file (1st line
+	# is EXPORTS), use it as is; otherwise, prepend...
+	archive_expsym_cmds='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	  cp $export_symbols $output_objdir/$soname.def;
+	else
+	  echo EXPORTS > $output_objdir/$soname.def;
+	  cat $export_symbols >> $output_objdir/$soname.def;
+	fi~
+	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    interix[3-9]*)
+      hardcode_direct=no
+      hardcode_shlibpath_var=no
+      hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+      export_dynamic_flag_spec='${wl}-E'
+      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+      # Instead, shared libraries are loaded at an image base (0x10000000 by
+      # default) and relocated if they conflict, which is a slow very memory
+      # consuming and fragmenting process.  To avoid this, we pick a random,
+      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      archive_expsym_cmds='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      ;;
+
+    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
+      tmp_diet=no
+      if test "$host_os" = linux-dietlibc; then
+	case $cc_basename in
+	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
+	esac
+      fi
+      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \
+	 && test "$tmp_diet" = no
+      then
+	tmp_addflag=
+	tmp_sharedflag='-shared'
+	case $cc_basename,$host_cpu in
+        pgcc*)				# Portland Group C compiler
+	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag'
+	  ;;
+	pgf77* | pgf90* | pgf95*)	# Portland Group f77 and f90 compilers
+	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag -Mnomain' ;;
+	ecc*,ia64* | icc*,ia64*)	# Intel C compiler on ia64
+	  tmp_addflag=' -i_dynamic' ;;
+	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
+	  tmp_addflag=' -i_dynamic -nofor_main' ;;
+	ifc* | ifort*)			# Intel Fortran compiler
+	  tmp_addflag=' -nofor_main' ;;
+	lf95*)				# Lahey Fortran 8.1
+	  whole_archive_flag_spec=
+	  tmp_sharedflag='--shared' ;;
+	xl[cC]*)			# IBM XL C 8.0 on PPC (deal with xlf below)
+	  tmp_sharedflag='-qmkshrobj'
+	  tmp_addflag= ;;
+	esac
+	case `$CC -V 2>&1 | sed 5q` in
+	*Sun\ C*)			# Sun C 5.9
+	  whole_archive_flag_spec='${wl}--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  compiler_needs_object=yes
+	  tmp_sharedflag='-G' ;;
+	*Sun\ F*)			# Sun Fortran 8.3
+	  tmp_sharedflag='-G' ;;
+	esac
+	archive_cmds='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+
+        if test "x$supports_anon_versioning" = xyes; then
+          archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
+	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+	    echo "local: *; };" >> $output_objdir/$libname.ver~
+	    $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+        fi
+
+	case $cc_basename in
+	xlf*)
+	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
+	  whole_archive_flag_spec='--whole-archive$convenience --no-whole-archive'
+	  hardcode_libdir_flag_spec=
+	  hardcode_libdir_flag_spec_ld='-rpath $libdir'
+	  archive_cmds='$LD -shared $libobjs $deplibs $compiler_flags -soname $soname -o $lib'
+	  if test "x$supports_anon_versioning" = xyes; then
+	    archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
+	      cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+	      echo "local: *; };" >> $output_objdir/$libname.ver~
+	      $LD -shared $libobjs $deplibs $compiler_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
+	  fi
+	  ;;
+	esac
+      else
+        ld_shlibs=no
+      fi
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+	wlarc=
+      else
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      fi
+      ;;
+
+    solaris*)
+      if $LD -v 2>&1 | $GREP 'BFD 2\.8' > /dev/null; then
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: The releases 2.8.* of the GNU linker cannot reliably
+*** create shared libraries on Solaris systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.9.1 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
+      case `$LD -v 2>&1` in
+        *\ [01].* | *\ 2.[0-9].* | *\ 2.1[0-5].*)
+	ld_shlibs=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** reliably create shared libraries on SCO systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+	;;
+	*)
+	  # For security reasons, it is highly recommended that you always
+	  # use absolute paths for naming shared libraries, and exclude the
+	  # DT_RUNPATH tag from executables and libraries.  But doing so
+	  # requires that you compile everything twice, which is a pain.
+	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+	    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	  else
+	    ld_shlibs=no
+	  fi
+	;;
+      esac
+      ;;
+
+    sunos4*)
+      archive_cmds='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      wlarc=
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    *)
+      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	ld_shlibs=no
+      fi
+      ;;
+    esac
+
+    if test "$ld_shlibs" = no; then
+      runpath_var=
+      hardcode_libdir_flag_spec=
+      export_dynamic_flag_spec=
+      whole_archive_flag_spec=
+    fi
+  else
+    # PORTME fill in a description of your system's linker (not GNU ld)
+    case $host_os in
+    aix3*)
+      allow_undefined_flag=unsupported
+      always_export_symbols=yes
+      archive_expsym_cmds='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
+      # Note: this linker hardcodes the directories in LIBPATH if there
+      # are no directories specified by -L.
+      hardcode_minus_L=yes
+      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+	# Neither direct hardcoding nor static linking is supported with a
+	# broken collect2.
+	hardcode_direct=unsupported
+      fi
+      ;;
+
+    aix[4-9]*)
+      if test "$host_cpu" = ia64; then
+	# On IA64, the linker does run time linking by default, so we don't
+	# have to do anything special.
+	aix_use_runtimelinking=no
+	exp_sym_flag='-Bexport'
+	no_entry_flag=""
+      else
+	# If we're using GNU nm, then we don't want the "-C" option.
+	# -C means demangle to AIX nm, but means don't demangle with GNU nm
+	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
+	  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && (substr(\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	else
+	  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && (substr(\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	fi
+	aix_use_runtimelinking=no
+
+	# Test if we are trying to use run time linking or normal
+	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
+	# need to do runtime linking.
+	case $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)
+	  for ld_flag in $LDFLAGS; do
+	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+	    aix_use_runtimelinking=yes
+	    break
+	  fi
+	  done
+	  ;;
+	esac
+
+	exp_sym_flag='-bexport'
+	no_entry_flag='-bnoentry'
+      fi
+
+      # When large executables or shared objects are built, AIX ld can
+      # have problems creating the table of contents.  If linking a library
+      # or program results in "error TOC overflow" add -mminimal-toc to
+      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+      archive_cmds=''
+      hardcode_direct=yes
+      hardcode_direct_absolute=yes
+      hardcode_libdir_separator=':'
+      link_all_deplibs=yes
+      file_list_spec='${wl}-f,'
+
+      if test "$GCC" = yes; then
+	case $host_os in aix4.[012]|aix4.[012].*)
+	# We only want to do this on AIX 4.2 and lower, the check
+	# below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" &&
+	   strings "$collect2name" | $GREP resolve_lib_name >/dev/null
+	  then
+	  # We have reworked collect2
+	  :
+	  else
+	  # We have old collect2
+	  hardcode_direct=unsupported
+	  # It fails to find uninstalled libraries when the uninstalled
+	  # path is not listed in the libpath.  Setting hardcode_minus_L
+	  # to unsupported forces relinking
+	  hardcode_minus_L=yes
+	  hardcode_libdir_flag_spec='-L$libdir'
+	  hardcode_libdir_separator=
+	  fi
+	  ;;
+	esac
+	shared_flag='-shared'
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag="$shared_flag "'${wl}-G'
+	fi
+	link_all_deplibs=no
+      else
+	# not using gcc
+	if test "$host_cpu" = ia64; then
+	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+	# chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+	else
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag='${wl}-G'
+	  else
+	    shared_flag='${wl}-bM:SRE'
+	  fi
+	fi
+      fi
+
+      export_dynamic_flag_spec='${wl}-bexpall'
+      # It seems that -bexpall does not export symbols beginning with
+      # underscore (_), so it is better to generate a list of symbols to export.
+      always_export_symbols=yes
+      if test "$aix_use_runtimelinking" = yes; then
+	# Warning - without using the other runtime loading flags (-brtl),
+	# -berok will link without error, but may produce a broken library.
+	allow_undefined_flag='-berok'
+        # Determine the default libpath from the value encoded in an
+        # empty executable.
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+lt_aix_libpath_sed='
+    /Import File Strings/,/^$/ {
+	/^0/ {
+	    s/^0  *\(.*\)$/\1/
+	    p
+	}
+    }'
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then
+  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+        hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+        archive_expsym_cmds='$CC -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then $ECHO "X${wl}${allow_undefined_flag}" | $Xsed; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+      else
+	if test "$host_cpu" = ia64; then
+	  hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'
+	  allow_undefined_flag="-z nodefs"
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	else
+	 # Determine the default libpath from the value encoded in an
+	 # empty executable.
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+lt_aix_libpath_sed='
+    /Import File Strings/,/^$/ {
+	/^0/ {
+	    s/^0  *\(.*\)$/\1/
+	    p
+	}
+    }'
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then
+  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+
+	 hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+	  # Warning - without using the other run time loading flags,
+	  # -berok will link without error, but may produce a broken library.
+	  no_undefined_flag=' ${wl}-bernotok'
+	  allow_undefined_flag=' ${wl}-berok'
+	  # Exported symbols can be pulled into shared objects from archives
+	  whole_archive_flag_spec='$convenience'
+	  archive_cmds_need_lc=yes
+	  # This is similar to how AIX traditionally builds its shared libraries.
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	fi
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            archive_expsym_cmds=''
+        ;;
+      m68k)
+            archive_cmds='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+            hardcode_libdir_flag_spec='-L$libdir'
+            hardcode_minus_L=yes
+        ;;
+      esac
+      ;;
+
+    bsdi[45]*)
+      export_dynamic_flag_spec=-rdynamic
+      ;;
+
+    cygwin* | mingw* | pw32* | cegcc*)
+      # When not using gcc, we currently assume that we are using
+      # Microsoft Visual C++.
+      # hardcode_libdir_flag_spec is actually meaningless, as there is
+      # no search path for DLLs.
+      hardcode_libdir_flag_spec=' '
+      allow_undefined_flag=unsupported
+      # Tell ltmain to make .lib files, not .a files.
+      libext=lib
+      # Tell ltmain to make .dll files, not .so files.
+      shrext_cmds=".dll"
+      # FIXME: Setting linknames here is a bad hack.
+      archive_cmds='$CC -o $lib $libobjs $compiler_flags `$ECHO "X$deplibs" | $Xsed -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # The linker will automatically build a .lib file if we build a DLL.
+      old_archive_from_new_cmds='true'
+      # FIXME: Should let the user specify the lib program.
+      old_archive_cmds='lib -OUT:$oldlib$oldobjs$old_deplibs'
+      fix_srcfile_path='`cygpath -w "$srcfile"`'
+      enable_shared_with_static_runtimes=yes
+      ;;
+
+    darwin* | rhapsody*)
+
+
+  archive_cmds_need_lc=no
+  hardcode_direct=no
+  hardcode_automatic=yes
+  hardcode_shlibpath_var=unsupported
+  whole_archive_flag_spec=''
+  link_all_deplibs=yes
+  allow_undefined_flag="$_lt_dar_allow_undefined"
+  case $cc_basename in
+     ifort*) _lt_dar_can_shared=yes ;;
+     *) _lt_dar_can_shared=$GCC ;;
+  esac
+  if test "$_lt_dar_can_shared" = "yes"; then
+    output_verbose_link_cmd=echo
+    archive_cmds="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod${_lt_dsymutil}"
+    module_cmds="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dsymutil}"
+    archive_expsym_cmds="sed 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}"
+    module_expsym_cmds="sed -e 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}"
+
+  else
+  ld_shlibs=no
+  fi
+
+      ;;
+
+    dgux*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_shlibpath_var=no
+      ;;
+
+    freebsd1*)
+      ld_shlibs=no
+      ;;
+
+    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
+    # support.  Future versions do this automatically, but an explicit c++rt0.o
+    # does not break anything, and helps significantly (at the cost of a little
+    # extra space).
+    freebsd2.2*)
+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
+    freebsd2*)
+      archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct=yes
+      hardcode_minus_L=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+    freebsd* | dragonfly*)
+      archive_cmds='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    hpux9*)
+      if test "$GCC" = yes; then
+	archive_cmds='$RM $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+	archive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      fi
+      hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+      hardcode_libdir_separator=:
+      hardcode_direct=yes
+
+      # hardcode_minus_L: Not really in the search PATH,
+      # but as the default location of the library.
+      hardcode_minus_L=yes
+      export_dynamic_flag_spec='${wl}-E'
+      ;;
+
+    hpux10*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+	hardcode_libdir_flag_spec_ld='+b $libdir'
+	hardcode_libdir_separator=:
+	hardcode_direct=yes
+	hardcode_direct_absolute=yes
+	export_dynamic_flag_spec='${wl}-E'
+	# hardcode_minus_L: Not really in the search PATH,
+	# but as the default location of the library.
+	hardcode_minus_L=yes
+      fi
+      ;;
+
+    hpux11*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      else
+	case $host_cpu in
+	hppa*64*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      fi
+      if test "$with_gnu_ld" = no; then
+	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+	hardcode_libdir_separator=:
+
+	case $host_cpu in
+	hppa*64*|ia64*)
+	  hardcode_direct=no
+	  hardcode_shlibpath_var=no
+	  ;;
+	*)
+	  hardcode_direct=yes
+	  hardcode_direct_absolute=yes
+	  export_dynamic_flag_spec='${wl}-E'
+
+	  # hardcode_minus_L: Not really in the search PATH,
+	  # but as the default location of the library.
+	  hardcode_minus_L=yes
+	  ;;
+	esac
+      fi
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	# Try to use the -exported_symbol ld option, if it does not
+	# work, assume that -exports_file does not work either and
+	# implicitly export all symbols.
+        save_LDFLAGS="$LDFLAGS"
+        LDFLAGS="$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null"
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+int foo(void) {}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+        LDFLAGS="$save_LDFLAGS"
+      else
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      inherit_rpath=yes
+      link_all_deplibs=yes
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+      else
+	archive_cmds='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
+      fi
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_direct=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    newsos6)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_direct=yes
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      hardcode_shlibpath_var=no
+      ;;
+
+    *nto* | *qnx*)
+      ;;
+
+    openbsd*)
+      if test -f /usr/libexec/ld.so; then
+	hardcode_direct=yes
+	hardcode_shlibpath_var=no
+	hardcode_direct_absolute=yes
+	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
+	  hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	  export_dynamic_flag_spec='${wl}-E'
+	else
+	  case $host_os in
+	   openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
+	     archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	     hardcode_libdir_flag_spec='-R$libdir'
+	     ;;
+	   *)
+	     archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	     hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
+	     ;;
+	  esac
+	fi
+      else
+	ld_shlibs=no
+      fi
+      ;;
+
+    os2*)
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_minus_L=yes
+      allow_undefined_flag=unsupported
+      archive_cmds='$ECHO "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~$ECHO DATA >> $output_objdir/$libname.def~$ECHO " SINGLE NONSHARED" >> $output_objdir/$libname.def~$ECHO EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
+      old_archive_from_new_cmds='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      ;;
+
+    osf3*)
+      if test "$GCC" = yes; then
+	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	allow_undefined_flag=' -expect_unresolved \*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_separator=:
+      ;;
+
+    osf4* | osf5*)	# as osf3* with the addition of -msym flag
+      if test "$GCC" = yes; then
+	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      else
+	allow_undefined_flag=' -expect_unresolved \*'
+	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_expsym_cmds='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; printf "%s\\n" "-hidden">> $lib.exp~
+	$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'
+
+	# Both c and cxx compiler support -rpath directly
+	hardcode_libdir_flag_spec='-rpath $libdir'
+      fi
+      archive_cmds_need_lc='no'
+      hardcode_libdir_separator=:
+      ;;
+
+    solaris*)
+      no_undefined_flag=' -z defs'
+      if test "$GCC" = yes; then
+	wlarc='${wl}'
+	archive_cmds='$CC -shared ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $CC -shared ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+      else
+	case `$CC -V 2>&1` in
+	*"Compilers 5.0"*)
+	  wlarc=''
+	  archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
+	  ;;
+	*)
+	  wlarc='${wl}'
+	  archive_cmds='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+	  ;;
+	esac
+      fi
+      hardcode_libdir_flag_spec='-R$libdir'
+      hardcode_shlibpath_var=no
+      case $host_os in
+      solaris2.[0-5] | solaris2.[0-5].*) ;;
+      *)
+	# The compiler driver will combine and reorder linker options,
+	# but understands `-z linker_flag'.  GCC discards it without `$wl',
+	# but is careful enough not to reorder.
+	# Supported since Solaris 2.6 (maybe 2.5.1?)
+	if test "$GCC" = yes; then
+	  whole_archive_flag_spec='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'
+	else
+	  whole_archive_flag_spec='-z allextract$convenience -z defaultextract'
+	fi
+	;;
+      esac
+      link_all_deplibs=yes
+      ;;
+
+    sunos4*)
+      if test "x$host_vendor" = xsequent; then
+	# Use $CC to link under sequent, because it throws in some extra .o
+	# files that make .init and .fini sections work.
+	archive_cmds='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_direct=yes
+      hardcode_minus_L=yes
+      hardcode_shlibpath_var=no
+      ;;
+
+    sysv4)
+      case $host_vendor in
+	sni)
+	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct=yes # is this really true???
+	;;
+	siemens)
+	  ## LD is ld it makes a PLAMLIB
+	  ## CC just makes a GrossModule.
+	  archive_cmds='$LD -G -o $lib $libobjs $deplibs $linker_flags'
+	  reload_cmds='$CC -r -o $output$reload_objs'
+	  hardcode_direct=no
+        ;;
+	motorola)
+	  archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  hardcode_direct=no #Motorola manual says yes, but my tests say they lie
+	;;
+      esac
+      runpath_var='LD_RUN_PATH'
+      hardcode_shlibpath_var=no
+      ;;
+
+    sysv4.3*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_shlibpath_var=no
+      export_dynamic_flag_spec='-Bexport'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	hardcode_shlibpath_var=no
+	runpath_var=LD_RUN_PATH
+	hardcode_runpath_var=yes
+	ld_shlibs=yes
+      fi
+      ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)
+      no_undefined_flag='${wl}-z,text'
+      archive_cmds_need_lc=no
+      hardcode_shlibpath_var=no
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6*)
+      # Note: We can NOT use -z defs as we might desire, because we do not
+      # link with -lc, and that would cause any symbols used from libc to
+      # always be unresolved, which means just about no library would
+      # ever link correctly.  If we're not using GNU ld we use -z text
+      # though, which does catch some bad symbols but isn't as heavy-handed
+      # as -z defs.
+      no_undefined_flag='${wl}-z,text'
+      allow_undefined_flag='${wl}-z,nodefs'
+      archive_cmds_need_lc=no
+      hardcode_shlibpath_var=no
+      hardcode_libdir_flag_spec='${wl}-R,$libdir'
+      hardcode_libdir_separator=':'
+      link_all_deplibs=yes
+      export_dynamic_flag_spec='${wl}-Bexport'
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    uts4*)
+      archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_shlibpath_var=no
+      ;;
+
+    *)
+      ld_shlibs=no
+      ;;
+    esac
+
+    if test x$host_vendor = xsni; then
+      case $host in
+      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)
+	export_dynamic_flag_spec='${wl}-Blargedynsym'
+	;;
+      esac
+    fi
+  fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ld_shlibs" >&5
+$as_echo "$ld_shlibs" >&6; }
+test "$ld_shlibs" = no && can_build_shared=no
+
+with_gnu_ld=$with_gnu_ld
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$archive_cmds_need_lc" in
+x|xyes)
+  # Assume -lc should be added
+  archive_cmds_need_lc=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $archive_cmds in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether -lc should be explicitly linked in" >&5
+$as_echo_n "checking whether -lc should be explicitly linked in... " >&6; }
+      $RM conftest*
+      echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+      if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } 2>conftest.err; then
+        soname=conftest
+        lib=conftest
+        libobjs=conftest.$ac_objext
+        deplibs=
+        wl=$lt_prog_compiler_wl
+	pic_flag=$lt_prog_compiler_pic
+        compiler_flags=-v
+        linker_flags=-v
+        verstring=
+        output_objdir=.
+        libname=conftest
+        lt_save_allow_undefined_flag=$allow_undefined_flag
+        allow_undefined_flag=
+        if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$archive_cmds 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1\""; } >&5
+  (eval $archive_cmds 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }
+        then
+	  archive_cmds_need_lc=no
+        else
+	  archive_cmds_need_lc=yes
+        fi
+        allow_undefined_flag=$lt_save_allow_undefined_flag
+      else
+        cat conftest.err 1>&5
+      fi
+      $RM conftest*
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: $archive_cmds_need_lc" >&5
+$as_echo "$archive_cmds_need_lc" >&6; }
+      ;;
+    esac
+  fi
+  ;;
+esac
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
+$as_echo_n "checking dynamic linker characteristics... " >&6; }
+
+if test "$GCC" = yes; then
+  case $host_os in
+    darwin*) lt_awk_arg="/^libraries:/,/LR/" ;;
+    *) lt_awk_arg="/^libraries:/" ;;
+  esac
+  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if $ECHO "$lt_search_path_spec" | $GREP ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+  # Ok, now we have the path, separated by spaces, we can step through it
+  # and add multilib dir if necessary.
+  lt_tmp_lt_search_path_spec=
+  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
+  for lt_sys_path in $lt_search_path_spec; do
+    if test -d "$lt_sys_path/$lt_multi_os_dir"; then
+      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir"
+    else
+      test -d "$lt_sys_path" && \
+	lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path"
+    fi
+  done
+  lt_search_path_spec=`$ECHO $lt_tmp_lt_search_path_spec | awk '
+BEGIN {RS=" "; FS="/|\n";} {
+  lt_foo="";
+  lt_count=0;
+  for (lt_i = NF; lt_i > 0; lt_i--) {
+    if ($lt_i != "" && $lt_i != ".") {
+      if ($lt_i == "..") {
+        lt_count++;
+      } else {
+        if (lt_count == 0) {
+          lt_foo="/" $lt_i lt_foo;
+        } else {
+          lt_count--;
+        }
+      }
+    }
+  }
+  if (lt_foo != "") { lt_freq[lt_foo]++; }
+  if (lt_freq[lt_foo] == 1) { print lt_foo; }
+}'`
+  sys_lib_search_path_spec=`$ECHO $lt_search_path_spec`
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix[4-9]*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[01] | aix4.[01].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  case $host_cpu in
+  powerpc)
+    # Since July 2007 AmigaOS4 officially supports .so libraries.
+    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    ;;
+  m68k)
+    library_names_spec='$libname.ixlibrary $libname.a'
+    # Create ${libname}_ixlibrary.a entries in /sys/libs.
+    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$ECHO "X$lib" | $Xsed -e '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+    ;;
+  esac
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[45]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32* | cegcc*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i; echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname~
+      if test -n '\''$stripme'\'' && test -n '\''$striplib'\''; then
+        eval '\''$striplib \$dldir/$dlname'\'' || exit \$?;
+      fi'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $RM \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw* | cegcc*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | $GREP "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if $ECHO "$sys_lib_search_path_spec" | $GREP ';[c-zC-Z]:/' >/dev/null; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+
+  sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/local/lib"
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[123]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[01]* | freebsdelf3.[01]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[2-9]* | freebsdelf3.[2-9]* | \
+  freebsd4.[0-5] | freebsdelf4.[0-5] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  *) # from 4.6 on, and DragonFly
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+  hppa*64*)
+    shrext_cmds='.sl'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+  *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix[3-9]*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  # Some binutils ld are patched to set DT_RUNPATH
+  save_LDFLAGS=$LDFLAGS
+  save_libdir=$libdir
+  eval "libdir=/foo; wl=\"$lt_prog_compiler_wl\"; \
+       LDFLAGS=\"\$LDFLAGS $hardcode_libdir_flag_spec\""
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  if  ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep "RUNPATH.*$libdir" >/dev/null; then :
+  shlibpath_overrides_runpath=yes
+fi
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$save_LDFLAGS
+  libdir=$save_libdir
+
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s 2>/dev/null", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[	 ]*hwcap[	 ]/d;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+*nto* | *qnx*)
+  version_type=qnx
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='ldqnx.so'
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*)	need_version=yes ;;
+    *)				need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[89] | openbsd2.[89].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+rdos*)
+  dynamic_linker=no
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+tpf*)
+  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
+$as_echo "$dynamic_linker" >&6; }
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+
+if test "${lt_cv_sys_lib_search_path_spec+set}" = set; then
+  sys_lib_search_path_spec="$lt_cv_sys_lib_search_path_spec"
+fi
+if test "${lt_cv_sys_lib_dlsearch_path_spec+set}" = set; then
+  sys_lib_dlsearch_path_spec="$lt_cv_sys_lib_dlsearch_path_spec"
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking how to hardcode library paths into programs" >&5
+$as_echo_n "checking how to hardcode library paths into programs... " >&6; }
+hardcode_action=
+if test -n "$hardcode_libdir_flag_spec" ||
+   test -n "$runpath_var" ||
+   test "X$hardcode_automatic" = "Xyes" ; then
+
+  # We can hardcode non-existent directories.
+  if test "$hardcode_direct" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_TAGVAR(hardcode_shlibpath_var, )" != no &&
+     test "$hardcode_minus_L" != no; then
+    # Linking always hardcodes the temporary library directory.
+    hardcode_action=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    hardcode_action=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  hardcode_action=unsupported
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $hardcode_action" >&5
+$as_echo "$hardcode_action" >&6; }
+
+if test "$hardcode_action" = relink ||
+   test "$inherit_rpath" = yes; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+
+
+
+
+
+
+  if test "x$enable_dlopen" != xyes; then
+  enable_dlopen=unknown
+  enable_dlopen_self=unknown
+  enable_dlopen_self_static=unknown
+else
+  lt_cv_dlopen=no
+  lt_cv_dlopen_libs=
+
+  case $host_os in
+  beos*)
+    lt_cv_dlopen="load_add_on"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    ;;
+
+  mingw* | pw32* | cegcc*)
+    lt_cv_dlopen="LoadLibrary"
+    lt_cv_dlopen_libs=
+    ;;
+
+  cygwin*)
+    lt_cv_dlopen="dlopen"
+    lt_cv_dlopen_libs=
+    ;;
+
+  darwin*)
+  # if libdl is installed we need to link against it
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
+$as_echo_n "checking for dlopen in -ldl... " >&6; }
+if test "${ac_cv_lib_dl_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dl_dlopen=yes
+else
+  ac_cv_lib_dl_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
+$as_echo "$ac_cv_lib_dl_dlopen" >&6; }
+if test "x$ac_cv_lib_dl_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+else
+
+    lt_cv_dlopen="dyld"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+
+fi
+
+    ;;
+
+  *)
+    ac_fn_c_check_func "$LINENO" "shl_load" "ac_cv_func_shl_load"
+if test "x$ac_cv_func_shl_load" = x""yes; then :
+  lt_cv_dlopen="shl_load"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for shl_load in -ldld" >&5
+$as_echo_n "checking for shl_load in -ldld... " >&6; }
+if test "${ac_cv_lib_dld_shl_load+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char shl_load ();
+int
+main ()
+{
+return shl_load ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dld_shl_load=yes
+else
+  ac_cv_lib_dld_shl_load=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_shl_load" >&5
+$as_echo "$ac_cv_lib_dld_shl_load" >&6; }
+if test "x$ac_cv_lib_dld_shl_load" = x""yes; then :
+  lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"
+else
+  ac_fn_c_check_func "$LINENO" "dlopen" "ac_cv_func_dlopen"
+if test "x$ac_cv_func_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
+$as_echo_n "checking for dlopen in -ldl... " >&6; }
+if test "${ac_cv_lib_dl_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dl_dlopen=yes
+else
+  ac_cv_lib_dl_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
+$as_echo "$ac_cv_lib_dl_dlopen" >&6; }
+if test "x$ac_cv_lib_dl_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -lsvld" >&5
+$as_echo_n "checking for dlopen in -lsvld... " >&6; }
+if test "${ac_cv_lib_svld_dlopen+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lsvld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlopen ();
+int
+main ()
+{
+return dlopen ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_svld_dlopen=yes
+else
+  ac_cv_lib_svld_dlopen=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_svld_dlopen" >&5
+$as_echo "$ac_cv_lib_svld_dlopen" >&6; }
+if test "x$ac_cv_lib_svld_dlopen" = x""yes; then :
+  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld" >&5
+$as_echo_n "checking for dld_link in -ldld... " >&6; }
+if test "${ac_cv_lib_dld_dld_link+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldld  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dld_link ();
+int
+main ()
+{
+return dld_link ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dld_dld_link=yes
+else
+  ac_cv_lib_dld_dld_link=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link" >&5
+$as_echo "$ac_cv_lib_dld_dld_link" >&6; }
+if test "x$ac_cv_lib_dld_dld_link" = x""yes; then :
+  lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"
+fi
+
+
+fi
+
+
+fi
+
+
+fi
+
+
+fi
+
+
+fi
+
+    ;;
+  esac
+
+  if test "x$lt_cv_dlopen" != xno; then
+    enable_dlopen=yes
+  else
+    enable_dlopen=no
+  fi
+
+  case $lt_cv_dlopen in
+  dlopen)
+    save_CPPFLAGS="$CPPFLAGS"
+    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
+
+    save_LDFLAGS="$LDFLAGS"
+    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
+
+    save_LIBS="$LIBS"
+    LIBS="$lt_cv_dlopen_libs $LIBS"
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a program can dlopen itself" >&5
+$as_echo_n "checking whether a program can dlopen itself... " >&6; }
+if test "${lt_cv_dlopen_self+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  	  if test "$cross_compiling" = yes; then :
+  lt_cv_dlopen_self=cross
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<_LT_EOF
+#line 10555 "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+  return status;
+}
+_LT_EOF
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&5 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) lt_cv_dlopen_self=yes ;;
+      x$lt_dlneed_uscore) lt_cv_dlopen_self=yes ;;
+      x$lt_dlunknown|x*) lt_cv_dlopen_self=no ;;
+    esac
+  else :
+    # compilation failed
+    lt_cv_dlopen_self=no
+  fi
+fi
+rm -fr conftest*
+
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self" >&5
+$as_echo "$lt_cv_dlopen_self" >&6; }
+
+    if test "x$lt_cv_dlopen_self" = xyes; then
+      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself" >&5
+$as_echo_n "checking whether a statically linked program can dlopen itself... " >&6; }
+if test "${lt_cv_dlopen_self_static+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  	  if test "$cross_compiling" = yes; then :
+  lt_cv_dlopen_self_static=cross
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<_LT_EOF
+#line 10651 "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+  return status;
+}
+_LT_EOF
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&5 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) lt_cv_dlopen_self_static=yes ;;
+      x$lt_dlneed_uscore) lt_cv_dlopen_self_static=yes ;;
+      x$lt_dlunknown|x*) lt_cv_dlopen_self_static=no ;;
+    esac
+  else :
+    # compilation failed
+    lt_cv_dlopen_self_static=no
+  fi
+fi
+rm -fr conftest*
+
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self_static" >&5
+$as_echo "$lt_cv_dlopen_self_static" >&6; }
+    fi
+
+    CPPFLAGS="$save_CPPFLAGS"
+    LDFLAGS="$save_LDFLAGS"
+    LIBS="$save_LIBS"
+    ;;
+  esac
+
+  case $lt_cv_dlopen_self in
+  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
+  *) enable_dlopen_self=unknown ;;
+  esac
+
+  case $lt_cv_dlopen_self_static in
+  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
+  *) enable_dlopen_self_static=unknown ;;
+  esac
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+striplib=
+old_striplib=
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible" >&5
+$as_echo_n "checking whether stripping libraries is possible... " >&6; }
+if test -n "$STRIP" && $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
+  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
+  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+# FIXME - insert some real tests, host_os isn't really good enough
+  case $host_os in
+  darwin*)
+    if test -n "$STRIP" ; then
+      striplib="$STRIP -x"
+      old_striplib="$STRIP -S"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+    ;;
+  *)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    ;;
+  esac
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+  # Report which library types will actually be built
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if libtool supports shared libraries" >&5
+$as_echo_n "checking if libtool supports shared libraries... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $can_build_shared" >&5
+$as_echo "$can_build_shared" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries" >&5
+$as_echo_n "checking whether to build shared libraries... " >&6; }
+  test "$can_build_shared" = "no" && enable_shared=no
+
+  # On AIX, shared libraries and static libraries use the same namespace, and
+  # are all built from PIC.
+  case $host_os in
+  aix3*)
+    test "$enable_shared" = yes && enable_static=no
+    if test -n "$RANLIB"; then
+      archive_cmds="$archive_cmds~\$RANLIB \$lib"
+      postinstall_cmds='$RANLIB $lib'
+    fi
+    ;;
+
+  aix[4-9]*)
+    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+      test "$enable_shared" = yes && enable_static=no
+    fi
+    ;;
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_shared" >&5
+$as_echo "$enable_shared" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build static libraries" >&5
+$as_echo_n "checking whether to build static libraries... " >&6; }
+  # Make sure either enable_shared or enable_static is yes.
+  test "$enable_shared" = yes || enable_static=yes
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_static" >&5
+$as_echo "$enable_static" >&6; }
+
+
+
+
+fi
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC="$lt_save_CC"
+
+
+
+
+
+
+
+
+
+
+
+
+
+        ac_config_commands="$ac_config_commands libtool"
+
+
+
+
+# Only expand once:
+
+
+
+# Checks for header files.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
+$as_echo_n "checking for ANSI C header files... " >&6; }
+if test "${ac_cv_header_stdc+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+#include <stdarg.h>
+#include <string.h>
+#include <float.h>
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_header_stdc=yes
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test $ac_cv_header_stdc = yes; then
+  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <string.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "memchr" >/dev/null 2>&1; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "free" >/dev/null 2>&1; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  if test "$cross_compiling" = yes; then :
+  :
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <ctype.h>
+#include <stdlib.h>
+#if ((' ' & 0x0FF) == 0x020)
+# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
+# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
+#else
+# define ISLOWER(c) \
+		   (('a' <= (c) && (c) <= 'i') \
+		     || ('j' <= (c) && (c) <= 'r') \
+		     || ('s' <= (c) && (c) <= 'z'))
+# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
+#endif
+
+#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
+int
+main ()
+{
+  int i;
+  for (i = 0; i < 256; i++)
+    if (XOR (islower (i), ISLOWER (i))
+	|| toupper (i) != TOUPPER (i))
+      return 2;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc" >&5
+$as_echo "$ac_cv_header_stdc" >&6; }
+if test $ac_cv_header_stdc = yes; then
+
+$as_echo "#define STDC_HEADERS 1" >>confdefs.h
+
+fi
+
+for ac_header in complex.h locale.h inttypes.h stdint.h limits.h unistd.h sys/time.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
+if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+
+done
+
+
+# Checks for typedefs, structures, and compiler characteristics.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for an ANSI C-conforming const" >&5
+$as_echo_n "checking for an ANSI C-conforming const... " >&6; }
+if test "${ac_cv_c_const+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+/* FIXME: Include the comments suggested by Paul. */
+#ifndef __cplusplus
+  /* Ultrix mips cc rejects this.  */
+  typedef int charset[2];
+  const charset cs;
+  /* SunOS 4.1.1 cc rejects this.  */
+  char const *const *pcpcc;
+  char **ppc;
+  /* NEC SVR4.0.2 mips cc rejects this.  */
+  struct point {int x, y;};
+  static struct point const zero = {0,0};
+  /* AIX XL C 1.02.0.0 rejects this.
+     It does not let you subtract one const X* pointer from another in
+     an arm of an if-expression whose if-part is not a constant
+     expression */
+  const char *g = "string";
+  pcpcc = &g + (g ? g-g : 0);
+  /* HPUX 7.0 cc rejects these. */
+  ++pcpcc;
+  ppc = (char**) pcpcc;
+  pcpcc = (char const *const *) ppc;
+  { /* SCO 3.2v4 cc rejects this.  */
+    char *t;
+    char const *s = 0 ? (char *) 0 : (char const *) 0;
+
+    *t++ = 0;
+    if (s) return 0;
+  }
+  { /* Someone thinks the Sun supposedly-ANSI compiler will reject this.  */
+    int x[] = {25, 17};
+    const int *foo = &x[0];
+    ++foo;
+  }
+  { /* Sun SC1.0 ANSI compiler rejects this -- but not the above. */
+    typedef const int *iptr;
+    iptr p = 0;
+    ++p;
+  }
+  { /* AIX XL C 1.02.0.0 rejects this saying
+       "k.c", line 2.27: 1506-025 (S) Operand must be a modifiable lvalue. */
+    struct s { int j; const int *ap[3]; };
+    struct s *b; b->j = 5;
+  }
+  { /* ULTRIX-32 V3.1 (Rev 9) vcc rejects this */
+    const int foo = 10;
+    if (!foo) return 0;
+  }
+  return !cs[0] && !zero.x;
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_c_const=yes
+else
+  ac_cv_c_const=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_const" >&5
+$as_echo "$ac_cv_c_const" >&6; }
+if test $ac_cv_c_const = no; then
+
+$as_echo "#define const /**/" >>confdefs.h
+
+fi
+
+ac_fn_c_check_type "$LINENO" "size_t" "ac_cv_type_size_t" "$ac_includes_default"
+if test "x$ac_cv_type_size_t" = x""yes; then :
+
+else
+
+cat >>confdefs.h <<_ACEOF
+#define size_t unsigned int
+_ACEOF
+
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether time.h and sys/time.h may both be included" >&5
+$as_echo_n "checking whether time.h and sys/time.h may both be included... " >&6; }
+if test "${ac_cv_header_time+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <sys/types.h>
+#include <sys/time.h>
+#include <time.h>
+
+int
+main ()
+{
+if ((struct tm *) 0)
+return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_header_time=yes
+else
+  ac_cv_header_time=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_time" >&5
+$as_echo "$ac_cv_header_time" >&6; }
+if test $ac_cv_header_time = yes; then
+
+$as_echo "#define TIME_WITH_SYS_TIME 1" >>confdefs.h
+
+fi
+
+
+# Checks for libraries.
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for creal in -lm" >&5
+$as_echo_n "checking for creal in -lm... " >&6; }
+if test "${ac_cv_lib_m_creal+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lm  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char creal ();
+int
+main ()
+{
+return creal ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_m_creal=yes
+else
+  ac_cv_lib_m_creal=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_creal" >&5
+$as_echo "$ac_cv_lib_m_creal" >&6; }
+if test "x$ac_cv_lib_m_creal" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_LIBM 1
+_ACEOF
+
+  LIBS="-lm $LIBS"
+
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for __gmpz_init in -lgmp" >&5
+$as_echo_n "checking for __gmpz_init in -lgmp... " >&6; }
+if test "${ac_cv_lib_gmp___gmpz_init+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lgmp  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char __gmpz_init ();
+int
+main ()
+{
+return __gmpz_init ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_gmp___gmpz_init=yes
+else
+  ac_cv_lib_gmp___gmpz_init=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_gmp___gmpz_init" >&5
+$as_echo "$ac_cv_lib_gmp___gmpz_init" >&6; }
+if test "x$ac_cv_lib_gmp___gmpz_init" = x""yes; then :
+  LIBS="-lgmp $LIBS"
+else
+  as_fn_error $? "libgmp not found or uses a different ABI." "$LINENO" 5
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for MPFR" >&5
+$as_echo_n "checking for MPFR... " >&6; }
+LIBS="-lmpfr $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include "mpfr.h"
+int
+main ()
+{
+mpfr_t x;  mpfr_init(x) ; mpfr_clear(x);
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+        as_fn_error $? "libmpfr not found or uses a different ABI." "$LINENO" 5
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+# Check for a recent GMP
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for recent GMP" >&5
+$as_echo_n "checking for recent GMP... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include "gmp.h"
+#if (__GNU_MP_VERSION*100 + __GNU_MP_VERSION_MINOR*10 + __GNU_MP_VERSION_PATCHLEVEL < 432)
+# error "Minimal GMP version is 4.3.2"
+error
+#endif
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+        as_fn_error $? "GMP version >= 4.3.2 required" "$LINENO" 5
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+# Check for a recent MPFR: we require MPFR 2.4.2 so that the tests
+# in log.dat pass
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for recent MPFR" >&5
+$as_echo_n "checking for recent MPFR... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#include "mpfr.h"
+#if (MPFR_VERSION < MPFR_VERSION_NUM (2,4,2))
+# error "Minimal MPFR version is 2.4.2"
+error
+#endif
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+
+         { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+         as_fn_error $? "MPFR version >= 2.4.2 required" "$LINENO" 5
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+# Check for logging feature
+if test "x$enable_logging" = "xyes"; then :
+  for ac_header in dlfcn.h
+do :
+  ac_fn_c_check_header_mongrel "$LINENO" "dlfcn.h" "ac_cv_header_dlfcn_h" "$ac_includes_default"
+if test "x$ac_cv_header_dlfcn_h" = x""yes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_DLFCN_H 1
+_ACEOF
+
+fi
+
+done
+
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlsym in -ldl" >&5
+$as_echo_n "checking for dlsym in -ldl... " >&6; }
+if test "${ac_cv_lib_dl_dlsym+set}" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ldl  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char dlsym ();
+int
+main ()
+{
+return dlsym ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_dl_dlsym=yes
+else
+  ac_cv_lib_dl_dlsym=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlsym" >&5
+$as_echo "$ac_cv_lib_dl_dlsym" >&6; }
+if test "x$ac_cv_lib_dl_dlsym" = x""yes; then :
+
+
+$as_echo "#define HAVE_LIBDL 1" >>confdefs.h
+
+            LIBS="-ldl $LIBS"
+
+  ac_fn_c_check_type "$LINENO" "intptr_t" "ac_cv_type_intptr_t" "$ac_includes_default"
+if test "x$ac_cv_type_intptr_t" = x""yes; then :
+
+$as_echo "#define HAVE_INTPTR_T 1" >>confdefs.h
+
+else
+  for ac_type in 'int' 'long int' 'long long int'; do
+       cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$ac_includes_default
+int
+main ()
+{
+static int test_array [1 - 2 * !(sizeof (void *) <= sizeof ($ac_type))];
+test_array [0] = 0
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+cat >>confdefs.h <<_ACEOF
+#define intptr_t $ac_type
+_ACEOF
+
+	  ac_type=
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+       test -z "$ac_type" && break
+     done
+fi
+
+
+            case " $LIBOBJS " in
+  *" logging.$ac_objext "* ) ;;
+  *) LIBOBJS="$LIBOBJS logging.$ac_objext"
+ ;;
+esac
+
+            MPC_LOG_H=src/mpc-log.h
+
+
+else
+  as_fn_error $? "Library dl not found, logging impossible" "$LINENO" 5
+fi
+
+
+
+fi
+
+# Checks if compiler accepts warning flags.
+
+
+  if echo $VERSION | grep -c dev >/dev/null 2>&1 ; then
+    if test "x$GCC" = "xyes" -a "x$compiler" != "xicc" -a "x$compiler" != "xg++"; then
+      case $host in
+         *darwin*) ;;
+         *)
+
+
+
+
+  flag=`echo "-D_FORTIFY_SOURCE=2" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -D_FORTIFY_SOURCE=2 flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -D_FORTIFY_SOURCE=2 flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -D_FORTIFY_SOURCE=2"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -D_FORTIFY_SOURCE=2"
+
+else
+
+   :
+
+
+fi
+ ;;
+      esac
+
+
+
+
+
+  flag=`echo "-g" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -g flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -g flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -g"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -g"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-pedantic" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -pedantic flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -pedantic flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -pedantic"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -pedantic"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Wno-long-long" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Wno-long-long flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Wno-long-long flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Wno-long-long"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Wno-long-long"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Wall" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Wall flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Wall flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Wall"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Wall"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Wextra" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Wextra flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Wextra flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Wextra"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Wextra"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Werror" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Werror flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Werror flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Werror"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Werror"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Wdeclaration-after-statement" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Wdeclaration-after-statement flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Wdeclaration-after-statement flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Wdeclaration-after-statement"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Wdeclaration-after-statement"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Wundef" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Wundef flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Wundef flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Wundef"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Wundef"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Wshadow" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Wshadow flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Wshadow flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Wshadow"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Wshadow"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Wstrict-prototypes" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Wstrict-prototypes flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Wstrict-prototypes flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Wstrict-prototypes"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Wstrict-prototypes"
+
+else
+
+   :
+
+
+fi
+
+
+
+
+
+
+  flag=`echo "-Wmissing-prototypes" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler accepts the -Wmissing-prototypes flag" >&5
+$as_echo_n "checking whether the C compiler accepts the -Wmissing-prototypes flag... " >&6; }
+if eval "test \"\${ax_cv_c_check_flag_$flag+set}\"" = set; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS -Wmissing-prototypes"
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+
+      eval "ax_cv_c_check_flag_$flag=yes"
+
+else
+
+      eval "ax_cv_c_check_flag_$flag=no"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+    CFLAGS="$save_CFLAGS"
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+fi
+eval ac_res=\$ax_cv_c_check_flag_$flag
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+
+  if eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"; then :
+
+   :
+    WARNINGCFLAGS="$WARNINGCFLAGS -Wmissing-prototypes"
+
+else
+
+   :
+
+
+fi
+
+
+    fi
+  fi
+
+
+# Checks for library functions with warning flags.
+old_cflags=$CFLAGS
+CFLAGS="$CFLAGS $WARNINGCFLAGS"
+for ac_func in gettimeofday localeconv setlocale
+do :
+  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+done
+
+for ac_func in dup dup2 fileno
+do :
+  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+
+else
+
+$as_echo "#define NO_STREAM_REDIRECTION 1" >>confdefs.h
+
+fi
+done
+
+CFLAGS=$old_cflags
+
+ac_config_files="$ac_config_files Makefile src/Makefile tests/Makefile doc/Makefile"
+
+cat >confcache <<\_ACEOF
+# This file is a shell script that caches the results of configure
+# tests run on this system so they can be shared between configure
+# scripts and configure runs, see configure's option --config-cache.
+# It is not useful on other systems.  If it contains results you don't
+# want to keep, you may remove or edit it.
+#
+# config.status only pays attention to the cache file if you give it
+# the --recheck option to rerun configure.
+#
+# `ac_cv_env_foo' variables (set or unset) will be overridden when
+# loading this file, other *unset* `ac_cv_foo' will be assigned the
+# following values.
+
+_ACEOF
+
+# The following way of writing the cache mishandles newlines in values,
+# but we know of no workaround that is simple, portable, and efficient.
+# So, we kill variables containing newlines.
+# Ultrix sh set writes to stderr and can't be redirected directly,
+# and sets the high bit in the cache file unless we assign to the vars.
+(
+  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
+$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
+      *) { eval $ac_var=; unset $ac_var;} ;;
+      esac ;;
+    esac
+  done
+
+  (set) 2>&1 |
+    case $as_nl`(ac_space=' '; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
+      # `set' does not quote correctly, so add quotes: double-quote
+      # substitution turns \\\\ into \\, and sed turns \\ into \.
+      sed -n \
+	"s/'/'\\\\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
+      ;; #(
+    *)
+      # `set' quotes correctly as required by POSIX, so do not add quotes.
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+) |
+  sed '
+     /^ac_cv_env_/b end
+     t clear
+     :clear
+     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
+     t end
+     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
+     :end' >>confcache
+if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
+  if test -w "$cache_file"; then
+    test "x$cache_file" != "x/dev/null" &&
+      { $as_echo "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
+$as_echo "$as_me: updating cache $cache_file" >&6;}
+    cat confcache >$cache_file
+  else
+    { $as_echo "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
+$as_echo "$as_me: not updating unwritable cache $cache_file" >&6;}
+  fi
+fi
+rm -f confcache
+
+test "x$prefix" = xNONE && prefix=$ac_default_prefix
+# Let make expand exec_prefix.
+test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'
+
+DEFS=-DHAVE_CONFIG_H
+
+ac_libobjs=
+ac_ltlibobjs=
+U=
+for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
+  # 1. Remove the extension, and $U if already installed.
+  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
+  ac_i=`$as_echo "$ac_i" | sed "$ac_script"`
+  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
+  #    will be set to the directory where LIBOBJS objects are built.
+  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
+  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
+done
+LIBOBJS=$ac_libobjs
+
+LTLIBOBJS=$ac_ltlibobjs
+
+
+ if test -n "$EXEEXT"; then
+  am__EXEEXT_TRUE=
+  am__EXEEXT_FALSE='#'
+else
+  am__EXEEXT_TRUE='#'
+  am__EXEEXT_FALSE=
+fi
+
+if test -z "${MAINTAINER_MODE_TRUE}" && test -z "${MAINTAINER_MODE_FALSE}"; then
+  as_fn_error $? "conditional \"MAINTAINER_MODE\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${AMDEP_TRUE}" && test -z "${AMDEP_FALSE}"; then
+  as_fn_error $? "conditional \"AMDEP\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
+  as_fn_error $? "conditional \"am__fastdepCC\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
+
+: ${CONFIG_STATUS=./config.status}
+ac_write_fail=0
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files $CONFIG_STATUS"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
+$as_echo "$as_me: creating $CONFIG_STATUS" >&6;}
+as_write_fail=0
+cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
+#! $SHELL
+# Generated by $as_me.
+# Run this file to recreate the current configuration.
+# Compiler output produced by configure, useful for debugging
+# configure, is in config.log if it exists.
+
+debug=false
+ac_cs_recheck=false
+ac_cs_silent=false
+
+SHELL=\${CONFIG_SHELL-$SHELL}
+export SHELL
+_ASEOF
+cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
+## -------------------- ##
+## M4sh Initialization. ##
+## -------------------- ##
+
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
+  emulate sh
+  NULLCMD=:
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in #(
+  *posix*) :
+    set -o posix ;; #(
+  *) :
+     ;;
+esac
+fi
+
+
+as_nl='
+'
+export as_nl
+# Printing a long string crashes Solaris 7 /usr/bin/printf.
+as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
+as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
+# Prefer a ksh shell builtin over an external printf program on Solaris,
+# but without wasting forks for bash or zsh.
+if test -z "$BASH_VERSION$ZSH_VERSION" \
+    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='print -r --'
+  as_echo_n='print -rn --'
+elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
+  as_echo='printf %s\n'
+  as_echo_n='printf %s'
+else
+  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
+    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
+    as_echo_n='/usr/ucb/echo -n'
+  else
+    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
+    as_echo_n_body='eval
+      arg=$1;
+      case $arg in #(
+      *"$as_nl"*)
+	expr "X$arg" : "X\\(.*\\)$as_nl";
+	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
+      esac;
+      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
+    '
+    export as_echo_n_body
+    as_echo_n='sh -c $as_echo_n_body as_echo'
+  fi
+  export as_echo_body
+  as_echo='sh -c $as_echo_body as_echo'
+fi
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in #((
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+  done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  exit 1
+fi
+
+# Unset variables that we do not need and which cause bugs (e.g. in
+# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
+# suppresses any "Segmentation fault" message there.  '((' could
+# trigger a bug in pdksh 5.2.14.
+for as_var in BASH_ENV ENV MAIL MAILPATH
+do eval test x\${$as_var+set} = xset \
+  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+LC_ALL=C
+export LC_ALL
+LANGUAGE=C
+export LANGUAGE
+
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+
+# as_fn_error STATUS ERROR [LINENO LOG_FD]
+# ----------------------------------------
+# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
+# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
+# script with STATUS, using 1 if that was 0.
+as_fn_error ()
+{
+  as_status=$1; test $as_status -eq 0 && as_status=1
+  if test "$4"; then
+    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
+  fi
+  $as_echo "$as_me: error: $2" >&2
+  as_fn_exit $as_status
+} # as_fn_error
+
+
+# as_fn_set_status STATUS
+# -----------------------
+# Set $? to STATUS, without forking.
+as_fn_set_status ()
+{
+  return $1
+} # as_fn_set_status
+
+# as_fn_exit STATUS
+# -----------------
+# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
+as_fn_exit ()
+{
+  set +e
+  as_fn_set_status $1
+  exit $1
+} # as_fn_exit
+
+# as_fn_unset VAR
+# ---------------
+# Portably unset VAR.
+as_fn_unset ()
+{
+  { eval $1=; unset $1;}
+}
+as_unset=as_fn_unset
+# as_fn_append VAR VALUE
+# ----------------------
+# Append the text in VALUE to the end of the definition contained in VAR. Take
+# advantage of any shell optimizations that allow amortized linear growth over
+# repeated appends, instead of the typical quadratic growth present in naive
+# implementations.
+if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
+  eval 'as_fn_append ()
+  {
+    eval $1+=\$2
+  }'
+else
+  as_fn_append ()
+  {
+    eval $1=\$$1\$2
+  }
+fi # as_fn_append
+
+# as_fn_arith ARG...
+# ------------------
+# Perform arithmetic evaluation on the ARGs, and store the result in the
+# global $as_val. Take advantage of shells that can avoid forks. The arguments
+# must be portable across $(()) and expr.
+if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
+  eval 'as_fn_arith ()
+  {
+    as_val=$(( $* ))
+  }'
+else
+  as_fn_arith ()
+  {
+    as_val=`expr "$@" || test $? -eq 1`
+  }
+fi # as_fn_arith
+
+
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in #(((((
+-n*)
+  case `echo 'xy\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  xy)  ECHO_C='\c';;
+  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
+       ECHO_T='	';;
+  esac;;
+*)
+  ECHO_N='-n';;
+esac
+
+rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir 2>/dev/null
+fi
+if (echo >conf$$.file) 2>/dev/null; then
+  if ln -s conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s='ln -s'
+    # ... but there are two gotchas:
+    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+    # In both cases, we have to default to `cp -p'.
+    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+      as_ln_s='cp -p'
+  elif ln conf$$.file conf$$ 2>/dev/null; then
+    as_ln_s=ln
+  else
+    as_ln_s='cp -p'
+  fi
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
+
+
+# as_fn_mkdir_p
+# -------------
+# Create "$as_dir" as a directory, including parents if necessary.
+as_fn_mkdir_p ()
+{
+
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || eval $as_mkdir_p || {
+    as_dirs=
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      test -d "$as_dir" && break
+    done
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"
+
+
+} # as_fn_mkdir_p
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p='mkdir -p "$as_dir"'
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+	test -d "$1/.";
+      else
+	case $1 in #(
+	-*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+exec 6>&1
+## ----------------------------------- ##
+## Main body of $CONFIG_STATUS script. ##
+## ----------------------------------- ##
+_ASEOF
+test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# Save the log message, to keep $0 and so on meaningful, and to
+# report actual input values of CONFIG_FILES etc. instead of their
+# values after options handling.
+ac_log="
+This file was extended by mpc $as_me 0.9, which was
+generated by GNU Autoconf 2.67.  Invocation command line was
+
+  CONFIG_FILES    = $CONFIG_FILES
+  CONFIG_HEADERS  = $CONFIG_HEADERS
+  CONFIG_LINKS    = $CONFIG_LINKS
+  CONFIG_COMMANDS = $CONFIG_COMMANDS
+  $ $0 $@
+
+on `(hostname || uname -n) 2>/dev/null | sed 1q`
+"
+
+_ACEOF
+
+case $ac_config_files in *"
+"*) set x $ac_config_files; shift; ac_config_files=$*;;
+esac
+
+case $ac_config_headers in *"
+"*) set x $ac_config_headers; shift; ac_config_headers=$*;;
+esac
+
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+# Files that config.status was made for.
+config_files="$ac_config_files"
+config_headers="$ac_config_headers"
+config_commands="$ac_config_commands"
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+ac_cs_usage="\
+\`$as_me' instantiates files and other configuration actions
+from templates according to the current configuration.  Unless the files
+and actions are specified as TAGs, all are instantiated by default.
+
+Usage: $0 [OPTION]... [TAG]...
+
+  -h, --help       print this help, then exit
+  -V, --version    print version number and configuration settings, then exit
+      --config     print configuration, then exit
+  -q, --quiet, --silent
+                   do not print progress messages
+  -d, --debug      don't remove temporary files
+      --recheck    update $as_me by reconfiguring in the same conditions
+      --file=FILE[:TEMPLATE]
+                   instantiate the configuration file FILE
+      --header=FILE[:TEMPLATE]
+                   instantiate the configuration header FILE
+
+Configuration files:
+$config_files
+
+Configuration headers:
+$config_headers
+
+Configuration commands:
+$config_commands
+
+Report bugs to <mpc-discuss@lists.gforge.inria.fr>."
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
+ac_cs_version="\\
+mpc config.status 0.9
+configured by $0, generated by GNU Autoconf 2.67,
+  with options \\"\$ac_cs_config\\"
+
+Copyright (C) 2010 Free Software Foundation, Inc.
+This config.status script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it."
+
+ac_pwd='$ac_pwd'
+srcdir='$srcdir'
+INSTALL='$INSTALL'
+MKDIR_P='$MKDIR_P'
+AWK='$AWK'
+test -n "\$AWK" || AWK=awk
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# The default lists apply if the user does not specify any file.
+ac_need_defaults=:
+while test $# != 0
+do
+  case $1 in
+  --*=?*)
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
+    ac_shift=:
+    ;;
+  --*=)
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=
+    ac_shift=:
+    ;;
+  *)
+    ac_option=$1
+    ac_optarg=$2
+    ac_shift=shift
+    ;;
+  esac
+
+  case $ac_option in
+  # Handling of the options.
+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
+    ac_cs_recheck=: ;;
+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
+    $as_echo "$ac_cs_version"; exit ;;
+  --config | --confi | --conf | --con | --co | --c )
+    $as_echo "$ac_cs_config"; exit ;;
+  --debug | --debu | --deb | --de | --d | -d )
+    debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    '') as_fn_error $? "missing file argument" ;;
+    esac
+    as_fn_append CONFIG_FILES " '$ac_optarg'"
+    ac_need_defaults=false;;
+  --header | --heade | --head | --hea )
+    $ac_shift
+    case $ac_optarg in
+    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
+    ac_need_defaults=false;;
+  --he | --h)
+    # Conflict between --help and --header
+    as_fn_error $? "ambiguous option: \`$1'
+Try \`$0 --help' for more information.";;
+  --help | --hel | -h )
+    $as_echo "$ac_cs_usage"; exit ;;
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil | --si | --s)
+    ac_cs_silent=: ;;
+
+  # This is an error.
+  -*) as_fn_error $? "unrecognized option: \`$1'
+Try \`$0 --help' for more information." ;;
+
+  *) as_fn_append ac_config_targets " $1"
+     ac_need_defaults=false ;;
+
+  esac
+  shift
+done
+
+ac_configure_extra_args=
+
+if $ac_cs_silent; then
+  exec 6>/dev/null
+  ac_configure_extra_args="$ac_configure_extra_args --silent"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+if \$ac_cs_recheck; then
+  set X '$SHELL' '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
+  shift
+  \$as_echo "running CONFIG_SHELL=$SHELL \$*" >&6
+  CONFIG_SHELL='$SHELL'
+  export CONFIG_SHELL
+  exec "\$@"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
+## Running $as_me. ##
+_ASBOX
+  $as_echo "$ac_log"
+} >&5
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+#
+# INIT-COMMANDS
+#
+AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"
+
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+sed_quote_subst='$sed_quote_subst'
+double_quote_subst='$double_quote_subst'
+delay_variable_subst='$delay_variable_subst'
+macro_version='`$ECHO "X$macro_version" | $Xsed -e "$delay_single_quote_subst"`'
+macro_revision='`$ECHO "X$macro_revision" | $Xsed -e "$delay_single_quote_subst"`'
+enable_shared='`$ECHO "X$enable_shared" | $Xsed -e "$delay_single_quote_subst"`'
+enable_static='`$ECHO "X$enable_static" | $Xsed -e "$delay_single_quote_subst"`'
+pic_mode='`$ECHO "X$pic_mode" | $Xsed -e "$delay_single_quote_subst"`'
+enable_fast_install='`$ECHO "X$enable_fast_install" | $Xsed -e "$delay_single_quote_subst"`'
+host_alias='`$ECHO "X$host_alias" | $Xsed -e "$delay_single_quote_subst"`'
+host='`$ECHO "X$host" | $Xsed -e "$delay_single_quote_subst"`'
+host_os='`$ECHO "X$host_os" | $Xsed -e "$delay_single_quote_subst"`'
+build_alias='`$ECHO "X$build_alias" | $Xsed -e "$delay_single_quote_subst"`'
+build='`$ECHO "X$build" | $Xsed -e "$delay_single_quote_subst"`'
+build_os='`$ECHO "X$build_os" | $Xsed -e "$delay_single_quote_subst"`'
+SED='`$ECHO "X$SED" | $Xsed -e "$delay_single_quote_subst"`'
+Xsed='`$ECHO "X$Xsed" | $Xsed -e "$delay_single_quote_subst"`'
+GREP='`$ECHO "X$GREP" | $Xsed -e "$delay_single_quote_subst"`'
+EGREP='`$ECHO "X$EGREP" | $Xsed -e "$delay_single_quote_subst"`'
+FGREP='`$ECHO "X$FGREP" | $Xsed -e "$delay_single_quote_subst"`'
+LD='`$ECHO "X$LD" | $Xsed -e "$delay_single_quote_subst"`'
+NM='`$ECHO "X$NM" | $Xsed -e "$delay_single_quote_subst"`'
+LN_S='`$ECHO "X$LN_S" | $Xsed -e "$delay_single_quote_subst"`'
+max_cmd_len='`$ECHO "X$max_cmd_len" | $Xsed -e "$delay_single_quote_subst"`'
+ac_objext='`$ECHO "X$ac_objext" | $Xsed -e "$delay_single_quote_subst"`'
+exeext='`$ECHO "X$exeext" | $Xsed -e "$delay_single_quote_subst"`'
+lt_unset='`$ECHO "X$lt_unset" | $Xsed -e "$delay_single_quote_subst"`'
+lt_SP2NL='`$ECHO "X$lt_SP2NL" | $Xsed -e "$delay_single_quote_subst"`'
+lt_NL2SP='`$ECHO "X$lt_NL2SP" | $Xsed -e "$delay_single_quote_subst"`'
+reload_flag='`$ECHO "X$reload_flag" | $Xsed -e "$delay_single_quote_subst"`'
+reload_cmds='`$ECHO "X$reload_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+OBJDUMP='`$ECHO "X$OBJDUMP" | $Xsed -e "$delay_single_quote_subst"`'
+deplibs_check_method='`$ECHO "X$deplibs_check_method" | $Xsed -e "$delay_single_quote_subst"`'
+file_magic_cmd='`$ECHO "X$file_magic_cmd" | $Xsed -e "$delay_single_quote_subst"`'
+AR='`$ECHO "X$AR" | $Xsed -e "$delay_single_quote_subst"`'
+AR_FLAGS='`$ECHO "X$AR_FLAGS" | $Xsed -e "$delay_single_quote_subst"`'
+STRIP='`$ECHO "X$STRIP" | $Xsed -e "$delay_single_quote_subst"`'
+RANLIB='`$ECHO "X$RANLIB" | $Xsed -e "$delay_single_quote_subst"`'
+old_postinstall_cmds='`$ECHO "X$old_postinstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_postuninstall_cmds='`$ECHO "X$old_postuninstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_cmds='`$ECHO "X$old_archive_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+CC='`$ECHO "X$CC" | $Xsed -e "$delay_single_quote_subst"`'
+CFLAGS='`$ECHO "X$CFLAGS" | $Xsed -e "$delay_single_quote_subst"`'
+compiler='`$ECHO "X$compiler" | $Xsed -e "$delay_single_quote_subst"`'
+GCC='`$ECHO "X$GCC" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_pipe='`$ECHO "X$lt_cv_sys_global_symbol_pipe" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_cdecl='`$ECHO "X$lt_cv_sys_global_symbol_to_cdecl" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_c_name_address='`$ECHO "X$lt_cv_sys_global_symbol_to_c_name_address" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='`$ECHO "X$lt_cv_sys_global_symbol_to_c_name_address_lib_prefix" | $Xsed -e "$delay_single_quote_subst"`'
+objdir='`$ECHO "X$objdir" | $Xsed -e "$delay_single_quote_subst"`'
+SHELL='`$ECHO "X$SHELL" | $Xsed -e "$delay_single_quote_subst"`'
+ECHO='`$ECHO "X$ECHO" | $Xsed -e "$delay_single_quote_subst"`'
+MAGIC_CMD='`$ECHO "X$MAGIC_CMD" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_no_builtin_flag='`$ECHO "X$lt_prog_compiler_no_builtin_flag" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_wl='`$ECHO "X$lt_prog_compiler_wl" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_pic='`$ECHO "X$lt_prog_compiler_pic" | $Xsed -e "$delay_single_quote_subst"`'
+lt_prog_compiler_static='`$ECHO "X$lt_prog_compiler_static" | $Xsed -e "$delay_single_quote_subst"`'
+lt_cv_prog_compiler_c_o='`$ECHO "X$lt_cv_prog_compiler_c_o" | $Xsed -e "$delay_single_quote_subst"`'
+need_locks='`$ECHO "X$need_locks" | $Xsed -e "$delay_single_quote_subst"`'
+DSYMUTIL='`$ECHO "X$DSYMUTIL" | $Xsed -e "$delay_single_quote_subst"`'
+NMEDIT='`$ECHO "X$NMEDIT" | $Xsed -e "$delay_single_quote_subst"`'
+LIPO='`$ECHO "X$LIPO" | $Xsed -e "$delay_single_quote_subst"`'
+OTOOL='`$ECHO "X$OTOOL" | $Xsed -e "$delay_single_quote_subst"`'
+OTOOL64='`$ECHO "X$OTOOL64" | $Xsed -e "$delay_single_quote_subst"`'
+libext='`$ECHO "X$libext" | $Xsed -e "$delay_single_quote_subst"`'
+shrext_cmds='`$ECHO "X$shrext_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+extract_expsyms_cmds='`$ECHO "X$extract_expsyms_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_cmds_need_lc='`$ECHO "X$archive_cmds_need_lc" | $Xsed -e "$delay_single_quote_subst"`'
+enable_shared_with_static_runtimes='`$ECHO "X$enable_shared_with_static_runtimes" | $Xsed -e "$delay_single_quote_subst"`'
+export_dynamic_flag_spec='`$ECHO "X$export_dynamic_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+whole_archive_flag_spec='`$ECHO "X$whole_archive_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+compiler_needs_object='`$ECHO "X$compiler_needs_object" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_from_new_cmds='`$ECHO "X$old_archive_from_new_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+old_archive_from_expsyms_cmds='`$ECHO "X$old_archive_from_expsyms_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_cmds='`$ECHO "X$archive_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+archive_expsym_cmds='`$ECHO "X$archive_expsym_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+module_cmds='`$ECHO "X$module_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+module_expsym_cmds='`$ECHO "X$module_expsym_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+with_gnu_ld='`$ECHO "X$with_gnu_ld" | $Xsed -e "$delay_single_quote_subst"`'
+allow_undefined_flag='`$ECHO "X$allow_undefined_flag" | $Xsed -e "$delay_single_quote_subst"`'
+no_undefined_flag='`$ECHO "X$no_undefined_flag" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_flag_spec='`$ECHO "X$hardcode_libdir_flag_spec" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_flag_spec_ld='`$ECHO "X$hardcode_libdir_flag_spec_ld" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_libdir_separator='`$ECHO "X$hardcode_libdir_separator" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_direct='`$ECHO "X$hardcode_direct" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_direct_absolute='`$ECHO "X$hardcode_direct_absolute" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_minus_L='`$ECHO "X$hardcode_minus_L" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_shlibpath_var='`$ECHO "X$hardcode_shlibpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_automatic='`$ECHO "X$hardcode_automatic" | $Xsed -e "$delay_single_quote_subst"`'
+inherit_rpath='`$ECHO "X$inherit_rpath" | $Xsed -e "$delay_single_quote_subst"`'
+link_all_deplibs='`$ECHO "X$link_all_deplibs" | $Xsed -e "$delay_single_quote_subst"`'
+fix_srcfile_path='`$ECHO "X$fix_srcfile_path" | $Xsed -e "$delay_single_quote_subst"`'
+always_export_symbols='`$ECHO "X$always_export_symbols" | $Xsed -e "$delay_single_quote_subst"`'
+export_symbols_cmds='`$ECHO "X$export_symbols_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+exclude_expsyms='`$ECHO "X$exclude_expsyms" | $Xsed -e "$delay_single_quote_subst"`'
+include_expsyms='`$ECHO "X$include_expsyms" | $Xsed -e "$delay_single_quote_subst"`'
+prelink_cmds='`$ECHO "X$prelink_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+file_list_spec='`$ECHO "X$file_list_spec" | $Xsed -e "$delay_single_quote_subst"`'
+variables_saved_for_relink='`$ECHO "X$variables_saved_for_relink" | $Xsed -e "$delay_single_quote_subst"`'
+need_lib_prefix='`$ECHO "X$need_lib_prefix" | $Xsed -e "$delay_single_quote_subst"`'
+need_version='`$ECHO "X$need_version" | $Xsed -e "$delay_single_quote_subst"`'
+version_type='`$ECHO "X$version_type" | $Xsed -e "$delay_single_quote_subst"`'
+runpath_var='`$ECHO "X$runpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+shlibpath_var='`$ECHO "X$shlibpath_var" | $Xsed -e "$delay_single_quote_subst"`'
+shlibpath_overrides_runpath='`$ECHO "X$shlibpath_overrides_runpath" | $Xsed -e "$delay_single_quote_subst"`'
+libname_spec='`$ECHO "X$libname_spec" | $Xsed -e "$delay_single_quote_subst"`'
+library_names_spec='`$ECHO "X$library_names_spec" | $Xsed -e "$delay_single_quote_subst"`'
+soname_spec='`$ECHO "X$soname_spec" | $Xsed -e "$delay_single_quote_subst"`'
+postinstall_cmds='`$ECHO "X$postinstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+postuninstall_cmds='`$ECHO "X$postuninstall_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+finish_cmds='`$ECHO "X$finish_cmds" | $Xsed -e "$delay_single_quote_subst"`'
+finish_eval='`$ECHO "X$finish_eval" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_into_libs='`$ECHO "X$hardcode_into_libs" | $Xsed -e "$delay_single_quote_subst"`'
+sys_lib_search_path_spec='`$ECHO "X$sys_lib_search_path_spec" | $Xsed -e "$delay_single_quote_subst"`'
+sys_lib_dlsearch_path_spec='`$ECHO "X$sys_lib_dlsearch_path_spec" | $Xsed -e "$delay_single_quote_subst"`'
+hardcode_action='`$ECHO "X$hardcode_action" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen='`$ECHO "X$enable_dlopen" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen_self='`$ECHO "X$enable_dlopen_self" | $Xsed -e "$delay_single_quote_subst"`'
+enable_dlopen_self_static='`$ECHO "X$enable_dlopen_self_static" | $Xsed -e "$delay_single_quote_subst"`'
+old_striplib='`$ECHO "X$old_striplib" | $Xsed -e "$delay_single_quote_subst"`'
+striplib='`$ECHO "X$striplib" | $Xsed -e "$delay_single_quote_subst"`'
+
+LTCC='$LTCC'
+LTCFLAGS='$LTCFLAGS'
+compiler='$compiler_DEFAULT'
+
+# Quote evaled strings.
+for var in SED \
+GREP \
+EGREP \
+FGREP \
+LD \
+NM \
+LN_S \
+lt_SP2NL \
+lt_NL2SP \
+reload_flag \
+OBJDUMP \
+deplibs_check_method \
+file_magic_cmd \
+AR \
+AR_FLAGS \
+STRIP \
+RANLIB \
+CC \
+CFLAGS \
+compiler \
+lt_cv_sys_global_symbol_pipe \
+lt_cv_sys_global_symbol_to_cdecl \
+lt_cv_sys_global_symbol_to_c_name_address \
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix \
+SHELL \
+ECHO \
+lt_prog_compiler_no_builtin_flag \
+lt_prog_compiler_wl \
+lt_prog_compiler_pic \
+lt_prog_compiler_static \
+lt_cv_prog_compiler_c_o \
+need_locks \
+DSYMUTIL \
+NMEDIT \
+LIPO \
+OTOOL \
+OTOOL64 \
+shrext_cmds \
+export_dynamic_flag_spec \
+whole_archive_flag_spec \
+compiler_needs_object \
+with_gnu_ld \
+allow_undefined_flag \
+no_undefined_flag \
+hardcode_libdir_flag_spec \
+hardcode_libdir_flag_spec_ld \
+hardcode_libdir_separator \
+fix_srcfile_path \
+exclude_expsyms \
+include_expsyms \
+file_list_spec \
+variables_saved_for_relink \
+libname_spec \
+library_names_spec \
+soname_spec \
+finish_eval \
+old_striplib \
+striplib; do
+    case \`eval \\\\\$ECHO "X\\\\\$\$var"\` in
+    *[\\\\\\\`\\"\\\$]*)
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"X\\\$\$var\\" | \\\$Xsed -e \\"\\\$sed_quote_subst\\"\\\`\\\\\\""
+      ;;
+    *)
+      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
+      ;;
+    esac
+done
+
+# Double-quote double-evaled strings.
+for var in reload_cmds \
+old_postinstall_cmds \
+old_postuninstall_cmds \
+old_archive_cmds \
+extract_expsyms_cmds \
+old_archive_from_new_cmds \
+old_archive_from_expsyms_cmds \
+archive_cmds \
+archive_expsym_cmds \
+module_cmds \
+module_expsym_cmds \
+export_symbols_cmds \
+prelink_cmds \
+postinstall_cmds \
+postuninstall_cmds \
+finish_cmds \
+sys_lib_search_path_spec \
+sys_lib_dlsearch_path_spec; do
+    case \`eval \\\\\$ECHO "X\\\\\$\$var"\` in
+    *[\\\\\\\`\\"\\\$]*)
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"X\\\$\$var\\" | \\\$Xsed -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\""
+      ;;
+    *)
+      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
+      ;;
+    esac
+done
+
+# Fix-up fallback echo if it was mangled by the above quoting rules.
+case \$lt_ECHO in
+*'\\\$0 --fallback-echo"')  lt_ECHO=\`\$ECHO "X\$lt_ECHO" | \$Xsed -e 's/\\\\\\\\\\\\\\\$0 --fallback-echo"\$/\$0 --fallback-echo"/'\`
+  ;;
+esac
+
+ac_aux_dir='$ac_aux_dir'
+xsi_shell='$xsi_shell'
+lt_shell_append='$lt_shell_append'
+
+# See if we are running on zsh, and set the options which allow our
+# commands through without removal of \ escapes INIT.
+if test -n "\${ZSH_VERSION+set}" ; then
+   setopt NO_GLOB_SUBST
+fi
+
+
+    PACKAGE='$PACKAGE'
+    VERSION='$VERSION'
+    TIMESTAMP='$TIMESTAMP'
+    RM='$RM'
+    ofile='$ofile'
+
+
+
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+
+# Handling of arguments.
+for ac_config_target in $ac_config_targets
+do
+  case $ac_config_target in
+    "config.h") CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
+    "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
+    "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
+    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
+    "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
+    "tests/Makefile") CONFIG_FILES="$CONFIG_FILES tests/Makefile" ;;
+    "doc/Makefile") CONFIG_FILES="$CONFIG_FILES doc/Makefile" ;;
+
+  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5 ;;
+  esac
+done
+
+
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
+  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason against having it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
+$debug ||
+{
+  tmp=
+  trap 'exit_status=$?
+  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
+' 0
+  trap 'as_fn_exit 1' 1 2 13 15
+}
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
+  test -n "$tmp" && test -d "$tmp"
+}  ||
+{
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
+} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
+
+# Set up the scripts for CONFIG_FILES section.
+# No need to generate them if there are no CONFIG_FILES.
+# This happens for instance with `./config.status config.h'.
+if test -n "$CONFIG_FILES"; then
+
+
+ac_cr=`echo X | tr X '\015'`
+# On cygwin, bash can eat \r inside `` if the user requested igncr.
+# But we know of no other shell where ac_cr would be empty at this
+# point, so we can use a bashism as a fallback.
+if test "x$ac_cr" = x; then
+  eval ac_cr=\$\'\\r\'
+fi
+ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
+if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
+  ac_cs_awk_cr='\\r'
+else
+  ac_cs_awk_cr=$ac_cr
+fi
+
+echo 'BEGIN {' >"$tmp/subs1.awk" &&
+_ACEOF
+
+
+{
+  echo "cat >conf$$subs.awk <<_ACEOF" &&
+  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
+  echo "_ACEOF"
+} >conf$$subs.sh ||
+  as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
+ac_delim_num=`echo "$ac_subst_vars" | grep -c '^'`
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  . ./conf$$subs.sh ||
+    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
+
+  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
+  if test $ac_delim_n = $ac_delim_num; then
+    break
+  elif $ac_last_try; then
+    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+rm -f conf$$subs.sh
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+cat >>"\$tmp/subs1.awk" <<\\_ACAWK &&
+_ACEOF
+sed -n '
+h
+s/^/S["/; s/!.*/"]=/
+p
+g
+s/^[^!]*!//
+:repl
+t repl
+s/'"$ac_delim"'$//
+t delim
+:nl
+h
+s/\(.\{148\}\)..*/\1/
+t more1
+s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
+p
+n
+b repl
+:more1
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t nl
+:delim
+h
+s/\(.\{148\}\)..*/\1/
+t more2
+s/["\\]/\\&/g; s/^/"/; s/$/"/
+p
+b
+:more2
+s/["\\]/\\&/g; s/^/"/; s/$/"\\/
+p
+g
+s/.\{148\}//
+t delim
+' <conf$$subs.awk | sed '
+/^[^""]/{
+  N
+  s/\n//
+}
+' >>$CONFIG_STATUS || ac_write_fail=1
+rm -f conf$$subs.awk
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+_ACAWK
+cat >>"\$tmp/subs1.awk" <<_ACAWK &&
+  for (key in S) S_is_set[key] = 1
+  FS = ""
+
+}
+{
+  line = $ 0
+  nfields = split(line, field, "@")
+  substed = 0
+  len = length(field[1])
+  for (i = 2; i < nfields; i++) {
+    key = field[i]
+    keylen = length(key)
+    if (S_is_set[key]) {
+      value = S[key]
+      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
+      len += length(value) + length(field[++i])
+      substed = 1
+    } else
+      len += 1 + keylen
+  }
+
+  print line
+}
+
+_ACAWK
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
+  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
+else
+  cat
+fi < "$tmp/subs1.awk" > "$tmp/subs.awk" \
+  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
+_ACEOF
+
+# VPATH may cause trouble with some makes, so we remove sole $(srcdir),
+# ${srcdir} and @srcdir@ entries from VPATH if srcdir is ".", strip leading and
+# trailing colons and then remove the whole line if VPATH becomes empty
+# (actually we leave an empty line to preserve line numbers).
+if test "x$srcdir" = x.; then
+  ac_vpsub='/^[	 ]*VPATH[	 ]*=[	 ]*/{
+h
+s///
+s/^/:/
+s/[	 ]*$/:/
+s/:\$(srcdir):/:/g
+s/:\${srcdir}:/:/g
+s/:@srcdir@:/:/g
+s/^:*//
+s/:*$//
+x
+s/\(=[	 ]*\).*/\1/
+G
+s/\n//
+s/^[^=]*=[	 ]*$//
+}'
+fi
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+fi # test -n "$CONFIG_FILES"
+
+# Set up the scripts for CONFIG_HEADERS section.
+# No need to generate them if there are no CONFIG_HEADERS.
+# This happens for instance with `./config.status Makefile'.
+if test -n "$CONFIG_HEADERS"; then
+cat >"$tmp/defines.awk" <<\_ACAWK ||
+BEGIN {
+_ACEOF
+
+# Transform confdefs.h into an awk script `defines.awk', embedded as
+# here-document in config.status, that substitutes the proper values into
+# config.h.in to produce config.h.
+
+# Create a delimiter string that does not exist in confdefs.h, to ease
+# handling of long lines.
+ac_delim='%!_!# '
+for ac_last_try in false false :; do
+  ac_t=`sed -n "/$ac_delim/p" confdefs.h`
+  if test -z "$ac_t"; then
+    break
+  elif $ac_last_try; then
+    as_fn_error $? "could not make $CONFIG_HEADERS" "$LINENO" 5
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+
+# For the awk script, D is an array of macro values keyed by name,
+# likewise P contains macro parameters if any.  Preserve backslash
+# newline sequences.
+
+ac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*
+sed -n '
+s/.\{148\}/&'"$ac_delim"'/g
+t rset
+:rset
+s/^[	 ]*#[	 ]*define[	 ][	 ]*/ /
+t def
+d
+:def
+s/\\$//
+t bsnl
+s/["\\]/\\&/g
+s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
+D["\1"]=" \3"/p
+s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2"/p
+d
+:bsnl
+s/["\\]/\\&/g
+s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
+D["\1"]=" \3\\\\\\n"\\/p
+t cont
+s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2\\\\\\n"\\/p
+t cont
+d
+:cont
+n
+s/.\{148\}/&'"$ac_delim"'/g
+t clear
+:clear
+s/\\$//
+t bsnlc
+s/["\\]/\\&/g; s/^/"/; s/$/"/p
+d
+:bsnlc
+s/["\\]/\\&/g; s/^/"/; s/$/\\\\\\n"\\/p
+b cont
+' <confdefs.h | sed '
+s/'"$ac_delim"'/"\\\
+"/g' >>$CONFIG_STATUS || ac_write_fail=1
+
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+  for (key in D) D_is_set[key] = 1
+  FS = ""
+}
+/^[\t ]*#[\t ]*(define|undef)[\t ]+$ac_word_re([\t (]|\$)/ {
+  line = \$ 0
+  split(line, arg, " ")
+  if (arg[1] == "#") {
+    defundef = arg[2]
+    mac1 = arg[3]
+  } else {
+    defundef = substr(arg[1], 2)
+    mac1 = arg[2]
+  }
+  split(mac1, mac2, "(") #)
+  macro = mac2[1]
+  prefix = substr(line, 1, index(line, defundef) - 1)
+  if (D_is_set[macro]) {
+    # Preserve the white space surrounding the "#".
+    print prefix "define", macro P[macro] D[macro]
+    next
+  } else {
+    # Replace #undef with comments.  This is necessary, for example,
+    # in the case of _POSIX_SOURCE, which is predefined and required
+    # on some systems where configure will not decide to define it.
+    if (defundef == "undef") {
+      print "/*", prefix defundef, macro, "*/"
+      next
+    }
+  }
+}
+{ print }
+_ACAWK
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
+fi # test -n "$CONFIG_HEADERS"
+
+
+eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
+shift
+for ac_tag
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5 ;;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5 ;;
+      esac
+      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
+      as_fn_append ac_file_inputs " '$ac_f'"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input='Generated from '`
+	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
+	`' by configure.'
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
+$as_echo "$as_me: creating $ac_file" >&6;}
+    fi
+    # Neutralize special characters interpreted by sed in replacement strings.
+    case $configure_input in #(
+    *\&* | *\|* | *\\* )
+       ac_sed_conf_input=`$as_echo "$configure_input" |
+       sed 's/[\\\\&|]/\\\\&/g'`;; #(
+    *) ac_sed_conf_input=$configure_input;;
+    esac
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$tmp/stdin" \
+      || as_fn_error $? "could not create $ac_file" "$LINENO" 5  ;;
+    esac
+    ;;
+  esac
+
+  ac_dir=`$as_dirname -- "$ac_file" ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+  as_dir="$ac_dir"; as_fn_mkdir_p
+  ac_builddir=.
+
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
+  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
+
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
+
+  case $INSTALL in
+  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
+  *) ac_INSTALL=$ac_top_build_prefix$INSTALL ;;
+  esac
+  ac_MKDIR_P=$MKDIR_P
+  case $MKDIR_P in
+  [\\/$]* | ?:[\\/]* ) ;;
+  */*) ac_MKDIR_P=$ac_top_build_prefix$MKDIR_P ;;
+  esac
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
+ac_sed_dataroot='
+/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p'
+case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+  ac_datarootdir_hack='
+  s&@datadir@&$datadir&g
+  s&@docdir@&$docdir&g
+  s&@infodir@&$infodir&g
+  s&@localedir@&$localedir&g
+  s&@mandir@&$mandir&g
+  s&\\\${datarootdir}&$datarootdir&g' ;;
+esac
+_ACEOF
+
+# Neutralize VPATH when `$srcdir' = `.'.
+# Shell code in configure.ac might set extrasub.
+# FIXME: do we really want to maintain this feature?
+cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
+ac_sed_extra="$ac_vpsub
+$extrasub
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s|@configure_input@|$ac_sed_conf_input|;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@top_build_prefix@&$ac_top_build_prefix&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+s&@INSTALL@&$ac_INSTALL&;t t
+s&@MKDIR_P@&$ac_MKDIR_P&;t t
+$ac_datarootdir_hack
+"
+eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$tmp/subs.awk" >$tmp/out \
+  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined" >&5
+$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined" >&2;}
+
+  rm -f "$tmp/stdin"
+  case $ac_file in
+  -) cat "$tmp/out" && rm -f "$tmp/out";;
+  *) rm -f "$ac_file" && mv "$tmp/out" "$ac_file";;
+  esac \
+  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
+ ;;
+  :H)
+  #
+  # CONFIG_HEADER
+  #
+  if test x"$ac_file" != x-; then
+    {
+      $as_echo "/* $configure_input  */" \
+      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs"
+    } >"$tmp/config.h" \
+      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
+    if diff "$ac_file" "$tmp/config.h" >/dev/null 2>&1; then
+      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
+$as_echo "$as_me: $ac_file is unchanged" >&6;}
+    else
+      rm -f "$ac_file"
+      mv "$tmp/config.h" "$ac_file" \
+	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
+    fi
+  else
+    $as_echo "/* $configure_input  */" \
+      && eval '$AWK -f "$tmp/defines.awk"' "$ac_file_inputs" \
+      || as_fn_error $? "could not create -" "$LINENO" 5
+  fi
+# Compute "$ac_file"'s index in $config_headers.
+_am_arg="$ac_file"
+_am_stamp_count=1
+for _am_header in $config_headers :; do
+  case $_am_header in
+    $_am_arg | $_am_arg:* )
+      break ;;
+    * )
+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
+  esac
+done
+echo "timestamp for $_am_arg" >`$as_dirname -- "$_am_arg" ||
+$as_expr X"$_am_arg" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$_am_arg" : 'X\(//\)[^/]' \| \
+	 X"$_am_arg" : 'X\(//\)$' \| \
+	 X"$_am_arg" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$_am_arg" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`/stamp-h$_am_stamp_count
+ ;;
+
+  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
+$as_echo "$as_me: executing $ac_file commands" >&6;}
+ ;;
+  esac
+
+
+  case $ac_file$ac_mode in
+    "depfiles":C) test x"$AMDEP_TRUE" != x"" || {
+  # Autoconf 2.62 quotes --file arguments for eval, but not when files
+  # are listed without --file.  Let's play safe and only enable the eval
+  # if we detect the quoting.
+  case $CONFIG_FILES in
+  *\'*) eval set x "$CONFIG_FILES" ;;
+  *)   set x $CONFIG_FILES ;;
+  esac
+  shift
+  for mf
+  do
+    # Strip MF so we end up with the name of the file.
+    mf=`echo "$mf" | sed -e 's/:.*$//'`
+    # Check whether this is an Automake generated Makefile or not.
+    # We used to match only the files named `Makefile.in', but
+    # some people rename them; so instead we look at the file content.
+    # Grep'ing the first line is not enough: some people post-process
+    # each Makefile.in and add a new line on top of each file to say so.
+    # Grep'ing the whole file is not good either: AIX grep has a line
+    # limit of 2048, but all sed's we know have understand at least 4000.
+    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
+      dirpart=`$as_dirname -- "$mf" ||
+$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$mf" : 'X\(//\)[^/]' \| \
+	 X"$mf" : 'X\(//\)$' \| \
+	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$mf" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+    else
+      continue
+    fi
+    # Extract the definition of DEPDIR, am__include, and am__quote
+    # from the Makefile without running `make'.
+    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
+    test -z "$DEPDIR" && continue
+    am__include=`sed -n 's/^am__include = //p' < "$mf"`
+    test -z "am__include" && continue
+    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
+    # When using ansi2knr, U may be empty or an underscore; expand it
+    U=`sed -n 's/^U = //p' < "$mf"`
+    # Find all dependency output files, they are included files with
+    # $(DEPDIR) in their names.  We invoke sed twice because it is the
+    # simplest approach to changing $(DEPDIR) to its actual value in the
+    # expansion.
+    for file in `sed -n "
+      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
+	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
+      # Make sure the directory exists.
+      test -f "$dirpart/$file" && continue
+      fdir=`$as_dirname -- "$file" ||
+$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$file" : 'X\(//\)[^/]' \| \
+	 X"$file" : 'X\(//\)$' \| \
+	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+      as_dir=$dirpart/$fdir; as_fn_mkdir_p
+      # echo "creating $dirpart/$file"
+      echo '# dummy' > "$dirpart/$file"
+    done
+  done
+}
+ ;;
+    "libtool":C)
+
+    # See if we are running on zsh, and set the options which allow our
+    # commands through without removal of \ escapes.
+    if test -n "${ZSH_VERSION+set}" ; then
+      setopt NO_GLOB_SUBST
+    fi
+
+    cfgfile="${ofile}T"
+    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
+    $RM "$cfgfile"
+
+    cat <<_LT_EOF >> "$cfgfile"
+#! $SHELL
+
+# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
+# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# NOTE: Changes made to this file will be lost: look at ltmain.sh.
+#
+#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
+#                 2006, 2007, 2008 Free Software Foundation, Inc.
+#   Written by Gordon Matzigkeit, 1996
+#
+#   This file is part of GNU Libtool.
+#
+# GNU Libtool is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# As a special exception to the GNU General Public License,
+# if you distribute this file as part of a program or library that
+# is built using GNU Libtool, you may include this file under the
+# same distribution terms that you use for the rest of that program.
+#
+# GNU Libtool is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GNU Libtool; see the file COPYING.  If not, a copy
+# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
+# obtained by writing to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+
+
+# The names of the tagged configurations supported by this script.
+available_tags=""
+
+# ### BEGIN LIBTOOL CONFIG
+
+# Which release of libtool.m4 was used?
+macro_version=$macro_version
+macro_revision=$macro_revision
+
+# Whether or not to build shared libraries.
+build_libtool_libs=$enable_shared
+
+# Whether or not to build static libraries.
+build_old_libs=$enable_static
+
+# What type of objects to build.
+pic_mode=$pic_mode
+
+# Whether or not to optimize for fast installation.
+fast_install=$enable_fast_install
+
+# The host system.
+host_alias=$host_alias
+host=$host
+host_os=$host_os
+
+# The build system.
+build_alias=$build_alias
+build=$build
+build_os=$build_os
+
+# A sed program that does not truncate output.
+SED=$lt_SED
+
+# Sed that helps us avoid accidentally triggering echo(1) options like -n.
+Xsed="\$SED -e 1s/^X//"
+
+# A grep program that handles long lines.
+GREP=$lt_GREP
+
+# An ERE matcher.
+EGREP=$lt_EGREP
+
+# A literal string matcher.
+FGREP=$lt_FGREP
+
+# A BSD- or MS-compatible name lister.
+NM=$lt_NM
+
+# Whether we need soft or hard links.
+LN_S=$lt_LN_S
+
+# What is the maximum length of a command?
+max_cmd_len=$max_cmd_len
+
+# Object file suffix (normally "o").
+objext=$ac_objext
+
+# Executable file suffix (normally "").
+exeext=$exeext
+
+# whether the shell understands "unset".
+lt_unset=$lt_unset
+
+# turn spaces into newlines.
+SP2NL=$lt_lt_SP2NL
+
+# turn newlines into spaces.
+NL2SP=$lt_lt_NL2SP
+
+# How to create reloadable object files.
+reload_flag=$lt_reload_flag
+reload_cmds=$lt_reload_cmds
+
+# An object symbol dumper.
+OBJDUMP=$lt_OBJDUMP
+
+# Method to check whether dependent libraries are shared objects.
+deplibs_check_method=$lt_deplibs_check_method
+
+# Command to use when deplibs_check_method == "file_magic".
+file_magic_cmd=$lt_file_magic_cmd
+
+# The archiver.
+AR=$lt_AR
+AR_FLAGS=$lt_AR_FLAGS
+
+# A symbol stripping program.
+STRIP=$lt_STRIP
+
+# Commands used to install an old-style archive.
+RANLIB=$lt_RANLIB
+old_postinstall_cmds=$lt_old_postinstall_cmds
+old_postuninstall_cmds=$lt_old_postuninstall_cmds
+
+# A C compiler.
+LTCC=$lt_CC
+
+# LTCC compiler flags.
+LTCFLAGS=$lt_CFLAGS
+
+# Take the output of nm and produce a listing of raw symbols and C names.
+global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
+
+# Transform the output of nm in a proper C declaration.
+global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
+
+# Transform the output of nm in a C name address pair.
+global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
+
+# Transform the output of nm in a C name address pair when lib prefix is needed.
+global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix
+
+# The name of the directory that contains temporary libtool files.
+objdir=$objdir
+
+# Shell to use when invoking shell scripts.
+SHELL=$lt_SHELL
+
+# An echo program that does not interpret backslashes.
+ECHO=$lt_ECHO
+
+# Used to examine libraries when file_magic_cmd begins with "file".
+MAGIC_CMD=$MAGIC_CMD
+
+# Must we lock files when doing compilation?
+need_locks=$lt_need_locks
+
+# Tool to manipulate archived DWARF debug symbol files on Mac OS X.
+DSYMUTIL=$lt_DSYMUTIL
+
+# Tool to change global to local symbols on Mac OS X.
+NMEDIT=$lt_NMEDIT
+
+# Tool to manipulate fat objects and archives on Mac OS X.
+LIPO=$lt_LIPO
+
+# ldd/readelf like tool for Mach-O binaries on Mac OS X.
+OTOOL=$lt_OTOOL
+
+# ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4.
+OTOOL64=$lt_OTOOL64
+
+# Old archive suffix (normally "a").
+libext=$libext
+
+# Shared library suffix (normally ".so").
+shrext_cmds=$lt_shrext_cmds
+
+# The commands to extract the exported symbol list from a shared archive.
+extract_expsyms_cmds=$lt_extract_expsyms_cmds
+
+# Variables whose values should be saved in libtool wrapper scripts and
+# restored at link time.
+variables_saved_for_relink=$lt_variables_saved_for_relink
+
+# Do we need the "lib" prefix for modules?
+need_lib_prefix=$need_lib_prefix
+
+# Do we need a version for libraries?
+need_version=$need_version
+
+# Library versioning type.
+version_type=$version_type
+
+# Shared library runtime path variable.
+runpath_var=$runpath_var
+
+# Shared library path variable.
+shlibpath_var=$shlibpath_var
+
+# Is shlibpath searched before the hard-coded library search path?
+shlibpath_overrides_runpath=$shlibpath_overrides_runpath
+
+# Format of library name prefix.
+libname_spec=$lt_libname_spec
+
+# List of archive names.  First name is the real one, the rest are links.
+# The last name is the one that the linker finds with -lNAME
+library_names_spec=$lt_library_names_spec
+
+# The coded name of the library, if different from the real name.
+soname_spec=$lt_soname_spec
+
+# Command to use after installation of a shared archive.
+postinstall_cmds=$lt_postinstall_cmds
+
+# Command to use after uninstallation of a shared archive.
+postuninstall_cmds=$lt_postuninstall_cmds
+
+# Commands used to finish a libtool library installation in a directory.
+finish_cmds=$lt_finish_cmds
+
+# As "finish_cmds", except a single script fragment to be evaled but
+# not shown.
+finish_eval=$lt_finish_eval
+
+# Whether we should hardcode library paths into libraries.
+hardcode_into_libs=$hardcode_into_libs
+
+# Compile-time system search path for libraries.
+sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
+
+# Run-time system search path for libraries.
+sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+
+# Whether dlopen is supported.
+dlopen_support=$enable_dlopen
+
+# Whether dlopen of programs is supported.
+dlopen_self=$enable_dlopen_self
+
+# Whether dlopen of statically linked programs is supported.
+dlopen_self_static=$enable_dlopen_self_static
+
+# Commands to strip libraries.
+old_striplib=$lt_old_striplib
+striplib=$lt_striplib
+
+
+# The linker used to build libraries.
+LD=$lt_LD
+
+# Commands used to build an old-style archive.
+old_archive_cmds=$lt_old_archive_cmds
+
+# A language specific compiler.
+CC=$lt_compiler
+
+# Is the compiler the GNU compiler?
+with_gcc=$GCC
+
+# Compiler flag to turn off builtin functions.
+no_builtin_flag=$lt_lt_prog_compiler_no_builtin_flag
+
+# How to pass a linker flag through the compiler.
+wl=$lt_lt_prog_compiler_wl
+
+# Additional compiler flags for building library objects.
+pic_flag=$lt_lt_prog_compiler_pic
+
+# Compiler flag to prevent dynamic linking.
+link_static_flag=$lt_lt_prog_compiler_static
+
+# Does compiler simultaneously support -c and -o options?
+compiler_c_o=$lt_lt_cv_prog_compiler_c_o
+
+# Whether or not to add -lc for building shared libraries.
+build_libtool_need_lc=$archive_cmds_need_lc
+
+# Whether or not to disallow shared libs when runtime libs are static.
+allow_libtool_libs_with_static_runtimes=$enable_shared_with_static_runtimes
+
+# Compiler flag to allow reflexive dlopens.
+export_dynamic_flag_spec=$lt_export_dynamic_flag_spec
+
+# Compiler flag to generate shared objects directly from archives.
+whole_archive_flag_spec=$lt_whole_archive_flag_spec
+
+# Whether the compiler copes with passing no objects directly.
+compiler_needs_object=$lt_compiler_needs_object
+
+# Create an old-style archive from a shared archive.
+old_archive_from_new_cmds=$lt_old_archive_from_new_cmds
+
+# Create a temporary old-style archive to link instead of a shared archive.
+old_archive_from_expsyms_cmds=$lt_old_archive_from_expsyms_cmds
+
+# Commands used to build a shared archive.
+archive_cmds=$lt_archive_cmds
+archive_expsym_cmds=$lt_archive_expsym_cmds
+
+# Commands used to build a loadable module if different from building
+# a shared archive.
+module_cmds=$lt_module_cmds
+module_expsym_cmds=$lt_module_expsym_cmds
+
+# Whether we are building with GNU ld or not.
+with_gnu_ld=$lt_with_gnu_ld
+
+# Flag that allows shared libraries with undefined symbols to be built.
+allow_undefined_flag=$lt_allow_undefined_flag
+
+# Flag that enforces no undefined symbols.
+no_undefined_flag=$lt_no_undefined_flag
+
+# Flag to hardcode \$libdir into a binary during linking.
+# This must work even if \$libdir does not exist
+hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec
+
+# If ld is used when linking, flag to hardcode \$libdir into a binary
+# during linking.  This must work even if \$libdir does not exist.
+hardcode_libdir_flag_spec_ld=$lt_hardcode_libdir_flag_spec_ld
+
+# Whether we need a single "-rpath" flag with a separated argument.
+hardcode_libdir_separator=$lt_hardcode_libdir_separator
+
+# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
+# DIR into the resulting binary.
+hardcode_direct=$hardcode_direct
+
+# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
+# DIR into the resulting binary and the resulting library dependency is
+# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
+# library is relocated.
+hardcode_direct_absolute=$hardcode_direct_absolute
+
+# Set to "yes" if using the -LDIR flag during linking hardcodes DIR
+# into the resulting binary.
+hardcode_minus_L=$hardcode_minus_L
+
+# Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
+# into the resulting binary.
+hardcode_shlibpath_var=$hardcode_shlibpath_var
+
+# Set to "yes" if building a shared library automatically hardcodes DIR
+# into the library and all subsequent libraries and executables linked
+# against it.
+hardcode_automatic=$hardcode_automatic
+
+# Set to yes if linker adds runtime paths of dependent libraries
+# to runtime path list.
+inherit_rpath=$inherit_rpath
+
+# Whether libtool must link a program against all its dependency libraries.
+link_all_deplibs=$link_all_deplibs
+
+# Fix the shell variable \$srcfile for the compiler.
+fix_srcfile_path=$lt_fix_srcfile_path
+
+# Set to "yes" if exported symbols are required.
+always_export_symbols=$always_export_symbols
+
+# The commands to list exported symbols.
+export_symbols_cmds=$lt_export_symbols_cmds
+
+# Symbols that should not be listed in the preloaded symbols.
+exclude_expsyms=$lt_exclude_expsyms
+
+# Symbols that must always be exported.
+include_expsyms=$lt_include_expsyms
+
+# Commands necessary for linking programs (against libraries) with templates.
+prelink_cmds=$lt_prelink_cmds
+
+# Specify filename containing input files.
+file_list_spec=$lt_file_list_spec
+
+# How to hardcode a shared library path into an executable.
+hardcode_action=$hardcode_action
+
+# ### END LIBTOOL CONFIG
+
+_LT_EOF
+
+  case $host_os in
+  aix3*)
+    cat <<\_LT_EOF >> "$cfgfile"
+# AIX sometimes has problems with the GCC collect2 program.  For some
+# reason, if we set the COLLECT_NAMES environment variable, the problems
+# vanish in a puff of smoke.
+if test "X${COLLECT_NAMES+set}" != Xset; then
+  COLLECT_NAMES=
+  export COLLECT_NAMES
+fi
+_LT_EOF
+    ;;
+  esac
+
+
+ltmain="$ac_aux_dir/ltmain.sh"
+
+
+  # We use sed instead of cat because bash on DJGPP gets confused if
+  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
+  # text mode, it properly converts lines to CR/LF.  This bash problem
+  # is reportedly fixed, but why not run on old versions too?
+  sed '/^# Generated shell functions inserted here/q' "$ltmain" >> "$cfgfile" \
+    || (rm -f "$cfgfile"; exit 1)
+
+  case $xsi_shell in
+  yes)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_dirname file append nondir_replacement
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+func_dirname ()
+{
+  case ${1} in
+    */*) func_dirname_result="${1%/*}${2}" ;;
+    *  ) func_dirname_result="${3}" ;;
+  esac
+}
+
+# func_basename file
+func_basename ()
+{
+  func_basename_result="${1##*/}"
+}
+
+# func_dirname_and_basename file append nondir_replacement
+# perform func_basename and func_dirname in a single function
+# call:
+#   dirname:  Compute the dirname of FILE.  If nonempty,
+#             add APPEND to the result, otherwise set result
+#             to NONDIR_REPLACEMENT.
+#             value returned in "$func_dirname_result"
+#   basename: Compute filename of FILE.
+#             value retuned in "$func_basename_result"
+# Implementation must be kept synchronized with func_dirname
+# and func_basename. For efficiency, we do not delegate to
+# those functions but instead duplicate the functionality here.
+func_dirname_and_basename ()
+{
+  case ${1} in
+    */*) func_dirname_result="${1%/*}${2}" ;;
+    *  ) func_dirname_result="${3}" ;;
+  esac
+  func_basename_result="${1##*/}"
+}
+
+# func_stripname prefix suffix name
+# strip PREFIX and SUFFIX off of NAME.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+func_stripname ()
+{
+  # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
+  # positional parameters, so assign one to ordinary parameter first.
+  func_stripname_result=${3}
+  func_stripname_result=${func_stripname_result#"${1}"}
+  func_stripname_result=${func_stripname_result%"${2}"}
+}
+
+# func_opt_split
+func_opt_split ()
+{
+  func_opt_split_opt=${1%%=*}
+  func_opt_split_arg=${1#*=}
+}
+
+# func_lo2o object
+func_lo2o ()
+{
+  case ${1} in
+    *.lo) func_lo2o_result=${1%.lo}.${objext} ;;
+    *)    func_lo2o_result=${1} ;;
+  esac
+}
+
+# func_xform libobj-or-source
+func_xform ()
+{
+  func_xform_result=${1%.*}.lo
+}
+
+# func_arith arithmetic-term...
+func_arith ()
+{
+  func_arith_result=$(( $* ))
+}
+
+# func_len string
+# STRING may not start with a hyphen.
+func_len ()
+{
+  func_len_result=${#1}
+}
+
+_LT_EOF
+    ;;
+  *) # Bourne compatible functions.
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_dirname file append nondir_replacement
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+func_dirname ()
+{
+  # Extract subdirectory from the argument.
+  func_dirname_result=`$ECHO "X${1}" | $Xsed -e "$dirname"`
+  if test "X$func_dirname_result" = "X${1}"; then
+    func_dirname_result="${3}"
+  else
+    func_dirname_result="$func_dirname_result${2}"
+  fi
+}
+
+# func_basename file
+func_basename ()
+{
+  func_basename_result=`$ECHO "X${1}" | $Xsed -e "$basename"`
+}
+
+
+# func_stripname prefix suffix name
+# strip PREFIX and SUFFIX off of NAME.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+# func_strip_suffix prefix name
+func_stripname ()
+{
+  case ${2} in
+    .*) func_stripname_result=`$ECHO "X${3}" \
+           | $Xsed -e "s%^${1}%%" -e "s%\\\\${2}\$%%"`;;
+    *)  func_stripname_result=`$ECHO "X${3}" \
+           | $Xsed -e "s%^${1}%%" -e "s%${2}\$%%"`;;
+  esac
+}
+
+# sed scripts:
+my_sed_long_opt='1s/^\(-[^=]*\)=.*/\1/;q'
+my_sed_long_arg='1s/^-[^=]*=//'
+
+# func_opt_split
+func_opt_split ()
+{
+  func_opt_split_opt=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_opt"`
+  func_opt_split_arg=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_arg"`
+}
+
+# func_lo2o object
+func_lo2o ()
+{
+  func_lo2o_result=`$ECHO "X${1}" | $Xsed -e "$lo2o"`
+}
+
+# func_xform libobj-or-source
+func_xform ()
+{
+  func_xform_result=`$ECHO "X${1}" | $Xsed -e 's/\.[^.]*$/.lo/'`
+}
+
+# func_arith arithmetic-term...
+func_arith ()
+{
+  func_arith_result=`expr "$@"`
+}
+
+# func_len string
+# STRING may not start with a hyphen.
+func_len ()
+{
+  func_len_result=`expr "$1" : ".*" 2>/dev/null || echo $max_cmd_len`
+}
+
+_LT_EOF
+esac
+
+case $lt_shell_append in
+  yes)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_append var value
+# Append VALUE to the end of shell variable VAR.
+func_append ()
+{
+  eval "$1+=\$2"
+}
+_LT_EOF
+    ;;
+  *)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_append var value
+# Append VALUE to the end of shell variable VAR.
+func_append ()
+{
+  eval "$1=\$$1\$2"
+}
+
+_LT_EOF
+    ;;
+  esac
+
+
+  sed -n '/^# Generated shell functions inserted here/,$p' "$ltmain" >> "$cfgfile" \
+    || (rm -f "$cfgfile"; exit 1)
+
+  mv -f "$cfgfile" "$ofile" ||
+    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
+  chmod +x "$ofile"
+
+ ;;
+
+  esac
+done # for ac_tag
+
+
+as_fn_exit 0
+_ACEOF
+ac_clean_files=$ac_clean_files_save
+
+test $ac_write_fail = 0 ||
+  as_fn_error $? "write failure creating $CONFIG_STATUS" "$LINENO" 5
+
+
+# configure is writing to config.log, and then calls config.status.
+# config.status does its own redirection, appending to config.log.
+# Unfortunately, on DOS this fails, as config.log is still kept open
+# by configure, so config.status won't be able to write to it; its
+# output is simply discarded.  So we exec the FD to /dev/null,
+# effectively closing config.log, so it can be properly (re)opened and
+# appended to by config.status.  When coming back to configure, we
+# need to make the FD available again.
+if test "$no_create" != yes; then
+  ac_cs_success=:
+  ac_config_status_args=
+  test "$silent" = yes &&
+    ac_config_status_args="$ac_config_status_args --quiet"
+  exec 5>/dev/null
+  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
+  exec 5>>config.log
+  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
+  # would make configure fail if this is the last instruction.
+  $ac_cs_success || as_fn_exit 1
+fi
+if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
+$as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
+fi
+
diff --git a/mpc/configure.ac b/mpc/configure.ac
new file mode 100644
index 0000000..b127462
--- /dev/null
+++ b/mpc/configure.ac
@@ -0,0 +1,214 @@
+/* configure.ac
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#                                               -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+
+AC_PREREQ(2.61)
+AC_INIT(mpc, 0.9, mpc-discuss@lists.gforge.inria.fr)
+AC_CONFIG_SRCDIR([src/mpc-impl.h])
+AC_CONFIG_HEADER([config.h])
+
+AM_INIT_AUTOMAKE([1.9 -Wall -Werror])
+AM_MAINTAINER_MODE
+
+AC_CANONICAL_HOST
+AC_CONFIG_MACRO_DIR([m4])
+
+dnl Extra arguments to configure
+AC_ARG_WITH([mpfr_include],
+            [AC_HELP_STRING([--with-mpfr-include=DIR],
+                            [MPFR include directory])],
+            [CPPFLAGS="-I$withval $CPPFLAGS"])
+AC_ARG_WITH([mpfr_lib],
+            [AC_HELP_STRING([--with-mpfr-lib=DIR],
+                            [MPFR lib directory])],
+            [LDFLAGS="-L$withval $LDFLAGS"])
+AC_ARG_WITH([mpfr],
+            [AC_HELP_STRING([--with-mpfr=DIR],
+                           [MPFR install directory])],
+            [
+            if test -z "$with_mpfr_include" -a -z "$with_mpfr_lib" ; then
+               CPPFLAGS="-I$withval/include $CPPFLAGS"
+               LDFLAGS="-L$withval/lib $LDFLAGS"
+            else
+               AC_MSG_FAILURE([Do not use --with-mpfr and --with-mpfr-include/--with-mpfr-lib options simultaneously.])
+            fi
+            ])
+AC_ARG_WITH([gmp_include],
+            [AC_HELP_STRING([--with-gmp-include=DIR],
+                            [GMP include directory])],
+            [CPPFLAGS="-I$withval $CPPFLAGS"])
+AC_ARG_WITH([gmp_lib],
+            [AC_HELP_STRING([--with-gmp-lib=DIR],
+                            [GMP lib directory])],
+            [LDFLAGS="-L$withval $LDFLAGS"])
+AC_ARG_WITH([gmp],
+            [AC_HELP_STRING([--with-gmp=DIR],
+                           [GMP install directory])],
+            [
+            if test -z "$with_gmp_lib" -a -z "$with_gmp_include" ; then
+               CPPFLAGS="-I$withval/include $CPPFLAGS"
+               LDFLAGS="-L$withval/lib $LDFLAGS"
+            else
+               AC_MSG_FAILURE([Do not use --with-gmp and --with-gmp-include/--with-gmp-lib options simultaneously.])
+            fi
+            ])
+AC_ARG_ENABLE([logging],
+             [AC_HELP_STRING([--enable-logging],
+                             [enable logging of function calls to stderr (default = no)])],
+             [case $enableval in
+                 yes) AS_IF([test "x$enable_shared" = "xno"],
+                            AC_MSG_ERROR([Logging works only with shared libraries; do not mix --enable-logging and --disable-shared])) ;;
+                 no)  ;;
+                 *)   AC_MSG_ERROR([Bad value for --enable-logging: Use yes or no]) ;;
+              esac
+             ]
+             )
+
+
+dnl Setup CC and CFLAGS
+
+dnl Check for user specification of CC or CFLAGS
+if test -n "$CFLAGS" || test -n "$CC" ; then
+   user_redefine_cc=yes
+fi
+
+# Check for programs
+AC_PROG_CC
+AC_LANG(C)
+
+dnl Check GMP Header
+AC_MSG_CHECKING(for gmp.h)
+AC_COMPILE_IFELSE([AC_LANG_SOURCE([[
+#include "gmp.h"
+]])],[AC_MSG_RESULT(yes)],[
+ AC_MSG_RESULT(no)
+ AC_MSG_ERROR([gmp.h can't be found, or is unusable.])
+])
+
+dnl Check for GMP CFLAGS in gmp.h
+if test -z "$user_redefine_cc" ; then
+   MPC_GMP_CC_CFLAGS
+fi
+
+
+dnl Configs for Windows DLLs
+case $host in
+  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2*)
+     MPC_WINDOWS
+esac
+
+
+dnl Finally set up LibTool
+AC_PROG_LIBTOOL
+
+# Checks for header files.
+AC_HEADER_STDC
+AC_CHECK_HEADERS([complex.h locale.h inttypes.h stdint.h limits.h unistd.h sys/time.h])
+
+# Checks for typedefs, structures, and compiler characteristics.
+AC_C_CONST
+AC_TYPE_SIZE_T
+AC_HEADER_TIME
+
+# Checks for libraries.
+AC_CHECK_LIB([m], [creal])
+
+AC_CHECK_LIB([gmp], [__gmpz_init],
+             [LIBS="-lgmp $LIBS"],
+             [AC_MSG_ERROR([libgmp not found or uses a different ABI.])])
+AC_MSG_CHECKING(for MPFR)
+LIBS="-lmpfr $LIBS"
+AC_LINK_IFELSE(
+        [AC_LANG_PROGRAM(
+                [[#include "mpfr.h"]],
+                [[mpfr_t x;  mpfr_init(x) ; mpfr_clear(x);]]
+        )],
+        [AC_MSG_RESULT(yes)],
+        [
+        AC_MSG_RESULT(no)
+        AC_MSG_ERROR([libmpfr not found or uses a different ABI.])
+        ])
+
+# Check for a recent GMP
+AC_MSG_CHECKING(for recent GMP)
+AC_COMPILE_IFELSE(
+        [AC_LANG_SOURCE(
+        [[
+#include "gmp.h"
+#if (__GNU_MP_VERSION*100 + __GNU_MP_VERSION_MINOR*10 + __GNU_MP_VERSION_PATCHLEVEL < 432)
+# error "Minimal GMP version is 4.3.2"
+error
+#endif
+        ]])],
+        [AC_MSG_RESULT(yes)],
+        [
+        AC_MSG_RESULT(no)
+        AC_MSG_ERROR([GMP version >= 4.3.2 required])
+        ])
+
+# Check for a recent MPFR: we require MPFR 2.4.2 so that the tests
+# in log.dat pass
+AC_MSG_CHECKING(for recent MPFR)
+AC_COMPILE_IFELSE(
+        [AC_LANG_SOURCE(
+        [[
+#include "mpfr.h"
+#if (MPFR_VERSION < MPFR_VERSION_NUM (2,4,2))
+# error "Minimal MPFR version is 2.4.2"
+error
+#endif
+        ]])],
+        [AC_MSG_RESULT(yes)],
+        [
+         AC_MSG_RESULT(no)
+         AC_MSG_ERROR([MPFR version >= 2.4.2 required])
+         ])
+
+# Check for logging feature
+AS_IF([test "x$enable_logging" = "xyes"],
+       [AC_CHECK_HEADERS([dlfcn.h])
+        AC_CHECK_LIB([dl],[dlsym],
+           [
+            AC_DEFINE(HAVE_LIBDL, 1, [Library dl present])
+            LIBS="-ldl $LIBS"
+            AC_TYPE_INTPTR_T
+            AC_LIBOBJ([logging])
+            AC_SUBST([MPC_LOG_H],[src/mpc-log.h])
+           ],
+           [AC_MSG_ERROR([Library dl not found, logging impossible])])
+       ]
+     )
+
+# Checks if compiler accepts warning flags.
+MPC_PROG_CC_WARNINGCFLAGS([WARNINGCFLAGS])
+
+# Checks for library functions with warning flags.
+old_cflags=$CFLAGS
+CFLAGS="$CFLAGS $WARNINGCFLAGS"
+AC_CHECK_FUNCS([gettimeofday localeconv setlocale])
+AC_CHECK_FUNCS([dup dup2 fileno],,
+        [AC_DEFINE([NO_STREAM_REDIRECTION],1,[Do not check mpc_out_str on stdout])])
+CFLAGS=$old_cflags
+
+AC_CONFIG_FILES([Makefile src/Makefile tests/Makefile doc/Makefile])
+AC_OUTPUT
diff --git a/mpc/depcomp b/mpc/depcomp
new file mode 100755
index 0000000..df8eea7
--- /dev/null
+++ b/mpc/depcomp
@@ -0,0 +1,630 @@
+#! /bin/sh
+# depcomp - compile a program generating dependencies as side-effects
+
+scriptversion=2009-04-28.21; # UTC
+
+# Copyright (C) 1999, 2000, 2003, 2004, 2005, 2006, 2007, 2009 Free
+# Software Foundation, Inc.
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# Originally written by Alexandre Oliva <oliva@dcc.unicamp.br>.
+
+case $1 in
+  '')
+     echo "$0: No command.  Try \`$0 --help' for more information." 1>&2
+     exit 1;
+     ;;
+  -h | --h*)
+    cat <<\EOF
+Usage: depcomp [--help] [--version] PROGRAM [ARGS]
+
+Run PROGRAMS ARGS to compile a file, generating dependencies
+as side-effects.
+
+Environment variables:
+  depmode     Dependency tracking mode.
+  source      Source file read by `PROGRAMS ARGS'.
+  object      Object file output by `PROGRAMS ARGS'.
+  DEPDIR      directory where to store dependencies.
+  depfile     Dependency file to output.
+  tmpdepfile  Temporary file to use when outputing dependencies.
+  libtool     Whether libtool is used (yes/no).
+
+Report bugs to <bug-automake@gnu.org>.
+EOF
+    exit $?
+    ;;
+  -v | --v*)
+    echo "depcomp $scriptversion"
+    exit $?
+    ;;
+esac
+
+if test -z "$depmode" || test -z "$source" || test -z "$object"; then
+  echo "depcomp: Variables source, object and depmode must be set" 1>&2
+  exit 1
+fi
+
+# Dependencies for sub/bar.o or sub/bar.obj go into sub/.deps/bar.Po.
+depfile=${depfile-`echo "$object" |
+  sed 's|[^\\/]*$|'${DEPDIR-.deps}'/&|;s|\.\([^.]*\)$|.P\1|;s|Pobj$|Po|'`}
+tmpdepfile=${tmpdepfile-`echo "$depfile" | sed 's/\.\([^.]*\)$/.T\1/'`}
+
+rm -f "$tmpdepfile"
+
+# Some modes work just like other modes, but use different flags.  We
+# parameterize here, but still list the modes in the big case below,
+# to make depend.m4 easier to write.  Note that we *cannot* use a case
+# here, because this file can only contain one case statement.
+if test "$depmode" = hp; then
+  # HP compiler uses -M and no extra arg.
+  gccflag=-M
+  depmode=gcc
+fi
+
+if test "$depmode" = dashXmstdout; then
+   # This is just like dashmstdout with a different argument.
+   dashmflag=-xM
+   depmode=dashmstdout
+fi
+
+cygpath_u="cygpath -u -f -"
+if test "$depmode" = msvcmsys; then
+   # This is just like msvisualcpp but w/o cygpath translation.
+   # Just convert the backslash-escaped backslashes to single forward
+   # slashes to satisfy depend.m4
+   cygpath_u="sed s,\\\\\\\\,/,g"
+   depmode=msvisualcpp
+fi
+
+case "$depmode" in
+gcc3)
+## gcc 3 implements dependency tracking that does exactly what
+## we want.  Yay!  Note: for some reason libtool 1.4 doesn't like
+## it if -MD -MP comes after the -MF stuff.  Hmm.
+## Unfortunately, FreeBSD c89 acceptance of flags depends upon
+## the command line argument order; so add the flags where they
+## appear in depend2.am.  Note that the slowdown incurred here
+## affects only configure: in makefiles, %FASTDEP% shortcuts this.
+  for arg
+  do
+    case $arg in
+    -c) set fnord "$@" -MT "$object" -MD -MP -MF "$tmpdepfile" "$arg" ;;
+    *)  set fnord "$@" "$arg" ;;
+    esac
+    shift # fnord
+    shift # $arg
+  done
+  "$@"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  mv "$tmpdepfile" "$depfile"
+  ;;
+
+gcc)
+## There are various ways to get dependency output from gcc.  Here's
+## why we pick this rather obscure method:
+## - Don't want to use -MD because we'd like the dependencies to end
+##   up in a subdir.  Having to rename by hand is ugly.
+##   (We might end up doing this anyway to support other compilers.)
+## - The DEPENDENCIES_OUTPUT environment variable makes gcc act like
+##   -MM, not -M (despite what the docs say).
+## - Using -M directly means running the compiler twice (even worse
+##   than renaming).
+  if test -z "$gccflag"; then
+    gccflag=-MD,
+  fi
+  "$@" -Wp,"$gccflag$tmpdepfile"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  alpha=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
+## The second -e expression handles DOS-style file names with drive letters.
+  sed -e 's/^[^:]*: / /' \
+      -e 's/^['$alpha']:\/[^:]*: / /' < "$tmpdepfile" >> "$depfile"
+## This next piece of magic avoids the `deleted header file' problem.
+## The problem is that when a header file which appears in a .P file
+## is deleted, the dependency causes make to die (because there is
+## typically no way to rebuild the header).  We avoid this by adding
+## dummy dependencies for each header file.  Too bad gcc doesn't do
+## this for us directly.
+  tr ' ' '
+' < "$tmpdepfile" |
+## Some versions of gcc put a space before the `:'.  On the theory
+## that the space means something, we add a space to the output as
+## well.
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+hp)
+  # This case exists only to let depend.m4 do its work.  It works by
+  # looking at the text of this script.  This case will never be run,
+  # since it is checked for above.
+  exit 1
+  ;;
+
+sgi)
+  if test "$libtool" = yes; then
+    "$@" "-Wp,-MDupdate,$tmpdepfile"
+  else
+    "$@" -MDupdate "$tmpdepfile"
+  fi
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+
+  if test -f "$tmpdepfile"; then  # yes, the sourcefile depend on other files
+    echo "$object : \\" > "$depfile"
+
+    # Clip off the initial element (the dependent).  Don't try to be
+    # clever and replace this with sed code, as IRIX sed won't handle
+    # lines with more than a fixed number of characters (4096 in
+    # IRIX 6.2 sed, 8192 in IRIX 6.5).  We also remove comment lines;
+    # the IRIX cc adds comments like `#:fec' to the end of the
+    # dependency line.
+    tr ' ' '
+' < "$tmpdepfile" \
+    | sed -e 's/^.*\.o://' -e 's/#.*$//' -e '/^$/ d' | \
+    tr '
+' ' ' >> "$depfile"
+    echo >> "$depfile"
+
+    # The second pass generates a dummy entry for each header file.
+    tr ' ' '
+' < "$tmpdepfile" \
+   | sed -e 's/^.*\.o://' -e 's/#.*$//' -e '/^$/ d' -e 's/$/:/' \
+   >> "$depfile"
+  else
+    # The sourcefile does not contain any dependencies, so just
+    # store a dummy comment line, to avoid errors with the Makefile
+    # "include basename.Plo" scheme.
+    echo "#dummy" > "$depfile"
+  fi
+  rm -f "$tmpdepfile"
+  ;;
+
+aix)
+  # The C for AIX Compiler uses -M and outputs the dependencies
+  # in a .u file.  In older versions, this file always lives in the
+  # current directory.  Also, the AIX compiler puts `$object:' at the
+  # start of each line; $object doesn't have directory information.
+  # Version 6 uses the directory in both cases.
+  dir=`echo "$object" | sed -e 's|/[^/]*$|/|'`
+  test "x$dir" = "x$object" && dir=
+  base=`echo "$object" | sed -e 's|^.*/||' -e 's/\.o$//' -e 's/\.lo$//'`
+  if test "$libtool" = yes; then
+    tmpdepfile1=$dir$base.u
+    tmpdepfile2=$base.u
+    tmpdepfile3=$dir.libs/$base.u
+    "$@" -Wc,-M
+  else
+    tmpdepfile1=$dir$base.u
+    tmpdepfile2=$dir$base.u
+    tmpdepfile3=$dir$base.u
+    "$@" -M
+  fi
+  stat=$?
+
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile1" "$tmpdepfile2" "$tmpdepfile3"
+    exit $stat
+  fi
+
+  for tmpdepfile in "$tmpdepfile1" "$tmpdepfile2" "$tmpdepfile3"
+  do
+    test -f "$tmpdepfile" && break
+  done
+  if test -f "$tmpdepfile"; then
+    # Each line is of the form `foo.o: dependent.h'.
+    # Do two passes, one to just change these to
+    # `$object: dependent.h' and one to simply `dependent.h:'.
+    sed -e "s,^.*\.[a-z]*:,$object:," < "$tmpdepfile" > "$depfile"
+    # That's a tab and a space in the [].
+    sed -e 's,^.*\.[a-z]*:[	 ]*,,' -e 's,$,:,' < "$tmpdepfile" >> "$depfile"
+  else
+    # The sourcefile does not contain any dependencies, so just
+    # store a dummy comment line, to avoid errors with the Makefile
+    # "include basename.Plo" scheme.
+    echo "#dummy" > "$depfile"
+  fi
+  rm -f "$tmpdepfile"
+  ;;
+
+icc)
+  # Intel's C compiler understands `-MD -MF file'.  However on
+  #    icc -MD -MF foo.d -c -o sub/foo.o sub/foo.c
+  # ICC 7.0 will fill foo.d with something like
+  #    foo.o: sub/foo.c
+  #    foo.o: sub/foo.h
+  # which is wrong.  We want:
+  #    sub/foo.o: sub/foo.c
+  #    sub/foo.o: sub/foo.h
+  #    sub/foo.c:
+  #    sub/foo.h:
+  # ICC 7.1 will output
+  #    foo.o: sub/foo.c sub/foo.h
+  # and will wrap long lines using \ :
+  #    foo.o: sub/foo.c ... \
+  #     sub/foo.h ... \
+  #     ...
+
+  "$@" -MD -MF "$tmpdepfile"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+  # Each line is of the form `foo.o: dependent.h',
+  # or `foo.o: dep1.h dep2.h \', or ` dep3.h dep4.h \'.
+  # Do two passes, one to just change these to
+  # `$object: dependent.h' and one to simply `dependent.h:'.
+  sed "s,^[^:]*:,$object :," < "$tmpdepfile" > "$depfile"
+  # Some versions of the HPUX 10.20 sed can't process this invocation
+  # correctly.  Breaking it into two sed invocations is a workaround.
+  sed 's,^[^:]*: \(.*\)$,\1,;s/^\\$//;/^$/d;/:$/d' < "$tmpdepfile" |
+    sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+hp2)
+  # The "hp" stanza above does not work with aCC (C++) and HP's ia64
+  # compilers, which have integrated preprocessors.  The correct option
+  # to use with these is +Maked; it writes dependencies to a file named
+  # 'foo.d', which lands next to the object file, wherever that
+  # happens to be.
+  # Much of this is similar to the tru64 case; see comments there.
+  dir=`echo "$object" | sed -e 's|/[^/]*$|/|'`
+  test "x$dir" = "x$object" && dir=
+  base=`echo "$object" | sed -e 's|^.*/||' -e 's/\.o$//' -e 's/\.lo$//'`
+  if test "$libtool" = yes; then
+    tmpdepfile1=$dir$base.d
+    tmpdepfile2=$dir.libs/$base.d
+    "$@" -Wc,+Maked
+  else
+    tmpdepfile1=$dir$base.d
+    tmpdepfile2=$dir$base.d
+    "$@" +Maked
+  fi
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+     rm -f "$tmpdepfile1" "$tmpdepfile2"
+     exit $stat
+  fi
+
+  for tmpdepfile in "$tmpdepfile1" "$tmpdepfile2"
+  do
+    test -f "$tmpdepfile" && break
+  done
+  if test -f "$tmpdepfile"; then
+    sed -e "s,^.*\.[a-z]*:,$object:," "$tmpdepfile" > "$depfile"
+    # Add `dependent.h:' lines.
+    sed -ne '2,${
+	       s/^ *//
+	       s/ \\*$//
+	       s/$/:/
+	       p
+	     }' "$tmpdepfile" >> "$depfile"
+  else
+    echo "#dummy" > "$depfile"
+  fi
+  rm -f "$tmpdepfile" "$tmpdepfile2"
+  ;;
+
+tru64)
+   # The Tru64 compiler uses -MD to generate dependencies as a side
+   # effect.  `cc -MD -o foo.o ...' puts the dependencies into `foo.o.d'.
+   # At least on Alpha/Redhat 6.1, Compaq CCC V6.2-504 seems to put
+   # dependencies in `foo.d' instead, so we check for that too.
+   # Subdirectories are respected.
+   dir=`echo "$object" | sed -e 's|/[^/]*$|/|'`
+   test "x$dir" = "x$object" && dir=
+   base=`echo "$object" | sed -e 's|^.*/||' -e 's/\.o$//' -e 's/\.lo$//'`
+
+   if test "$libtool" = yes; then
+      # With Tru64 cc, shared objects can also be used to make a
+      # static library.  This mechanism is used in libtool 1.4 series to
+      # handle both shared and static libraries in a single compilation.
+      # With libtool 1.4, dependencies were output in $dir.libs/$base.lo.d.
+      #
+      # With libtool 1.5 this exception was removed, and libtool now
+      # generates 2 separate objects for the 2 libraries.  These two
+      # compilations output dependencies in $dir.libs/$base.o.d and
+      # in $dir$base.o.d.  We have to check for both files, because
+      # one of the two compilations can be disabled.  We should prefer
+      # $dir$base.o.d over $dir.libs/$base.o.d because the latter is
+      # automatically cleaned when .libs/ is deleted, while ignoring
+      # the former would cause a distcleancheck panic.
+      tmpdepfile1=$dir.libs/$base.lo.d   # libtool 1.4
+      tmpdepfile2=$dir$base.o.d          # libtool 1.5
+      tmpdepfile3=$dir.libs/$base.o.d    # libtool 1.5
+      tmpdepfile4=$dir.libs/$base.d      # Compaq CCC V6.2-504
+      "$@" -Wc,-MD
+   else
+      tmpdepfile1=$dir$base.o.d
+      tmpdepfile2=$dir$base.d
+      tmpdepfile3=$dir$base.d
+      tmpdepfile4=$dir$base.d
+      "$@" -MD
+   fi
+
+   stat=$?
+   if test $stat -eq 0; then :
+   else
+      rm -f "$tmpdepfile1" "$tmpdepfile2" "$tmpdepfile3" "$tmpdepfile4"
+      exit $stat
+   fi
+
+   for tmpdepfile in "$tmpdepfile1" "$tmpdepfile2" "$tmpdepfile3" "$tmpdepfile4"
+   do
+     test -f "$tmpdepfile" && break
+   done
+   if test -f "$tmpdepfile"; then
+      sed -e "s,^.*\.[a-z]*:,$object:," < "$tmpdepfile" > "$depfile"
+      # That's a tab and a space in the [].
+      sed -e 's,^.*\.[a-z]*:[	 ]*,,' -e 's,$,:,' < "$tmpdepfile" >> "$depfile"
+   else
+      echo "#dummy" > "$depfile"
+   fi
+   rm -f "$tmpdepfile"
+   ;;
+
+#nosideeffect)
+  # This comment above is used by automake to tell side-effect
+  # dependency tracking mechanisms from slower ones.
+
+dashmstdout)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout, regardless of -o.
+  "$@" || exit $?
+
+  # Remove the call to Libtool.
+  if test "$libtool" = yes; then
+    while test "X$1" != 'X--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+
+  # Remove `-o $object'.
+  IFS=" "
+  for arg
+  do
+    case $arg in
+    -o)
+      shift
+      ;;
+    $object)
+      shift
+      ;;
+    *)
+      set fnord "$@" "$arg"
+      shift # fnord
+      shift # $arg
+      ;;
+    esac
+  done
+
+  test -z "$dashmflag" && dashmflag=-M
+  # Require at least two characters before searching for `:'
+  # in the target name.  This is to cope with DOS-style filenames:
+  # a dependency such as `c:/foo/bar' could be seen as target `c' otherwise.
+  "$@" $dashmflag |
+    sed 's:^[  ]*[^: ][^:][^:]*\:[    ]*:'"$object"'\: :' > "$tmpdepfile"
+  rm -f "$depfile"
+  cat < "$tmpdepfile" > "$depfile"
+  tr ' ' '
+' < "$tmpdepfile" | \
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+dashXmstdout)
+  # This case only exists to satisfy depend.m4.  It is never actually
+  # run, as this mode is specially recognized in the preamble.
+  exit 1
+  ;;
+
+makedepend)
+  "$@" || exit $?
+  # Remove any Libtool call
+  if test "$libtool" = yes; then
+    while test "X$1" != 'X--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+  # X makedepend
+  shift
+  cleared=no eat=no
+  for arg
+  do
+    case $cleared in
+    no)
+      set ""; shift
+      cleared=yes ;;
+    esac
+    if test $eat = yes; then
+      eat=no
+      continue
+    fi
+    case "$arg" in
+    -D*|-I*)
+      set fnord "$@" "$arg"; shift ;;
+    # Strip any option that makedepend may not understand.  Remove
+    # the object too, otherwise makedepend will parse it as a source file.
+    -arch)
+      eat=yes ;;
+    -*|$object)
+      ;;
+    *)
+      set fnord "$@" "$arg"; shift ;;
+    esac
+  done
+  obj_suffix=`echo "$object" | sed 's/^.*\././'`
+  touch "$tmpdepfile"
+  ${MAKEDEPEND-makedepend} -o"$obj_suffix" -f"$tmpdepfile" "$@"
+  rm -f "$depfile"
+  cat < "$tmpdepfile" > "$depfile"
+  sed '1,2d' "$tmpdepfile" | tr ' ' '
+' | \
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile" "$tmpdepfile".bak
+  ;;
+
+cpp)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout.
+  "$@" || exit $?
+
+  # Remove the call to Libtool.
+  if test "$libtool" = yes; then
+    while test "X$1" != 'X--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+
+  # Remove `-o $object'.
+  IFS=" "
+  for arg
+  do
+    case $arg in
+    -o)
+      shift
+      ;;
+    $object)
+      shift
+      ;;
+    *)
+      set fnord "$@" "$arg"
+      shift # fnord
+      shift # $arg
+      ;;
+    esac
+  done
+
+  "$@" -E |
+    sed -n -e '/^# [0-9][0-9]* "\([^"]*\)".*/ s:: \1 \\:p' \
+       -e '/^#line [0-9][0-9]* "\([^"]*\)".*/ s:: \1 \\:p' |
+    sed '$ s: \\$::' > "$tmpdepfile"
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  cat < "$tmpdepfile" >> "$depfile"
+  sed < "$tmpdepfile" '/^$/d;s/^ //;s/ \\$//;s/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+msvisualcpp)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout.
+  "$@" || exit $?
+
+  # Remove the call to Libtool.
+  if test "$libtool" = yes; then
+    while test "X$1" != 'X--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+
+  IFS=" "
+  for arg
+  do
+    case "$arg" in
+    -o)
+      shift
+      ;;
+    $object)
+      shift
+      ;;
+    "-Gm"|"/Gm"|"-Gi"|"/Gi"|"-ZI"|"/ZI")
+	set fnord "$@"
+	shift
+	shift
+	;;
+    *)
+	set fnord "$@" "$arg"
+	shift
+	shift
+	;;
+    esac
+  done
+  "$@" -E 2>/dev/null |
+  sed -n '/^#line [0-9][0-9]* "\([^"]*\)"/ s::\1:p' | $cygpath_u | sort -u > "$tmpdepfile"
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  sed < "$tmpdepfile" -n -e 's% %\\ %g' -e '/^\(.*\)$/ s::	\1 \\:p' >> "$depfile"
+  echo "	" >> "$depfile"
+  sed < "$tmpdepfile" -n -e 's% %\\ %g' -e '/^\(.*\)$/ s::\1\::p' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+msvcmsys)
+  # This case exists only to let depend.m4 do its work.  It works by
+  # looking at the text of this script.  This case will never be run,
+  # since it is checked for above.
+  exit 1
+  ;;
+
+none)
+  exec "$@"
+  ;;
+
+*)
+  echo "Unknown depmode $depmode" 1>&2
+  exit 1
+  ;;
+esac
+
+exit 0
+
+# Local Variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-time-zone: "UTC"
+# time-stamp-end: "; # UTC"
+# End:
diff --git a/mpc/doc/Makefile.am b/mpc/doc/Makefile.am
new file mode 100644
index 0000000..e76f94c
--- /dev/null
+++ b/mpc/doc/Makefile.am
@@ -0,0 +1,2 @@
+## doc/Makefile.am -- Process this file with automake to produce Makefile.in
+info_TEXINFOS = mpc.texi
diff --git a/mpc/doc/Makefile.in b/mpc/doc/Makefile.in
new file mode 100644
index 0000000..737f0c4
--- /dev/null
+++ b/mpc/doc/Makefile.in
@@ -0,0 +1,646 @@
+# Makefile.in generated by automake 1.11.1 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
+# Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+subdir = doc
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
+	$(srcdir)/stamp-vti $(srcdir)/version.texi mdate-sh \
+	texinfo.tex
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_c_check_flag.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/mpc.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+SOURCES =
+DIST_SOURCES =
+INFO_DEPS = $(srcdir)/mpc.info
+am__TEXINFO_TEX_DIR = $(srcdir)
+DVIS = mpc.dvi
+PDFS = mpc.pdf
+PSS = mpc.ps
+HTMLS = mpc.html
+TEXINFOS = mpc.texi
+TEXI2DVI = texi2dvi
+TEXI2PDF = $(TEXI2DVI) --pdf --batch
+MAKEINFOHTML = $(MAKEINFO) --html
+AM_MAKEINFOHTMLFLAGS = $(AM_MAKEINFOFLAGS)
+DVIPS = dvips
+am__installdirs = "$(DESTDIR)$(infodir)"
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+GREP = @GREP@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+MPC_LOG_H = @MPC_LOG_H@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WARNINGCFLAGS = @WARNINGCFLAGS@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_ECHO = @lt_ECHO@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+info_TEXINFOS = mpc.texi
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .dvi .html .info .pdf .ps .texi
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu doc/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu doc/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+.texi.info:
+	restore=: && backupdir="$(am__leading_dot)am$$$$" && \
+	am__cwd=`pwd` && $(am__cd) $(srcdir) && \
+	rm -rf $$backupdir && mkdir $$backupdir && \
+	if ($(MAKEINFO) --version) >/dev/null 2>&1; then \
+	  for f in $@ $@-[0-9] $@-[0-9][0-9] $(@:.info=).i[0-9] $(@:.info=).i[0-9][0-9]; do \
+	    if test -f $$f; then mv $$f $$backupdir; restore=mv; else :; fi; \
+	  done; \
+	else :; fi && \
+	cd "$$am__cwd"; \
+	if $(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I $(srcdir) \
+	 -o $@ $<; \
+	then \
+	  rc=0; \
+	  $(am__cd) $(srcdir); \
+	else \
+	  rc=$$?; \
+	  $(am__cd) $(srcdir) && \
+	  $$restore $$backupdir/* `echo "./$@" | sed 's|[^/]*$$||'`; \
+	fi; \
+	rm -rf $$backupdir; exit $$rc
+
+.texi.dvi:
+	TEXINPUTS="$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS" \
+	MAKEINFO='$(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I $(srcdir)' \
+	$(TEXI2DVI) $<
+
+.texi.pdf:
+	TEXINPUTS="$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS" \
+	MAKEINFO='$(MAKEINFO) $(AM_MAKEINFOFLAGS) $(MAKEINFOFLAGS) -I $(srcdir)' \
+	$(TEXI2PDF) $<
+
+.texi.html:
+	rm -rf $(@:.html=.htp)
+	if $(MAKEINFOHTML) $(AM_MAKEINFOHTMLFLAGS) $(MAKEINFOFLAGS) -I $(srcdir) \
+	 -o $(@:.html=.htp) $<; \
+	then \
+	  rm -rf $@; \
+	  if test ! -d $(@:.html=.htp) && test -d $(@:.html=); then \
+	    mv $(@:.html=) $@; else mv $(@:.html=.htp) $@; fi; \
+	else \
+	  if test ! -d $(@:.html=.htp) && test -d $(@:.html=); then \
+	    rm -rf $(@:.html=); else rm -Rf $(@:.html=.htp) $@; fi; \
+	  exit 1; \
+	fi
+$(srcdir)/mpc.info: mpc.texi $(srcdir)/version.texi
+mpc.dvi: mpc.texi $(srcdir)/version.texi
+mpc.pdf: mpc.texi $(srcdir)/version.texi
+mpc.html: mpc.texi $(srcdir)/version.texi
+$(srcdir)/version.texi: @MAINTAINER_MODE_TRUE@ $(srcdir)/stamp-vti
+$(srcdir)/stamp-vti: mpc.texi $(top_srcdir)/configure
+	@(dir=.; test -f ./mpc.texi || dir=$(srcdir); \
+	set `$(SHELL) $(srcdir)/mdate-sh $$dir/mpc.texi`; \
+	echo "@set UPDATED $$1 $$2 $$3"; \
+	echo "@set UPDATED-MONTH $$2 $$3"; \
+	echo "@set EDITION $(VERSION)"; \
+	echo "@set VERSION $(VERSION)") > vti.tmp
+	@cmp -s vti.tmp $(srcdir)/version.texi \
+	  || (echo "Updating $(srcdir)/version.texi"; \
+	      cp vti.tmp $(srcdir)/version.texi)
+	-@rm -f vti.tmp
+	@cp $(srcdir)/version.texi $@
+
+mostlyclean-vti:
+	-rm -f vti.tmp
+
+maintainer-clean-vti:
+@MAINTAINER_MODE_TRUE@	-rm -f $(srcdir)/stamp-vti $(srcdir)/version.texi
+.dvi.ps:
+	TEXINPUTS="$(am__TEXINFO_TEX_DIR)$(PATH_SEPARATOR)$$TEXINPUTS" \
+	$(DVIPS) -o $@ $<
+
+uninstall-dvi-am:
+	@$(NORMAL_UNINSTALL)
+	@list='$(DVIS)'; test -n "$(dvidir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(dvidir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(dvidir)/$$f"; \
+	done
+
+uninstall-html-am:
+	@$(NORMAL_UNINSTALL)
+	@list='$(HTMLS)'; test -n "$(htmldir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " rm -rf '$(DESTDIR)$(htmldir)/$$f'"; \
+	  rm -rf "$(DESTDIR)$(htmldir)/$$f"; \
+	done
+
+uninstall-info-am:
+	@$(PRE_UNINSTALL)
+	@if test -d '$(DESTDIR)$(infodir)' && \
+	    (install-info --version && \
+	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \
+	  list='$(INFO_DEPS)'; \
+	  for file in $$list; do \
+	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
+	    echo " install-info --info-dir='$(DESTDIR)$(infodir)' --remove '$(DESTDIR)$(infodir)/$$relfile'"; \
+	    if install-info --info-dir="$(DESTDIR)$(infodir)" --remove "$(DESTDIR)$(infodir)/$$relfile"; \
+	    then :; else test ! -f "$(DESTDIR)$(infodir)/$$relfile" || exit 1; fi; \
+	  done; \
+	else :; fi
+	@$(NORMAL_UNINSTALL)
+	@list='$(INFO_DEPS)'; \
+	for file in $$list; do \
+	  relfile=`echo "$$file" | sed 's|^.*/||'`; \
+	  relfile_i=`echo "$$relfile" | sed 's|\.info$$||;s|$$|.i|'`; \
+	  (if test -d "$(DESTDIR)$(infodir)" && cd "$(DESTDIR)$(infodir)"; then \
+	     echo " cd '$(DESTDIR)$(infodir)' && rm -f $$relfile $$relfile-[0-9] $$relfile-[0-9][0-9] $$relfile_i[0-9] $$relfile_i[0-9][0-9]"; \
+	     rm -f $$relfile $$relfile-[0-9] $$relfile-[0-9][0-9] $$relfile_i[0-9] $$relfile_i[0-9][0-9]; \
+	   else :; fi); \
+	done
+
+uninstall-pdf-am:
+	@$(NORMAL_UNINSTALL)
+	@list='$(PDFS)'; test -n "$(pdfdir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(pdfdir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(pdfdir)/$$f"; \
+	done
+
+uninstall-ps-am:
+	@$(NORMAL_UNINSTALL)
+	@list='$(PSS)'; test -n "$(psdir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " rm -f '$(DESTDIR)$(psdir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(psdir)/$$f"; \
+	done
+
+dist-info: $(INFO_DEPS)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	list='$(INFO_DEPS)'; \
+	for base in $$list; do \
+	  case $$base in \
+	    $(srcdir)/*) base=`echo "$$base" | sed "s|^$$srcdirstrip/||"`;; \
+	  esac; \
+	  if test -f $$base; then d=.; else d=$(srcdir); fi; \
+	  base_i=`echo "$$base" | sed 's|\.info$$||;s|$$|.i|'`; \
+	  for file in $$d/$$base $$d/$$base-[0-9] $$d/$$base-[0-9][0-9] $$d/$$base_i[0-9] $$d/$$base_i[0-9][0-9]; do \
+	    if test -f $$file; then \
+	      relfile=`expr "$$file" : "$$d/\(.*\)"`; \
+	      test -f "$(distdir)/$$relfile" || \
+		cp -p $$file "$(distdir)/$$relfile"; \
+	    else :; fi; \
+	  done; \
+	done
+
+mostlyclean-aminfo:
+	-rm -rf mpc.aux mpc.cp mpc.cps mpc.fn mpc.fns mpc.ky mpc.kys mpc.log mpc.pg \
+	  mpc.pgs mpc.tmp mpc.toc mpc.tp mpc.vr mpc.vrs
+
+clean-aminfo:
+	-test -z "mpc.dvi mpc.pdf mpc.ps mpc.html" \
+	|| rm -rf mpc.dvi mpc.pdf mpc.ps mpc.html
+
+maintainer-clean-aminfo:
+	@list='$(INFO_DEPS)'; for i in $$list; do \
+	  i_i=`echo "$$i" | sed 's|\.info$$||;s|$$|.i|'`; \
+	  echo " rm -f $$i $$i-[0-9] $$i-[0-9][0-9] $$i_i[0-9] $$i_i[0-9][0-9]"; \
+	  rm -f $$i $$i-[0-9] $$i-[0-9][0-9] $$i_i[0-9] $$i_i[0-9][0-9]; \
+	done
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+	$(MAKE) $(AM_MAKEFLAGS) \
+	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
+	  dist-info
+check-am: all-am
+check: check-am
+all-am: Makefile $(INFO_DEPS)
+installdirs:
+	for dir in "$(DESTDIR)$(infodir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-aminfo clean-generic clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic
+
+dvi: dvi-am
+
+dvi-am: $(DVIS)
+
+html: html-am
+
+html-am: $(HTMLS)
+
+info: info-am
+
+info-am: $(INFO_DEPS)
+
+install-data-am: install-info-am
+
+install-dvi: install-dvi-am
+
+install-dvi-am: $(DVIS)
+	@$(NORMAL_INSTALL)
+	test -z "$(dvidir)" || $(MKDIR_P) "$(DESTDIR)$(dvidir)"
+	@list='$(DVIS)'; test -n "$(dvidir)" || list=; \
+	for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dvidir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dvidir)" || exit $$?; \
+	done
+install-exec-am:
+
+install-html: install-html-am
+
+install-html-am: $(HTMLS)
+	@$(NORMAL_INSTALL)
+	test -z "$(htmldir)" || $(MKDIR_P) "$(DESTDIR)$(htmldir)"
+	@list='$(HTMLS)'; list2=; test -n "$(htmldir)" || list=; \
+	for p in $$list; do \
+	  if test -f "$$p" || test -d "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  $(am__strip_dir) \
+	  if test -d "$$d$$p"; then \
+	    echo " $(MKDIR_P) '$(DESTDIR)$(htmldir)/$$f'"; \
+	    $(MKDIR_P) "$(DESTDIR)$(htmldir)/$$f" || exit 1; \
+	    echo " $(INSTALL_DATA) '$$d$$p'/* '$(DESTDIR)$(htmldir)/$$f'"; \
+	    $(INSTALL_DATA) "$$d$$p"/* "$(DESTDIR)$(htmldir)/$$f" || exit $$?; \
+	  else \
+	    list2="$$list2 $$d$$p"; \
+	  fi; \
+	done; \
+	test -z "$$list2" || { echo "$$list2" | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(htmldir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(htmldir)" || exit $$?; \
+	done; }
+install-info: install-info-am
+
+install-info-am: $(INFO_DEPS)
+	@$(NORMAL_INSTALL)
+	test -z "$(infodir)" || $(MKDIR_P) "$(DESTDIR)$(infodir)"
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	list='$(INFO_DEPS)'; test -n "$(infodir)" || list=; \
+	for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	  esac; \
+	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
+	  file_i=`echo "$$file" | sed 's|\.info$$||;s|$$|.i|'`; \
+	  for ifile in $$d/$$file $$d/$$file-[0-9] $$d/$$file-[0-9][0-9] \
+	               $$d/$$file_i[0-9] $$d/$$file_i[0-9][0-9] ; do \
+	    if test -f $$ifile; then \
+	      echo "$$ifile"; \
+	    else : ; fi; \
+	  done; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(infodir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(infodir)" || exit $$?; done
+	@$(POST_INSTALL)
+	@if (install-info --version && \
+	     install-info --version 2>&1 | sed 1q | grep -i -v debian) >/dev/null 2>&1; then \
+	  list='$(INFO_DEPS)'; test -n "$(infodir)" || list=; \
+	  for file in $$list; do \
+	    relfile=`echo "$$file" | sed 's|^.*/||'`; \
+	    echo " install-info --info-dir='$(DESTDIR)$(infodir)' '$(DESTDIR)$(infodir)/$$relfile'";\
+	    install-info --info-dir="$(DESTDIR)$(infodir)" "$(DESTDIR)$(infodir)/$$relfile" || :;\
+	  done; \
+	else : ; fi
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am: $(PDFS)
+	@$(NORMAL_INSTALL)
+	test -z "$(pdfdir)" || $(MKDIR_P) "$(DESTDIR)$(pdfdir)"
+	@list='$(PDFS)'; test -n "$(pdfdir)" || list=; \
+	for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pdfdir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pdfdir)" || exit $$?; done
+install-ps: install-ps-am
+
+install-ps-am: $(PSS)
+	@$(NORMAL_INSTALL)
+	test -z "$(psdir)" || $(MKDIR_P) "$(DESTDIR)$(psdir)"
+	@list='$(PSS)'; test -n "$(psdir)" || list=; \
+	for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(psdir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(psdir)" || exit $$?; done
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-aminfo \
+	maintainer-clean-generic maintainer-clean-vti
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-aminfo mostlyclean-generic \
+	mostlyclean-libtool mostlyclean-vti
+
+pdf: pdf-am
+
+pdf-am: $(PDFS)
+
+ps: ps-am
+
+ps-am: $(PSS)
+
+uninstall-am: uninstall-dvi-am uninstall-html-am uninstall-info-am \
+	uninstall-pdf-am uninstall-ps-am
+
+.MAKE: install-am install-strip
+
+.PHONY: all all-am check check-am clean clean-aminfo clean-generic \
+	clean-libtool dist-info distclean distclean-generic \
+	distclean-libtool distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-dvi \
+	install-dvi-am install-exec install-exec-am install-html \
+	install-html-am install-info install-info-am install-man \
+	install-pdf install-pdf-am install-ps install-ps-am \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-aminfo \
+	maintainer-clean-generic maintainer-clean-vti mostlyclean \
+	mostlyclean-aminfo mostlyclean-generic mostlyclean-libtool \
+	mostlyclean-vti pdf pdf-am ps ps-am uninstall uninstall-am \
+	uninstall-dvi-am uninstall-html-am uninstall-info-am \
+	uninstall-pdf-am uninstall-ps-am
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff --git a/mpc/doc/mdate-sh b/mpc/doc/mdate-sh
new file mode 100755
index 0000000..e631b22
--- /dev/null
+++ b/mpc/doc/mdate-sh
@@ -0,0 +1,205 @@
+#!/bin/sh
+# Get modification time of a file or directory and pretty-print it.
+
+scriptversion=2009-04-28.21; # UTC
+
+# Copyright (C) 1995, 1996, 1997, 2003, 2004, 2005, 2007, 2009 Free
+# Software Foundation, Inc.
+# written by Ulrich Drepper <drepper@gnu.ai.mit.edu>, June 1995
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# This file is maintained in Automake, please report
+# bugs to <bug-automake@gnu.org> or send patches to
+# <automake-patches@gnu.org>.
+
+case $1 in
+  '')
+     echo "$0: No file.  Try \`$0 --help' for more information." 1>&2
+     exit 1;
+     ;;
+  -h | --h*)
+    cat <<\EOF
+Usage: mdate-sh [--help] [--version] FILE
+
+Pretty-print the modification time of FILE.
+
+Report bugs to <bug-automake@gnu.org>.
+EOF
+    exit $?
+    ;;
+  -v | --v*)
+    echo "mdate-sh $scriptversion"
+    exit $?
+    ;;
+esac
+
+# Prevent date giving response in another language.
+LANG=C
+export LANG
+LC_ALL=C
+export LC_ALL
+LC_TIME=C
+export LC_TIME
+
+# GNU ls changes its time format in response to the TIME_STYLE
+# variable.  Since we cannot assume `unset' works, revert this
+# variable to its documented default.
+if test "${TIME_STYLE+set}" = set; then
+  TIME_STYLE=posix-long-iso
+  export TIME_STYLE
+fi
+
+save_arg1=$1
+
+# Find out how to get the extended ls output of a file or directory.
+if ls -L /dev/null 1>/dev/null 2>&1; then
+  ls_command='ls -L -l -d'
+else
+  ls_command='ls -l -d'
+fi
+# Avoid user/group names that might have spaces, when possible.
+if ls -n /dev/null 1>/dev/null 2>&1; then
+  ls_command="$ls_command -n"
+fi
+
+# A `ls -l' line looks as follows on OS/2.
+#  drwxrwx---        0 Aug 11  2001 foo
+# This differs from Unix, which adds ownership information.
+#  drwxrwx---   2 root  root      4096 Aug 11  2001 foo
+#
+# To find the date, we split the line on spaces and iterate on words
+# until we find a month.  This cannot work with files whose owner is a
+# user named `Jan', or `Feb', etc.  However, it's unlikely that `/'
+# will be owned by a user whose name is a month.  So we first look at
+# the extended ls output of the root directory to decide how many
+# words should be skipped to get the date.
+
+# On HPUX /bin/sh, "set" interprets "-rw-r--r--" as options, so the "x" below.
+set x`$ls_command /`
+
+# Find which argument is the month.
+month=
+command=
+until test $month
+do
+  shift
+  # Add another shift to the command.
+  command="$command shift;"
+  case $1 in
+    Jan) month=January; nummonth=1;;
+    Feb) month=February; nummonth=2;;
+    Mar) month=March; nummonth=3;;
+    Apr) month=April; nummonth=4;;
+    May) month=May; nummonth=5;;
+    Jun) month=June; nummonth=6;;
+    Jul) month=July; nummonth=7;;
+    Aug) month=August; nummonth=8;;
+    Sep) month=September; nummonth=9;;
+    Oct) month=October; nummonth=10;;
+    Nov) month=November; nummonth=11;;
+    Dec) month=December; nummonth=12;;
+  esac
+done
+
+# Get the extended ls output of the file or directory.
+set dummy x`eval "$ls_command \"\$save_arg1\""`
+
+# Remove all preceding arguments
+eval $command
+
+# Because of the dummy argument above, month is in $2.
+#
+# On a POSIX system, we should have
+#
+# $# = 5
+# $1 = file size
+# $2 = month
+# $3 = day
+# $4 = year or time
+# $5 = filename
+#
+# On Darwin 7.7.0 and 7.6.0, we have
+#
+# $# = 4
+# $1 = day
+# $2 = month
+# $3 = year or time
+# $4 = filename
+
+# Get the month.
+case $2 in
+  Jan) month=January; nummonth=1;;
+  Feb) month=February; nummonth=2;;
+  Mar) month=March; nummonth=3;;
+  Apr) month=April; nummonth=4;;
+  May) month=May; nummonth=5;;
+  Jun) month=June; nummonth=6;;
+  Jul) month=July; nummonth=7;;
+  Aug) month=August; nummonth=8;;
+  Sep) month=September; nummonth=9;;
+  Oct) month=October; nummonth=10;;
+  Nov) month=November; nummonth=11;;
+  Dec) month=December; nummonth=12;;
+esac
+
+case $3 in
+  ???*) day=$1;;
+  *) day=$3; shift;;
+esac
+
+# Here we have to deal with the problem that the ls output gives either
+# the time of day or the year.
+case $3 in
+  *:*) set `date`; eval year=\$$#
+       case $2 in
+	 Jan) nummonthtod=1;;
+	 Feb) nummonthtod=2;;
+	 Mar) nummonthtod=3;;
+	 Apr) nummonthtod=4;;
+	 May) nummonthtod=5;;
+	 Jun) nummonthtod=6;;
+	 Jul) nummonthtod=7;;
+	 Aug) nummonthtod=8;;
+	 Sep) nummonthtod=9;;
+	 Oct) nummonthtod=10;;
+	 Nov) nummonthtod=11;;
+	 Dec) nummonthtod=12;;
+       esac
+       # For the first six month of the year the time notation can also
+       # be used for files modified in the last year.
+       if (expr $nummonth \> $nummonthtod) > /dev/null;
+       then
+	 year=`expr $year - 1`
+       fi;;
+  *) year=$3;;
+esac
+
+# The result.
+echo $day $month $year
+
+# Local Variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-time-zone: "UTC"
+# time-stamp-end: "; # UTC"
+# End:
diff --git a/mpc/doc/mpc.info b/mpc/doc/mpc.info
new file mode 100644
index 0000000..1542a0d
--- /dev/null
+++ b/mpc/doc/mpc.info
@@ -0,0 +1,1322 @@
+This is mpc.info, produced by makeinfo version 4.13 from mpc.texi.
+
+START-INFO-DIR-ENTRY
+* mpc: (mpc.info).               Multiple Precision Complex Library.
+END-INFO-DIR-ENTRY
+
+   This is the manual for MPC, a library for multiple precision complex
+arithmetic, version 0.9, of February 2011.
+
+
+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
+2011 INRIA
+
+
+
+   Permission is granted to make and distribute verbatim copies of this
+manual provided the copyright notice and this permission notice are
+preserved on all copies.
+
+   Permission is granted to copy and distribute modified versions of
+this manual under the conditions for verbatim copying, provided that
+the entire resulting derived work is distributed under the terms of a
+permission notice identical to this one.
+
+   Permission is granted to copy and distribute translations of this
+manual into another language, under the above conditions for modified
+versions.
+
+
+File: mpc.info,  Node: Top,  Next: Copying,  Prev: (dir),  Up: (dir)
+
+MPC
+***
+
+This manual documents how to install and use the Multiple Precision
+Complex Library, version 0.9
+
+* Menu:
+
+* Copying::                     MPC Copying Conditions (LGPL).
+* Introduction to MPC::         Brief introduction to MPC.
+* Installing MPC::              How to configure and compile the MPC library.
+* Reporting Bugs::              How to usefully report bugs.
+* MPC Basics::                  What every MPC user should know.
+* Complex Functions::           Functions for arithmetic on complex numbers.
+* Contributors::
+* References::
+* Concept Index::
+* Function Index::
+
+
+File: mpc.info,  Node: Copying,  Next: Introduction to MPC,  Prev: Top,  Up: Top
+
+MPC Copying Conditions
+**********************
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as
+published by the Free Software Foundation; either version 2.1 of the
+License, or (at your option) any later version, see the file
+COPYING.LIB.
+
+   The MPC Library is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+Lesser General Public License for more details.
+
+
+File: mpc.info,  Node: Introduction to MPC,  Next: Installing MPC,  Prev: Copying,  Up: Top
+
+1 Introduction to MPC
+*********************
+
+MPC is a portable library written in C for arbitrary precision
+arithmetic on complex numbers providing correct rounding. Ultimately, it
+should implement a multiprecision equivalent of the C99 standard.  It
+builds upon the GNU MP and the GNU MPFR libraries.
+
+1.1 How to use this Manual
+==========================
+
+Everyone should read *note MPC Basics::.  If you need to install the
+library yourself, you need to read *note Installing MPC::, too.
+
+   The remainder of the manual can be used for later reference,
+although it is probably a good idea to skim through it.
+
+
+File: mpc.info,  Node: Installing MPC,  Next: Reporting Bugs,  Prev: Introduction to MPC,  Up: Top
+
+2 Installing MPC
+****************
+
+To build MPC, you first have to install GNU MP (version 4.3.2 or
+higher) and GNU MPFR (version 2.4.2 or higher) on your computer.  You
+need a C compiler, preferably GCC, but any reasonable compiler should
+work. And you need a standard Unix `make' program, plus some other
+standard Unix utility programs.
+
+   Here are the steps needed to install the library on Unix systems:
+
+  1. `tar xzf mpc-0.9.tar.gz'
+
+  2. `cd mpc-0.9'
+
+  3. `./configure'
+
+     if GMP and MPFR are installed into standard directories, that is,
+     directories that are searched by default by the compiler and the
+     linking tools.
+
+     `./configure --with-gmp=<gmp_install_dir>'
+
+     is used to indicate a different location where GMP is installed.
+     Alternatively, you can specify directly GMP include and GMP lib
+     directories with `./configure --with-gmp-lib=<gmp_lib_dir>
+     --with-gmp-include=<gmp_include_dir>'.
+
+     `./configure --with-mpfr=<mpfr_install_dir>'
+
+     is used to indicate a different location where MPFR is installed.
+     Alternatively, you can specify directly MPFR include and MPFR lib
+     directories with `./configure --with-mpf-lib=<mpfr_lib_dir>
+     --with-mpfr-include=<mpfr_include_dir>'.
+
+     Another useful parameter is `--prefix', which can be used to
+     specify an alternative installation location instead of
+     `/usr/local'; see `make install' below.
+
+     If for debugging purposes you wish to log calls to MPC functions
+     from within your code, add the parameter `--enable-logging'.  In
+     your code, replace the inclusion of `mpc.h' by `mpc-log.h' and
+     link the executable dynamically.  Then all calls to functions with
+     only complex arguments are printed to `stderr' in the following
+     form: First, the function name is given, followed by its type such
+     as `c_cc', meaning that the function has one complex result (one
+     `c' in front of the `_'), computed from two complex arguments (two
+     `c' after the `_'). Then, the precisions of the real and the
+     imaginary part of the first result is given, followed by the
+     second one and so on. Finally, for each argument, the precisions
+     of its real and imaginary part are specified and the argument
+     itself is printed in hexadecimal via the function `mpc_out_str'
+     (*note String and Stream Input and Output: string-io.).
+
+     Use `./configure --help' for an exhaustive list of parameters.
+
+  4. `make'
+
+     This compiles MPC in the working directory.
+
+  5. `make check'
+
+     This will make sure MPC was built correctly.
+
+     If you get error messages, please report them to
+     `mpc-discuss@lists.gforge.inria.fr' (*Note Reporting Bugs::, for
+     information on what to include in useful bug reports).
+
+  6. `make install'
+
+     This will copy the file `mpc.h' to the directory
+     `/usr/local/include', the file `libmpc.a' to the directory
+     `/usr/local/lib', and the file `mpc.info' to the directory
+     `/usr/local/share/info' (or if you passed the `--prefix' option to
+     `configure', using the prefix directory given as argument to
+     `--prefix' instead of `/usr/local'). Note: you need write
+     permissions on these directories.
+
+
+2.1 Other `make' Targets
+========================
+
+There are some other useful make targets:
+
+   * `info'
+
+     Create an info version of the manual, in `mpc.info'.
+
+   * `pdf'
+
+     Create a PDF version of the manual, in `doc/mpc.pdf'.
+
+   * `dvi'
+
+     Create a DVI version of the manual, in `doc/mpc.dvi'.
+
+   * `ps'
+
+     Create a Postscript version of the manual, in `doc/mpc.ps'.
+
+   * `html'
+
+     Create an HTML version of the manual, in several pages in the
+     directory `doc/mpc.html'; if you want only one output HTML file,
+     then type `makeinfo --html --no-split mpc.texi' instead.
+
+   * `clean'
+
+     Delete all object files and archive files, but not the
+     configuration files.
+
+   * `distclean'
+
+     Delete all files not included in the distribution.
+
+   * `uninstall'
+
+     Delete all files copied by `make install'.
+
+2.2 Known Build Problems
+========================
+
+On AIX, if GMP was built with the 64-bit ABI, before building and
+testing MPC, it might be necessary to set the `OBJECT_MODE' environment
+variable to 64 by, e.g.,
+
+   `export OBJECT_MODE=64'
+
+   This has been tested with the C compiler IBM XL C/C++ Enterprise
+Edition V8.0 for AIX, version: 08.00.0000.0021, GMP 4.2.4 and MPFR
+2.4.1.
+
+   Please report any other problems you encounter to
+`mpc-discuss@lists.gforge.inria.fr'.  *Note Reporting Bugs::.
+
+
+File: mpc.info,  Node: Reporting Bugs,  Next: MPC Basics,  Prev: Installing MPC,  Up: Top
+
+3 Reporting Bugs
+****************
+
+If you think you have found a bug in the MPC library, please investigate
+and report it. We have made this library available to you, and it is
+not to ask too much from you, to ask you to report the bugs that you
+find.
+
+   There are a few things you should think about when you put your bug
+report together.
+
+   You have to send us a test case that makes it possible for us to
+reproduce the bug.  Include instructions on how to run the test case.
+
+   You also have to explain what is wrong; if you get a crash, or if
+the results printed are incorrect and in that case, in what way.
+
+   Please include compiler version information in your bug report.
+This can be extracted using `gcc -v', or `cc -V' on some machines.
+Also, include the output from `uname -a'.
+
+   If your bug report is good, we will do our best to help you to get a
+corrected version of the library; if the bug report is poor, we will
+not do anything about it (aside of chiding you to send better bug
+reports).
+
+   Send your bug report to: `mpc-discuss@lists.gforge.inria.fr'.
+
+   If you think something in this manual is unclear, or downright
+incorrect, or if the language needs to be improved, please send a note
+to the same address.
+
+
+File: mpc.info,  Node: MPC Basics,  Next: Complex Functions,  Prev: Reporting Bugs,  Up: Top
+
+4 MPC Basics
+************
+
+All declarations needed to use MPC are collected in the include file
+`mpc.h'.  It is designed to work with both C and C++ compilers.  You
+should include that file in any program using the MPC library by adding
+the line
+        #include "mpc.h"
+
+4.1 Nomenclature and Types
+==========================
+
+"Complex number" or "Complex" for short, is a pair of two arbitrary
+precision floating-point numbers (for the real and imaginary parts).
+The C data type for such objects is `mpc_t'.
+
+The "Precision" is the number of bits used to represent the mantissa of
+the real and imaginary parts; the corresponding C data type is
+`mpfr_prec_t'.  For more details on the allowed precision range, *note
+Nomenclature and Types: (mpfr.info)Nomenclature and Types.
+
+The "rounding mode" specifies the way to round the result of a complex
+operation, in case the exact result can not be represented exactly in
+the destination mantissa; the corresponding C data type is `mpc_rnd_t'.
+A complex rounding mode is a pair of two rounding modes: one for the
+real part, one for the imaginary part.
+
+4.2 Function Classes
+====================
+
+There is only one class of functions in the MPC library, namely
+functions for complex arithmetic. The function names begin with `mpc_'.
+The associated type is `mpc_t'.
+
+4.3 MPC Variable Conventions
+============================
+
+As a general rule, all MPC functions expect output arguments before
+input arguments.  This notation is based on an analogy with the
+assignment operator.
+
+   MPC allows you to use the same variable for both input and output in
+the same expression.  For example, the main function for floating-point
+multiplication, `mpc_mul', can be used like this: `mpc_mul (x, x, x,
+rnd_mode)'.  This computes the square of X with rounding mode `rnd_mode'
+and puts the result back in X.
+
+   Before you can assign to an MPC variable, you need to initialize it
+by calling one of the special initialization functions.  When you are
+done with a variable, you need to clear it out, using one of the
+functions for that purpose.
+
+   A variable should only be initialized once, or at least cleared out
+between each initialization.  After a variable has been initialized, it
+may be assigned to any number of times.
+
+   For efficiency reasons, avoid to initialize and clear out a variable
+in loops.  Instead, initialize it before entering the loop, and clear
+it out after the loop has exited.
+
+   You do not need to be concerned about allocating additional space
+for MPC variables, since each of its real and imaginary part has a
+mantissa of fixed size.  Hence unless you change its precision, or
+clear and reinitialize it, a complex variable will have the same
+allocated space during all its life.
+
+4.4 Rounding Modes
+==================
+
+A complex rounding mode is of the form `MPC_RNDxy' where `x' and `y'
+are one of `N' (to nearest), `Z' (towards zero), `U' (towards plus
+infinity), `D' (towards minus infinity).  The first letter refers to
+the rounding mode for the real part, and the second one for the
+imaginary part.  For example `MPC_RNDZU' indicates to round the real
+part towards zero, and the imaginary part towards plus infinity.
+
+   The `round to nearest' mode works as in the IEEE P754 standard: in
+case the number to be rounded lies exactly in the middle of two
+representable numbers, it is rounded to the one with the least
+significant bit set to zero.  For example, the number 5, which is
+represented by (101) in binary, is rounded to (100)=4 with a precision
+of two bits, and not to (110)=6.
+
+4.5 Return Value
+================
+
+Most MPC functions have a return value of type `int', which is used to
+indicate the position of the rounded real and imaginary parts with
+respect to the exact (infinite precision) values.  If this integer is
+`i', the macros `MPC_INEX_RE(i)' and `MPC_INEX_IM(i)' give 0 if the
+corresponding rounded value is exact, a negative value if the rounded
+value is less than the exact one, and a positive value if it is greater
+than the exact one.  Similarly, functions computing a result of type
+`mpfr_t' return an integer that is 0, positive or negative depending on
+whether the rounded value is the same, larger or smaller then the exact
+result.
+
+   Some functions, such as `mpc_sin_cos', compute two complex results;
+the macros `MPC_INEX1(i)' and `MPC_INEX2(i)', applied to the return
+value `i' of such a function, yield the exactness value corresponding
+to the first or the second computed value, respectively.
+
+4.6 Branch Cuts And Special Values
+==================================
+
+Some complex functions have branch cuts, across which the function is
+discontinous. In MPC, the branch cuts chosen are the same as those
+specified for the corresponding functions in the ISO C99 standard.
+
+   Likewise, when evaluated at a point whose real or imaginary part is
+either infinite or a NaN or a signed zero, a function returns the same
+value as those specified for the corresponding function in the ISO C99
+standard.
+
+
+File: mpc.info,  Node: Complex Functions,  Next: Contributors,  Prev: MPC Basics,  Up: Top
+
+5 Complex Functions
+*******************
+
+The complex functions expect arguments of type `mpc_t'.
+
+   The MPC floating-point functions have an interface that is similar
+to the GNU MP integer functions.  The function prefix for operations on
+complex numbers is `mpc_'.
+
+   The precision of a computation is defined as follows: Compute the
+requested operation exactly (with "infinite precision"), and round the
+result to the destination variable precision with the given rounding
+mode.
+
+   The MPC complex functions are intended to be a smooth extension of
+the IEEE P754 arithmetic. The results obtained on one computer should
+not differ from the results obtained on a computer with a different
+word size.
+
+* Menu:
+
+* Initializing Complex Numbers::
+* Assigning Complex Numbers::
+* Converting Complex Numbers::
+* String and Stream Input and Output::
+* Complex Comparison::
+* Projection & Decomposing::
+* Basic Arithmetic::
+* Power Functions and Logarithm::
+* Trigonometric Functions::
+* Miscellaneous Complex Functions::
+* Advanced Functions::
+* Internals::
+
+
+File: mpc.info,  Node: Initializing Complex Numbers,  Next: Assigning Complex Numbers,  Prev: Complex Functions,  Up: Complex Functions
+
+5.1 Initialization Functions
+============================
+
+An `mpc_t' object must be initialized before storing the first value in
+it.  The functions `mpc_init2' and `mpc_init3' are used for that
+purpose.
+
+ -- Function: void mpc_init2 (mpc_t Z, mpfr_prec_t PREC)
+     Initialize Z to precision PREC bits and set its real and imaginary
+     parts to NaN.  Normally, a variable should be initialized once only
+     or at least be cleared, using `mpc_clear', between initializations.
+
+ -- Function: void mpc_init3 (mpc_t Z, mpfr_prec_t PREC_R, mpfr_prec_t
+          PREC_I)
+     Initialize Z with the precision of its real part being PREC_R bits
+     and the precision of its imaginary part being PREC_I bits, and set
+     the real and imaginary parts to NaN.
+
+ -- Function: void mpc_clear (mpc_t Z)
+     Free the space occupied by Z.  Make sure to call this function for
+     all `mpc_t' variables when you are done with them.
+
+   Here is an example on how to initialize complex variables:
+     {
+       mpc_t x, y;
+       mpc_init2 (x, 256);		/* precision _exactly_ 256 bits */
+       mpc_init3 (y, 100, 50);	/* 100/50 bits for the real/imaginary part */
+       ...
+       mpc_clear (x);
+       mpc_clear (y);
+     }
+
+   The following function is useful for changing the precision during a
+calculation.  A typical use would be for adjusting the precision
+gradually in iterative algorithms like Newton-Raphson, making the
+computation precision closely match the actual accurate part of the
+numbers.
+
+ -- Function: void mpc_set_prec (mpc_t X, mpfr_prec_t PREC)
+     Reset the precision of X to be *exactly* PREC bits, and set its
+     real/imaginary parts to NaN.  The previous value stored in X is
+     lost. It is equivalent to a call to `mpc_clear(x)' followed by a
+     call to `mpc_init2(x, prec)', but more efficient as no allocation
+     is done in case the current allocated space for the mantissa of X
+     is sufficient.
+
+ -- Function: mpfr_prec_t mpc_get_prec (mpc_t X)
+     If the real and imaginary part of X have the same precision, it is
+     returned, otherwise, 0 is returned.
+
+ -- Function: void mpc_get_prec2 (mpfr_prec_t* PR, mpfr_prec_t* PI,
+          mpc_t X)
+     Returns the precision of the real part of X via PR and of its
+     imaginary part via PI.
+
+
+File: mpc.info,  Node: Assigning Complex Numbers,  Next: Converting Complex Numbers,  Prev: Initializing Complex Numbers,  Up: Complex Functions
+
+5.2 Assignment Functions
+========================
+
+These functions assign new values to already initialized complex numbers
+(*note Initializing Complex Numbers::).  When using any functions with
+`intmax_t' or `uintmax_t' parameters, you must include `<stdint.h>' or
+`<inttypes.h>' _before_ `mpc.h', to allow `mpc.h' to define prototypes
+for these functions.  Similarly, functions with parameters of type
+`complex' or `long complex' are defined only if `<complex.h>' is
+included _before_ `mpc.h'.  If you need assignment functions that are
+not in the current API, you can define them using the `MPC_SET_X_Y'
+macro (*note Advanced Functions::).
+
+ -- Function: int mpc_set (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set the value of ROP from OP, rounded to the precision of ROP with
+     the given rounding mode RND.
+
+ -- Function: int mpc_set_ui (mpc_t ROP, unsigned long int OP,
+          mpc_rnd_t RND)
+ -- Function: int mpc_set_si (mpc_t ROP, long int OP, mpc_rnd_t RND)
+ -- Function: int mpc_set_uj (mpc_t ROP, uintmax_t OP, mpc_rnd_t RND)
+ -- Function: int mpc_set_sj (mpc_t ROP, intmax_t OP, mpc_rnd_t RND)
+ -- Function: int mpc_set_d (mpc_t ROP, double OP, mpc_rnd_t RND)
+ -- Function: int mpc_set_ld (mpc_t ROP, long double OP, mpc_rnd_t RND)
+ -- Function: int mpc_set_dc (mpc_t ROP, double _Complex OP, mpc_rnd_t
+          RND)
+ -- Function: int mpc_set_ldc (mpc_t ROP, long double _Complex OP,
+          mpc_rnd_t RND)
+ -- Function: int mpc_set_z (mpc_t ROP, mpz_t OP mpc_rnd_t RND)
+ -- Function: int mpc_set_q (mpc_t ROP, mpq_t OP mpc_rnd_t RND)
+ -- Function: int mpc_set_f (mpc_t ROP, mpf_t OP mpc_rnd_t RND)
+ -- Function: int mpc_set_fr (mpc_t ROP, mpfr_t OP, mpc_rnd_t RND)
+     Set the value of ROP from OP, rounded to the precision of ROP with
+     the given rounding mode RND.  The argument OP is interpreted as
+     real, so the imaginary part of ROP is set to zero with a positive
+     sign.  Please note that even a `long int' may have to be rounded,
+     if the destination precision is less than the machine word width.
+     For `mpc_set_d', be careful that the input number OP may not be
+     exactly representable as a double-precision number (this happens
+     for 0.1 for instance), in which case it is first rounded by the C
+     compiler to a double-precision number, and then only to a complex
+     number.
+
+ -- Function: int mpc_set_ui_ui (mpc_t ROP, unsigned long int OP1,
+          unsigned long int OP2, mpc_rnd_t RND)
+ -- Function: int mpc_set_si_si (mpc_t ROP, long int OP1, long int OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_set_uj_uj (mpc_t ROP, uintmax_t OP1, uintmax_t
+          OP2, mpc_rnd_t RND)
+ -- Function: int mpc_set_sj_sj (mpc_t ROP, intmax_t OP1, intmax_t OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_set_d_d (mpc_t ROP, double OP1, double OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_set_ld_ld (mpc_t ROP, long double OP1, long
+          double OP2, mpc_rnd_t RND)
+ -- Function: int mpc_set_z_z (mpc_t ROP, mpz_t OP1, mpz_t OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_set_q_q (mpc_t ROP, mpq_t OP1, mpq_t OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_set_f_f (mpc_t ROP, mpf_t OP1, mpf_t OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_set_fr_fr (mpc_t ROP, mpfr_t OP1, mpfr_t OP2,
+          mpc_rnd_t RND)
+     Set the real part of ROP from OP1, and its imaginary part from
+     OP2, according to the rounding mode RND.
+
+     Beware that the behaviour of `mpc_set_fr_fr' is undefined if OP1
+     or OP2 is a pointer to the real or imaginary part of ROP.  To
+     exchange the real and the imaginary part of a complex number,
+     either use `mpfr_swap (mpc_realref (rop), mpc_imagref (rop))',
+     which also exchanges the precisions of the two parts; or use a
+     temporary variable.
+
+   For functions assigning complex variables from strings or input
+streams, *note String and Stream Input and Output: string-io.
+
+ -- Function: void mpc_set_nan (mpc_t ROP)
+     Set ROP to Nan+i*NaN.
+
+ -- Function: void mpc_swap (mpc_t OP1, mpc_t OP2)
+     Swap the values of OP1 and OP2 efficiently. Warning: The
+     precisions are exchanged, too; in case these are different,
+     `mpc_swap' is thus not equivalent to three `mpc_set' calls using a
+     third auxiliary variable.
+
+
+File: mpc.info,  Node: Converting Complex Numbers,  Next: String and Stream Input and Output,  Prev: Assigning Complex Numbers,  Up: Complex Functions
+
+5.3 Conversion Functions
+========================
+
+The following functions are available only if `<complex.h>' is included
+_before_ `mpc.h'.
+
+ -- Function: double _Complex mpc_get_dc (mpc_t OP, mpc_rnd_t RND)
+ -- Function: long double _Complex mpc_get_ldc (mpc_t OP, mpc_rnd_t RND)
+     Convert OP to a C complex number, using the rounding mode RND.
+
+   For functions converting complex variables to strings or stream
+output, *note String and Stream Input and Output: string-io.
+
+
+File: mpc.info,  Node: String and Stream Input and Output,  Next: Complex Comparison,  Prev: Converting Complex Numbers,  Up: Complex Functions
+
+5.4 String and Stream Input and Output
+======================================
+
+ -- Function: int mpc_strtoc (mpc_t ROP, const char *NPTR, char
+          **ENDPTR, int BASE, mpc_rnd_t RND)
+     Read a complex number from a string NPTR in base BASE, rounded to
+     the precision of ROP with the given rounding mode RND.  The BASE
+     must be either 0 or a number from 2 to 36 (otherwise the behaviour
+     is undefined).  If NPTR starts with valid data, the result is
+     stored in ROP, the usual inexact value is returned (*note Return
+     Value: return-value.) and, if ENDPTR is not the null pointer,
+     *ENDPTR points to the character just after the valid data.
+     Otherwise, ROP is set to `NaN + i * NaN', -1 is returned and, if
+     ENDPTR is not the null pointer, the value of NPTR is stored in the
+     location referenced by ENDPTR.
+
+     The expected form of a complex number string is either a real
+     number (an optional leading whitespace, an optional sign followed
+     by a floating-point number), or a pair of real numbers in
+     parentheses separated by whitespace. If a real number is read, the
+     missing imaginary part is set to +0.  The form of a floating-point
+     number depends on the base and is described in the documentation
+     of `mpfr_strtofr' (*note Assignment Functions:
+     (mpfr.info)Assignment Functions.).  For instance, `"3.1415926"',
+     `"(1.25e+7 +.17)"', `"(@nan@ 2)"' and `"(-0 -7)"' are valid
+     strings for BASE = 10.  If BASE = 0, then a prefix may be used to
+     indicate the base in which the floating-point number is written.
+     Use prefix '0b' for binary numbers, prefix '0x' for hexadecimal
+     numbers, and no prefix for decimal numbers.  The real and
+     imaginary part may then be written in different bases.  For
+     instance, `"(1.024e+3 +2.05e+3)"' and `"(0b1p+10 +0x802)"' are
+     valid strings for `base'=0 and represent the same value.
+
+ -- Function: int mpc_set_str (mpc_t ROP, const char *S, int BASE,
+          mpc_rnd_t rnd)
+     Set ROP to the value of the string S in base BASE, rounded to the
+     precision of ROP with the given rounding mode RND.  See the
+     documentation of `mpc_strtoc' for a detailed description of the
+     valid string formats.  Contrarily to `mpc_strtoc', `mpc_set_str'
+     requires the _whole_ string to represent a valid complex number
+     (potentially followed by additional white space).  This function
+     returns the usual inexact value (*note Return Value:
+     return-value.) if the entire string up to the final null character
+     is a valid number in base BASE; otherwise it returns -1, and ROP
+     is set to NaN+i*NaN.
+
+ -- Function: char * mpc_get_str (int B, size_t N, mpc_t OP, mpc_rnd_t
+          RND)
+     Convert OP to a string containing its real and imaginary parts,
+     separated by a space and enclosed in a pair of parentheses.  The
+     numbers are written in base B (which may vary from 2 to 36) and
+     rounded according to RND. The number of significant digits, at
+     least 2, is given by N. It is also possible to let N be zero, in
+     which case the number of digits is chosen large enough so that
+     re-reading the printed value with the same precision, assuming
+     both output and input use rounding to nearest, will recover the
+     original value of OP.  Note that `mpc_get_str' uses the decimal
+     point of the current locale if available, and `.' otherwise.
+
+     The string is generated using the current memory allocation
+     function (`malloc' by default, unless it has been modified using
+     the custom memory allocation interface of `gmp'); once it is not
+     needed any more, it should be freed by calling `mpc_free_str'.
+
+ -- Function: void mpc_free_str (char *STR)
+     Free the string STR, which needs to have been allocated by a call
+     to `mpc_get_str'.
+
+   The following two functions read numbers from input streams and write
+them to output streams.  When using any of these functions, you need to
+include `stdio.h' _before_ `mpc.h'.
+
+ -- Function: int mpc_inp_str (mpc_t ROP, FILE *STREAM, size_t *READ,
+          int BASE, mpc_rnd_t RND)
+     Input a string in base BASE in the same format as for `mpc_strtoc'
+     from stdio stream STREAM, rounded according to RND, and put the
+     read complex number into ROP.  If STREAM is the null pointer, ROP
+     is read from `stdin'.  Return the usual inexact value; if an error
+     occurs, set ROP to `NaN + i * NaN' and return -1.  If READ is not
+     the null pointer, it is set to the number of read characters.
+
+     Unlike `mpc_strtoc', the function `mpc_inp_str' does not possess
+     perfect knowledge of the string to transform and has to read it
+     character by character, so it behaves slightly differently: It
+     tries to read a string describing a complex number and processes
+     this string through a call to `mpc_set_str'. Precisely, after
+     skipping optional whitespace, a minimal string is read according
+     to the regular expression `mpfr | '(' \s* mpfr \s+ mpfr \s* ')'',
+     where `\s' denotes a whitespace, and `mpfr' is either a string
+     containing neither whitespaces nor parentheses, or
+     `nan(n-char-sequence)' or `@nan@(n-char-sequence)' (regardless of
+     capitalisation) with `n-char-sequence' a string of ascii letters,
+     digits or `'_''.
+
+     For instance, upon input of `"nan(13 1)"', the function
+     `mpc_inp_str' starts to recognise a value of NaN followed by an
+     n-char-sequence indicated by the opening parenthesis; as soon as
+     the space is reached, it becocmes clear that the expression in
+     parentheses is not an n-char-sequence, and the error flag -1 is
+     returned after 6 characters have been consumed from the stream
+     (the whitespace itself remaining in the stream).  The function
+     `mpc_strtoc', on the other hand, may track back when reaching the
+     whitespace; it treats the string as the two successive complex
+     numbers `NaN + i * 0' and `13 + i'.  It is thus recommended to
+     have a whitespace follow each floating point number to avoid this
+     problem.
+
+ -- Function: size_t mpc_out_str (FILE *STREAM, int BASE, size_t
+          N_DIGITS, mpc_t OP, mpc_rnd_t RND)
+     Output OP on stdio stream STREAM in base BASE, rounded according
+     to RND, in the same format as for `mpc_strtoc' If STREAM is the
+     null pointer, ROP is written to `stdout'.
+
+     Return the number of characters written.
+
+
+File: mpc.info,  Node: Complex Comparison,  Next: Projection & Decomposing,  Prev: String and Stream Input and Output,  Up: Complex Functions
+
+5.5 Comparison Functions
+========================
+
+ -- Function: int mpc_cmp (mpc_t OP1, mpc_t OP2)
+ -- Function: int mpc_cmp_si_si (mpc_t OP1, long int OP2R, long int
+          OP2I)
+ -- Macro: int mpc_cmp_si (mpc_t OP1, long int OP2)
+     Compare OP1 and OP2, where in the case of `mpc_cmp_si_si', OP2 is
+     taken to be OP2R + i OP2I.  The return value C can be decomposed
+     into `x = MPC_INEX_RE(c)' and `y = MPC_INEX_IM(c)', such that X is
+     positive if the real part of OP1 is greater than that of OP2, zero
+     if both real parts are equal, and negative if the real part of OP1
+     is less than that of OP2, and likewise for Y.  Both OP1 and OP2
+     are considered to their full own precision, which may differ.  It
+     is not allowed that one of the operands has a NaN (Not-a-Number)
+     part.
+
+     The storage of the return value is such that equality can be
+     simply checked with `mpc_cmp (op1, op2) == 0'.
+
+
+File: mpc.info,  Node: Projection & Decomposing,  Next: Basic Arithmetic,  Prev: Complex Comparison,  Up: Complex Functions
+
+5.6 Projection and Decomposing Functions
+========================================
+
+ -- Function: int mpc_real (mpfr_t ROP, mpc_t OP, mpfr_rnd_t RND)
+     Set ROP to the value of the real part of OP rounded in the
+     direction RND.
+
+ -- Function: int mpc_imag (mpfr_t ROP, mpc_t OP, mpfr_rnd_t RND)
+     Set ROP to the value of the imaginary part of OP rounded in the
+     direction RND.
+
+ -- Macro: mpfr_t mpc_realref (mpc_t OP)
+ -- Macro: mpfr_t mpc_imagref (mpc_t OP)
+     Return a reference to the real part and imaginary part of OP,
+     respectively. The `mpfr' functions can be used on the result of
+     these macros (note that the `mpfr_t' type is itself a pointer).
+
+ -- Function: int mpc_arg (mpfr_t ROP, mpc_t OP, mpfr_rnd_t RND)
+     Set ROP to the argument of OP, with a branch cut along the
+     negative real axis.
+
+ -- Function: int mpc_proj (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Compute a projection of OP onto the Riemann sphere. Set ROP to OP
+     rounded in the direction RND, except when at least one part of OP
+     is infinite (even if the other part is a NaN) in which case the
+     real part of ROP is set to plus infinity and its imaginary part to
+     a signed zero with the same sign as the imaginary part of OP.
+
+
+File: mpc.info,  Node: Basic Arithmetic,  Next: Power Functions and Logarithm,  Prev: Projection & Decomposing,  Up: Complex Functions
+
+5.7 Basic Arithmetic Functions
+==============================
+
+All the following functions are designed in such a way that, when
+working with real numbers instead of complex numbers, their complexity
+should essentially be the same as with the MPFR library, with only a
+marginal overhead due to the MPC layer.
+
+ -- Function: int mpc_add (mpc_t ROP, mpc_t OP1, mpc_t OP2, mpc_rnd_t
+          RND)
+ -- Function: int mpc_add_ui (mpc_t ROP, mpc_t OP1, unsigned long int
+          OP2, mpc_rnd_t RND)
+ -- Function: int mpc_add_fr (mpc_t ROP, mpc_t OP1, mpfr_t OP2,
+          mpc_rnd_t RND)
+     Set ROP to OP1 + OP2 rounded according to RND.
+
+ -- Function: int mpc_sub (mpc_t ROP, mpc_t OP1, mpc_t OP2, mpc_rnd_t
+          RND)
+ -- Function: int mpc_sub_fr (mpc_t ROP, mpc_t OP1, mpfr_t OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_fr_sub (mpc_t ROP, mpfr_t OP1, mpc_t OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_sub_ui (mpc_t ROP, mpc_t OP1, unsigned long int
+          OP2, mpc_rnd_t RND)
+ -- Macro: int mpc_ui_sub (mpc_t ROP, unsigned long int OP1, mpc_t OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_ui_ui_sub (mpc_t ROP, unsigned long int RE1,
+          unsigned long int IM1, mpc_t OP2, mpc_rnd_t RND)
+     Set ROP to OP1 - OP2 rounded according to RND.  For
+     `mpc_ui_ui_sub', OP1 is RE1 + IM1.
+
+ -- Function: int mpc_mul (mpc_t ROP, mpc_t OP1, mpc_t OP2, mpc_rnd_t
+          RND)
+ -- Function: int mpc_mul_ui (mpc_t ROP, mpc_t OP1, unsigned long int
+          OP2, mpc_rnd_t RND)
+ -- Function: int mpc_mul_si (mpc_t ROP, mpc_t OP1, long int OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_mul_fr (mpc_t ROP, mpc_t OP1, mpfr_t OP2,
+          mpc_rnd_t RND)
+     Set ROP to OP1 times OP2 rounded according to RND.
+
+ -- Function: int mpc_mul_i (mpc_t ROP, mpc_t OP, int SGN, mpc_rnd_t
+          RND)
+     Set ROP to OP times the imaginary unit i if SGN is non-negative,
+     set ROP to OP times -i otherwise, in both cases rounded according
+     to RND.
+
+ -- Function: int mpc_sqr (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the square of OP rounded according to RND.
+
+ -- Function: int mpc_div (mpc_t ROP, mpc_t OP1, mpc_t OP2, mpc_rnd_t
+          RND)
+ -- Function: int mpc_div_ui (mpc_t ROP, mpc_t OP1, unsigned long int
+          OP2, mpc_rnd_t RND)
+ -- Function: int mpc_ui_div (mpc_t ROP, unsigned long int OP1, mpc_t
+          OP2, mpc_rnd_t RND)
+ -- Function: int mpc_div_fr (mpc_t ROP, mpc_t OP1, mpfr_t OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_fr_div (mpc_t ROP, mpfr_t OP1, mpc_t OP2,
+          mpc_rnd_t RND)
+     Set ROP to OP1/OP2 rounded according to RND.  For `mpc_div' and
+     `mpc_ui_div', the return value may fail to recognize some exact
+     results. The sign of returned value is significant only for
+     `mpc_div_ui'.
+
+ -- Function: int mpc_neg (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to -OP rounded according to RND.  Just changes the sign if
+     ROP and OP are the same variable.
+
+ -- Function: int mpc_conj (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the conjugate of OP rounded according to RND.  Just
+     changes the sign of the imaginary part if ROP and OP are the same
+     variable.
+
+ -- Function: int mpc_abs (mpfr_t ROP, mpc_t OP, mpfr_rnd_t RND)
+     Set the floating-point number ROP to the absolute value of OP,
+     rounded in the direction RND.  The returned value is zero iff the
+     result is exact.
+
+ -- Function: int mpc_norm (mpfr_t ROP, mpc_t OP, mpfr_rnd_t RND)
+     Set the floating-point number ROP to the norm of OP (i.e., the
+     square of its absolute value), rounded in the direction RND.  The
+     returned value is zero iff the result is exact.  Note that the
+     destination is of type `mpfr_t', not `mpc_t'.
+
+ -- Function: int mpc_mul_2exp (mpc_t ROP, mpc_t OP1, unsigned long int
+          OP2, mpc_rnd_t RND)
+     Set ROP to OP1 times 2 raised to OP2 rounded according to RND.
+     Just increases the exponents of the real and imaginary parts by OP2
+     when ROP and OP1 are identical.
+
+ -- Function: int mpc_div_2exp (mpc_t ROP, mpc_t OP1, unsigned long int
+          OP2, mpc_rnd_t RND)
+     Set ROP to OP1 divided by 2 raised to OP2 rounded according to
+     RND. Just decreases the exponents of the real and imaginary parts
+     by OP2 when ROP and OP1 are identical.
+
+ -- Function: int mpc_fma (mpc_t ROP, mpc_t OP1, mpc_t OP2, mpc_t OP3,
+          mpc_rnd_t RND)
+     Set ROP to OP1 times OP2 plus OP3, rounded according to RND, with
+     only one final rounding.
+
+
+File: mpc.info,  Node: Power Functions and Logarithm,  Next: Trigonometric Functions,  Prev: Basic Arithmetic,  Up: Complex Functions
+
+5.8 Power Functions and Logarithm
+=================================
+
+ -- Function: int mpc_sqrt (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the square root of OP rounded according to RND.
+
+ -- Function: int mpc_pow (mpc_t ROP, mpc_t OP1, mpc_t OP2, mpc_rnd_t
+          RND)
+ -- Function: int mpc_pow_d (mpc_t ROP, mpc_t OP1, double OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_pow_ld (mpc_t ROP, mpc_t OP1, long double OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_pow_si (mpc_t ROP, mpc_t OP1, long OP2, mpc_rnd_t
+          RND)
+ -- Function: int mpc_pow_ui (mpc_t ROP, mpc_t OP1, unsigned long OP2,
+          mpc_rnd_t RND)
+ -- Function: int mpc_pow_z (mpc_t ROP, mpc_t OP1, mpz_t OP2, mpc_rnd_t
+          RND)
+ -- Function: int mpc_pow_fr (mpc_t ROP, mpc_t OP1, mpfr_t OP2,
+          mpc_rnd_t RND)
+     Set ROP to OP1 raised to the power OP2, rounded according to RND.
+     For `mpc_pow_d', `mpc_pow_ld', `mpc_pow_si', `mpc_pow_ui',
+     `mpc_pow_z' and `mpc_pow_fr', the imaginary part of OP2 is
+     considered as +0.
+
+ -- Function: int mpc_exp (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the exponential of OP, rounded according to RND with
+     the precision of ROP.
+
+ -- Function: int mpc_log (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the logarithm of OP, rounded according to RND with the
+     precision of ROP.  The principal branch is chosen, with the branch
+     cut on the negative real axis, so that the imaginary part of the
+     result lies in ]-\pi , \pi].
+
+
+File: mpc.info,  Node: Trigonometric Functions,  Next: Miscellaneous Complex Functions,  Prev: Power Functions and Logarithm,  Up: Complex Functions
+
+5.9 Trigonometric Functions
+===========================
+
+ -- Function: int mpc_sin (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the sine of OP, rounded according to RND with the
+     precision of ROP.
+
+ -- Function: int mpc_cos (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the cosine of OP, rounded according to RND with the
+     precision of ROP.
+
+ -- Function: int mpc_sin_cos (mpc_t ROP_SIN, mpc_t ROP_COS, mpc_t OP,
+          mpc_rnd_t RND_SIN, mpc_rnd_t RND_COS)
+     Set ROP_SIN to the sine of OP, rounded according to RND_SIN with
+     the precision of ROP_SIN, and ROP_COS to the cosine of OP, rounded
+     according to RND_COS with the precision of ROP_COS.
+
+ -- Function: int mpc_tan (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the tangent of OP, rounded according to RND with the
+     precision of ROP.
+
+ -- Function: int mpc_sinh (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the hyperbolic sine of OP, rounded according to RND
+     with the precision of ROP.
+
+ -- Function: int mpc_cosh (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the hyperbolic cosine of OP, rounded according to RND
+     with the precision of ROP.
+
+ -- Function: int mpc_tanh (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the hyperbolic tangent of OP, rounded according to RND
+     with the precision of ROP.
+
+ -- Function: int mpc_asin (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+ -- Function: int mpc_acos (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+ -- Function: int mpc_atan (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the inverse sine, inverse cosine, inverse tangent of OP,
+     rounded according to RND with the precision of ROP.
+
+ -- Function: int mpc_asinh (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+ -- Function: int mpc_acosh (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+ -- Function: int mpc_atanh (mpc_t ROP, mpc_t OP, mpc_rnd_t RND)
+     Set ROP to the inverse hyperbolic sine, inverse hyperbolic cosine,
+     inverse hyperbolic tangent of OP, rounded according to RND with
+     the precision of ROP.  The branch cut of MPC_ACOSH is (-\infty, 1).
+
+
+File: mpc.info,  Node: Miscellaneous Complex Functions,  Next: Advanced Functions,  Prev: Trigonometric Functions,  Up: Complex Functions
+
+5.10 Miscellaneous Functions
+============================
+
+ -- Function: int mpc_urandom (mpc_t ROP, gmp_randstate_t STATE)
+     Generate a uniformly distributed random complex in the unit square
+     [0, 1] * [0, 1]. Return 0, unless an exponent in the real or
+     imaginary part is not in the current exponent range, in which case
+     that part is set to NaN and a zero value is returned. The second
+     argument is a `gmp_randstate_t' structure which should be created
+     using the GMP `rand_init' function, see the GMP manual.
+
+ -- Function: const char * mpc_get_version (void)
+     Return the MPC version, as a null-terminated string.
+
+ -- Macro: MPC_VERSION
+ -- Macro: MPC_VERSION_MAJOR
+ -- Macro: MPC_VERSION_MINOR
+ -- Macro: MPC_VERSION_PATCHLEVEL
+ -- Macro: MPC_VERSION_STRING
+     `MPC_VERSION' is the version of MPC as a preprocessing constant.
+     `MPC_VERSION_MAJOR', `MPC_VERSION_MINOR' and
+     `MPC_VERSION_PATCHLEVEL' are respectively the major, minor and
+     patch level of MPC version, as preprocessing constants.
+     `MPC_VERSION_STRING' is the version as a string constant, which
+     can be compared to the result of `mpc_get_version' to check at run
+     time the header file and library used match:
+          if (strcmp (mpc_get_version (), MPC_VERSION_STRING))
+            fprintf (stderr, "Warning: header and library do not match\n");
+     Note: Obtaining different strings is not necessarily an error, as
+     in general, a program compiled with some old MPC version can be
+     dynamically linked with a newer MPC library version (if allowed by
+     the library versioning system).
+
+ -- Macro: long MPC_VERSION_NUM (MAJOR, MINOR, PATCHLEVEL)
+     Create an integer in the same format as used by `MPC_VERSION' from
+     the given MAJOR, MINOR and PATCHLEVEL.  Here is an example of how
+     to check the MPC version at compile time:
+          #if (!defined(MPC_VERSION) || (MPC_VERSION<MPC_VERSION_NUM(2,1,0)))
+          # error "Wrong MPC version."
+          #endif
+
+
+File: mpc.info,  Node: Advanced Functions,  Next: Internals,  Prev: Miscellaneous Complex Functions,  Up: Complex Functions
+
+5.11 Advanced Functions
+=======================
+
+ -- Macro: MPC_SET_X_Y (REAL_SUFFIX, IMAG_SUFFIX, ROP, REAL, IMAG, RND)
+     The macro MPC_SET_X_Y is designed to serve as the body of an
+     assignment function and cannot be used by itself.  The REAL_SUFFIX
+     and IMAG_SUFFIX parameters are the types of the real and imaginary
+     part, that is, the `x' in the `mpfr_set_x' function one would use
+     to set the part; for the mpfr type, use `fr'.  REAL (respectively
+     IMAG) is the value you want to assign to the real (resp.
+     imaginary) part, its type must conform to REAL_SUFFIX (resp.
+     IMAG_SUFFIX).  RND is the `mpc_rnd_t' rounding mode.  The return
+     value is the usual inexact value (*note Return Value:
+     return-value.).
+
+     For instance, you can define mpc_set_ui_fr as follows:
+          int mpc_set_ui_fr (mpc_t rop, long int re, double im, mpc_rnd_t rnd)
+              MPC_SET_X_Y (ui, fr, rop, re, im, rnd);
+
+
+File: mpc.info,  Node: Internals,  Prev: Advanced Functions,  Up: Complex Functions
+
+5.12 Internals
+==============
+
+These macros and functions are mainly designed for the implementation
+of MPC, but may be useful for users too.  However, no upward
+compatibility is guaranteed.  You need to include `mpc-impl.h' to use
+them.
+
+   The macro `MPC_MAX_PREC(z)' gives the maximum of the precisions of
+the real and imaginary parts of a complex number.
+
+
+File: mpc.info,  Node: Contributors,  Next: References,  Prev: Complex Functions,  Up: Top
+
+Contributors
+************
+
+The main developers of the MPC library are Andreas Enge, Philippe
+The'veny and Paul Zimmermann.  Patrick Pe'lissier has helped cleaning
+up the code.  Marc Helbling contributed the `mpc_ui_sub' and
+`mpc_ui_ui_sub' functions.
+
+
+File: mpc.info,  Node: References,  Next: Concept Index,  Prev: Contributors,  Up: Top
+
+References
+**********
+
+   * Torbjo"rn Granlund et al.  `gmp' - GNU multiprecision library.
+     Version 4.2.4, `http://gmplib.org/'.
+
+   * Guillaume Hanrot, Vincent Lefe`vre, Patrick Pe'lissier, Paul
+     Zimmermann et al.  `mpfr' - A library for multiple-precision
+     floating-point               computations with exact rounding.
+     Version 2.4.1, `http://www.mpfr.org'.
+
+   * IEEE standard for binary floating-point arithmetic, Technical
+     Report ANSI-IEEE Standard 754-1985, New York, 1985.  Approved
+     March 21, 1985: IEEE Standards Board; approved July 26,   1985:
+     American National Standards Institute, 18 pages.
+
+   * Donald E. Knuth, "The Art of Computer Programming", vol 2,
+     "Seminumerical Algorithms", 2nd edition, Addison-Wesley, 1981.
+
+   * ISO/IEC 9899:1999, Programming languages — C.
+
+
+
+File: mpc.info,  Node: Concept Index,  Next: Function Index,  Prev: References,  Up: Top
+
+Concept Index
+*************
+
+ [index ]
+* Menu:
+
+* Arithmetic functions:                  Basic Arithmetic.     (line  6)
+* Comparison functions:                  Complex Comparison.   (line  3)
+* Complex arithmetic functions:          Basic Arithmetic.     (line  6)
+* Complex assignment functions:          Assigning Complex Numbers.
+                                                               (line  6)
+* Complex comparisons functions:         Complex Comparison.   (line  3)
+* Complex functions:                     Complex Functions.    (line  6)
+* Complex number:                        MPC Basics.           (line 15)
+* Conditions for copying MPC:            Copying.              (line  6)
+* Conversion functions:                  Converting Complex Numbers.
+                                                               (line  6)
+* Copying conditions:                    Copying.              (line  6)
+* Installation:                          Installing MPC.       (line  6)
+* Logarithm:                             Power Functions and Logarithm.
+                                                               (line  6)
+* Miscellaneous complex functions:       Miscellaneous Complex Functions.
+                                                               (line  6)
+* mpc.h:                                 MPC Basics.           (line  6)
+* Power functions:                       Power Functions and Logarithm.
+                                                               (line  6)
+* Precision:                             MPC Basics.           (line 19)
+* Projection and Decomposing Functions:  Projection & Decomposing.
+                                                               (line  6)
+* Reporting bugs:                        Reporting Bugs.       (line  6)
+* Rounding Mode:                         MPC Basics.           (line 24)
+* String and stream input and output:    String and Stream Input and Output.
+                                                               (line  3)
+* Trigonometric functions:               Trigonometric Functions.
+                                                               (line  6)
+* User-defined precision:                Complex Functions.    (line 12)
+
+
+File: mpc.info,  Node: Function Index,  Prev: Concept Index,  Up: Top
+
+Function and Type Index
+***********************
+
+ [index ]
+* Menu:
+
+* _Complex:                              Converting Complex Numbers.
+                                                              (line  10)
+* mpc_abs:                               Basic Arithmetic.    (line  78)
+* mpc_acos:                              Trigonometric Functions.
+                                                              (line  38)
+* mpc_acosh:                             Trigonometric Functions.
+                                                              (line  44)
+* mpc_add:                               Basic Arithmetic.    (line  13)
+* mpc_add_fr:                            Basic Arithmetic.    (line  17)
+* mpc_add_ui:                            Basic Arithmetic.    (line  15)
+* mpc_arg:                               Projection & Decomposing.
+                                                              (line  21)
+* mpc_asin:                              Trigonometric Functions.
+                                                              (line  37)
+* mpc_asinh:                             Trigonometric Functions.
+                                                              (line  43)
+* mpc_atan:                              Trigonometric Functions.
+                                                              (line  39)
+* mpc_atanh:                             Trigonometric Functions.
+                                                              (line  45)
+* mpc_clear:                             Initializing Complex Numbers.
+                                                              (line  22)
+* mpc_cmp:                               Complex Comparison.  (line   7)
+* mpc_cmp_si:                            Complex Comparison.  (line  10)
+* mpc_cmp_si_si:                         Complex Comparison.  (line   9)
+* mpc_conj:                              Basic Arithmetic.    (line  73)
+* mpc_cos:                               Trigonometric Functions.
+                                                              (line  11)
+* mpc_cosh:                              Trigonometric Functions.
+                                                              (line  29)
+* mpc_div:                               Basic Arithmetic.    (line  55)
+* mpc_div_2exp:                          Basic Arithmetic.    (line  96)
+* mpc_div_fr:                            Basic Arithmetic.    (line  61)
+* mpc_div_ui:                            Basic Arithmetic.    (line  57)
+* mpc_exp:                               Power Functions and Logarithm.
+                                                              (line  29)
+* mpc_fma:                               Basic Arithmetic.    (line 102)
+* mpc_fr_div:                            Basic Arithmetic.    (line  63)
+* mpc_fr_sub:                            Basic Arithmetic.    (line  25)
+* mpc_free_str:                          String and Stream Input and Output.
+                                                              (line  68)
+* mpc_get_ldc:                           Converting Complex Numbers.
+                                                              (line  11)
+* mpc_get_prec:                          Initializing Complex Numbers.
+                                                              (line  50)
+* mpc_get_prec2:                         Initializing Complex Numbers.
+                                                              (line  55)
+* mpc_get_str:                           String and Stream Input and Output.
+                                                              (line  51)
+* mpc_get_version:                       Miscellaneous Complex Functions.
+                                                              (line  15)
+* mpc_imag:                              Projection & Decomposing.
+                                                              (line  11)
+* mpc_imagref:                           Projection & Decomposing.
+                                                              (line  16)
+* mpc_init2:                             Initializing Complex Numbers.
+                                                              (line  11)
+* mpc_init3:                             Initializing Complex Numbers.
+                                                              (line  17)
+* mpc_inp_str:                           String and Stream Input and Output.
+                                                              (line  77)
+* mpc_log:                               Power Functions and Logarithm.
+                                                              (line  33)
+* mpc_mul:                               Basic Arithmetic.    (line  36)
+* mpc_mul_2exp:                          Basic Arithmetic.    (line  90)
+* mpc_mul_fr:                            Basic Arithmetic.    (line  42)
+* mpc_mul_i:                             Basic Arithmetic.    (line  46)
+* mpc_mul_si:                            Basic Arithmetic.    (line  40)
+* mpc_mul_ui:                            Basic Arithmetic.    (line  38)
+* mpc_neg:                               Basic Arithmetic.    (line  69)
+* mpc_norm:                              Basic Arithmetic.    (line  83)
+* mpc_out_str:                           String and Stream Input and Output.
+                                                              (line 112)
+* mpc_pow:                               Power Functions and Logarithm.
+                                                              (line  11)
+* mpc_pow_d:                             Power Functions and Logarithm.
+                                                              (line  13)
+* mpc_pow_fr:                            Power Functions and Logarithm.
+                                                              (line  23)
+* mpc_pow_ld:                            Power Functions and Logarithm.
+                                                              (line  15)
+* mpc_pow_si:                            Power Functions and Logarithm.
+                                                              (line  17)
+* mpc_pow_ui:                            Power Functions and Logarithm.
+                                                              (line  19)
+* mpc_pow_z:                             Power Functions and Logarithm.
+                                                              (line  21)
+* mpc_proj:                              Projection & Decomposing.
+                                                              (line  25)
+* mpc_real:                              Projection & Decomposing.
+                                                              (line   7)
+* mpc_realref:                           Projection & Decomposing.
+                                                              (line  15)
+* mpc_rnd_t:                             MPC Basics.          (line  24)
+* mpc_set:                               Assigning Complex Numbers.
+                                                              (line  17)
+* mpc_set_d:                             Assigning Complex Numbers.
+                                                              (line  26)
+* mpc_set_d_d:                           Assigning Complex Numbers.
+                                                              (line  56)
+* mpc_set_dc:                            Assigning Complex Numbers.
+                                                              (line  29)
+* mpc_set_f:                             Assigning Complex Numbers.
+                                                              (line  34)
+* mpc_set_f_f:                           Assigning Complex Numbers.
+                                                              (line  64)
+* mpc_set_fr:                            Assigning Complex Numbers.
+                                                              (line  35)
+* mpc_set_fr_fr:                         Assigning Complex Numbers.
+                                                              (line  66)
+* mpc_set_ld:                            Assigning Complex Numbers.
+                                                              (line  27)
+* mpc_set_ld_ld:                         Assigning Complex Numbers.
+                                                              (line  58)
+* mpc_set_ldc:                           Assigning Complex Numbers.
+                                                              (line  31)
+* mpc_set_nan:                           Assigning Complex Numbers.
+                                                              (line  80)
+* mpc_set_prec:                          Initializing Complex Numbers.
+                                                              (line  42)
+* mpc_set_q:                             Assigning Complex Numbers.
+                                                              (line  33)
+* mpc_set_q_q:                           Assigning Complex Numbers.
+                                                              (line  62)
+* mpc_set_si:                            Assigning Complex Numbers.
+                                                              (line  23)
+* mpc_set_si_si:                         Assigning Complex Numbers.
+                                                              (line  50)
+* mpc_set_sj:                            Assigning Complex Numbers.
+                                                              (line  25)
+* mpc_set_sj_sj:                         Assigning Complex Numbers.
+                                                              (line  54)
+* mpc_set_str:                           String and Stream Input and Output.
+                                                              (line  38)
+* mpc_set_ui:                            Assigning Complex Numbers.
+                                                              (line  22)
+* mpc_set_ui_ui:                         Assigning Complex Numbers.
+                                                              (line  48)
+* mpc_set_uj:                            Assigning Complex Numbers.
+                                                              (line  24)
+* mpc_set_uj_uj:                         Assigning Complex Numbers.
+                                                              (line  52)
+* MPC_SET_X_Y:                           Advanced Functions.  (line   7)
+* mpc_set_z:                             Assigning Complex Numbers.
+                                                              (line  32)
+* mpc_set_z_z:                           Assigning Complex Numbers.
+                                                              (line  60)
+* mpc_sin:                               Trigonometric Functions.
+                                                              (line   7)
+* mpc_sin_cos:                           Trigonometric Functions.
+                                                              (line  16)
+* mpc_sinh:                              Trigonometric Functions.
+                                                              (line  25)
+* mpc_sqr:                               Basic Arithmetic.    (line  51)
+* mpc_sqrt:                              Power Functions and Logarithm.
+                                                              (line   7)
+* mpc_strtoc:                            String and Stream Input and Output.
+                                                              (line   8)
+* mpc_sub:                               Basic Arithmetic.    (line  21)
+* mpc_sub_fr:                            Basic Arithmetic.    (line  23)
+* mpc_sub_ui:                            Basic Arithmetic.    (line  27)
+* mpc_swap:                              Assigning Complex Numbers.
+                                                              (line  83)
+* mpc_t:                                 MPC Basics.          (line  15)
+* mpc_tan:                               Trigonometric Functions.
+                                                              (line  21)
+* mpc_tanh:                              Trigonometric Functions.
+                                                              (line  33)
+* mpc_ui_div:                            Basic Arithmetic.    (line  59)
+* mpc_ui_sub:                            Basic Arithmetic.    (line  29)
+* mpc_ui_ui_sub:                         Basic Arithmetic.    (line  31)
+* mpc_urandom:                           Miscellaneous Complex Functions.
+                                                              (line   7)
+* MPC_VERSION:                           Miscellaneous Complex Functions.
+                                                              (line  18)
+* MPC_VERSION_MAJOR:                     Miscellaneous Complex Functions.
+                                                              (line  19)
+* MPC_VERSION_MINOR:                     Miscellaneous Complex Functions.
+                                                              (line  20)
+* MPC_VERSION_NUM:                       Miscellaneous Complex Functions.
+                                                              (line  37)
+* MPC_VERSION_PATCHLEVEL:                Miscellaneous Complex Functions.
+                                                              (line  21)
+* MPC_VERSION_STRING:                    Miscellaneous Complex Functions.
+                                                              (line  22)
+* mpfr_prec_t:                           MPC Basics.          (line  19)
+
+
+
+Tag Table:
+Node: Top946
+Node: Copying1607
+Node: Introduction to MPC2265
+Node: Installing MPC2973
+Node: Reporting Bugs7632
+Node: MPC Basics8961
+Ref: return-value12611
+Node: Complex Functions14053
+Node: Initializing Complex Numbers15202
+Node: Assigning Complex Numbers17616
+Node: Converting Complex Numbers22024
+Node: String and Stream Input and Output22658
+Ref: string-io22805
+Node: Complex Comparison29237
+Node: Projection & Decomposing30316
+Node: Basic Arithmetic31691
+Node: Power Functions and Logarithm36331
+Node: Trigonometric Functions37986
+Node: Miscellaneous Complex Functions40211
+Node: Advanced Functions42356
+Node: Internals43429
+Node: Contributors43876
+Node: References44222
+Node: Concept Index45136
+Node: Function Index47450
+
+End Tag Table
diff --git a/mpc/doc/mpc.texi b/mpc/doc/mpc.texi
new file mode 100644
index 0000000..b874b8c
--- /dev/null
+++ b/mpc/doc/mpc.texi
@@ -0,0 +1,1223 @@
+\input texinfo
+@ignore
+Copyright (C) INRIA, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA.
+@end ignore
+
+@ignore
+A recent version of makeinfo is required: at least version 4.2, where copying
+was introduced.
+@end ignore
+
+@setfilename mpc.info
+@settitle MPC @value{VERSION}
+@synindex tp fn
+@iftex
+@afourpaper
+@end iftex
+
+@include version.texi
+@set MINGMP 4.3.2
+@set MINMPFR 2.4.2
+
+@set AUTHORS INRIA
+@set COPYRIGHTDATES 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011
+@ifinfo
+@format
+START-INFO-DIR-ENTRY
+* mpc: (mpc.info).               Multiple Precision Complex Library.
+END-INFO-DIR-ENTRY
+@end format
+@end ifinfo
+
+@iftex
+@finalout
+@end iftex
+
+
+@copying
+@ifinfo
+This is the manual for MPC, a library for multiple precision complex arithmetic,
+version @value{VERSION}, of @value{UPDATED-MONTH}.
+@end ifinfo
+
+@sp 1
+
+Copyright (C) @value{COPYRIGHTDATES} @value{AUTHORS}
+
+@sp 2
+
+Permission is granted to make and distribute verbatim copies of
+this manual provided the copyright notice and this permission notice
+are preserved on all copies.
+
+Permission is granted to copy and distribute modified versions of this
+manual under the conditions for verbatim copying, provided that the entire
+resulting derived work is distributed under the terms of a permission
+notice identical to this one.
+
+Permission is granted to copy and distribute translations of this manual
+into another language, under the above conditions for modified versions.
+@end copying
+
+@setchapternewpage on
+@titlepage
+
+@title MPC
+@subtitle The Multiple Precision Complex Library
+@subtitle Edition @value{VERSION}
+@subtitle @value{UPDATED-MONTH}
+
+@author @value{AUTHORS}
+
+@tex
+\global\parindent=0pt
+\global\parskip=8pt
+\global\baselineskip=13pt
+@end tex
+
+@page
+@vskip 0pt plus 1filll
+@insertcopying
+@end titlepage
+@headings double
+
+@ifnottex
+@node Top, Copying, (dir), (dir)
+
+@top MPC
+
+This manual documents how to install and use the Multiple Precision
+Complex Library, version @value{VERSION}
+@end ifnottex
+
+@menu
+* Copying::                     MPC Copying Conditions (LGPL).
+* Introduction to MPC::         Brief introduction to MPC.
+* Installing MPC::              How to configure and compile the MPC library.
+* Reporting Bugs::              How to usefully report bugs.
+* MPC Basics::                  What every MPC user should know.
+* Complex Functions::           Functions for arithmetic on complex numbers.
+* Contributors::
+* References::
+* Concept Index::
+* Function Index::
+@end menu
+
+@c  @times{} made available as a "*" in info and html (already works in tex).
+@ifnottex
+@macro times
+*
+@end macro
+@end ifnottex
+
+@node Copying, Introduction to MPC, Top, Top
+@comment  node-name, next, previous,  up
+@unnumbered MPC Copying Conditions
+@cindex Copying conditions
+@cindex Conditions for copying MPC
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version, see the file COPYING.LIB.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+@node Introduction to MPC, Installing MPC, Copying, Top
+@comment  node-name,  next,  previous,  up
+@chapter Introduction to MPC
+
+
+MPC is a portable library written in C for arbitrary precision arithmetic
+on complex numbers providing correct rounding. Ultimately, it
+should implement a multiprecision equivalent of the C99 standard.
+It builds upon the GNU MP and the GNU MPFR libraries.
+
+@section How to use this Manual
+
+Everyone should read @ref{MPC Basics}.  If you need to install the library
+yourself, you need to read @ref{Installing MPC}, too.
+
+The remainder of the manual can be used for later reference, although it is
+probably a good idea to skim through it.
+
+@node Installing MPC, Reporting Bugs, Introduction to MPC, Top
+@comment  node-name,  next,  previous,  up
+@chapter Installing MPC
+@cindex Installation
+
+To build MPC, you first have to install GNU MP (version @value{MINGMP} or higher) and
+GNU MPFR (version @value{MINMPFR} or higher) on your computer.  You need a C compiler,
+preferably GCC, but any reasonable compiler should work. And you need a
+standard Unix @samp{make} program, plus some other standard Unix utility
+programs.
+
+Here are the steps needed to install the library on Unix systems:
+
+@enumerate
+@item
+@samp{tar xzf mpc-@value{VERSION}.tar.gz}
+
+@item
+@samp{cd mpc-@value{VERSION}}
+
+@item
+@samp{./configure}
+
+if GMP and MPFR are installed into standard directories, that is, directories
+that are searched by default by the compiler and the linking tools.
+
+@samp{./configure --with-gmp=<gmp_install_dir>}
+
+is used to indicate a different location where GMP is
+installed. Alternatively, you can specify directly GMP include and GMP lib
+directories with @samp{./configure --with-gmp-lib=<gmp_lib_dir>
+--with-gmp-include=<gmp_include_dir>}.
+
+@samp{./configure --with-mpfr=<mpfr_install_dir>}
+
+is used to indicate a different location where MPFR is
+installed. Alternatively, you can specify directly MPFR include and MPFR lib
+directories with @samp{./configure --with-mpf-lib=<mpfr_lib_dir>
+--with-mpfr-include=<mpfr_include_dir>}.
+
+Another useful parameter is @samp{--prefix}, which can be used to
+specify an alternative installation location instead of
+@file{/usr/local}; see @samp{make install} below.
+
+If for debugging purposes you wish to log calls to MPC functions from
+within your code, add the parameter @samp{--enable-logging}.
+In your code, replace the inclusion of @file{mpc.h} by @file{mpc-log.h}
+and link the executable dynamically.
+Then all calls to functions with only complex arguments are printed to
+@file{stderr} in the following form: First, the function name is given,
+followed by its type such as @samp{c_cc}, meaning that the function has
+one complex result (one @samp{c} in front of the @samp{_}), computed from
+two complex arguments (two @samp{c} after the @samp{_}). Then, the
+precisions of the real and the imaginary part of the first result is given,
+followed by the second one and so on. Finally, for each argument, the
+precisions of its real and imaginary part are specified and the argument
+itself is printed in hexadecimal via the function
+@code{mpc_out_str}
+(@pxref{string-io,,String and Stream Input and Output}).
+
+Use @samp{./configure --help} for an exhaustive list of parameters.
+
+@item
+@samp{make}
+
+This compiles MPC in the working directory.
+
+@item
+@samp{make check}
+
+This will make sure MPC was built correctly.
+
+If you get error messages, please report them to
+@samp{mpc-discuss@@lists.gforge.inria.fr} (@xref{Reporting Bugs}, for
+information on what to include in useful bug reports).
+
+@item
+@samp{make install}
+
+This will copy the file @file{mpc.h} to the directory
+@file{/usr/local/include}, the file @file{libmpc.a} to the directory
+@file{/usr/local/lib}, and the file @file{mpc.info} to the directory
+@file{/usr/local/share/info} (or if you passed the @samp{--prefix} option to
+@file{configure}, using the prefix directory given as argument to
+@samp{--prefix} instead of @file{/usr/local}). Note: you need write permissions
+on these directories.
+
+@end enumerate
+
+
+@section Other `make' Targets
+
+There are some other useful make targets:
+
+@itemize @bullet
+@item
+@samp{info}
+
+Create an info version of the manual, in @file{mpc.info}.
+
+@item
+@samp{pdf}
+
+Create a PDF version of the manual, in @file{doc/mpc.pdf}.
+
+@item
+@samp{dvi}
+
+Create a DVI version of the manual, in @file{doc/mpc.dvi}.
+
+@item
+@samp{ps}
+
+Create a Postscript version of the manual, in @file{doc/mpc.ps}.
+
+@item
+@samp{html}
+
+Create an HTML version of the manual, in several pages in the
+directory @file{doc/mpc.html}; if you want only one output HTML file,
+then type @samp{makeinfo --html --no-split mpc.texi} instead.
+
+@item
+@samp{clean}
+
+Delete all object files and archive files, but not the configuration files.
+
+@item
+@samp{distclean}
+
+Delete all files not included in the distribution.
+
+@item
+@samp{uninstall}
+
+Delete all files copied by @samp{make install}.
+@end itemize
+
+
+
+@section Known Build Problems
+
+On AIX, if GMP was built with the 64-bit ABI, before building and testing MPC,
+it might be necessary to set the @samp{OBJECT_MODE} environment variable to 64
+by, e.g.,
+
+@samp{export OBJECT_MODE=64}
+
+This has been tested with the C compiler IBM XL C/C++ Enterprise Edition
+V8.0 for AIX, version: 08.00.0000.0021, GMP 4.2.4 and MPFR 2.4.1.
+
+Please report any other problems you encounter to
+@samp{mpc-discuss@@lists.gforge.inria.fr}.
+@xref{Reporting Bugs}.
+
+@node Reporting Bugs, MPC Basics, Installing MPC, Top
+@comment  node-name,  next,  previous,  up
+@chapter Reporting Bugs
+@cindex Reporting bugs
+
+If you think you have found a bug in the MPC library,
+please investigate
+and report it. We have made this library available to you, and it is not to ask
+too much from you, to ask you to report the bugs that you find.
+
+There are a few things you should think about when you put your bug report
+together.
+
+You have to send us a test case that makes it possible for us to reproduce the
+bug.  Include instructions on how to run the test case.
+
+You also have to explain what is wrong; if you get a crash, or if the results
+printed are incorrect and in that case, in what way.
+
+Please include compiler version information in your bug report.
+This can be extracted using @samp{gcc -v},
+or @samp{cc -V} on some machines.
+Also, include the output from @samp{uname -a}.
+
+If your bug report is good, we will do our best to help you to get a corrected
+version of the library; if the bug report is poor, we will not do anything about
+it (aside of chiding you to send better bug reports).
+
+Send your bug report to: @samp{mpc-discuss@@lists.gforge.inria.fr}.
+
+If you think something in this manual is unclear, or downright incorrect, or if
+the language needs to be improved, please send a note to the same address.
+
+@node MPC Basics, Complex Functions, Reporting Bugs, Top
+@comment  node-name,  next,  previous,  up
+@chapter MPC Basics
+
+
+@cindex @file{mpc.h}
+All declarations needed to use MPC are collected in the include file
+@file{mpc.h}.  It is designed to work with both C and C++ compilers.
+You should include that file in any program using the MPC library
+by adding the line
+@example
+   #include "mpc.h"
+@end example
+
+@section Nomenclature and Types
+
+@cindex Complex number
+@tindex @code{mpc_t}
+@noindent
+@dfn{Complex number} or @dfn{Complex} for short, is a pair of two
+arbitrary precision floating-point numbers (for the real and imaginary parts).
+The C data type for such objects is @code{mpc_t}.
+
+@cindex Precision
+@tindex @code{mpfr_prec_t}
+@noindent
+The @dfn{Precision} is the number of bits used to represent the mantissa
+of the real and imaginary parts;
+the corresponding C data type is @code{mpfr_prec_t}.
+For more details on the allowed precision range,
+@ifinfo
+@pxref{Nomenclature and Types,,, mpfr.info,MPFR}.
+@end ifinfo
+@ifnotinfo
+see Section ``Nomenclature and Types'' in @cite{MPFR}.
+@end ifnotinfo
+
+@cindex Rounding Mode
+@tindex @code{mpc_rnd_t}
+@noindent
+The @dfn{rounding mode} specifies the way to round the result of a
+complex operation, in case the exact result can not be represented
+exactly in the destination mantissa;
+the corresponding C data type is @code{mpc_rnd_t}.
+A complex rounding mode is a pair of two rounding modes: one for the real
+part, one for the imaginary part.
+
+@section Function Classes
+
+There is only one class of functions in the MPC library, namely functions for
+complex arithmetic. The function names begin with @code{mpc_}. The
+associated type is @code{mpc_t}.
+
+
+@section MPC Variable Conventions
+
+As a general rule, all MPC functions expect output arguments before input
+arguments.  This notation is based on an analogy with the assignment operator.
+
+MPC allows you to use the same variable for both input and output in the same
+expression.  For example, the main function for floating-point multiplication,
+@code{mpc_mul}, can be used like this: @code{mpc_mul (x, x, x, rnd_mode)}.
+This
+computes the square of @var{x} with rounding mode @code{rnd_mode}
+and puts the result back in @var{x}.
+
+Before you can assign to an MPC variable, you need to initialize it by calling
+one of the special initialization functions.  When you are done with a
+variable, you need to clear it out, using one of the functions for that
+purpose.
+
+A variable should only be initialized once, or at least cleared out between
+each initialization.  After a variable has been initialized, it may be
+assigned to any number of times.
+
+For efficiency reasons, avoid to initialize and clear out a variable in loops.
+Instead, initialize it before entering the loop, and clear it out after the
+loop has exited.
+
+You do not need to be concerned about allocating additional space for MPC
+variables, since each of its real and imaginary part
+has a mantissa of fixed size.
+Hence unless you change its precision, or clear and reinitialize it,
+a complex variable will have the same allocated space during all its
+life.
+
+
+@section Rounding Modes
+
+A complex rounding mode is of the form @code{MPC_RNDxy} where
+@code{x} and @code{y} are one of @code{N} (to nearest), @code{Z} (towards
+zero), @code{U} (towards plus infinity), @code{D} (towards minus infinity).
+The first letter refers to the rounding mode for the real part,
+and the second one for the imaginary part.
+For example @code{MPC_RNDZU} indicates to round the real part towards zero,
+and the imaginary part towards plus infinity.
+
+The @samp{round to nearest} mode works as in the IEEE P754 standard: in case
+the number to be rounded lies exactly in the middle of two representable
+numbers, it is rounded to the one with the least significant bit set to zero.
+For example, the number 5, which is represented by (101) in binary, is rounded
+to (100)=4 with a precision of two bits, and not to (110)=6.
+
+
+@anchor{return-value}
+@section Return Value
+
+Most MPC functions have a return value of type @code{int}, which is used
+to indicate the position of the rounded real and imaginary parts with respect
+to the exact (infinite precision) values.
+If this integer is @code{i}, the macros @code{MPC_INEX_RE(i)} and
+@code{MPC_INEX_IM(i)} give 0 if the corresponding rounded value is exact,
+a negative value if the rounded value is less than the exact one,
+and a positive value if it is greater than the exact one.
+Similarly, functions computing a result of type @code{mpfr_t}
+return an integer that is 0, positive or negative depending on
+whether the rounded value is the same, larger or smaller then
+the exact result.
+
+Some functions, such as @code{mpc_sin_cos}, compute two complex results;
+the macros @code{MPC_INEX1(i)} and @code{MPC_INEX2(i)}, applied to
+the return value @code{i} of such a function, yield the exactness value
+corresponding to the first or the second computed value, respectively.
+
+
+@section Branch Cuts And Special Values
+
+Some complex functions have branch cuts, across which the function is
+discontinous. In MPC, the branch cuts chosen are the same as those
+specified for the corresponding functions in the ISO C99 standard.
+
+Likewise, when evaluated at a point whose real or imaginary part is
+either infinite or a NaN or a signed zero, a function returns the same
+value as those specified for the corresponding function in the ISO C99
+standard.
+
+
+@node Complex Functions, Contributors, MPC Basics, Top
+@comment  node-name,  next,  previous,  up
+@chapter Complex Functions
+@cindex Complex functions
+
+The complex functions expect arguments of type @code{mpc_t}.
+
+The MPC floating-point functions have an interface that is similar to the
+GNU MP
+integer functions.  The function prefix for operations on complex numbers is
+@code{mpc_}.
+
+@cindex User-defined precision
+The precision of a computation is defined as follows: Compute the requested
+operation exactly (with ``infinite precision''), and round the result to
+the destination variable precision with the given rounding mode.
+
+The MPC complex functions are intended to be a smooth extension
+of the IEEE P754 arithmetic. The results obtained on one
+computer should not differ from the results obtained on a computer with a
+different word size.
+
+
+@menu
+* Initializing Complex Numbers::
+* Assigning Complex Numbers::
+* Converting Complex Numbers::
+* String and Stream Input and Output::
+* Complex Comparison::
+* Projection & Decomposing::
+* Basic Arithmetic::
+* Power Functions and Logarithm::
+* Trigonometric Functions::
+* Miscellaneous Complex Functions::
+* Advanced Functions::
+* Internals::
+@end menu
+
+@node Initializing Complex Numbers, Assigning Complex Numbers, Complex Functions, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Initialization Functions
+
+An @code{mpc_t} object must be initialized before storing the first value in
+it.  The functions @code{mpc_init2} and @code{mpc_init3}
+are used for that purpose.
+
+@deftypefun void mpc_init2 (mpc_t @var{z}, mpfr_prec_t @var{prec})
+Initialize @var{z} to precision @var{prec} bits
+and set its real and imaginary parts to NaN.
+Normally, a variable should be initialized once only
+or at least be cleared, using @code{mpc_clear}, between initializations.
+@end deftypefun
+
+@deftypefun void mpc_init3 (mpc_t @var{z}, mpfr_prec_t @var{prec_r}, mpfr_prec_t @var{prec_i})
+Initialize @var{z} with the precision of its real part being
+@var{prec_r} bits and the precision of its imaginary part being
+@var{prec_i} bits, and set the real and imaginary parts to NaN.
+@end deftypefun
+
+@deftypefun void mpc_clear (mpc_t @var{z})
+Free the space occupied by @var{z}.  Make sure to call this function for all
+@code{mpc_t} variables when you are done with them.
+@end deftypefun
+
+@need 2000
+Here is an example on how to initialize complex variables:
+@example
+@{
+  mpc_t x, y;
+  mpc_init2 (x, 256);		/* precision @emph{exactly} 256 bits */
+  mpc_init3 (y, 100, 50);	/* 100/50 bits for the real/imaginary part */
+  @dots{}
+  mpc_clear (x);
+  mpc_clear (y);
+@}
+@end example
+
+The following function is useful for changing the precision during a
+calculation.  A typical use would be for adjusting the precision gradually in
+iterative algorithms like Newton-Raphson, making the computation precision
+closely match the actual accurate part of the numbers.
+
+@deftypefun void mpc_set_prec (mpc_t @var{x}, mpfr_prec_t @var{prec})
+Reset the precision of @var{x} to be @strong{exactly} @var{prec} bits,
+and set its real/imaginary parts to NaN.
+The previous value stored in @var{x} is lost. It is equivalent to
+a call to @code{mpc_clear(x)} followed by a call to
+@code{mpc_init2(x, prec)}, but more efficient as no allocation is done in
+case the current allocated space for the mantissa of @var{x} is sufficient.
+@end deftypefun
+
+@deftypefun mpfr_prec_t mpc_get_prec (mpc_t @var{x})
+If the real and imaginary part of @var{x} have the same precision, it is returned,
+otherwise, 0 is returned.
+@end deftypefun
+
+@deftypefun void mpc_get_prec2 (mpfr_prec_t* @var{pr}, mpfr_prec_t* @var{pi}, mpc_t @var{x})
+Returns the precision of the real part of @var{x} via @var{pr} and of its imaginary part
+via @var{pi}.
+@end deftypefun
+
+
+@node Assigning Complex Numbers, Converting Complex Numbers, Initializing Complex Numbers, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Assignment Functions
+@cindex Complex assignment functions
+
+These functions assign new values to already initialized complex numbers
+(@pxref{Initializing Complex Numbers}).
+When using any functions with @code{intmax_t} or @code{uintmax_t}
+parameters, you must include
+@code{<stdint.h>} or @code{<inttypes.h>} @emph{before} @file{mpc.h}, to allow
+@file{mpc.h} to define prototypes for these functions.
+Similarly, functions with parameters of type @code{complex} or
+@code{long complex} are defined only if @code{<complex.h>} is included
+@emph{before} @file{mpc.h}.
+If you need assignment functions that are not in the current API, you can
+define them using the @code{MPC_SET_X_Y} macro (@pxref{Advanced Functions}).
+
+@deftypefun int mpc_set (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set the value of @var{rop} from @var{op}, rounded to the precision of @var{rop}
+with the given rounding mode @var{rnd}.
+@end deftypefun
+
+@deftypefun int mpc_set_ui (mpc_t @var{rop}, unsigned long int @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_si (mpc_t @var{rop}, long int @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_uj (mpc_t @var{rop}, uintmax_t @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_sj (mpc_t @var{rop}, intmax_t @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_d (mpc_t @var{rop}, double @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_ld (mpc_t @var{rop}, long double @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_dc (mpc_t @var{rop}, double _Complex @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_ldc (mpc_t @var{rop}, long double _Complex @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_z (mpc_t @var{rop}, mpz_t @var{op} mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_q (mpc_t @var{rop}, mpq_t @var{op} mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_f (mpc_t @var{rop}, mpf_t @var{op} mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_fr (mpc_t @var{rop}, mpfr_t @var{op}, mpc_rnd_t @var{rnd})
+Set the value of @var{rop} from @var{op}, rounded to the precision of
+@var{rop} with the given rounding mode @var{rnd}.
+The argument @var{op} is interpreted as real, so the imaginary part of
+@var{rop} is set to zero with a positive sign.
+Please note that even a @code{long int} may have to be rounded, if the
+destination precision is less than the machine word width.
+For @code{mpc_set_d}, be careful that the input number @var{op} may not be
+exactly representable as a double-precision number (this happens for 0.1 for
+instance), in which case it is first rounded by the C compiler to a
+double-precision number, and then only to a complex number.
+@end deftypefun
+
+@deftypefun int mpc_set_ui_ui (mpc_t @var{rop}, unsigned long int @var{op1}, unsigned long int @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_si_si (mpc_t @var{rop}, long int @var{op1}, long int @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_uj_uj (mpc_t @var{rop}, uintmax_t @var{op1}, uintmax_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_sj_sj (mpc_t @var{rop}, intmax_t @var{op1}, intmax_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_d_d (mpc_t @var{rop}, double @var{op1}, double @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_ld_ld (mpc_t @var{rop}, long double @var{op1}, long double @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_z_z (mpc_t @var{rop}, mpz_t @var{op1}, mpz_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_q_q (mpc_t @var{rop}, mpq_t @var{op1}, mpq_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_f_f (mpc_t @var{rop}, mpf_t @var{op1}, mpf_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_set_fr_fr (mpc_t @var{rop}, mpfr_t @var{op1}, mpfr_t @var{op2}, mpc_rnd_t @var{rnd})
+Set the real part of @var{rop} from @var{op1}, and its imaginary part from
+@var{op2}, according to the rounding mode @var{rnd}.
+
+Beware that the behaviour of @code{mpc_set_fr_fr} is undefined if @var{op1}
+or @var{op2} is a pointer to the real or imaginary part of @var{rop}.
+To exchange the real and the imaginary part of a complex number, either use
+@code{mpfr_swap (mpc_realref (rop), mpc_imagref (rop))}, which also exchanges
+the precisions of the two parts; or use a temporary variable.
+@end deftypefun
+
+For functions assigning complex variables from strings or input streams,
+@pxref{string-io,,String and Stream Input and Output}.
+
+@deftypefun void mpc_set_nan (mpc_t @var{rop})
+Set @var{rop} to Nan+i*NaN.
+@end deftypefun
+
+@deftypefun void mpc_swap (mpc_t @var{op1}, mpc_t @var{op2})
+Swap the values of @var{op1} and @var{op2} efficiently. Warning: The
+precisions are exchanged, too; in case these are different,
+@code{mpc_swap} is thus not equivalent to three @code{mpc_set} calls using a
+third auxiliary variable.
+@end deftypefun
+
+
+@node Converting Complex Numbers, String and Stream Input and Output, Assigning Complex Numbers, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Conversion Functions
+@cindex Conversion functions
+
+The following functions are available only if @code{<complex.h>}
+is included @emph{before} @file{mpc.h}.
+
+@deftypefun double _Complex mpc_get_dc (mpc_t @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx {long double _Complex} mpc_get_ldc (mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Convert @var{op} to a C complex number, using the rounding mode @var{rnd}.
+@end deftypefun
+
+
+For functions converting complex variables to strings or stream output,
+@pxref{string-io,,String and Stream Input and Output}.
+
+
+@node String and Stream Input and Output, Complex Comparison, Converting Complex Numbers, Complex Functions
+@comment  node-name,  next,  previous,  up
+@cindex String and stream input and output
+@anchor{string-io}
+@section String and Stream Input and Output
+
+@deftypefun int mpc_strtoc (mpc_t @var{rop}, const char *@var{nptr}, char **@var{endptr}, int @var{base}, mpc_rnd_t @var{rnd})
+Read a complex number from a string @var{nptr} in base @var{base}, rounded to
+the precision of @var{rop} with the given rounding mode @var{rnd}.
+The @var{base} must be either 0 or a number from 2 to 36 (otherwise the
+behaviour is undefined).
+If @var{nptr} starts with valid data, the result is stored in @var{rop},
+the usual inexact value is returned (@pxref{return-value,, Return
+Value}) and, if @var{endptr} is not the null pointer,
+@var{*endptr} points to the character just after the valid data.
+Otherwise, @var{rop} is set to @code{NaN + i * NaN}, -1 is returned and,
+if @var{endptr} is not the null pointer,
+the value of @var{nptr} is stored in the location referenced by
+@var{endptr}.
+
+The expected form of a complex number string is either a real number (an
+optional leading whitespace, an optional sign followed by a floating-point
+number), or a pair of real numbers in parentheses separated by whitespace. If
+a real number is read, the missing imaginary part is set to +0.
+The form of a floating-point number depends on the base and is described
+in the documentation of @code{mpfr_strtofr}
+@ifinfo
+(@pxref{Assignment Functions,,, mpfr.info,MPFR}).
+@end ifinfo
+@ifnotinfo
+in the MPFR manual.
+@end ifnotinfo
+For instance, @code{"3.1415926"}, @code{"(1.25e+7 +.17)"}, @code{"(@@nan@@
+2)"} and @code{"(-0 -7)"} are valid strings for @var{base} = 10.
+If @var{base} = 0, then a prefix may be used to indicate the base in which the
+floating-point number is written. Use prefix '0b' for binary numbers, prefix
+'0x' for hexadecimal numbers, and no prefix for decimal numbers.
+The real and imaginary part may then be written in different bases.
+For instance, @code{"(1.024e+3 +2.05e+3)"} and @code{"(0b1p+10 +0x802)"} are
+valid strings for @code{base}=0 and represent the same value.
+@end deftypefun
+
+@deftypefun int mpc_set_str (mpc_t @var{rop}, const char *@var{s}, int @var{base}, mpc_rnd_t rnd)
+Set @var{rop} to the value of the string @var{s} in base @var{base}, rounded
+to the precision of @var{rop} with the given rounding mode @var{rnd}.
+See the documentation of @code{mpc_strtoc} for a detailed description of the
+valid string formats.
+Contrarily to @code{mpc_strtoc}, @code{mpc_set_str} requires the @emph{whole}
+string to represent a valid complex number (potentially followed by
+additional white space).
+This function returns the usual inexact value (@pxref{return-value,, Return
+Value}) if the entire string up to the final null character is a valid number
+in base @var{base}; otherwise it returns @minus{}1, and @var{rop} is set to
+NaN+i*NaN.
+@end deftypefun
+
+@deftypefun {char *} mpc_get_str (int @var{b}, size_t @var{n}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Convert @var{op} to a string containing its real and imaginary parts,
+separated by a space and enclosed in a pair of parentheses.
+The numbers are written in base @var{b} (which may vary from 2 to 36) and
+rounded according to @var{rnd}. The number of significant digits, at least 2,
+is given by @var{n}. It is also possible to let
+@var{n} be zero, in which case the number of digits is chosen large
+enough so that re-reading the printed value with the same precision, assuming
+both output and input use rounding to nearest, will recover the original value
+of @var{op}.
+Note that @code{mpc_get_str} uses the decimal point of the current locale
+if available, and @samp{.} otherwise.
+
+The string is generated using the current memory allocation function
+(@code{malloc} by default, unless it has been modified using the custom
+memory allocation interface of @code{gmp}); once it is not needed any more,
+it should be freed by calling @code{mpc_free_str}.
+@end deftypefun
+
+@deftypefun {void} mpc_free_str (char *@var{str})
+Free the string @var{str}, which needs to have been allocated by
+a call to @code{mpc_get_str}.
+@end deftypefun
+
+The following two functions read numbers from input streams and write
+them to output streams.
+When using any of these functions, you need to include @file{stdio.h}
+@emph{before} @file{mpc.h}.
+
+@deftypefun int mpc_inp_str (mpc_t @var{rop}, FILE *@var{stream}, size_t *@var{read}, int @var{base}, mpc_rnd_t @var{rnd})
+Input a string in base @var{base} in the same format as for @code{mpc_strtoc}
+from stdio stream @var{stream}, rounded according to @var{rnd}, and put the
+read complex number into @var{rop}.
+If @var{stream} is the null pointer, @var{rop} is read from @code{stdin}.
+Return the usual inexact value; if an error occurs, set @var{rop} to @code{NaN
++ i * NaN} and return -1.
+If @var{read} is not the null pointer, it is set to the number of read
+characters.
+
+Unlike @code{mpc_strtoc}, the function @code{mpc_inp_str} does not possess
+perfect knowledge of the string to transform and has to read it
+character by character, so it behaves slightly differently: It tries
+to read a string describing a complex number and processes this string
+through a call to @code{mpc_set_str}. Precisely, after skipping optional
+whitespace, a minimal string is read according to the regular expression
+@code{mpfr | '(' \s* mpfr \s+ mpfr \s* ')'}, where @code{\s} denotes a whitespace,
+and @code{mpfr} is either a string containing neither whitespaces nor
+parentheses, or @code{nan(n-char-sequence)} or @code{@@nan@@(n-char-sequence)}
+(regardless of capitalisation) with @code{n-char-sequence} a string
+of ascii letters, digits or @code{'_'}.
+
+For instance, upon input of @code{"nan(13 1)"}, the function
+@code{mpc_inp_str} starts to recognise a value of NaN followed by an
+n-char-sequence indicated by the opening parenthesis; as soon as the
+space is reached, it becocmes clear that the expression in parentheses
+is not an n-char-sequence, and the error flag -1 is returned after 6
+characters have been consumed from the stream (the whitespace itself
+remaining in the stream).
+The function @code{mpc_strtoc}, on the other hand, may track back
+when reaching the whitespace; it treats the string as the two successive
+complex numbers @code{NaN + i * 0} and @code{13 + i}.
+It is thus recommended to have a whitespace follow each floating point number
+to avoid this problem.
+@end deftypefun
+
+@deftypefun size_t mpc_out_str (FILE *@var{stream}, int @var{base}, size_t @var{n_digits}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Output @var{op} on stdio stream @var{stream} in
+base @var{base}, rounded according to @var{rnd}, in the same format
+as for @code{mpc_strtoc}
+If @var{stream} is the null pointer, @var{rop} is written to @code{stdout}.
+
+Return the number of characters written.
+@end deftypefun
+
+
+@node Complex Comparison, Projection & Decomposing, String and Stream Input and Output, Complex Functions
+@comment  node-name,  next,  previous,  up
+@cindex Complex comparisons functions
+@cindex Comparison functions
+@section Comparison Functions
+
+@deftypefn Function int mpc_cmp (mpc_t @var{op1}, mpc_t @var{op2})
+@deftypefnx Function int mpc_cmp_si_si (mpc_t @var{op1}, long int @var{op2r}, long int @var{op2i})
+@deftypefnx Macro int mpc_cmp_si (mpc_t @var{op1}, long int @var{op2})
+
+Compare @var{op1} and @var{op2}, where in the case of @code{mpc_cmp_si_si},
+@var{op2} is taken to be @var{op2r} + i @var{op2i}.
+The return value @var{c} can be decomposed into @code{x = MPC_INEX_RE(c)}
+and @code{y = MPC_INEX_IM(c)}, such that @var{x} is
+positive if the real part of @var{op1} is greater than that of @var{op2},
+zero if both real parts are equal, and negative if the real part of @var{op1}
+is less than that of @var{op2}, and likewise for @var{y}.
+Both @var{op1} and @var{op2} are considered to their full own precision,
+which may differ.
+It is not allowed that one of the operands has a NaN (Not-a-Number) part.
+
+The storage of the return value is such that equality can be simply checked
+with @code{mpc_cmp (op1, op2) == 0}.
+@end deftypefn
+
+
+@node Projection & Decomposing, Basic Arithmetic, Complex Comparison, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Projection and Decomposing Functions
+@cindex Projection and Decomposing Functions
+
+@deftypefn Function int mpc_real (mpfr_t @var{rop}, mpc_t @var{op}, mpfr_rnd_t @var{rnd})
+Set @var{rop} to the value of the real part of @var{op} rounded
+in the direction @var{rnd}.
+@end deftypefn
+
+@deftypefn Function int mpc_imag (mpfr_t @var{rop}, mpc_t @var{op}, mpfr_rnd_t @var{rnd})
+Set @var{rop} to the value of the imaginary part of @var{op} rounded in the
+direction @var{rnd}.
+@end deftypefn
+
+@deftypefn Macro mpfr_t mpc_realref (mpc_t @var{op})
+@deftypefnx Macro mpfr_t mpc_imagref (mpc_t @var{op})
+Return a reference to the real part and imaginary part of @var{op},
+respectively. The @code{mpfr} functions can be used on the result of these
+macros (note that the @code{mpfr_t} type is itself a pointer).
+@end deftypefn
+
+@deftypefn Function int mpc_arg (mpfr_t @var{rop}, mpc_t @var{op}, mpfr_rnd_t @var{rnd})
+Set @var{rop} to the argument of @var{op}, with a branch cut along the
+negative real axis.
+@end deftypefn
+
+@deftypefn Function int mpc_proj (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Compute a projection of @var{op} onto the Riemann sphere. Set @var{rop} to
+@var{op} rounded in the direction @var{rnd}, except when at least one part of
+@var{op} is infinite (even if the other part is a NaN) in which case the real
+part of @var{rop} is set to plus infinity and its imaginary part to a signed
+zero with the same sign as the imaginary part of @var{op}.
+@end deftypefn
+
+
+@node Basic Arithmetic, Power Functions and Logarithm, Projection & Decomposing, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Basic Arithmetic Functions
+@cindex Complex arithmetic functions
+@cindex Arithmetic functions
+
+All the following functions are designed in such a way that, when working
+with real numbers instead of complex numbers, their complexity should
+essentially be the same as with the MPFR library, with only a marginal
+overhead due to the MPC layer.
+
+@deftypefun int mpc_add (mpc_t @var{rop}, mpc_t @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_add_ui (mpc_t @var{rop}, mpc_t @var{op1}, unsigned long int @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_add_fr (mpc_t @var{rop}, mpc_t @var{op1}, mpfr_t @var{op2}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op1} @math{+} @var{op2} rounded according to @var{rnd}.
+@end deftypefun
+
+@deftypefn Function int mpc_sub (mpc_t @var{rop}, mpc_t @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefnx Function int mpc_sub_fr (mpc_t @var{rop}, mpc_t @var{op1}, mpfr_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefnx Function int mpc_fr_sub (mpc_t @var{rop}, mpfr_t @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefnx Function int mpc_sub_ui (mpc_t @var{rop}, mpc_t @var{op1}, unsigned long int @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefnx Macro int mpc_ui_sub (mpc_t @var{rop}, unsigned long int @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefnx Function int mpc_ui_ui_sub (mpc_t @var{rop}, unsigned long int @var{re1}, unsigned long int @var{im1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op1} @minus{} @var{op2} rounded according to @var{rnd}.
+For @code{mpc_ui_ui_sub}, @var{op1} is @var{re1} + @var{im1}.
+@end deftypefn
+
+@deftypefun int mpc_mul (mpc_t @var{rop}, mpc_t @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_mul_ui (mpc_t @var{rop}, mpc_t @var{op1}, unsigned long int @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_mul_si (mpc_t @var{rop}, mpc_t @var{op1}, long int @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_mul_fr (mpc_t @var{rop}, mpc_t @var{op1}, mpfr_t @var{op2}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op1} times @var{op2} rounded according to @var{rnd}.
+@end deftypefun
+
+@deftypefun int mpc_mul_i (mpc_t @var{rop}, mpc_t @var{op}, int @var{sgn}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op} times the imaginary unit i if @var{sgn} is
+non-negative, set @var{rop} to @var{op} times -i otherwise,
+in both cases rounded according to @var{rnd}.
+@end deftypefun
+
+@deftypefun int mpc_sqr (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the square of @var{op} rounded according to @var{rnd}.
+@end deftypefun
+
+@deftypefun int mpc_div (mpc_t @var{rop}, mpc_t @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_div_ui (mpc_t @var{rop}, mpc_t @var{op1}, unsigned long int @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_ui_div (mpc_t @var{rop}, unsigned long int @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_div_fr (mpc_t @var{rop}, mpc_t @var{op1}, mpfr_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_fr_div (mpc_t @var{rop}, mpfr_t @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op1}/@var{op2} rounded according to @var{rnd}.
+For @code{mpc_div} and @code{mpc_ui_div}, the return value may fail to
+recognize some exact results. The sign of returned value is
+significant only for @code{mpc_div_ui}.
+@end deftypefun
+
+@deftypefun int mpc_neg (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @minus{}@var{op} rounded according to @var{rnd}.
+Just changes the sign if @var{rop} and @var{op} are the same variable.
+@end deftypefun
+
+@deftypefun int mpc_conj (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the conjugate of @var{op} rounded according to @var{rnd}.
+Just changes the sign of the imaginary part
+if @var{rop} and @var{op} are the same variable.
+@end deftypefun
+
+@deftypefun int mpc_abs (mpfr_t @var{rop}, mpc_t @var{op}, mpfr_rnd_t @var{rnd})
+Set the floating-point number @var{rop} to the absolute value of @var{op},
+rounded in the direction @var{rnd}.
+The returned value is zero iff the result is exact.
+@end deftypefun
+
+@deftypefun int mpc_norm (mpfr_t @var{rop}, mpc_t @var{op}, mpfr_rnd_t @var{rnd})
+Set the floating-point number @var{rop} to the norm of @var{op}
+(i.e., the square of its absolute value),
+rounded in the direction @var{rnd}.
+The returned value is zero iff the result is exact.
+Note that the destination is of type @code{mpfr_t}, not @code{mpc_t}.
+@end deftypefun
+
+@deftypefun int mpc_mul_2exp (mpc_t @var{rop}, mpc_t @var{op1}, unsigned long int @var{op2}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op1} times 2 raised to @var{op2}
+rounded according to @var{rnd}. Just increases the exponents
+of the real and imaginary parts by @var{op2}
+when @var{rop} and @var{op1} are identical.
+@end deftypefun
+
+@deftypefun int mpc_div_2exp (mpc_t @var{rop}, mpc_t @var{op1}, unsigned long int @var{op2}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op1} divided by 2 raised to @var{op2}
+rounded according to @var{rnd}. Just decreases the exponents
+of the real and imaginary parts by @var{op2}
+when @var{rop} and @var{op1} are identical.
+@end deftypefun
+
+@deftypefun int mpc_fma (mpc_t @var{rop}, mpc_t @var{op1}, mpc_t @var{op2}, mpc_t @var{op3}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op1} times @var{op2} plus @var{op3},
+rounded according to @var{rnd}, with only one final rounding.
+@end deftypefun
+
+@node Power Functions and Logarithm, Trigonometric Functions, Basic Arithmetic, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Power Functions and Logarithm
+@cindex Power functions
+@cindex Logarithm
+
+@deftypefun int mpc_sqrt (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the square root of @var{op} rounded according to @var{rnd}.
+@end deftypefun
+
+@deftypefun int mpc_pow (mpc_t @var{rop}, mpc_t @var{op1}, mpc_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_pow_d (mpc_t @var{rop}, mpc_t @var{op1}, double @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_pow_ld (mpc_t @var{rop}, mpc_t @var{op1}, long double @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_pow_si (mpc_t @var{rop}, mpc_t @var{op1}, long @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_pow_ui (mpc_t @var{rop}, mpc_t @var{op1}, unsigned long @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_pow_z (mpc_t @var{rop}, mpc_t @var{op1}, mpz_t @var{op2}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_pow_fr (mpc_t @var{rop}, mpc_t @var{op1}, mpfr_t @var{op2}, mpc_rnd_t @var{rnd})
+Set @var{rop} to @var{op1} raised to the power @var{op2}, rounded according
+to @var{rnd}.
+For @code{mpc_pow_d}, @code{mpc_pow_ld}, @code{mpc_pow_si}, @code{mpc_pow_ui},
+@code{mpc_pow_z} and @code{mpc_pow_fr},
+the imaginary part of @var{op2} is considered as +0.
+@end deftypefun
+
+@deftypefun int mpc_exp (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the exponential of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+@end deftypefun
+
+@deftypefun int mpc_log (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the logarithm of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+The principal branch is chosen, with the branch cut on the negative real axis,
+so that the imaginary part of the result lies in
+@math{]-\pi , \pi]}.
+@end deftypefun
+
+
+@node Trigonometric Functions, Miscellaneous Complex Functions, Power Functions and Logarithm, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Trigonometric Functions
+@cindex Trigonometric functions
+
+@deftypefun int mpc_sin (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the sine of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+@end deftypefun
+
+@deftypefun int mpc_cos (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the cosine of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+@end deftypefun
+
+@deftypefun int mpc_sin_cos (mpc_t @var{rop_sin}, mpc_t @var{rop_cos}, mpc_t @var{op}, mpc_rnd_t @var{rnd_sin}, mpc_rnd_t @var{rnd_cos})
+Set @var{rop_sin} to the sine of @var{op},
+rounded according to @var{rnd_sin} with the precision of @var{rop_sin},
+and @var{rop_cos} to the cosine of @var{op},
+rounded according to @var{rnd_cos} with the precision of @var{rop_cos}.
+@end deftypefun
+
+@deftypefun int mpc_tan (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the tangent of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+@end deftypefun
+
+@deftypefun int mpc_sinh (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the hyperbolic sine of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+@end deftypefun
+
+@deftypefun int mpc_cosh (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the hyperbolic cosine of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+@end deftypefun
+
+@deftypefun int mpc_tanh (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the hyperbolic tangent of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+@end deftypefun
+
+@deftypefun int mpc_asin (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_acos (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_atan (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the inverse sine, inverse cosine, inverse tangent of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+@end deftypefun
+
+@deftypefun int mpc_asinh (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_acosh (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+@deftypefunx int mpc_atanh (mpc_t @var{rop}, mpc_t @var{op}, mpc_rnd_t @var{rnd})
+Set @var{rop} to the inverse hyperbolic sine, inverse hyperbolic cosine,
+inverse hyperbolic tangent of @var{op},
+rounded according to @var{rnd} with the precision of @var{rop}.
+The branch cut of @var{mpc_acosh} is @math{(-\infty, 1)}.
+@end deftypefun
+
+@node Miscellaneous Complex Functions, Advanced Functions, Trigonometric Functions, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Miscellaneous Functions
+@cindex Miscellaneous complex functions
+
+@deftypefun int mpc_urandom (mpc_t @var{rop}, gmp_randstate_t @var{state})
+Generate a uniformly distributed random complex in the unit square @math{[0,
+1] @times [0, 1]}. Return 0, unless an exponent in the real or imaginary part
+is not in the current exponent range, in which case that part is set to NaN
+and a zero value is returned. The second argument is a @code{gmp_randstate_t}
+structure which should be created using the GMP @code{rand_init} function, see
+the GMP manual.
+@end deftypefun
+
+@deftypefun {const char *} mpc_get_version (void)
+Return the MPC version, as a null-terminated string.
+@end deftypefun
+
+@defmac MPC_VERSION
+@defmacx MPC_VERSION_MAJOR
+@defmacx MPC_VERSION_MINOR
+@defmacx MPC_VERSION_PATCHLEVEL
+@defmacx MPC_VERSION_STRING
+@code{MPC_VERSION} is the version of MPC as a preprocessing constant.
+@code{MPC_VERSION_MAJOR}, @code{MPC_VERSION_MINOR} and
+@code{MPC_VERSION_PATCHLEVEL} are respectively the major, minor and
+patch level of MPC version, as preprocessing constants.
+@code{MPC_VERSION_STRING} is the version as a string constant, which
+can be compared to the result of @code{mpc_get_version} to check at
+run time the header file and library used match:
+@example
+if (strcmp (mpc_get_version (), MPC_VERSION_STRING))
+  fprintf (stderr, "Warning: header and library do not match\n");
+@end example
+Note: Obtaining different strings is not necessarily an error, as in
+general, a program compiled with some old MPC version can be
+dynamically linked with a newer MPC library version (if allowed by the
+library versioning system).
+@end defmac
+
+@deftypefn Macro long MPC_VERSION_NUM (@var{major}, @var{minor}, @var{patchlevel})
+Create an integer in the same format as used by @code{MPC_VERSION} from the
+given @var{major}, @var{minor} and @var{patchlevel}.
+Here is an example of how to check the MPC version at compile time:
+@example
+#if (!defined(MPC_VERSION) || (MPC_VERSION<MPC_VERSION_NUM(2,1,0)))
+# error "Wrong MPC version."
+#endif
+@end example
+@end deftypefn
+
+@node Advanced Functions, Internals, Miscellaneous Complex Functions, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Advanced Functions
+
+@defmac MPC_SET_X_Y (@var{real_suffix}, @var{imag_suffix}, @var{rop}, @var{real}, @var{imag}, @var{rnd})
+The macro MPC_SET_X_Y is designed to serve as the body of an assignment
+function and cannot be used by itself.
+The @var{real_suffix} and @var{imag_suffix} parameters are the
+types of the real and imaginary part, that is, the @code{x} in the
+@code{mpfr_set_x} function one would use to set the part;
+for the mpfr type, use @code{fr}.
+@var{real} (respectively @var{imag}) is the value you want to assign to the
+real (resp. imaginary) part, its type must conform to @var{real_suffix}
+(resp. @var{imag_suffix}).
+@var{rnd} is the @code{mpc_rnd_t} rounding mode.
+The return value is the usual inexact value (@pxref{return-value,, Return
+Value}).
+
+For instance, you can define mpc_set_ui_fr as follows:
+@example
+int mpc_set_ui_fr (mpc_t rop, long int re, double im, mpc_rnd_t rnd)
+    MPC_SET_X_Y (ui, fr, rop, re, im, rnd);
+@end example
+@end defmac
+
+
+@node Internals,  , Advanced Functions, Complex Functions
+@comment  node-name,  next,  previous,  up
+@section Internals
+
+These macros and
+functions are mainly designed for the implementation of MPC,
+but may be useful for users too.
+However, no upward compatibility is guaranteed.
+You need to include @code{mpc-impl.h} to use them.
+
+The macro @code{MPC_MAX_PREC(z)} gives the maximum of the precisions
+of the real and imaginary parts of a complex number.
+
+
+@node Contributors, References, Complex Functions, Top
+@comment  node-name,  next,  previous,  up
+@unnumbered Contributors
+
+The main developers of the MPC library are Andreas Enge,
+Philippe Th@'eveny and Paul Zimmermann.
+Patrick P@'elissier has helped cleaning up the code.
+Marc Helbling contributed the @code{mpc_ui_sub} and
+@code{mpc_ui_ui_sub} functions.
+
+@node References, Concept Index, Contributors, Top
+@comment  node-name,  next,  previous,  up
+@unnumbered References
+
+@itemize @bullet
+
+@item
+Torbj@"orn Granlund et al.
+@code{gmp} -- GNU multiprecision library.
+Version 4.2.4, @url{http://gmplib.org/}.
+
+@item
+Guillaume Hanrot, Vincent Lef@`evre, Patrick P@'elissier, Paul Zimmermann et al.
+@code{mpfr} -- A library for multiple-precision floating-point               computations with exact rounding.
+Version 2.4.1, @url{http://www.mpfr.org}.
+
+@item
+IEEE standard for binary floating-point arithmetic, Technical Report
+ANSI-IEEE Standard 754-1985, New York, 1985.
+Approved March 21, 1985: IEEE Standards Board; approved July 26,
+  1985: American National Standards Institute, 18 pages.
+
+@item
+Donald E. Knuth, "The Art of Computer Programming", vol 2,
+"Seminumerical Algorithms", 2nd edition, Addison-Wesley, 1981.
+
+@item
+ISO/IEC 9899:1999, Programming languages — C.
+
+@end itemize
+
+@node Concept Index, Function Index, References, Top
+@comment  node-name,  next,  previous,  up
+@unnumbered Concept Index
+@printindex cp
+
+@node Function Index,  , Concept Index, Top
+@comment  node-name,  next,  previous,  up
+@unnumbered Function and Type Index
+@printindex fn
+
+@ifnothtml
+@contents
+@end ifnothtml
+@bye
diff --git a/mpc/doc/stamp-vti b/mpc/doc/stamp-vti
new file mode 100644
index 0000000..b109a80
--- /dev/null
+++ b/mpc/doc/stamp-vti
@@ -0,0 +1,4 @@
+@set UPDATED 21 February 2011
+@set UPDATED-MONTH February 2011
+@set EDITION 0.9
+@set VERSION 0.9
diff --git a/mpc/doc/texinfo.tex b/mpc/doc/texinfo.tex
new file mode 100644
index 0000000..9140826
--- /dev/null
+++ b/mpc/doc/texinfo.tex
@@ -0,0 +1,9291 @@
+% texinfo.tex -- TeX macros to handle Texinfo files.
+% 
+% Load plain if necessary, i.e., if running under initex.
+\expandafter\ifx\csname fmtname\endcsname\relax\input plain\fi
+%
+\def\texinfoversion{2009-08-14.15}
+%
+% Copyright 1985, 1986, 1988, 1990, 1991, 1992, 1993, 1994, 1995,
+% 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
+% 2007, 2008, 2009 Free Software Foundation, Inc.
+%
+% This texinfo.tex file is free software: you can redistribute it and/or
+% modify it under the terms of the GNU General Public License as
+% published by the Free Software Foundation, either version 3 of the
+% License, or (at your option) any later version.
+%
+% This texinfo.tex file is distributed in the hope that it will be
+% useful, but WITHOUT ANY WARRANTY; without even the implied warranty
+% of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+% General Public License for more details.
+%
+% You should have received a copy of the GNU General Public License
+% along with this program.  If not, see <http://www.gnu.org/licenses/>.
+%
+% As a special exception, when this file is read by TeX when processing
+% a Texinfo source document, you may use the result without
+% restriction.  (This has been our intent since Texinfo was invented.)
+%
+% Please try the latest version of texinfo.tex before submitting bug
+% reports; you can get the latest version from:
+%   http://www.gnu.org/software/texinfo/ (the Texinfo home page), or
+%   ftp://tug.org/tex/texinfo.tex
+%     (and all CTAN mirrors, see http://www.ctan.org).
+% The texinfo.tex in any given distribution could well be out
+% of date, so if that's what you're using, please check.
+%
+% Send bug reports to bug-texinfo@gnu.org.  Please include including a
+% complete document in each bug report with which we can reproduce the
+% problem.  Patches are, of course, greatly appreciated.
+%
+% To process a Texinfo manual with TeX, it's most reliable to use the
+% texi2dvi shell script that comes with the distribution.  For a simple
+% manual foo.texi, however, you can get away with this:
+%   tex foo.texi
+%   texindex foo.??
+%   tex foo.texi
+%   tex foo.texi
+%   dvips foo.dvi -o  # or whatever; this makes foo.ps.
+% The extra TeX runs get the cross-reference information correct.
+% Sometimes one run after texindex suffices, and sometimes you need more
+% than two; texi2dvi does it as many times as necessary.
+%
+% It is possible to adapt texinfo.tex for other languages, to some
+% extent.  You can get the existing language-specific files from the
+% full Texinfo distribution.
+%
+% The GNU Texinfo home page is http://www.gnu.org/software/texinfo.
+
+
+\message{Loading texinfo [version \texinfoversion]:}
+
+% If in a .fmt file, print the version number
+% and turn on active characters that we couldn't do earlier because
+% they might have appeared in the input file name.
+\everyjob{\message{[Texinfo version \texinfoversion]}%
+  \catcode`+=\active \catcode`\_=\active}
+
+
+\chardef\other=12
+
+% We never want plain's \outer definition of \+ in Texinfo.
+% For @tex, we can use \tabalign.
+\let\+ = \relax
+
+% Save some plain tex macros whose names we will redefine.
+\let\ptexb=\b
+\let\ptexbullet=\bullet
+\let\ptexc=\c
+\let\ptexcomma=\,
+\let\ptexdot=\.
+\let\ptexdots=\dots
+\let\ptexend=\end
+\let\ptexequiv=\equiv
+\let\ptexexclam=\!
+\let\ptexfootnote=\footnote
+\let\ptexgtr=>
+\let\ptexhat=^
+\let\ptexi=\i
+\let\ptexindent=\indent
+\let\ptexinsert=\insert
+\let\ptexlbrace=\{
+\let\ptexless=<
+\let\ptexnewwrite\newwrite
+\let\ptexnoindent=\noindent
+\let\ptexplus=+
+\let\ptexrbrace=\}
+\let\ptexslash=\/
+\let\ptexstar=\*
+\let\ptext=\t
+\let\ptextop=\top
+{\catcode`\'=\active
+\global\let\ptexquoteright'}% Math-mode def from plain.tex.
+\let\ptexraggedright=\raggedright
+
+% If this character appears in an error message or help string, it
+% starts a new line in the output.
+\newlinechar = `^^J
+
+% Use TeX 3.0's \inputlineno to get the line number, for better error
+% messages, but if we're using an old version of TeX, don't do anything.
+%
+\ifx\inputlineno\thisisundefined
+  \let\linenumber = \empty % Pre-3.0.
+\else
+  \def\linenumber{l.\the\inputlineno:\space}
+\fi
+
+% Set up fixed words for English if not already set.
+\ifx\putwordAppendix\undefined  \gdef\putwordAppendix{Appendix}\fi
+\ifx\putwordChapter\undefined   \gdef\putwordChapter{Chapter}\fi
+\ifx\putwordfile\undefined      \gdef\putwordfile{file}\fi
+\ifx\putwordin\undefined        \gdef\putwordin{in}\fi
+\ifx\putwordIndexIsEmpty\undefined     \gdef\putwordIndexIsEmpty{(Index is empty)}\fi
+\ifx\putwordIndexNonexistent\undefined \gdef\putwordIndexNonexistent{(Index is nonexistent)}\fi
+\ifx\putwordInfo\undefined      \gdef\putwordInfo{Info}\fi
+\ifx\putwordInstanceVariableof\undefined \gdef\putwordInstanceVariableof{Instance Variable of}\fi
+\ifx\putwordMethodon\undefined  \gdef\putwordMethodon{Method on}\fi
+\ifx\putwordNoTitle\undefined   \gdef\putwordNoTitle{No Title}\fi
+\ifx\putwordof\undefined        \gdef\putwordof{of}\fi
+\ifx\putwordon\undefined        \gdef\putwordon{on}\fi
+\ifx\putwordpage\undefined      \gdef\putwordpage{page}\fi
+\ifx\putwordsection\undefined   \gdef\putwordsection{section}\fi
+\ifx\putwordSection\undefined   \gdef\putwordSection{Section}\fi
+\ifx\putwordsee\undefined       \gdef\putwordsee{see}\fi
+\ifx\putwordSee\undefined       \gdef\putwordSee{See}\fi
+\ifx\putwordShortTOC\undefined  \gdef\putwordShortTOC{Short Contents}\fi
+\ifx\putwordTOC\undefined       \gdef\putwordTOC{Table of Contents}\fi
+%
+\ifx\putwordMJan\undefined \gdef\putwordMJan{January}\fi
+\ifx\putwordMFeb\undefined \gdef\putwordMFeb{February}\fi
+\ifx\putwordMMar\undefined \gdef\putwordMMar{March}\fi
+\ifx\putwordMApr\undefined \gdef\putwordMApr{April}\fi
+\ifx\putwordMMay\undefined \gdef\putwordMMay{May}\fi
+\ifx\putwordMJun\undefined \gdef\putwordMJun{June}\fi
+\ifx\putwordMJul\undefined \gdef\putwordMJul{July}\fi
+\ifx\putwordMAug\undefined \gdef\putwordMAug{August}\fi
+\ifx\putwordMSep\undefined \gdef\putwordMSep{September}\fi
+\ifx\putwordMOct\undefined \gdef\putwordMOct{October}\fi
+\ifx\putwordMNov\undefined \gdef\putwordMNov{November}\fi
+\ifx\putwordMDec\undefined \gdef\putwordMDec{December}\fi
+%
+\ifx\putwordDefmac\undefined    \gdef\putwordDefmac{Macro}\fi
+\ifx\putwordDefspec\undefined   \gdef\putwordDefspec{Special Form}\fi
+\ifx\putwordDefvar\undefined    \gdef\putwordDefvar{Variable}\fi
+\ifx\putwordDefopt\undefined    \gdef\putwordDefopt{User Option}\fi
+\ifx\putwordDeffunc\undefined   \gdef\putwordDeffunc{Function}\fi
+
+% Since the category of space is not known, we have to be careful.
+\chardef\spacecat = 10
+\def\spaceisspace{\catcode`\ =\spacecat}
+
+% sometimes characters are active, so we need control sequences.
+\chardef\colonChar = `\:
+\chardef\commaChar = `\,
+\chardef\dashChar  = `\-
+\chardef\dotChar   = `\.
+\chardef\exclamChar= `\!
+\chardef\lquoteChar= `\`
+\chardef\questChar = `\?
+\chardef\rquoteChar= `\'
+\chardef\semiChar  = `\;
+\chardef\underChar = `\_
+
+% Ignore a token.
+%
+\def\gobble#1{}
+
+% The following is used inside several \edef's.
+\def\makecsname#1{\expandafter\noexpand\csname#1\endcsname}
+
+% Hyphenation fixes.
+\hyphenation{
+  Flor-i-da Ghost-script Ghost-view Mac-OS Post-Script
+  ap-pen-dix bit-map bit-maps
+  data-base data-bases eshell fall-ing half-way long-est man-u-script
+  man-u-scripts mini-buf-fer mini-buf-fers over-view par-a-digm
+  par-a-digms rath-er rec-tan-gu-lar ro-bot-ics se-vere-ly set-up spa-ces
+  spell-ing spell-ings
+  stand-alone strong-est time-stamp time-stamps which-ever white-space
+  wide-spread wrap-around
+}
+
+% Margin to add to right of even pages, to left of odd pages.
+\newdimen\bindingoffset
+\newdimen\normaloffset
+\newdimen\pagewidth \newdimen\pageheight
+
+% For a final copy, take out the rectangles
+% that mark overfull boxes (in case you have decided
+% that the text looks ok even though it passes the margin).
+%
+\def\finalout{\overfullrule=0pt}
+
+% @| inserts a changebar to the left of the current line.  It should
+% surround any changed text.  This approach does *not* work if the
+% change spans more than two lines of output.  To handle that, we would
+% have adopt a much more difficult approach (putting marks into the main
+% vertical list for the beginning and end of each change).
+%
+\def\|{%
+  % \vadjust can only be used in horizontal mode.
+  \leavevmode
+  %
+  % Append this vertical mode material after the current line in the output.
+  \vadjust{%
+    % We want to insert a rule with the height and depth of the current
+    % leading; that is exactly what \strutbox is supposed to record.
+    \vskip-\baselineskip
+    %
+    % \vadjust-items are inserted at the left edge of the type.  So
+    % the \llap here moves out into the left-hand margin.
+    \llap{%
+      %
+      % For a thicker or thinner bar, change the `1pt'.
+      \vrule height\baselineskip width1pt
+      %
+      % This is the space between the bar and the text.
+      \hskip 12pt
+    }%
+  }%
+}
+
+% Sometimes it is convenient to have everything in the transcript file
+% and nothing on the terminal.  We don't just call \tracingall here,
+% since that produces some useless output on the terminal.  We also make
+% some effort to order the tracing commands to reduce output in the log
+% file; cf. trace.sty in LaTeX.
+%
+\def\gloggingall{\begingroup \globaldefs = 1 \loggingall \endgroup}%
+\def\loggingall{%
+  \tracingstats2
+  \tracingpages1
+  \tracinglostchars2  % 2 gives us more in etex
+  \tracingparagraphs1
+  \tracingoutput1
+  \tracingmacros2
+  \tracingrestores1
+  \showboxbreadth\maxdimen \showboxdepth\maxdimen
+  \ifx\eTeXversion\undefined\else % etex gives us more logging
+    \tracingscantokens1
+    \tracingifs1
+    \tracinggroups1
+    \tracingnesting2
+    \tracingassigns1
+  \fi
+  \tracingcommands3  % 3 gives us more in etex
+  \errorcontextlines16
+}%
+
+% add check for \lastpenalty to plain's definitions.  If the last thing
+% we did was a \nobreak, we don't want to insert more space.
+%
+\def\smallbreak{\ifnum\lastpenalty<10000\par\ifdim\lastskip<\smallskipamount
+  \removelastskip\penalty-50\smallskip\fi\fi}
+\def\medbreak{\ifnum\lastpenalty<10000\par\ifdim\lastskip<\medskipamount
+  \removelastskip\penalty-100\medskip\fi\fi}
+\def\bigbreak{\ifnum\lastpenalty<10000\par\ifdim\lastskip<\bigskipamount
+  \removelastskip\penalty-200\bigskip\fi\fi}
+
+% For @cropmarks command.
+% Do @cropmarks to get crop marks.
+%
+\newif\ifcropmarks
+\let\cropmarks = \cropmarkstrue
+%
+% Dimensions to add cropmarks at corners.
+% Added by P. A. MacKay, 12 Nov. 1986
+%
+\newdimen\outerhsize \newdimen\outervsize % set by the paper size routines
+\newdimen\cornerlong  \cornerlong=1pc
+\newdimen\cornerthick \cornerthick=.3pt
+\newdimen\topandbottommargin \topandbottommargin=.75in
+
+% Output a mark which sets \thischapter, \thissection and \thiscolor.
+% We dump everything together because we only have one kind of mark.
+% This works because we only use \botmark / \topmark, not \firstmark.
+%
+% A mark contains a subexpression of the \ifcase ... \fi construct.
+% \get*marks macros below extract the needed part using \ifcase.
+%
+% Another complication is to let the user choose whether \thischapter
+% (\thissection) refers to the chapter (section) in effect at the top
+% of a page, or that at the bottom of a page.  The solution is
+% described on page 260 of The TeXbook.  It involves outputting two
+% marks for the sectioning macros, one before the section break, and
+% one after.  I won't pretend I can describe this better than DEK...
+\def\domark{%
+  \toks0=\expandafter{\lastchapterdefs}%
+  \toks2=\expandafter{\lastsectiondefs}%
+  \toks4=\expandafter{\prevchapterdefs}%
+  \toks6=\expandafter{\prevsectiondefs}%
+  \toks8=\expandafter{\lastcolordefs}%
+  \mark{%
+                   \the\toks0 \the\toks2
+      \noexpand\or \the\toks4 \the\toks6
+    \noexpand\else \the\toks8
+  }%
+}
+% \topmark doesn't work for the very first chapter (after the title
+% page or the contents), so we use \firstmark there -- this gets us
+% the mark with the chapter defs, unless the user sneaks in, e.g.,
+% @setcolor (or @url, or @link, etc.) between @contents and the very
+% first @chapter.
+\def\gettopheadingmarks{%
+  \ifcase0\topmark\fi
+  \ifx\thischapter\empty \ifcase0\firstmark\fi \fi
+}
+\def\getbottomheadingmarks{\ifcase1\botmark\fi}
+\def\getcolormarks{\ifcase2\topmark\fi}
+
+% Avoid "undefined control sequence" errors.
+\def\lastchapterdefs{}
+\def\lastsectiondefs{}
+\def\prevchapterdefs{}
+\def\prevsectiondefs{}
+\def\lastcolordefs{}
+
+% Main output routine.
+\chardef\PAGE = 255
+\output = {\onepageout{\pagecontents\PAGE}}
+
+\newbox\headlinebox
+\newbox\footlinebox
+
+% \onepageout takes a vbox as an argument.  Note that \pagecontents
+% does insertions, but you have to call it yourself.
+\def\onepageout#1{%
+  \ifcropmarks \hoffset=0pt \else \hoffset=\normaloffset \fi
+  %
+  \ifodd\pageno  \advance\hoffset by \bindingoffset
+  \else \advance\hoffset by -\bindingoffset\fi
+  %
+  % Do this outside of the \shipout so @code etc. will be expanded in
+  % the headline as they should be, not taken literally (outputting ''code).
+  \ifodd\pageno \getoddheadingmarks \else \getevenheadingmarks \fi
+  \setbox\headlinebox = \vbox{\let\hsize=\pagewidth \makeheadline}%
+  \ifodd\pageno \getoddfootingmarks \else \getevenfootingmarks \fi
+  \setbox\footlinebox = \vbox{\let\hsize=\pagewidth \makefootline}%
+  %
+  {%
+    % Have to do this stuff outside the \shipout because we want it to
+    % take effect in \write's, yet the group defined by the \vbox ends
+    % before the \shipout runs.
+    %
+    \indexdummies         % don't expand commands in the output.
+    \normalturnoffactive  % \ in index entries must not stay \, e.g., if
+               % the page break happens to be in the middle of an example.
+               % We don't want .vr (or whatever) entries like this:
+               % \entry{{\tt \indexbackslash }acronym}{32}{\code {\acronym}}
+               % "\acronym" won't work when it's read back in;
+               % it needs to be
+               % {\code {{\tt \backslashcurfont }acronym}
+    \shipout\vbox{%
+      % Do this early so pdf references go to the beginning of the page.
+      \ifpdfmakepagedest \pdfdest name{\the\pageno} xyz\fi
+      %
+      \ifcropmarks \vbox to \outervsize\bgroup
+        \hsize = \outerhsize
+        \vskip-\topandbottommargin
+        \vtop to0pt{%
+          \line{\ewtop\hfil\ewtop}%
+          \nointerlineskip
+          \line{%
+            \vbox{\moveleft\cornerthick\nstop}%
+            \hfill
+            \vbox{\moveright\cornerthick\nstop}%
+          }%
+          \vss}%
+        \vskip\topandbottommargin
+        \line\bgroup
+          \hfil % center the page within the outer (page) hsize.
+          \ifodd\pageno\hskip\bindingoffset\fi
+          \vbox\bgroup
+      \fi
+      %
+      \unvbox\headlinebox
+      \pagebody{#1}%
+      \ifdim\ht\footlinebox > 0pt
+        % Only leave this space if the footline is nonempty.
+        % (We lessened \vsize for it in \oddfootingyyy.)
+        % The \baselineskip=24pt in plain's \makefootline has no effect.
+        \vskip 24pt
+        \unvbox\footlinebox
+      \fi
+      %
+      \ifcropmarks
+          \egroup % end of \vbox\bgroup
+        \hfil\egroup % end of (centering) \line\bgroup
+        \vskip\topandbottommargin plus1fill minus1fill
+        \boxmaxdepth = \cornerthick
+        \vbox to0pt{\vss
+          \line{%
+            \vbox{\moveleft\cornerthick\nsbot}%
+            \hfill
+            \vbox{\moveright\cornerthick\nsbot}%
+          }%
+          \nointerlineskip
+          \line{\ewbot\hfil\ewbot}%
+        }%
+      \egroup % \vbox from first cropmarks clause
+      \fi
+    }% end of \shipout\vbox
+  }% end of group with \indexdummies
+  \advancepageno
+  \ifnum\outputpenalty>-20000 \else\dosupereject\fi
+}
+
+\newinsert\margin \dimen\margin=\maxdimen
+
+\def\pagebody#1{\vbox to\pageheight{\boxmaxdepth=\maxdepth #1}}
+{\catcode`\@ =11
+\gdef\pagecontents#1{\ifvoid\topins\else\unvbox\topins\fi
+% marginal hacks, juha@viisa.uucp (Juha Takala)
+\ifvoid\margin\else % marginal info is present
+  \rlap{\kern\hsize\vbox to\z@{\kern1pt\box\margin \vss}}\fi
+\dimen@=\dp#1\relax \unvbox#1\relax
+\ifvoid\footins\else\vskip\skip\footins\footnoterule \unvbox\footins\fi
+\ifr@ggedbottom \kern-\dimen@ \vfil \fi}
+}
+
+% Here are the rules for the cropmarks.  Note that they are
+% offset so that the space between them is truly \outerhsize or \outervsize
+% (P. A. MacKay, 12 November, 1986)
+%
+\def\ewtop{\vrule height\cornerthick depth0pt width\cornerlong}
+\def\nstop{\vbox
+  {\hrule height\cornerthick depth\cornerlong width\cornerthick}}
+\def\ewbot{\vrule height0pt depth\cornerthick width\cornerlong}
+\def\nsbot{\vbox
+  {\hrule height\cornerlong depth\cornerthick width\cornerthick}}
+
+% Parse an argument, then pass it to #1.  The argument is the rest of
+% the input line (except we remove a trailing comment).  #1 should be a
+% macro which expects an ordinary undelimited TeX argument.
+%
+\def\parsearg{\parseargusing{}}
+\def\parseargusing#1#2{%
+  \def\argtorun{#2}%
+  \begingroup
+    \obeylines
+    \spaceisspace
+    #1%
+    \parseargline\empty% Insert the \empty token, see \finishparsearg below.
+}
+
+{\obeylines %
+  \gdef\parseargline#1^^M{%
+    \endgroup % End of the group started in \parsearg.
+    \argremovecomment #1\comment\ArgTerm%
+  }%
+}
+
+% First remove any @comment, then any @c comment.
+\def\argremovecomment#1\comment#2\ArgTerm{\argremovec #1\c\ArgTerm}
+\def\argremovec#1\c#2\ArgTerm{\argcheckspaces#1\^^M\ArgTerm}
+
+% Each occurrence of `\^^M' or `<space>\^^M' is replaced by a single space.
+%
+% \argremovec might leave us with trailing space, e.g.,
+%    @end itemize  @c foo
+% This space token undergoes the same procedure and is eventually removed
+% by \finishparsearg.
+%
+\def\argcheckspaces#1\^^M{\argcheckspacesX#1\^^M \^^M}
+\def\argcheckspacesX#1 \^^M{\argcheckspacesY#1\^^M}
+\def\argcheckspacesY#1\^^M#2\^^M#3\ArgTerm{%
+  \def\temp{#3}%
+  \ifx\temp\empty
+    % Do not use \next, perhaps the caller of \parsearg uses it; reuse \temp:
+    \let\temp\finishparsearg
+  \else
+    \let\temp\argcheckspaces
+  \fi
+  % Put the space token in:
+  \temp#1 #3\ArgTerm
+}
+
+% If a _delimited_ argument is enclosed in braces, they get stripped; so
+% to get _exactly_ the rest of the line, we had to prevent such situation.
+% We prepended an \empty token at the very beginning and we expand it now,
+% just before passing the control to \argtorun.
+% (Similarly, we have to think about #3 of \argcheckspacesY above: it is
+% either the null string, or it ends with \^^M---thus there is no danger
+% that a pair of braces would be stripped.
+%
+% But first, we have to remove the trailing space token.
+%
+\def\finishparsearg#1 \ArgTerm{\expandafter\argtorun\expandafter{#1}}
+
+% \parseargdef\foo{...}
+%	is roughly equivalent to
+% \def\foo{\parsearg\Xfoo}
+% \def\Xfoo#1{...}
+%
+% Actually, I use \csname\string\foo\endcsname, ie. \\foo, as it is my
+% favourite TeX trick.  --kasal, 16nov03
+
+\def\parseargdef#1{%
+  \expandafter \doparseargdef \csname\string#1\endcsname #1%
+}
+\def\doparseargdef#1#2{%
+  \def#2{\parsearg#1}%
+  \def#1##1%
+}
+
+% Several utility definitions with active space:
+{
+  \obeyspaces
+  \gdef\obeyedspace{ }
+
+  % Make each space character in the input produce a normal interword
+  % space in the output.  Don't allow a line break at this space, as this
+  % is used only in environments like @example, where each line of input
+  % should produce a line of output anyway.
+  %
+  \gdef\sepspaces{\obeyspaces\let =\tie}
+
+  % If an index command is used in an @example environment, any spaces
+  % therein should become regular spaces in the raw index file, not the
+  % expansion of \tie (\leavevmode \penalty \@M \ ).
+  \gdef\unsepspaces{\let =\space}
+}
+
+
+\def\flushcr{\ifx\par\lisppar \def\next##1{}\else \let\next=\relax \fi \next}
+
+% Define the framework for environments in texinfo.tex.  It's used like this:
+%
+%   \envdef\foo{...}
+%   \def\Efoo{...}
+%
+% It's the responsibility of \envdef to insert \begingroup before the
+% actual body; @end closes the group after calling \Efoo.  \envdef also
+% defines \thisenv, so the current environment is known; @end checks
+% whether the environment name matches.  The \checkenv macro can also be
+% used to check whether the current environment is the one expected.
+%
+% Non-false conditionals (@iftex, @ifset) don't fit into this, so they
+% are not treated as environments; they don't open a group.  (The
+% implementation of @end takes care not to call \endgroup in this
+% special case.)
+
+
+% At run-time, environments start with this:
+\def\startenvironment#1{\begingroup\def\thisenv{#1}}
+% initialize
+\let\thisenv\empty
+
+% ... but they get defined via ``\envdef\foo{...}'':
+\long\def\envdef#1#2{\def#1{\startenvironment#1#2}}
+\def\envparseargdef#1#2{\parseargdef#1{\startenvironment#1#2}}
+
+% Check whether we're in the right environment:
+\def\checkenv#1{%
+  \def\temp{#1}%
+  \ifx\thisenv\temp
+  \else
+    \badenverr
+  \fi
+}
+
+% Environment mismatch, #1 expected:
+\def\badenverr{%
+  \errhelp = \EMsimple
+  \errmessage{This command can appear only \inenvironment\temp,
+    not \inenvironment\thisenv}%
+}
+\def\inenvironment#1{%
+  \ifx#1\empty
+    out of any environment%
+  \else
+    in environment \expandafter\string#1%
+  \fi
+}
+
+% @end foo executes the definition of \Efoo.
+% But first, it executes a specialized version of \checkenv
+%
+\parseargdef\end{%
+  \if 1\csname iscond.#1\endcsname
+  \else
+    % The general wording of \badenverr may not be ideal, but... --kasal, 06nov03
+    \expandafter\checkenv\csname#1\endcsname
+    \csname E#1\endcsname
+    \endgroup
+  \fi
+}
+
+\newhelp\EMsimple{Press RETURN to continue.}
+
+
+%% Simple single-character @ commands
+
+% @@ prints an @
+% Kludge this until the fonts are right (grr).
+\def\@{{\tt\char64}}
+
+% This is turned off because it was never documented
+% and you can use @w{...} around a quote to suppress ligatures.
+%% Define @` and @' to be the same as ` and '
+%% but suppressing ligatures.
+%\def\`{{`}}
+%\def\'{{'}}
+
+% Used to generate quoted braces.
+\def\mylbrace {{\tt\char123}}
+\def\myrbrace {{\tt\char125}}
+\let\{=\mylbrace
+\let\}=\myrbrace
+\begingroup
+  % Definitions to produce \{ and \} commands for indices,
+  % and @{ and @} for the aux/toc files.
+  \catcode`\{ = \other \catcode`\} = \other
+  \catcode`\[ = 1 \catcode`\] = 2
+  \catcode`\! = 0 \catcode`\\ = \other
+  !gdef!lbracecmd[\{]%
+  !gdef!rbracecmd[\}]%
+  !gdef!lbraceatcmd[@{]%
+  !gdef!rbraceatcmd[@}]%
+!endgroup
+
+% @comma{} to avoid , parsing problems.
+\let\comma = ,
+
+% Accents: @, @dotaccent @ringaccent @ubaraccent @udotaccent
+% Others are defined by plain TeX: @` @' @" @^ @~ @= @u @v @H.
+\let\, = \c
+\let\dotaccent = \.
+\def\ringaccent#1{{\accent23 #1}}
+\let\tieaccent = \t
+\let\ubaraccent = \b
+\let\udotaccent = \d
+
+% Other special characters: @questiondown @exclamdown @ordf @ordm
+% Plain TeX defines: @AA @AE @O @OE @L (plus lowercase versions) @ss.
+\def\questiondown{?`}
+\def\exclamdown{!`}
+\def\ordf{\leavevmode\raise1ex\hbox{\selectfonts\lllsize \underbar{a}}}
+\def\ordm{\leavevmode\raise1ex\hbox{\selectfonts\lllsize \underbar{o}}}
+
+% Dotless i and dotless j, used for accents.
+\def\imacro{i}
+\def\jmacro{j}
+\def\dotless#1{%
+  \def\temp{#1}%
+  \ifx\temp\imacro \ifmmode\imath \else\ptexi \fi
+  \else\ifx\temp\jmacro \ifmmode\jmath \else\j \fi
+  \else \errmessage{@dotless can be used only with i or j}%
+  \fi\fi
+}
+
+% The \TeX{} logo, as in plain, but resetting the spacing so that a
+% period following counts as ending a sentence.  (Idea found in latex.)
+%
+\edef\TeX{\TeX \spacefactor=1000 }
+
+% @LaTeX{} logo.  Not quite the same results as the definition in
+% latex.ltx, since we use a different font for the raised A; it's most
+% convenient for us to use an explicitly smaller font, rather than using
+% the \scriptstyle font (since we don't reset \scriptstyle and
+% \scriptscriptstyle).
+%
+\def\LaTeX{%
+  L\kern-.36em
+  {\setbox0=\hbox{T}%
+   \vbox to \ht0{\hbox{\selectfonts\lllsize A}\vss}}%
+  \kern-.15em
+  \TeX
+}
+
+% Be sure we're in horizontal mode when doing a tie, since we make space
+% equivalent to this in @example-like environments. Otherwise, a space
+% at the beginning of a line will start with \penalty -- and
+% since \penalty is valid in vertical mode, we'd end up putting the
+% penalty on the vertical list instead of in the new paragraph.
+{\catcode`@ = 11
+ % Avoid using \@M directly, because that causes trouble
+ % if the definition is written into an index file.
+ \global\let\tiepenalty = \@M
+ \gdef\tie{\leavevmode\penalty\tiepenalty\ }
+}
+
+% @: forces normal size whitespace following.
+\def\:{\spacefactor=1000 }
+
+% @* forces a line break.
+\def\*{\hfil\break\hbox{}\ignorespaces}
+
+% @/ allows a line break.
+\let\/=\allowbreak
+
+% @. is an end-of-sentence period.
+\def\.{.\spacefactor=\endofsentencespacefactor\space}
+
+% @! is an end-of-sentence bang.
+\def\!{!\spacefactor=\endofsentencespacefactor\space}
+
+% @? is an end-of-sentence query.
+\def\?{?\spacefactor=\endofsentencespacefactor\space}
+
+% @frenchspacing on|off  says whether to put extra space after punctuation.
+%
+\def\onword{on}
+\def\offword{off}
+%
+\parseargdef\frenchspacing{%
+  \def\temp{#1}%
+  \ifx\temp\onword \plainfrenchspacing
+  \else\ifx\temp\offword \plainnonfrenchspacing
+  \else
+    \errhelp = \EMsimple
+    \errmessage{Unknown @frenchspacing option `\temp', must be on/off}%
+  \fi\fi
+}
+
+% @w prevents a word break.  Without the \leavevmode, @w at the
+% beginning of a paragraph, when TeX is still in vertical mode, would
+% produce a whole line of output instead of starting the paragraph.
+\def\w#1{\leavevmode\hbox{#1}}
+
+% @group ... @end group forces ... to be all on one page, by enclosing
+% it in a TeX vbox.  We use \vtop instead of \vbox to construct the box
+% to keep its height that of a normal line.  According to the rules for
+% \topskip (p.114 of the TeXbook), the glue inserted is
+% max (\topskip - \ht (first item), 0).  If that height is large,
+% therefore, no glue is inserted, and the space between the headline and
+% the text is small, which looks bad.
+%
+% Another complication is that the group might be very large.  This can
+% cause the glue on the previous page to be unduly stretched, because it
+% does not have much material.  In this case, it's better to add an
+% explicit \vfill so that the extra space is at the bottom.  The
+% threshold for doing this is if the group is more than \vfilllimit
+% percent of a page (\vfilllimit can be changed inside of @tex).
+%
+\newbox\groupbox
+\def\vfilllimit{0.7}
+%
+\envdef\group{%
+  \ifnum\catcode`\^^M=\active \else
+    \errhelp = \groupinvalidhelp
+    \errmessage{@group invalid in context where filling is enabled}%
+  \fi
+  \startsavinginserts
+  %
+  \setbox\groupbox = \vtop\bgroup
+    % Do @comment since we are called inside an environment such as
+    % @example, where each end-of-line in the input causes an
+    % end-of-line in the output.  We don't want the end-of-line after
+    % the `@group' to put extra space in the output.  Since @group
+    % should appear on a line by itself (according to the Texinfo
+    % manual), we don't worry about eating any user text.
+    \comment
+}
+%
+% The \vtop produces a box with normal height and large depth; thus, TeX puts
+% \baselineskip glue before it, and (when the next line of text is done)
+% \lineskip glue after it.  Thus, space below is not quite equal to space
+% above.  But it's pretty close.
+\def\Egroup{%
+    % To get correct interline space between the last line of the group
+    % and the first line afterwards, we have to propagate \prevdepth.
+    \endgraf % Not \par, as it may have been set to \lisppar.
+    \global\dimen1 = \prevdepth
+  \egroup           % End the \vtop.
+  % \dimen0 is the vertical size of the group's box.
+  \dimen0 = \ht\groupbox  \advance\dimen0 by \dp\groupbox
+  % \dimen2 is how much space is left on the page (more or less).
+  \dimen2 = \pageheight   \advance\dimen2 by -\pagetotal
+  % if the group doesn't fit on the current page, and it's a big big
+  % group, force a page break.
+  \ifdim \dimen0 > \dimen2
+    \ifdim \pagetotal < \vfilllimit\pageheight
+      \page
+    \fi
+  \fi
+  \box\groupbox
+  \prevdepth = \dimen1
+  \checkinserts
+}
+%
+% TeX puts in an \escapechar (i.e., `@') at the beginning of the help
+% message, so this ends up printing `@group can only ...'.
+%
+\newhelp\groupinvalidhelp{%
+group can only be used in environments such as @example,^^J%
+where each line of input produces a line of output.}
+
+% @need space-in-mils
+% forces a page break if there is not space-in-mils remaining.
+
+\newdimen\mil  \mil=0.001in
+
+% Old definition--didn't work.
+%\parseargdef\need{\par %
+%% This method tries to make TeX break the page naturally
+%% if the depth of the box does not fit.
+%{\baselineskip=0pt%
+%\vtop to #1\mil{\vfil}\kern -#1\mil\nobreak
+%\prevdepth=-1000pt
+%}}
+
+\parseargdef\need{%
+  % Ensure vertical mode, so we don't make a big box in the middle of a
+  % paragraph.
+  \par
+  %
+  % If the @need value is less than one line space, it's useless.
+  \dimen0 = #1\mil
+  \dimen2 = \ht\strutbox
+  \advance\dimen2 by \dp\strutbox
+  \ifdim\dimen0 > \dimen2
+    %
+    % Do a \strut just to make the height of this box be normal, so the
+    % normal leading is inserted relative to the preceding line.
+    % And a page break here is fine.
+    \vtop to #1\mil{\strut\vfil}%
+    %
+    % TeX does not even consider page breaks if a penalty added to the
+    % main vertical list is 10000 or more.  But in order to see if the
+    % empty box we just added fits on the page, we must make it consider
+    % page breaks.  On the other hand, we don't want to actually break the
+    % page after the empty box.  So we use a penalty of 9999.
+    %
+    % There is an extremely small chance that TeX will actually break the
+    % page at this \penalty, if there are no other feasible breakpoints in
+    % sight.  (If the user is using lots of big @group commands, which
+    % almost-but-not-quite fill up a page, TeX will have a hard time doing
+    % good page breaking, for example.)  However, I could not construct an
+    % example where a page broke at this \penalty; if it happens in a real
+    % document, then we can reconsider our strategy.
+    \penalty9999
+    %
+    % Back up by the size of the box, whether we did a page break or not.
+    \kern -#1\mil
+    %
+    % Do not allow a page break right after this kern.
+    \nobreak
+  \fi
+}
+
+% @br   forces paragraph break (and is undocumented).
+
+\let\br = \par
+
+% @page forces the start of a new page.
+%
+\def\page{\par\vfill\supereject}
+
+% @exdent text....
+% outputs text on separate line in roman font, starting at standard page margin
+
+% This records the amount of indent in the innermost environment.
+% That's how much \exdent should take out.
+\newskip\exdentamount
+
+% This defn is used inside fill environments such as @defun.
+\parseargdef\exdent{\hfil\break\hbox{\kern -\exdentamount{\rm#1}}\hfil\break}
+
+% This defn is used inside nofill environments such as @example.
+\parseargdef\nofillexdent{{\advance \leftskip by -\exdentamount
+  \leftline{\hskip\leftskip{\rm#1}}}}
+
+% @inmargin{WHICH}{TEXT} puts TEXT in the WHICH margin next to the current
+% paragraph.  For more general purposes, use the \margin insertion
+% class.  WHICH is `l' or `r'.
+%
+\newskip\inmarginspacing \inmarginspacing=1cm
+\def\strutdepth{\dp\strutbox}
+%
+\def\doinmargin#1#2{\strut\vadjust{%
+  \nobreak
+  \kern-\strutdepth
+  \vtop to \strutdepth{%
+    \baselineskip=\strutdepth
+    \vss
+    % if you have multiple lines of stuff to put here, you'll need to
+    % make the vbox yourself of the appropriate size.
+    \ifx#1l%
+      \llap{\ignorespaces #2\hskip\inmarginspacing}%
+    \else
+      \rlap{\hskip\hsize \hskip\inmarginspacing \ignorespaces #2}%
+    \fi
+    \null
+  }%
+}}
+\def\inleftmargin{\doinmargin l}
+\def\inrightmargin{\doinmargin r}
+%
+% @inmargin{TEXT [, RIGHT-TEXT]}
+% (if RIGHT-TEXT is given, use TEXT for left page, RIGHT-TEXT for right;
+% else use TEXT for both).
+%
+\def\inmargin#1{\parseinmargin #1,,\finish}
+\def\parseinmargin#1,#2,#3\finish{% not perfect, but better than nothing.
+  \setbox0 = \hbox{\ignorespaces #2}%
+  \ifdim\wd0 > 0pt
+    \def\lefttext{#1}%  have both texts
+    \def\righttext{#2}%
+  \else
+    \def\lefttext{#1}%  have only one text
+    \def\righttext{#1}%
+  \fi
+  %
+  \ifodd\pageno
+    \def\temp{\inrightmargin\righttext}% odd page -> outside is right margin
+  \else
+    \def\temp{\inleftmargin\lefttext}%
+  \fi
+  \temp
+}
+
+% @include FILE -- \input text of FILE.
+%
+\def\include{\parseargusing\filenamecatcodes\includezzz}
+\def\includezzz#1{%
+  \pushthisfilestack
+  \def\thisfile{#1}%
+  {%
+    \makevalueexpandable  % we want to expand any @value in FILE.
+    \turnoffactive        % and allow special characters in the expansion
+    \indexnofonts         % Allow `@@' and other weird things in file names.
+    \edef\temp{\noexpand\input #1 }%
+    %
+    % This trickery is to read FILE outside of a group, in case it makes
+    % definitions, etc.
+    \expandafter
+  }\temp
+  \popthisfilestack
+}
+\def\filenamecatcodes{%
+  \catcode`\\=\other
+  \catcode`~=\other
+  \catcode`^=\other
+  \catcode`_=\other
+  \catcode`|=\other
+  \catcode`<=\other
+  \catcode`>=\other
+  \catcode`+=\other
+  \catcode`-=\other
+  \catcode`\`=\other
+  \catcode`\'=\other
+}
+
+\def\pushthisfilestack{%
+  \expandafter\pushthisfilestackX\popthisfilestack\StackTerm
+}
+\def\pushthisfilestackX{%
+  \expandafter\pushthisfilestackY\thisfile\StackTerm
+}
+\def\pushthisfilestackY #1\StackTerm #2\StackTerm {%
+  \gdef\popthisfilestack{\gdef\thisfile{#1}\gdef\popthisfilestack{#2}}%
+}
+
+\def\popthisfilestack{\errthisfilestackempty}
+\def\errthisfilestackempty{\errmessage{Internal error:
+  the stack of filenames is empty.}}
+
+\def\thisfile{}
+
+% @center line
+% outputs that line, centered.
+%
+\parseargdef\center{%
+  \ifhmode
+    \let\next\centerH
+  \else
+    \let\next\centerV
+  \fi
+  \next{\hfil \ignorespaces#1\unskip \hfil}%
+}
+\def\centerH#1{%
+  {%
+    \hfil\break
+    \advance\hsize by -\leftskip
+    \advance\hsize by -\rightskip
+    \line{#1}%
+    \break
+  }%
+}
+\def\centerV#1{\line{\kern\leftskip #1\kern\rightskip}}
+
+% @sp n   outputs n lines of vertical space
+
+\parseargdef\sp{\vskip #1\baselineskip}
+
+% @comment ...line which is ignored...
+% @c is the same as @comment
+% @ignore ... @end ignore  is another way to write a comment
+
+\def\comment{\begingroup \catcode`\^^M=\other%
+\catcode`\@=\other \catcode`\{=\other \catcode`\}=\other%
+\commentxxx}
+{\catcode`\^^M=\other \gdef\commentxxx#1^^M{\endgroup}}
+
+\let\c=\comment
+
+% @paragraphindent NCHARS
+% We'll use ems for NCHARS, close enough.
+% NCHARS can also be the word `asis' or `none'.
+% We cannot feasibly implement @paragraphindent asis, though.
+%
+\def\asisword{asis} % no translation, these are keywords
+\def\noneword{none}
+%
+\parseargdef\paragraphindent{%
+  \def\temp{#1}%
+  \ifx\temp\asisword
+  \else
+    \ifx\temp\noneword
+      \defaultparindent = 0pt
+    \else
+      \defaultparindent = #1em
+    \fi
+  \fi
+  \parindent = \defaultparindent
+}
+
+% @exampleindent NCHARS
+% We'll use ems for NCHARS like @paragraphindent.
+% It seems @exampleindent asis isn't necessary, but
+% I preserve it to make it similar to @paragraphindent.
+\parseargdef\exampleindent{%
+  \def\temp{#1}%
+  \ifx\temp\asisword
+  \else
+    \ifx\temp\noneword
+      \lispnarrowing = 0pt
+    \else
+      \lispnarrowing = #1em
+    \fi
+  \fi
+}
+
+% @firstparagraphindent WORD
+% If WORD is `none', then suppress indentation of the first paragraph
+% after a section heading.  If WORD is `insert', then do indent at such
+% paragraphs.
+%
+% The paragraph indentation is suppressed or not by calling
+% \suppressfirstparagraphindent, which the sectioning commands do.
+% We switch the definition of this back and forth according to WORD.
+% By default, we suppress indentation.
+%
+\def\suppressfirstparagraphindent{\dosuppressfirstparagraphindent}
+\def\insertword{insert}
+%
+\parseargdef\firstparagraphindent{%
+  \def\temp{#1}%
+  \ifx\temp\noneword
+    \let\suppressfirstparagraphindent = \dosuppressfirstparagraphindent
+  \else\ifx\temp\insertword
+    \let\suppressfirstparagraphindent = \relax
+  \else
+    \errhelp = \EMsimple
+    \errmessage{Unknown @firstparagraphindent option `\temp'}%
+  \fi\fi
+}
+
+% Here is how we actually suppress indentation.  Redefine \everypar to
+% \kern backwards by \parindent, and then reset itself to empty.
+%
+% We also make \indent itself not actually do anything until the next
+% paragraph.
+%
+\gdef\dosuppressfirstparagraphindent{%
+  \gdef\indent{%
+    \restorefirstparagraphindent
+    \indent
+  }%
+  \gdef\noindent{%
+    \restorefirstparagraphindent
+    \noindent
+  }%
+  \global\everypar = {%
+    \kern -\parindent
+    \restorefirstparagraphindent
+  }%
+}
+
+\gdef\restorefirstparagraphindent{%
+  \global \let \indent = \ptexindent
+  \global \let \noindent = \ptexnoindent
+  \global \everypar = {}%
+}
+
+
+% @asis just yields its argument.  Used with @table, for example.
+%
+\def\asis#1{#1}
+
+% @math outputs its argument in math mode.
+%
+% One complication: _ usually means subscripts, but it could also mean
+% an actual _ character, as in @math{@var{some_variable} + 1}.  So make
+% _ active, and distinguish by seeing if the current family is \slfam,
+% which is what @var uses.
+{
+  \catcode`\_ = \active
+  \gdef\mathunderscore{%
+    \catcode`\_=\active
+    \def_{\ifnum\fam=\slfam \_\else\sb\fi}%
+  }
+}
+% Another complication: we want \\ (and @\) to output a \ character.
+% FYI, plain.tex uses \\ as a temporary control sequence (why?), but
+% this is not advertised and we don't care.  Texinfo does not
+% otherwise define @\.
+%
+% The \mathchar is class=0=ordinary, family=7=ttfam, position=5C=\.
+\def\mathbackslash{\ifnum\fam=\ttfam \mathchar"075C \else\backslash \fi}
+%
+\def\math{%
+  \tex
+  \mathunderscore
+  \let\\ = \mathbackslash
+  \mathactive
+  % make the texinfo accent commands work in math mode
+  \let\"=\ddot
+  \let\'=\acute
+  \let\==\bar
+  \let\^=\hat
+  \let\`=\grave
+  \let\u=\breve
+  \let\v=\check
+  \let\~=\tilde
+  \let\dotaccent=\dot
+  $\finishmath
+}
+\def\finishmath#1{#1$\endgroup}  % Close the group opened by \tex.
+
+% Some active characters (such as <) are spaced differently in math.
+% We have to reset their definitions in case the @math was an argument
+% to a command which sets the catcodes (such as @item or @section).
+%
+{
+  \catcode`^ = \active
+  \catcode`< = \active
+  \catcode`> = \active
+  \catcode`+ = \active
+  \catcode`' = \active
+  \gdef\mathactive{%
+    \let^ = \ptexhat
+    \let< = \ptexless
+    \let> = \ptexgtr
+    \let+ = \ptexplus
+    \let' = \ptexquoteright
+  }
+}
+
+% Some math mode symbols.
+\def\bullet{$\ptexbullet$}
+\def\geq{\ifmmode \ge\else $\ge$\fi}
+\def\leq{\ifmmode \le\else $\le$\fi}
+\def\minus{\ifmmode -\else $-$\fi}
+
+% @dots{} outputs an ellipsis using the current font.
+% We do .5em per period so that it has the same spacing in the cm
+% typewriter fonts as three actual period characters; on the other hand,
+% in other typewriter fonts three periods are wider than 1.5em.  So do
+% whichever is larger.
+%
+\def\dots{%
+  \leavevmode
+  \setbox0=\hbox{...}% get width of three periods
+  \ifdim\wd0 > 1.5em
+    \dimen0 = \wd0
+  \else
+    \dimen0 = 1.5em
+  \fi
+  \hbox to \dimen0{%
+    \hskip 0pt plus.25fil
+    .\hskip 0pt plus1fil
+    .\hskip 0pt plus1fil
+    .\hskip 0pt plus.5fil
+  }%
+}
+
+% @enddots{} is an end-of-sentence ellipsis.
+%
+\def\enddots{%
+  \dots
+  \spacefactor=\endofsentencespacefactor
+}
+
+% @comma{} is so commas can be inserted into text without messing up
+% Texinfo's parsing.
+%
+\let\comma = ,
+
+% @refill is a no-op.
+\let\refill=\relax
+
+% If working on a large document in chapters, it is convenient to
+% be able to disable indexing, cross-referencing, and contents, for test runs.
+% This is done with @novalidate (before @setfilename).
+%
+\newif\iflinks \linkstrue % by default we want the aux files.
+\let\novalidate = \linksfalse
+
+% @setfilename is done at the beginning of every texinfo file.
+% So open here the files we need to have open while reading the input.
+% This makes it possible to make a .fmt file for texinfo.
+\def\setfilename{%
+   \fixbackslash  % Turn off hack to swallow `\input texinfo'.
+   \iflinks
+     \tryauxfile
+     % Open the new aux file.  TeX will close it automatically at exit.
+     \immediate\openout\auxfile=\jobname.aux
+   \fi % \openindices needs to do some work in any case.
+   \openindices
+   \let\setfilename=\comment % Ignore extra @setfilename cmds.
+   %
+   % If texinfo.cnf is present on the system, read it.
+   % Useful for site-wide @afourpaper, etc.
+   \openin 1 texinfo.cnf
+   \ifeof 1 \else \input texinfo.cnf \fi
+   \closein 1
+   %
+   \comment % Ignore the actual filename.
+}
+
+% Called from \setfilename.
+%
+\def\openindices{%
+  \newindex{cp}%
+  \newcodeindex{fn}%
+  \newcodeindex{vr}%
+  \newcodeindex{tp}%
+  \newcodeindex{ky}%
+  \newcodeindex{pg}%
+}
+
+% @bye.
+\outer\def\bye{\pagealignmacro\tracingstats=1\ptexend}
+
+
+\message{pdf,}
+% adobe `portable' document format
+\newcount\tempnum
+\newcount\lnkcount
+\newtoks\filename
+\newcount\filenamelength
+\newcount\pgn
+\newtoks\toksA
+\newtoks\toksB
+\newtoks\toksC
+\newtoks\toksD
+\newbox\boxA
+\newcount\countA
+\newif\ifpdf
+\newif\ifpdfmakepagedest
+
+% when pdftex is run in dvi mode, \pdfoutput is defined (so \pdfoutput=1
+% can be set).  So we test for \relax and 0 as well as \undefined,
+% borrowed from ifpdf.sty.
+\ifx\pdfoutput\undefined
+\else
+  \ifx\pdfoutput\relax
+  \else
+    \ifcase\pdfoutput
+    \else
+      \pdftrue
+    \fi
+  \fi
+\fi
+
+% PDF uses PostScript string constants for the names of xref targets,
+% for display in the outlines, and in other places.  Thus, we have to
+% double any backslashes.  Otherwise, a name like "\node" will be
+% interpreted as a newline (\n), followed by o, d, e.  Not good.
+% http://www.ntg.nl/pipermail/ntg-pdftex/2004-July/000654.html
+% (and related messages, the final outcome is that it is up to the TeX
+% user to double the backslashes and otherwise make the string valid, so
+% that's what we do).
+
+% double active backslashes.
+%
+{\catcode`\@=0 \catcode`\\=\active
+ @gdef@activebackslashdouble{%
+   @catcode`@\=@active
+   @let\=@doublebackslash}
+}
+
+% To handle parens, we must adopt a different approach, since parens are
+% not active characters.  hyperref.dtx (which has the same problem as
+% us) handles it with this amazing macro to replace tokens, with minor
+% changes for Texinfo.  It is included here under the GPL by permission
+% from the author, Heiko Oberdiek.
+%
+% #1 is the tokens to replace.
+% #2 is the replacement.
+% #3 is the control sequence with the string.
+%
+\def\HyPsdSubst#1#2#3{%
+  \def\HyPsdReplace##1#1##2\END{%
+    ##1%
+    \ifx\\##2\\%
+    \else
+      #2%
+      \HyReturnAfterFi{%
+        \HyPsdReplace##2\END
+      }%
+    \fi
+  }%
+  \xdef#3{\expandafter\HyPsdReplace#3#1\END}%
+}
+\long\def\HyReturnAfterFi#1\fi{\fi#1}
+
+% #1 is a control sequence in which to do the replacements.
+\def\backslashparens#1{%
+  \xdef#1{#1}% redefine it as its expansion; the definition is simply
+             % \lastnode when called from \setref -> \pdfmkdest.
+  \HyPsdSubst{(}{\realbackslash(}{#1}%
+  \HyPsdSubst{)}{\realbackslash)}{#1}%
+}
+
+\newhelp\nopdfimagehelp{Texinfo supports .png, .jpg, .jpeg, and .pdf images
+with PDF output, and none of those formats could be found.  (.eps cannot
+be supported due to the design of the PDF format; use regular TeX (DVI
+output) for that.)}
+
+\ifpdf
+  %
+  % Color manipulation macros based on pdfcolor.tex,
+  % except using rgb instead of cmyk; the latter is said to render as a
+  % very dark gray on-screen and a very dark halftone in print, instead
+  % of actual black.
+  \def\rgbDarkRed{0.50 0.09 0.12}
+  \def\rgbBlack{0 0 0}
+  %
+  % k sets the color for filling (usual text, etc.);
+  % K sets the color for stroking (thin rules, e.g., normal _'s).
+  \def\pdfsetcolor#1{\pdfliteral{#1 rg  #1 RG}}
+  %
+  % Set color, and create a mark which defines \thiscolor accordingly,
+  % so that \makeheadline knows which color to restore.
+  \def\setcolor#1{%
+    \xdef\lastcolordefs{\gdef\noexpand\thiscolor{#1}}%
+    \domark
+    \pdfsetcolor{#1}%
+  }
+  %
+  \def\maincolor{\rgbBlack}
+  \pdfsetcolor{\maincolor}
+  \edef\thiscolor{\maincolor}
+  \def\lastcolordefs{}
+  %
+  \def\makefootline{%
+    \baselineskip24pt
+    \line{\pdfsetcolor{\maincolor}\the\footline}%
+  }
+  %
+  \def\makeheadline{%
+    \vbox to 0pt{%
+      \vskip-22.5pt
+      \line{%
+        \vbox to8.5pt{}%
+        % Extract \thiscolor definition from the marks.
+        \getcolormarks
+        % Typeset the headline with \maincolor, then restore the color.
+        \pdfsetcolor{\maincolor}\the\headline\pdfsetcolor{\thiscolor}%
+      }%
+      \vss
+    }%
+    \nointerlineskip
+  }
+  %
+  %
+  \pdfcatalog{/PageMode /UseOutlines}
+  %
+  % #1 is image name, #2 width (might be empty/whitespace), #3 height (ditto).
+  \def\dopdfimage#1#2#3{%
+    \def\imagewidth{#2}\setbox0 = \hbox{\ignorespaces #2}%
+    \def\imageheight{#3}\setbox2 = \hbox{\ignorespaces #3}%
+    %
+    % pdftex (and the PDF format) support .png, .jpg, .pdf (among
+    % others).  Let's try in that order.
+    \let\pdfimgext=\empty
+    \begingroup
+      \openin 1 #1.png \ifeof 1
+        \openin 1 #1.jpg \ifeof 1
+          \openin 1 #1.jpeg \ifeof 1
+            \openin 1 #1.JPG \ifeof 1
+              \openin 1 #1.pdf \ifeof 1
+                \openin 1 #1.PDF \ifeof 1
+                  \errhelp = \nopdfimagehelp
+                  \errmessage{Could not find image file #1 for pdf}%
+                \else \gdef\pdfimgext{PDF}%
+                \fi
+              \else \gdef\pdfimgext{pdf}%
+              \fi
+            \else \gdef\pdfimgext{JPG}%
+            \fi
+          \else \gdef\pdfimgext{jpeg}%
+          \fi
+        \else \gdef\pdfimgext{jpg}%
+        \fi
+      \else \gdef\pdfimgext{png}%
+      \fi
+      \closein 1
+    \endgroup
+    %
+    % without \immediate, ancient pdftex seg faults when the same image is
+    % included twice.  (Version 3.14159-pre-1.0-unofficial-20010704.)
+    \ifnum\pdftexversion < 14
+      \immediate\pdfimage
+    \else
+      \immediate\pdfximage
+    \fi
+      \ifdim \wd0 >0pt width \imagewidth \fi
+      \ifdim \wd2 >0pt height \imageheight \fi
+      \ifnum\pdftexversion<13
+         #1.\pdfimgext
+       \else
+         {#1.\pdfimgext}%
+       \fi
+    \ifnum\pdftexversion < 14 \else
+      \pdfrefximage \pdflastximage
+    \fi}
+  %
+  \def\pdfmkdest#1{{%
+    % We have to set dummies so commands such as @code, and characters
+    % such as \, aren't expanded when present in a section title.
+    \indexnofonts
+    \turnoffactive
+    \activebackslashdouble
+    \makevalueexpandable
+    \def\pdfdestname{#1}%
+    \backslashparens\pdfdestname
+    \safewhatsit{\pdfdest name{\pdfdestname} xyz}%
+  }}
+  %
+  % used to mark target names; must be expandable.
+  \def\pdfmkpgn#1{#1}
+  %
+  % by default, use a color that is dark enough to print on paper as
+  % nearly black, but still distinguishable for online viewing.
+  \def\urlcolor{\rgbDarkRed}
+  \def\linkcolor{\rgbDarkRed}
+  \def\endlink{\setcolor{\maincolor}\pdfendlink}
+  %
+  % Adding outlines to PDF; macros for calculating structure of outlines
+  % come from Petr Olsak
+  \def\expnumber#1{\expandafter\ifx\csname#1\endcsname\relax 0%
+    \else \csname#1\endcsname \fi}
+  \def\advancenumber#1{\tempnum=\expnumber{#1}\relax
+    \advance\tempnum by 1
+    \expandafter\xdef\csname#1\endcsname{\the\tempnum}}
+  %
+  % #1 is the section text, which is what will be displayed in the
+  % outline by the pdf viewer.  #2 is the pdf expression for the number
+  % of subentries (or empty, for subsubsections).  #3 is the node text,
+  % which might be empty if this toc entry had no corresponding node.
+  % #4 is the page number
+  %
+  \def\dopdfoutline#1#2#3#4{%
+    % Generate a link to the node text if that exists; else, use the
+    % page number.  We could generate a destination for the section
+    % text in the case where a section has no node, but it doesn't
+    % seem worth the trouble, since most documents are normally structured.
+    \def\pdfoutlinedest{#3}%
+    \ifx\pdfoutlinedest\empty
+      \def\pdfoutlinedest{#4}%
+    \else
+      % Doubled backslashes in the name.
+      {\activebackslashdouble \xdef\pdfoutlinedest{#3}%
+       \backslashparens\pdfoutlinedest}%
+    \fi
+    %
+    % Also double the backslashes in the display string.
+    {\activebackslashdouble \xdef\pdfoutlinetext{#1}%
+     \backslashparens\pdfoutlinetext}%
+    %
+    \pdfoutline goto name{\pdfmkpgn{\pdfoutlinedest}}#2{\pdfoutlinetext}%
+  }
+  %
+  \def\pdfmakeoutlines{%
+    \begingroup
+      % Thanh's hack / proper braces in bookmarks
+      \edef\mylbrace{\iftrue \string{\else}\fi}\let\{=\mylbrace
+      \edef\myrbrace{\iffalse{\else\string}\fi}\let\}=\myrbrace
+      %
+      % Read toc silently, to get counts of subentries for \pdfoutline.
+      \def\numchapentry##1##2##3##4{%
+	\def\thischapnum{##2}%
+	\def\thissecnum{0}%
+	\def\thissubsecnum{0}%
+      }%
+      \def\numsecentry##1##2##3##4{%
+	\advancenumber{chap\thischapnum}%
+	\def\thissecnum{##2}%
+	\def\thissubsecnum{0}%
+      }%
+      \def\numsubsecentry##1##2##3##4{%
+	\advancenumber{sec\thissecnum}%
+	\def\thissubsecnum{##2}%
+      }%
+      \def\numsubsubsecentry##1##2##3##4{%
+	\advancenumber{subsec\thissubsecnum}%
+      }%
+      \def\thischapnum{0}%
+      \def\thissecnum{0}%
+      \def\thissubsecnum{0}%
+      %
+      % use \def rather than \let here because we redefine \chapentry et
+      % al. a second time, below.
+      \def\appentry{\numchapentry}%
+      \def\appsecentry{\numsecentry}%
+      \def\appsubsecentry{\numsubsecentry}%
+      \def\appsubsubsecentry{\numsubsubsecentry}%
+      \def\unnchapentry{\numchapentry}%
+      \def\unnsecentry{\numsecentry}%
+      \def\unnsubsecentry{\numsubsecentry}%
+      \def\unnsubsubsecentry{\numsubsubsecentry}%
+      \readdatafile{toc}%
+      %
+      % Read toc second time, this time actually producing the outlines.
+      % The `-' means take the \expnumber as the absolute number of
+      % subentries, which we calculated on our first read of the .toc above.
+      %
+      % We use the node names as the destinations.
+      \def\numchapentry##1##2##3##4{%
+        \dopdfoutline{##1}{count-\expnumber{chap##2}}{##3}{##4}}%
+      \def\numsecentry##1##2##3##4{%
+        \dopdfoutline{##1}{count-\expnumber{sec##2}}{##3}{##4}}%
+      \def\numsubsecentry##1##2##3##4{%
+        \dopdfoutline{##1}{count-\expnumber{subsec##2}}{##3}{##4}}%
+      \def\numsubsubsecentry##1##2##3##4{% count is always zero
+        \dopdfoutline{##1}{}{##3}{##4}}%
+      %
+      % PDF outlines are displayed using system fonts, instead of
+      % document fonts.  Therefore we cannot use special characters,
+      % since the encoding is unknown.  For example, the eogonek from
+      % Latin 2 (0xea) gets translated to a | character.  Info from
+      % Staszek Wawrykiewicz, 19 Jan 2004 04:09:24 +0100.
+      %
+      % xx to do this right, we have to translate 8-bit characters to
+      % their "best" equivalent, based on the @documentencoding.  Right
+      % now, I guess we'll just let the pdf reader have its way.
+      \indexnofonts
+      \setupdatafile
+      \catcode`\\=\active \otherbackslash
+      \input \tocreadfilename
+    \endgroup
+  }
+  %
+  \def\skipspaces#1{\def\PP{#1}\def\D{|}%
+    \ifx\PP\D\let\nextsp\relax
+    \else\let\nextsp\skipspaces
+      \ifx\p\space\else\addtokens{\filename}{\PP}%
+        \advance\filenamelength by 1
+      \fi
+    \fi
+    \nextsp}
+  \def\getfilename#1{\filenamelength=0\expandafter\skipspaces#1|\relax}
+  \ifnum\pdftexversion < 14
+    \let \startlink \pdfannotlink
+  \else
+    \let \startlink \pdfstartlink
+  \fi
+  % make a live url in pdf output.
+  \def\pdfurl#1{%
+    \begingroup
+      % it seems we really need yet another set of dummies; have not
+      % tried to figure out what each command should do in the context
+      % of @url.  for now, just make @/ a no-op, that's the only one
+      % people have actually reported a problem with.
+      %
+      \normalturnoffactive
+      \def\@{@}%
+      \let\/=\empty
+      \makevalueexpandable
+      % do we want to go so far as to use \indexnofonts instead of just
+      % special-casing \var here?
+      \def\var##1{##1}%
+      %
+      \leavevmode\setcolor{\urlcolor}%
+      \startlink attr{/Border [0 0 0]}%
+        user{/Subtype /Link /A << /S /URI /URI (#1) >>}%
+    \endgroup}
+  \def\pdfgettoks#1.{\setbox\boxA=\hbox{\toksA={#1.}\toksB={}\maketoks}}
+  \def\addtokens#1#2{\edef\addtoks{\noexpand#1={\the#1#2}}\addtoks}
+  \def\adn#1{\addtokens{\toksC}{#1}\global\countA=1\let\next=\maketoks}
+  \def\poptoks#1#2|ENDTOKS|{\let\first=#1\toksD={#1}\toksA={#2}}
+  \def\maketoks{%
+    \expandafter\poptoks\the\toksA|ENDTOKS|\relax
+    \ifx\first0\adn0
+    \else\ifx\first1\adn1 \else\ifx\first2\adn2 \else\ifx\first3\adn3
+    \else\ifx\first4\adn4 \else\ifx\first5\adn5 \else\ifx\first6\adn6
+    \else\ifx\first7\adn7 \else\ifx\first8\adn8 \else\ifx\first9\adn9
+    \else
+      \ifnum0=\countA\else\makelink\fi
+      \ifx\first.\let\next=\done\else
+        \let\next=\maketoks
+        \addtokens{\toksB}{\the\toksD}
+        \ifx\first,\addtokens{\toksB}{\space}\fi
+      \fi
+    \fi\fi\fi\fi\fi\fi\fi\fi\fi\fi
+    \next}
+  \def\makelink{\addtokens{\toksB}%
+    {\noexpand\pdflink{\the\toksC}}\toksC={}\global\countA=0}
+  \def\pdflink#1{%
+    \startlink attr{/Border [0 0 0]} goto name{\pdfmkpgn{#1}}
+    \setcolor{\linkcolor}#1\endlink}
+  \def\done{\edef\st{\global\noexpand\toksA={\the\toksB}}\st}
+\else
+  % non-pdf mode
+  \let\pdfmkdest = \gobble
+  \let\pdfurl = \gobble
+  \let\endlink = \relax
+  \let\setcolor = \gobble
+  \let\pdfsetcolor = \gobble
+  \let\pdfmakeoutlines = \relax
+\fi  % \ifx\pdfoutput
+
+
+\message{fonts,}
+
+% Change the current font style to #1, remembering it in \curfontstyle.
+% For now, we do not accumulate font styles: @b{@i{foo}} prints foo in
+% italics, not bold italics.
+%
+\def\setfontstyle#1{%
+  \def\curfontstyle{#1}% not as a control sequence, because we are \edef'd.
+  \csname ten#1\endcsname  % change the current font
+}
+
+% Select #1 fonts with the current style.
+%
+\def\selectfonts#1{\csname #1fonts\endcsname \csname\curfontstyle\endcsname}
+
+\def\rm{\fam=0 \setfontstyle{rm}}
+\def\it{\fam=\itfam \setfontstyle{it}}
+\def\sl{\fam=\slfam \setfontstyle{sl}}
+\def\bf{\fam=\bffam \setfontstyle{bf}}\def\bfstylename{bf}
+\def\tt{\fam=\ttfam \setfontstyle{tt}}
+
+% Unfortunately, we have to override this for titles and the like, since
+% in those cases "rm" is bold.  Sigh.
+\def\rmisbold{\rm\def\curfontstyle{bf}}
+
+% Texinfo sort of supports the sans serif font style, which plain TeX does not.
+% So we set up a \sf.
+\newfam\sffam
+\def\sf{\fam=\sffam \setfontstyle{sf}}
+\let\li = \sf % Sometimes we call it \li, not \sf.
+
+% We don't need math for this font style.
+\def\ttsl{\setfontstyle{ttsl}}
+
+
+% Default leading.
+\newdimen\textleading  \textleading = 13.2pt
+
+% Set the baselineskip to #1, and the lineskip and strut size
+% correspondingly.  There is no deep meaning behind these magic numbers
+% used as factors; they just match (closely enough) what Knuth defined.
+%
+\def\lineskipfactor{.08333}
+\def\strutheightpercent{.70833}
+\def\strutdepthpercent {.29167}
+%
+% can get a sort of poor man's double spacing by redefining this.
+\def\baselinefactor{1}
+%
+\def\setleading#1{%
+  \dimen0 = #1\relax
+  \normalbaselineskip = \baselinefactor\dimen0
+  \normallineskip = \lineskipfactor\normalbaselineskip
+  \normalbaselines
+  \setbox\strutbox =\hbox{%
+    \vrule width0pt height\strutheightpercent\baselineskip
+                    depth \strutdepthpercent \baselineskip
+  }%
+}
+
+% PDF CMaps.  See also LaTeX's t1.cmap.
+%
+% do nothing with this by default.
+\expandafter\let\csname cmapOT1\endcsname\gobble
+\expandafter\let\csname cmapOT1IT\endcsname\gobble
+\expandafter\let\csname cmapOT1TT\endcsname\gobble
+
+% if we are producing pdf, and we have \pdffontattr, then define cmaps.
+% (\pdffontattr was introduced many years ago, but people still run
+% older pdftex's; it's easy to conditionalize, so we do.)
+\ifpdf \ifx\pdffontattr\undefined \else
+  \begingroup
+    \catcode`\^^M=\active \def^^M{^^J}% Output line endings as the ^^J char.
+    \catcode`\%=12 \immediate\pdfobj stream {%!PS-Adobe-3.0 Resource-CMap
+%%DocumentNeededResources: ProcSet (CIDInit)
+%%IncludeResource: ProcSet (CIDInit)
+%%BeginResource: CMap (TeX-OT1-0)
+%%Title: (TeX-OT1-0 TeX OT1 0)
+%%Version: 1.000
+%%EndComments
+/CIDInit /ProcSet findresource begin
+12 dict begin
+begincmap
+/CIDSystemInfo
+<< /Registry (TeX)
+/Ordering (OT1)
+/Supplement 0
+>> def
+/CMapName /TeX-OT1-0 def
+/CMapType 2 def
+1 begincodespacerange
+<00> <7F>
+endcodespacerange
+8 beginbfrange
+<00> <01> <0393>
+<09> <0A> <03A8>
+<23> <26> <0023>
+<28> <3B> <0028>
+<3F> <5B> <003F>
+<5D> <5E> <005D>
+<61> <7A> <0061>
+<7B> <7C> <2013>
+endbfrange
+40 beginbfchar
+<02> <0398>
+<03> <039B>
+<04> <039E>
+<05> <03A0>
+<06> <03A3>
+<07> <03D2>
+<08> <03A6>
+<0B> <00660066>
+<0C> <00660069>
+<0D> <0066006C>
+<0E> <006600660069>
+<0F> <00660066006C>
+<10> <0131>
+<11> <0237>
+<12> <0060>
+<13> <00B4>
+<14> <02C7>
+<15> <02D8>
+<16> <00AF>
+<17> <02DA>
+<18> <00B8>
+<19> <00DF>
+<1A> <00E6>
+<1B> <0153>
+<1C> <00F8>
+<1D> <00C6>
+<1E> <0152>
+<1F> <00D8>
+<21> <0021>
+<22> <201D>
+<27> <2019>
+<3C> <00A1>
+<3D> <003D>
+<3E> <00BF>
+<5C> <201C>
+<5F> <02D9>
+<60> <2018>
+<7D> <02DD>
+<7E> <007E>
+<7F> <00A8>
+endbfchar
+endcmap
+CMapName currentdict /CMap defineresource pop
+end
+end
+%%EndResource
+%%EOF
+    }\endgroup
+  \expandafter\edef\csname cmapOT1\endcsname#1{%
+    \pdffontattr#1{/ToUnicode \the\pdflastobj\space 0 R}%
+  }%
+%
+% \cmapOT1IT
+  \begingroup
+    \catcode`\^^M=\active \def^^M{^^J}% Output line endings as the ^^J char.
+    \catcode`\%=12 \immediate\pdfobj stream {%!PS-Adobe-3.0 Resource-CMap
+%%DocumentNeededResources: ProcSet (CIDInit)
+%%IncludeResource: ProcSet (CIDInit)
+%%BeginResource: CMap (TeX-OT1IT-0)
+%%Title: (TeX-OT1IT-0 TeX OT1IT 0)
+%%Version: 1.000
+%%EndComments
+/CIDInit /ProcSet findresource begin
+12 dict begin
+begincmap
+/CIDSystemInfo
+<< /Registry (TeX)
+/Ordering (OT1IT)
+/Supplement 0
+>> def
+/CMapName /TeX-OT1IT-0 def
+/CMapType 2 def
+1 begincodespacerange
+<00> <7F>
+endcodespacerange
+8 beginbfrange
+<00> <01> <0393>
+<09> <0A> <03A8>
+<25> <26> <0025>
+<28> <3B> <0028>
+<3F> <5B> <003F>
+<5D> <5E> <005D>
+<61> <7A> <0061>
+<7B> <7C> <2013>
+endbfrange
+42 beginbfchar
+<02> <0398>
+<03> <039B>
+<04> <039E>
+<05> <03A0>
+<06> <03A3>
+<07> <03D2>
+<08> <03A6>
+<0B> <00660066>
+<0C> <00660069>
+<0D> <0066006C>
+<0E> <006600660069>
+<0F> <00660066006C>
+<10> <0131>
+<11> <0237>
+<12> <0060>
+<13> <00B4>
+<14> <02C7>
+<15> <02D8>
+<16> <00AF>
+<17> <02DA>
+<18> <00B8>
+<19> <00DF>
+<1A> <00E6>
+<1B> <0153>
+<1C> <00F8>
+<1D> <00C6>
+<1E> <0152>
+<1F> <00D8>
+<21> <0021>
+<22> <201D>
+<23> <0023>
+<24> <00A3>
+<27> <2019>
+<3C> <00A1>
+<3D> <003D>
+<3E> <00BF>
+<5C> <201C>
+<5F> <02D9>
+<60> <2018>
+<7D> <02DD>
+<7E> <007E>
+<7F> <00A8>
+endbfchar
+endcmap
+CMapName currentdict /CMap defineresource pop
+end
+end
+%%EndResource
+%%EOF
+    }\endgroup
+  \expandafter\edef\csname cmapOT1IT\endcsname#1{%
+    \pdffontattr#1{/ToUnicode \the\pdflastobj\space 0 R}%
+  }%
+%
+% \cmapOT1TT
+  \begingroup
+    \catcode`\^^M=\active \def^^M{^^J}% Output line endings as the ^^J char.
+    \catcode`\%=12 \immediate\pdfobj stream {%!PS-Adobe-3.0 Resource-CMap
+%%DocumentNeededResources: ProcSet (CIDInit)
+%%IncludeResource: ProcSet (CIDInit)
+%%BeginResource: CMap (TeX-OT1TT-0)
+%%Title: (TeX-OT1TT-0 TeX OT1TT 0)
+%%Version: 1.000
+%%EndComments
+/CIDInit /ProcSet findresource begin
+12 dict begin
+begincmap
+/CIDSystemInfo
+<< /Registry (TeX)
+/Ordering (OT1TT)
+/Supplement 0
+>> def
+/CMapName /TeX-OT1TT-0 def
+/CMapType 2 def
+1 begincodespacerange
+<00> <7F>
+endcodespacerange
+5 beginbfrange
+<00> <01> <0393>
+<09> <0A> <03A8>
+<21> <26> <0021>
+<28> <5F> <0028>
+<61> <7E> <0061>
+endbfrange
+32 beginbfchar
+<02> <0398>
+<03> <039B>
+<04> <039E>
+<05> <03A0>
+<06> <03A3>
+<07> <03D2>
+<08> <03A6>
+<0B> <2191>
+<0C> <2193>
+<0D> <0027>
+<0E> <00A1>
+<0F> <00BF>
+<10> <0131>
+<11> <0237>
+<12> <0060>
+<13> <00B4>
+<14> <02C7>
+<15> <02D8>
+<16> <00AF>
+<17> <02DA>
+<18> <00B8>
+<19> <00DF>
+<1A> <00E6>
+<1B> <0153>
+<1C> <00F8>
+<1D> <00C6>
+<1E> <0152>
+<1F> <00D8>
+<20> <2423>
+<27> <2019>
+<60> <2018>
+<7F> <00A8>
+endbfchar
+endcmap
+CMapName currentdict /CMap defineresource pop
+end
+end
+%%EndResource
+%%EOF
+    }\endgroup
+  \expandafter\edef\csname cmapOT1TT\endcsname#1{%
+    \pdffontattr#1{/ToUnicode \the\pdflastobj\space 0 R}%
+  }%
+\fi\fi
+
+
+% Set the font macro #1 to the font named #2, adding on the
+% specified font prefix (normally `cm').
+% #3 is the font's design size, #4 is a scale factor, #5 is the CMap
+% encoding (currently only OT1, OT1IT and OT1TT are allowed, pass
+% empty to omit).
+\def\setfont#1#2#3#4#5{%
+  \font#1=\fontprefix#2#3 scaled #4
+  \csname cmap#5\endcsname#1%
+}
+% This is what gets called when #5 of \setfont is empty.
+\let\cmap\gobble
+% emacs-page end of cmaps
+
+% Use cm as the default font prefix.
+% To specify the font prefix, you must define \fontprefix
+% before you read in texinfo.tex.
+\ifx\fontprefix\undefined
+\def\fontprefix{cm}
+\fi
+% Support font families that don't use the same naming scheme as CM.
+\def\rmshape{r}
+\def\rmbshape{bx}               %where the normal face is bold
+\def\bfshape{b}
+\def\bxshape{bx}
+\def\ttshape{tt}
+\def\ttbshape{tt}
+\def\ttslshape{sltt}
+\def\itshape{ti}
+\def\itbshape{bxti}
+\def\slshape{sl}
+\def\slbshape{bxsl}
+\def\sfshape{ss}
+\def\sfbshape{ss}
+\def\scshape{csc}
+\def\scbshape{csc}
+
+% Definitions for a main text size of 11pt.  This is the default in
+% Texinfo.
+%
+\def\definetextfontsizexi{%
+% Text fonts (11.2pt, magstep1).
+\def\textnominalsize{11pt}
+\edef\mainmagstep{\magstephalf}
+\setfont\textrm\rmshape{10}{\mainmagstep}{OT1}
+\setfont\texttt\ttshape{10}{\mainmagstep}{OT1TT}
+\setfont\textbf\bfshape{10}{\mainmagstep}{OT1}
+\setfont\textit\itshape{10}{\mainmagstep}{OT1IT}
+\setfont\textsl\slshape{10}{\mainmagstep}{OT1}
+\setfont\textsf\sfshape{10}{\mainmagstep}{OT1}
+\setfont\textsc\scshape{10}{\mainmagstep}{OT1}
+\setfont\textttsl\ttslshape{10}{\mainmagstep}{OT1TT}
+\font\texti=cmmi10 scaled \mainmagstep
+\font\textsy=cmsy10 scaled \mainmagstep
+\def\textecsize{1095}
+
+% A few fonts for @defun names and args.
+\setfont\defbf\bfshape{10}{\magstep1}{OT1}
+\setfont\deftt\ttshape{10}{\magstep1}{OT1TT}
+\setfont\defttsl\ttslshape{10}{\magstep1}{OT1TT}
+\def\df{\let\tentt=\deftt \let\tenbf = \defbf \let\tenttsl=\defttsl \bf}
+
+% Fonts for indices, footnotes, small examples (9pt).
+\def\smallnominalsize{9pt}
+\setfont\smallrm\rmshape{9}{1000}{OT1}
+\setfont\smalltt\ttshape{9}{1000}{OT1TT}
+\setfont\smallbf\bfshape{10}{900}{OT1}
+\setfont\smallit\itshape{9}{1000}{OT1IT}
+\setfont\smallsl\slshape{9}{1000}{OT1}
+\setfont\smallsf\sfshape{9}{1000}{OT1}
+\setfont\smallsc\scshape{10}{900}{OT1}
+\setfont\smallttsl\ttslshape{10}{900}{OT1TT}
+\font\smalli=cmmi9
+\font\smallsy=cmsy9
+\def\smallecsize{0900}
+
+% Fonts for small examples (8pt).
+\def\smallernominalsize{8pt}
+\setfont\smallerrm\rmshape{8}{1000}{OT1}
+\setfont\smallertt\ttshape{8}{1000}{OT1TT}
+\setfont\smallerbf\bfshape{10}{800}{OT1}
+\setfont\smallerit\itshape{8}{1000}{OT1IT}
+\setfont\smallersl\slshape{8}{1000}{OT1}
+\setfont\smallersf\sfshape{8}{1000}{OT1}
+\setfont\smallersc\scshape{10}{800}{OT1}
+\setfont\smallerttsl\ttslshape{10}{800}{OT1TT}
+\font\smalleri=cmmi8
+\font\smallersy=cmsy8
+\def\smallerecsize{0800}
+
+% Fonts for title page (20.4pt):
+\def\titlenominalsize{20pt}
+\setfont\titlerm\rmbshape{12}{\magstep3}{OT1}
+\setfont\titleit\itbshape{10}{\magstep4}{OT1IT}
+\setfont\titlesl\slbshape{10}{\magstep4}{OT1}
+\setfont\titlett\ttbshape{12}{\magstep3}{OT1TT}
+\setfont\titlettsl\ttslshape{10}{\magstep4}{OT1TT}
+\setfont\titlesf\sfbshape{17}{\magstep1}{OT1}
+\let\titlebf=\titlerm
+\setfont\titlesc\scbshape{10}{\magstep4}{OT1}
+\font\titlei=cmmi12 scaled \magstep3
+\font\titlesy=cmsy10 scaled \magstep4
+\def\titleecsize{2074}
+
+% Chapter (and unnumbered) fonts (17.28pt).
+\def\chapnominalsize{17pt}
+\setfont\chaprm\rmbshape{12}{\magstep2}{OT1}
+\setfont\chapit\itbshape{10}{\magstep3}{OT1IT}
+\setfont\chapsl\slbshape{10}{\magstep3}{OT1}
+\setfont\chaptt\ttbshape{12}{\magstep2}{OT1TT}
+\setfont\chapttsl\ttslshape{10}{\magstep3}{OT1TT}
+\setfont\chapsf\sfbshape{17}{1000}{OT1}
+\let\chapbf=\chaprm
+\setfont\chapsc\scbshape{10}{\magstep3}{OT1}
+\font\chapi=cmmi12 scaled \magstep2
+\font\chapsy=cmsy10 scaled \magstep3
+\def\chapecsize{1728}
+
+% Section fonts (14.4pt).
+\def\secnominalsize{14pt}
+\setfont\secrm\rmbshape{12}{\magstep1}{OT1}
+\setfont\secit\itbshape{10}{\magstep2}{OT1IT}
+\setfont\secsl\slbshape{10}{\magstep2}{OT1}
+\setfont\sectt\ttbshape{12}{\magstep1}{OT1TT}
+\setfont\secttsl\ttslshape{10}{\magstep2}{OT1TT}
+\setfont\secsf\sfbshape{12}{\magstep1}{OT1}
+\let\secbf\secrm
+\setfont\secsc\scbshape{10}{\magstep2}{OT1}
+\font\seci=cmmi12 scaled \magstep1
+\font\secsy=cmsy10 scaled \magstep2
+\def\sececsize{1440}
+
+% Subsection fonts (13.15pt).
+\def\ssecnominalsize{13pt}
+\setfont\ssecrm\rmbshape{12}{\magstephalf}{OT1}
+\setfont\ssecit\itbshape{10}{1315}{OT1IT}
+\setfont\ssecsl\slbshape{10}{1315}{OT1}
+\setfont\ssectt\ttbshape{12}{\magstephalf}{OT1TT}
+\setfont\ssecttsl\ttslshape{10}{1315}{OT1TT}
+\setfont\ssecsf\sfbshape{12}{\magstephalf}{OT1}
+\let\ssecbf\ssecrm
+\setfont\ssecsc\scbshape{10}{1315}{OT1}
+\font\sseci=cmmi12 scaled \magstephalf
+\font\ssecsy=cmsy10 scaled 1315
+\def\ssececsize{1200}
+
+% Reduced fonts for @acro in text (10pt).
+\def\reducednominalsize{10pt}
+\setfont\reducedrm\rmshape{10}{1000}{OT1}
+\setfont\reducedtt\ttshape{10}{1000}{OT1TT}
+\setfont\reducedbf\bfshape{10}{1000}{OT1}
+\setfont\reducedit\itshape{10}{1000}{OT1IT}
+\setfont\reducedsl\slshape{10}{1000}{OT1}
+\setfont\reducedsf\sfshape{10}{1000}{OT1}
+\setfont\reducedsc\scshape{10}{1000}{OT1}
+\setfont\reducedttsl\ttslshape{10}{1000}{OT1TT}
+\font\reducedi=cmmi10
+\font\reducedsy=cmsy10
+\def\reducedecsize{1000}
+
+% reset the current fonts
+\textfonts
+\rm
+} % end of 11pt text font size definitions
+
+
+% Definitions to make the main text be 10pt Computer Modern, with
+% section, chapter, etc., sizes following suit.  This is for the GNU
+% Press printing of the Emacs 22 manual.  Maybe other manuals in the
+% future.  Used with @smallbook, which sets the leading to 12pt.
+%
+\def\definetextfontsizex{%
+% Text fonts (10pt).
+\def\textnominalsize{10pt}
+\edef\mainmagstep{1000}
+\setfont\textrm\rmshape{10}{\mainmagstep}{OT1}
+\setfont\texttt\ttshape{10}{\mainmagstep}{OT1TT}
+\setfont\textbf\bfshape{10}{\mainmagstep}{OT1}
+\setfont\textit\itshape{10}{\mainmagstep}{OT1IT}
+\setfont\textsl\slshape{10}{\mainmagstep}{OT1}
+\setfont\textsf\sfshape{10}{\mainmagstep}{OT1}
+\setfont\textsc\scshape{10}{\mainmagstep}{OT1}
+\setfont\textttsl\ttslshape{10}{\mainmagstep}{OT1TT}
+\font\texti=cmmi10 scaled \mainmagstep
+\font\textsy=cmsy10 scaled \mainmagstep
+\def\textecsize{1000}
+
+% A few fonts for @defun names and args.
+\setfont\defbf\bfshape{10}{\magstephalf}{OT1}
+\setfont\deftt\ttshape{10}{\magstephalf}{OT1TT}
+\setfont\defttsl\ttslshape{10}{\magstephalf}{OT1TT}
+\def\df{\let\tentt=\deftt \let\tenbf = \defbf \let\tenttsl=\defttsl \bf}
+
+% Fonts for indices, footnotes, small examples (9pt).
+\def\smallnominalsize{9pt}
+\setfont\smallrm\rmshape{9}{1000}{OT1}
+\setfont\smalltt\ttshape{9}{1000}{OT1TT}
+\setfont\smallbf\bfshape{10}{900}{OT1}
+\setfont\smallit\itshape{9}{1000}{OT1IT}
+\setfont\smallsl\slshape{9}{1000}{OT1}
+\setfont\smallsf\sfshape{9}{1000}{OT1}
+\setfont\smallsc\scshape{10}{900}{OT1}
+\setfont\smallttsl\ttslshape{10}{900}{OT1TT}
+\font\smalli=cmmi9
+\font\smallsy=cmsy9
+\def\smallecsize{0900}
+
+% Fonts for small examples (8pt).
+\def\smallernominalsize{8pt}
+\setfont\smallerrm\rmshape{8}{1000}{OT1}
+\setfont\smallertt\ttshape{8}{1000}{OT1TT}
+\setfont\smallerbf\bfshape{10}{800}{OT1}
+\setfont\smallerit\itshape{8}{1000}{OT1IT}
+\setfont\smallersl\slshape{8}{1000}{OT1}
+\setfont\smallersf\sfshape{8}{1000}{OT1}
+\setfont\smallersc\scshape{10}{800}{OT1}
+\setfont\smallerttsl\ttslshape{10}{800}{OT1TT}
+\font\smalleri=cmmi8
+\font\smallersy=cmsy8
+\def\smallerecsize{0800}
+
+% Fonts for title page (20.4pt):
+\def\titlenominalsize{20pt}
+\setfont\titlerm\rmbshape{12}{\magstep3}{OT1}
+\setfont\titleit\itbshape{10}{\magstep4}{OT1IT}
+\setfont\titlesl\slbshape{10}{\magstep4}{OT1}
+\setfont\titlett\ttbshape{12}{\magstep3}{OT1TT}
+\setfont\titlettsl\ttslshape{10}{\magstep4}{OT1TT}
+\setfont\titlesf\sfbshape{17}{\magstep1}{OT1}
+\let\titlebf=\titlerm
+\setfont\titlesc\scbshape{10}{\magstep4}{OT1}
+\font\titlei=cmmi12 scaled \magstep3
+\font\titlesy=cmsy10 scaled \magstep4
+\def\titleecsize{2074}
+
+% Chapter fonts (14.4pt).
+\def\chapnominalsize{14pt}
+\setfont\chaprm\rmbshape{12}{\magstep1}{OT1}
+\setfont\chapit\itbshape{10}{\magstep2}{OT1IT}
+\setfont\chapsl\slbshape{10}{\magstep2}{OT1}
+\setfont\chaptt\ttbshape{12}{\magstep1}{OT1TT}
+\setfont\chapttsl\ttslshape{10}{\magstep2}{OT1TT}
+\setfont\chapsf\sfbshape{12}{\magstep1}{OT1}
+\let\chapbf\chaprm
+\setfont\chapsc\scbshape{10}{\magstep2}{OT1}
+\font\chapi=cmmi12 scaled \magstep1
+\font\chapsy=cmsy10 scaled \magstep2
+\def\chapecsize{1440}
+
+% Section fonts (12pt).
+\def\secnominalsize{12pt}
+\setfont\secrm\rmbshape{12}{1000}{OT1}
+\setfont\secit\itbshape{10}{\magstep1}{OT1IT}
+\setfont\secsl\slbshape{10}{\magstep1}{OT1}
+\setfont\sectt\ttbshape{12}{1000}{OT1TT}
+\setfont\secttsl\ttslshape{10}{\magstep1}{OT1TT}
+\setfont\secsf\sfbshape{12}{1000}{OT1}
+\let\secbf\secrm
+\setfont\secsc\scbshape{10}{\magstep1}{OT1}
+\font\seci=cmmi12
+\font\secsy=cmsy10 scaled \magstep1
+\def\sececsize{1200}
+
+% Subsection fonts (10pt).
+\def\ssecnominalsize{10pt}
+\setfont\ssecrm\rmbshape{10}{1000}{OT1}
+\setfont\ssecit\itbshape{10}{1000}{OT1IT}
+\setfont\ssecsl\slbshape{10}{1000}{OT1}
+\setfont\ssectt\ttbshape{10}{1000}{OT1TT}
+\setfont\ssecttsl\ttslshape{10}{1000}{OT1TT}
+\setfont\ssecsf\sfbshape{10}{1000}{OT1}
+\let\ssecbf\ssecrm
+\setfont\ssecsc\scbshape{10}{1000}{OT1}
+\font\sseci=cmmi10
+\font\ssecsy=cmsy10
+\def\ssececsize{1000}
+
+% Reduced fonts for @acro in text (9pt).
+\def\reducednominalsize{9pt}
+\setfont\reducedrm\rmshape{9}{1000}{OT1}
+\setfont\reducedtt\ttshape{9}{1000}{OT1TT}
+\setfont\reducedbf\bfshape{10}{900}{OT1}
+\setfont\reducedit\itshape{9}{1000}{OT1IT}
+\setfont\reducedsl\slshape{9}{1000}{OT1}
+\setfont\reducedsf\sfshape{9}{1000}{OT1}
+\setfont\reducedsc\scshape{10}{900}{OT1}
+\setfont\reducedttsl\ttslshape{10}{900}{OT1TT}
+\font\reducedi=cmmi9
+\font\reducedsy=cmsy9
+\def\reducedecsize{0900}
+
+% reduce space between paragraphs
+\divide\parskip by 2
+
+% reset the current fonts
+\textfonts
+\rm
+} % end of 10pt text font size definitions
+
+
+% We provide the user-level command
+%   @fonttextsize 10
+% (or 11) to redefine the text font size.  pt is assumed.
+%
+\def\xword{10}
+\def\xiword{11}
+%
+\parseargdef\fonttextsize{%
+  \def\textsizearg{#1}%
+  \wlog{doing @fonttextsize \textsizearg}%
+  %
+  % Set \globaldefs so that documents can use this inside @tex, since
+  % makeinfo 4.8 does not support it, but we need it nonetheless.
+  %
+ \begingroup \globaldefs=1
+  \ifx\textsizearg\xword \definetextfontsizex
+  \else \ifx\textsizearg\xiword \definetextfontsizexi
+  \else
+    \errhelp=\EMsimple
+    \errmessage{@fonttextsize only supports `10' or `11', not `\textsizearg'}
+  \fi\fi
+ \endgroup
+}
+
+
+% In order for the font changes to affect most math symbols and letters,
+% we have to define the \textfont of the standard families.  Since
+% texinfo doesn't allow for producing subscripts and superscripts except
+% in the main text, we don't bother to reset \scriptfont and
+% \scriptscriptfont (which would also require loading a lot more fonts).
+%
+\def\resetmathfonts{%
+  \textfont0=\tenrm \textfont1=\teni \textfont2=\tensy
+  \textfont\itfam=\tenit \textfont\slfam=\tensl \textfont\bffam=\tenbf
+  \textfont\ttfam=\tentt \textfont\sffam=\tensf
+}
+
+% The font-changing commands redefine the meanings of \tenSTYLE, instead
+% of just \STYLE.  We do this because \STYLE needs to also set the
+% current \fam for math mode.  Our \STYLE (e.g., \rm) commands hardwire
+% \tenSTYLE to set the current font.
+%
+% Each font-changing command also sets the names \lsize (one size lower)
+% and \lllsize (three sizes lower).  These relative commands are used in
+% the LaTeX logo and acronyms.
+%
+% This all needs generalizing, badly.
+%
+\def\textfonts{%
+  \let\tenrm=\textrm \let\tenit=\textit \let\tensl=\textsl
+  \let\tenbf=\textbf \let\tentt=\texttt \let\smallcaps=\textsc
+  \let\tensf=\textsf \let\teni=\texti \let\tensy=\textsy
+  \let\tenttsl=\textttsl
+  \def\curfontsize{text}%
+  \def\lsize{reduced}\def\lllsize{smaller}%
+  \resetmathfonts \setleading{\textleading}}
+\def\titlefonts{%
+  \let\tenrm=\titlerm \let\tenit=\titleit \let\tensl=\titlesl
+  \let\tenbf=\titlebf \let\tentt=\titlett \let\smallcaps=\titlesc
+  \let\tensf=\titlesf \let\teni=\titlei \let\tensy=\titlesy
+  \let\tenttsl=\titlettsl
+  \def\curfontsize{title}%
+  \def\lsize{chap}\def\lllsize{subsec}%
+  \resetmathfonts \setleading{25pt}}
+\def\titlefont#1{{\titlefonts\rmisbold #1}}
+\def\chapfonts{%
+  \let\tenrm=\chaprm \let\tenit=\chapit \let\tensl=\chapsl
+  \let\tenbf=\chapbf \let\tentt=\chaptt \let\smallcaps=\chapsc
+  \let\tensf=\chapsf \let\teni=\chapi \let\tensy=\chapsy
+  \let\tenttsl=\chapttsl
+  \def\curfontsize{chap}%
+  \def\lsize{sec}\def\lllsize{text}%
+  \resetmathfonts \setleading{19pt}}
+\def\secfonts{%
+  \let\tenrm=\secrm \let\tenit=\secit \let\tensl=\secsl
+  \let\tenbf=\secbf \let\tentt=\sectt \let\smallcaps=\secsc
+  \let\tensf=\secsf \let\teni=\seci \let\tensy=\secsy
+  \let\tenttsl=\secttsl
+  \def\curfontsize{sec}%
+  \def\lsize{subsec}\def\lllsize{reduced}%
+  \resetmathfonts \setleading{16pt}}
+\def\subsecfonts{%
+  \let\tenrm=\ssecrm \let\tenit=\ssecit \let\tensl=\ssecsl
+  \let\tenbf=\ssecbf \let\tentt=\ssectt \let\smallcaps=\ssecsc
+  \let\tensf=\ssecsf \let\teni=\sseci \let\tensy=\ssecsy
+  \let\tenttsl=\ssecttsl
+  \def\curfontsize{ssec}%
+  \def\lsize{text}\def\lllsize{small}%
+  \resetmathfonts \setleading{15pt}}
+\let\subsubsecfonts = \subsecfonts
+\def\reducedfonts{%
+  \let\tenrm=\reducedrm \let\tenit=\reducedit \let\tensl=\reducedsl
+  \let\tenbf=\reducedbf \let\tentt=\reducedtt \let\reducedcaps=\reducedsc
+  \let\tensf=\reducedsf \let\teni=\reducedi \let\tensy=\reducedsy
+  \let\tenttsl=\reducedttsl
+  \def\curfontsize{reduced}%
+  \def\lsize{small}\def\lllsize{smaller}%
+  \resetmathfonts \setleading{10.5pt}}
+\def\smallfonts{%
+  \let\tenrm=\smallrm \let\tenit=\smallit \let\tensl=\smallsl
+  \let\tenbf=\smallbf \let\tentt=\smalltt \let\smallcaps=\smallsc
+  \let\tensf=\smallsf \let\teni=\smalli \let\tensy=\smallsy
+  \let\tenttsl=\smallttsl
+  \def\curfontsize{small}%
+  \def\lsize{smaller}\def\lllsize{smaller}%
+  \resetmathfonts \setleading{10.5pt}}
+\def\smallerfonts{%
+  \let\tenrm=\smallerrm \let\tenit=\smallerit \let\tensl=\smallersl
+  \let\tenbf=\smallerbf \let\tentt=\smallertt \let\smallcaps=\smallersc
+  \let\tensf=\smallersf \let\teni=\smalleri \let\tensy=\smallersy
+  \let\tenttsl=\smallerttsl
+  \def\curfontsize{smaller}%
+  \def\lsize{smaller}\def\lllsize{smaller}%
+  \resetmathfonts \setleading{9.5pt}}
+
+% Fonts for short table of contents.
+\setfont\shortcontrm\rmshape{12}{1000}{OT1}
+\setfont\shortcontbf\bfshape{10}{\magstep1}{OT1}  % no cmb12
+\setfont\shortcontsl\slshape{12}{1000}{OT1}
+\setfont\shortconttt\ttshape{12}{1000}{OT1TT}
+
+% Define these just so they can be easily changed for other fonts.
+\def\angleleft{$\langle$}
+\def\angleright{$\rangle$}
+
+% Set the fonts to use with the @small... environments.
+\let\smallexamplefonts = \smallfonts
+
+% About \smallexamplefonts.  If we use \smallfonts (9pt), @smallexample
+% can fit this many characters:
+%   8.5x11=86   smallbook=72  a4=90  a5=69
+% If we use \scriptfonts (8pt), then we can fit this many characters:
+%   8.5x11=90+  smallbook=80  a4=90+  a5=77
+% For me, subjectively, the few extra characters that fit aren't worth
+% the additional smallness of 8pt.  So I'm making the default 9pt.
+%
+% By the way, for comparison, here's what fits with @example (10pt):
+%   8.5x11=71  smallbook=60  a4=75  a5=58
+% --karl, 24jan03.
+
+% Set up the default fonts, so we can use them for creating boxes.
+%
+\definetextfontsizexi
+
+
+\message{markup,}
+
+% Check if we are currently using a typewriter font.  Since all the
+% Computer Modern typewriter fonts have zero interword stretch (and
+% shrink), and it is reasonable to expect all typewriter fonts to have
+% this property, we can check that font parameter.
+%
+\def\ifmonospace{\ifdim\fontdimen3\font=0pt }
+
+% Markup style infrastructure.  \defmarkupstylesetup\INITMACRO will
+% define and register \INITMACRO to be called on markup style changes.
+% \INITMACRO can check \currentmarkupstyle for the innermost
+% style and the set of \ifmarkupSTYLE switches for all styles
+% currently in effect.
+\newif\ifmarkupvar
+\newif\ifmarkupsamp
+\newif\ifmarkupkey
+%\newif\ifmarkupfile % @file == @samp.
+%\newif\ifmarkupoption % @option == @samp.
+\newif\ifmarkupcode
+\newif\ifmarkupkbd
+%\newif\ifmarkupenv % @env == @code.
+%\newif\ifmarkupcommand % @command == @code.
+\newif\ifmarkuptex % @tex (and part of @math, for now).
+\newif\ifmarkupexample
+\newif\ifmarkupverb
+\newif\ifmarkupverbatim
+
+\let\currentmarkupstyle\empty
+
+\def\setupmarkupstyle#1{%
+  \csname markup#1true\endcsname
+  \def\currentmarkupstyle{#1}%
+  \markupstylesetup
+}
+
+\let\markupstylesetup\empty
+
+\def\defmarkupstylesetup#1{%
+  \expandafter\def\expandafter\markupstylesetup
+    \expandafter{\markupstylesetup #1}%
+  \def#1%
+}
+
+% Markup style setup for left and right quotes.
+\defmarkupstylesetup\markupsetuplq{%
+  \expandafter\let\expandafter \temp \csname markupsetuplq\currentmarkupstyle\endcsname
+  \ifx\temp\relax \markupsetuplqdefault \else \temp \fi
+}
+
+\defmarkupstylesetup\markupsetuprq{%
+  \expandafter\let\expandafter \temp \csname markupsetuprq\currentmarkupstyle\endcsname
+  \ifx\temp\relax \markupsetuprqdefault \else \temp \fi
+}
+
+{
+\catcode`\'=\active
+\catcode`\`=\active
+
+\gdef\markupsetuplqdefault{\let`\lq}
+\gdef\markupsetuprqdefault{\let'\rq}
+
+\gdef\markupsetcodequoteleft{\let`\codequoteleft}
+\gdef\markupsetcodequoteright{\let'\codequoteright}
+
+\gdef\markupsetnoligaturesquoteleft{\let`\noligaturesquoteleft}
+}
+
+\let\markupsetuplqcode \markupsetcodequoteleft
+\let\markupsetuprqcode \markupsetcodequoteright
+\let\markupsetuplqexample \markupsetcodequoteleft
+\let\markupsetuprqexample \markupsetcodequoteright
+\let\markupsetuplqverb \markupsetcodequoteleft
+\let\markupsetuprqverb \markupsetcodequoteright
+\let\markupsetuplqverbatim \markupsetcodequoteleft
+\let\markupsetuprqverbatim \markupsetcodequoteright
+
+\let\markupsetuplqsamp \markupsetnoligaturesquoteleft
+\let\markupsetuplqkbd \markupsetnoligaturesquoteleft
+
+% Allow an option to not replace quotes with a regular directed right
+% quote/apostrophe (char 0x27), but instead use the undirected quote
+% from cmtt (char 0x0d).  The undirected quote is ugly, so don't make it
+% the default, but it works for pasting with more pdf viewers (at least
+% evince), the lilypond developers report.  xpdf does work with the
+% regular 0x27.
+%
+\def\codequoteright{%
+  \expandafter\ifx\csname SETtxicodequoteundirected\endcsname\relax
+    \expandafter\ifx\csname SETcodequoteundirected\endcsname\relax
+      '%
+    \else \char'15 \fi
+  \else \char'15 \fi
+}
+%
+% and a similar option for the left quote char vs. a grave accent.
+% Modern fonts display ASCII 0x60 as a grave accent, so some people like
+% the code environments to do likewise.
+%
+\def\codequoteleft{%
+  \expandafter\ifx\csname SETtxicodequotebacktick\endcsname\relax
+    \expandafter\ifx\csname SETcodequotebacktick\endcsname\relax
+      % [Knuth] pp. 380,381,391
+      % \relax disables Spanish ligatures ?` and !` of \tt font.
+      \relax`%
+    \else \char'22 \fi
+  \else \char'22 \fi
+}
+
+% [Knuth] pp. 380,381,391, disable Spanish ligatures ?` and !` of \tt font.
+\def\noligaturesquoteleft{\relax\lq}
+
+% Count depth in font-changes, for error checks
+\newcount\fontdepth \fontdepth=0
+
+%% Add scribe-like font environments, plus @l for inline lisp (usually sans
+%% serif) and @ii for TeX italic
+
+% \smartitalic{ARG} outputs arg in italics, followed by an italic correction
+% unless the following character is such as not to need one.
+\def\smartitalicx{\ifx\next,\else\ifx\next-\else\ifx\next.\else
+                    \ptexslash\fi\fi\fi}
+\def\smartslanted#1{{\ifusingtt\ttsl\sl #1}\futurelet\next\smartitalicx}
+\def\smartitalic#1{{\ifusingtt\ttsl\it #1}\futurelet\next\smartitalicx}
+
+% like \smartslanted except unconditionally uses \ttsl.
+% @var is set to this for defun arguments.
+\def\ttslanted#1{{\ttsl #1}\futurelet\next\smartitalicx}
+
+% @cite is like \smartslanted except unconditionally use \sl.  We never want
+% ttsl for book titles, do we?
+\def\cite#1{{\sl #1}\futurelet\next\smartitalicx}
+
+\let\i=\smartitalic
+\let\slanted=\smartslanted
+\def\var#1{{\setupmarkupstyle{var}\smartslanted{#1}}}
+\let\dfn=\smartslanted
+\let\emph=\smartitalic
+
+% Explicit font changes: @r, @sc, undocumented @ii.
+\def\r#1{{\rm #1}}              % roman font
+\def\sc#1{{\smallcaps#1}}       % smallcaps font
+\def\ii#1{{\it #1}}             % italic font
+
+% @b, explicit bold.  Also @strong.
+\def\b#1{{\bf #1}}
+\let\strong=\b
+
+% @sansserif, explicit sans.
+\def\sansserif#1{{\sf #1}}
+
+% We can't just use \exhyphenpenalty, because that only has effect at
+% the end of a paragraph.  Restore normal hyphenation at the end of the
+% group within which \nohyphenation is presumably called.
+%
+\def\nohyphenation{\hyphenchar\font = -1  \aftergroup\restorehyphenation}
+\def\restorehyphenation{\hyphenchar\font = `- }
+
+% Set sfcode to normal for the chars that usually have another value.
+% Can't use plain's \frenchspacing because it uses the `\x notation, and
+% sometimes \x has an active definition that messes things up.
+%
+\catcode`@=11
+  \def\plainfrenchspacing{%
+    \sfcode\dotChar  =\@m \sfcode\questChar=\@m \sfcode\exclamChar=\@m
+    \sfcode\colonChar=\@m \sfcode\semiChar =\@m \sfcode\commaChar =\@m
+    \def\endofsentencespacefactor{1000}% for @. and friends
+  }
+  \def\plainnonfrenchspacing{%
+    \sfcode`\.3000\sfcode`\?3000\sfcode`\!3000
+    \sfcode`\:2000\sfcode`\;1500\sfcode`\,1250
+    \def\endofsentencespacefactor{3000}% for @. and friends
+  }
+\catcode`@=\other
+\def\endofsentencespacefactor{3000}% default
+
+% @t, explicit typewriter.
+\def\t#1{%
+  {\tt \rawbackslash \plainfrenchspacing #1}%
+  \null
+}
+
+% @samp.
+\def\samp#1{{\setupmarkupstyle{samp}\lq\tclose{#1}\rq\null}}
+
+% definition of @key that produces a lozenge.  Doesn't adjust to text size.
+%\setfont\keyrm\rmshape{8}{1000}{OT1}
+%\font\keysy=cmsy9
+%\def\key#1{{\keyrm\textfont2=\keysy \leavevmode\hbox{%
+%  \raise0.4pt\hbox{\angleleft}\kern-.08em\vtop{%
+%    \vbox{\hrule\kern-0.4pt
+%     \hbox{\raise0.4pt\hbox{\vphantom{\angleleft}}#1}}%
+%    \kern-0.4pt\hrule}%
+%  \kern-.06em\raise0.4pt\hbox{\angleright}}}}
+
+% definition of @key with no lozenge.  If the current font is already
+% monospace, don't change it; that way, we respect @kbdinputstyle.  But
+% if it isn't monospace, then use \tt.
+%
+\def\key#1{{\setupmarkupstyle{key}%
+  \nohyphenation
+  \ifmonospace\else\tt\fi
+  #1}\null}
+
+% ctrl is no longer a Texinfo command.
+\def\ctrl #1{{\tt \rawbackslash \hat}#1}
+
+% @file, @option are the same as @samp.
+\let\file=\samp
+\let\option=\samp
+
+% @code is a modification of @t,
+% which makes spaces the same size as normal in the surrounding text.
+\def\tclose#1{%
+  {%
+    % Change normal interword space to be same as for the current font.
+    \spaceskip = \fontdimen2\font
+    %
+    % Switch to typewriter.
+    \tt
+    %
+    % But `\ ' produces the large typewriter interword space.
+    \def\ {{\spaceskip = 0pt{} }}%
+    %
+    % Turn off hyphenation.
+    \nohyphenation
+    %
+    \rawbackslash
+    \plainfrenchspacing
+    #1%
+  }%
+  \null
+}
+
+% We *must* turn on hyphenation at `-' and `_' in @code.
+% Otherwise, it is too hard to avoid overfull hboxes
+% in the Emacs manual, the Library manual, etc.
+
+% Unfortunately, TeX uses one parameter (\hyphenchar) to control
+% both hyphenation at - and hyphenation within words.
+% We must therefore turn them both off (\tclose does that)
+% and arrange explicitly to hyphenate at a dash.
+%  -- rms.
+{
+  \catcode`\-=\active \catcode`\_=\active
+  \catcode`\'=\active \catcode`\`=\active
+  \global\let'=\rq \global\let`=\lq  % default definitions
+  %
+  \global\def\code{\begingroup
+    \setupmarkupstyle{code}%
+    % The following should really be moved into \setupmarkupstyle handlers.
+    \catcode\dashChar=\active  \catcode\underChar=\active
+    \ifallowcodebreaks
+     \let-\codedash
+     \let_\codeunder
+    \else
+     \let-\realdash
+     \let_\realunder
+    \fi
+    \codex
+  }
+}
+
+\def\realdash{-}
+\def\codedash{-\discretionary{}{}{}}
+\def\codeunder{%
+  % this is all so @math{@code{var_name}+1} can work.  In math mode, _
+  % is "active" (mathcode"8000) and \normalunderscore (or \char95, etc.)
+  % will therefore expand the active definition of _, which is us
+  % (inside @code that is), therefore an endless loop.
+  \ifusingtt{\ifmmode
+               \mathchar"075F % class 0=ordinary, family 7=ttfam, pos 0x5F=_.
+             \else\normalunderscore \fi
+             \discretionary{}{}{}}%
+            {\_}%
+}
+\def\codex #1{\tclose{#1}\endgroup}
+
+% An additional complication: the above will allow breaks after, e.g.,
+% each of the four underscores in __typeof__.  This is undesirable in
+% some manuals, especially if they don't have long identifiers in
+% general.  @allowcodebreaks provides a way to control this.
+%
+\newif\ifallowcodebreaks  \allowcodebreakstrue
+
+\def\keywordtrue{true}
+\def\keywordfalse{false}
+
+\parseargdef\allowcodebreaks{%
+  \def\txiarg{#1}%
+  \ifx\txiarg\keywordtrue
+    \allowcodebreakstrue
+  \else\ifx\txiarg\keywordfalse
+    \allowcodebreaksfalse
+  \else
+    \errhelp = \EMsimple
+    \errmessage{Unknown @allowcodebreaks option `\txiarg'}%
+  \fi\fi
+}
+
+% @kbd is like @code, except that if the argument is just one @key command,
+% then @kbd has no effect.
+\def\kbd#1{{\setupmarkupstyle{kbd}\def\look{#1}\expandafter\kbdfoo\look??\par}}
+
+% @kbdinputstyle -- arg is `distinct' (@kbd uses slanted tty font always),
+%   `example' (@kbd uses ttsl only inside of @example and friends),
+%   or `code' (@kbd uses normal tty font always).
+\parseargdef\kbdinputstyle{%
+  \def\txiarg{#1}%
+  \ifx\txiarg\worddistinct
+    \gdef\kbdexamplefont{\ttsl}\gdef\kbdfont{\ttsl}%
+  \else\ifx\txiarg\wordexample
+    \gdef\kbdexamplefont{\ttsl}\gdef\kbdfont{\tt}%
+  \else\ifx\txiarg\wordcode
+    \gdef\kbdexamplefont{\tt}\gdef\kbdfont{\tt}%
+  \else
+    \errhelp = \EMsimple
+    \errmessage{Unknown @kbdinputstyle option `\txiarg'}%
+  \fi\fi\fi
+}
+\def\worddistinct{distinct}
+\def\wordexample{example}
+\def\wordcode{code}
+
+% Default is `distinct'.
+\kbdinputstyle distinct
+
+\def\xkey{\key}
+\def\kbdfoo#1#2#3\par{\def\one{#1}\def\three{#3}\def\threex{??}%
+\ifx\one\xkey\ifx\threex\three \key{#2}%
+\else{\tclose{\kbdfont\setupmarkupstyle{kbd}\look}}\fi
+\else{\tclose{\kbdfont\setupmarkupstyle{kbd}\look}}\fi}
+
+% For @indicateurl, @env, @command quotes seem unnecessary, so use \code.
+\let\indicateurl=\code
+\let\env=\code
+\let\command=\code
+
+% @clicksequence{File @click{} Open ...}
+\def\clicksequence#1{\begingroup #1\endgroup}
+
+% @clickstyle @arrow   (by default)
+\parseargdef\clickstyle{\def\click{#1}}
+\def\click{\arrow}
+
+% @uref (abbreviation for `urlref') takes an optional (comma-separated)
+% second argument specifying the text to display and an optional third
+% arg as text to display instead of (rather than in addition to) the url
+% itself.  First (mandatory) arg is the url.  Perhaps eventually put in
+% a hypertex \special here.
+%
+\def\uref#1{\douref #1,,,\finish}
+\def\douref#1,#2,#3,#4\finish{\begingroup
+  \unsepspaces
+  \pdfurl{#1}%
+  \setbox0 = \hbox{\ignorespaces #3}%
+  \ifdim\wd0 > 0pt
+    \unhbox0 % third arg given, show only that
+  \else
+    \setbox0 = \hbox{\ignorespaces #2}%
+    \ifdim\wd0 > 0pt
+      \ifpdf
+        \unhbox0             % PDF: 2nd arg given, show only it
+      \else
+        \unhbox0\ (\code{#1})% DVI: 2nd arg given, show both it and url
+      \fi
+    \else
+      \code{#1}% only url given, so show it
+    \fi
+  \fi
+  \endlink
+\endgroup}
+
+% @url synonym for @uref, since that's how everyone uses it.
+%
+\let\url=\uref
+
+% rms does not like angle brackets --karl, 17may97.
+% So now @email is just like @uref, unless we are pdf.
+%
+%\def\email#1{\angleleft{\tt #1}\angleright}
+\ifpdf
+  \def\email#1{\doemail#1,,\finish}
+  \def\doemail#1,#2,#3\finish{\begingroup
+    \unsepspaces
+    \pdfurl{mailto:#1}%
+    \setbox0 = \hbox{\ignorespaces #2}%
+    \ifdim\wd0>0pt\unhbox0\else\code{#1}\fi
+    \endlink
+  \endgroup}
+\else
+  \let\email=\uref
+\fi
+
+% Typeset a dimension, e.g., `in' or `pt'.  The only reason for the
+% argument is to make the input look right: @dmn{pt} instead of @dmn{}pt.
+%
+\def\dmn#1{\thinspace #1}
+
+% @l was never documented to mean ``switch to the Lisp font'',
+% and it is not used as such in any manual I can find.  We need it for
+% Polish suppressed-l.  --karl, 22sep96.
+%\def\l#1{{\li #1}\null}
+
+% @acronym for "FBI", "NATO", and the like.
+% We print this one point size smaller, since it's intended for
+% all-uppercase.
+%
+\def\acronym#1{\doacronym #1,,\finish}
+\def\doacronym#1,#2,#3\finish{%
+  {\selectfonts\lsize #1}%
+  \def\temp{#2}%
+  \ifx\temp\empty \else
+    \space ({\unsepspaces \ignorespaces \temp \unskip})%
+  \fi
+}
+
+% @abbr for "Comput. J." and the like.
+% No font change, but don't do end-of-sentence spacing.
+%
+\def\abbr#1{\doabbr #1,,\finish}
+\def\doabbr#1,#2,#3\finish{%
+  {\plainfrenchspacing #1}%
+  \def\temp{#2}%
+  \ifx\temp\empty \else
+    \space ({\unsepspaces \ignorespaces \temp \unskip})%
+  \fi
+}
+
+
+\message{glyphs,}
+
+% @point{}, @result{}, @expansion{}, @print{}, @equiv{}.
+%
+% Since these characters are used in examples, they should be an even number of
+% \tt widths. Each \tt character is 1en, so two makes it 1em.
+%
+\def\point{$\star$}
+\def\arrow{\leavevmode\raise.05ex\hbox to 1em{\hfil$\rightarrow$\hfil}}
+\def\result{\leavevmode\raise.05ex\hbox to 1em{\hfil$\Rightarrow$\hfil}}
+\def\expansion{\leavevmode\hbox to 1em{\hfil$\mapsto$\hfil}}
+\def\print{\leavevmode\lower.1ex\hbox to 1em{\hfil$\dashv$\hfil}}
+\def\equiv{\leavevmode\hbox to 1em{\hfil$\ptexequiv$\hfil}}
+
+% The @error{} command.
+% Adapted from the TeXbook's \boxit.
+%
+\newbox\errorbox
+%
+{\tentt \global\dimen0 = 3em}% Width of the box.
+\dimen2 = .55pt % Thickness of rules
+% The text. (`r' is open on the right, `e' somewhat less so on the left.)
+\setbox0 = \hbox{\kern-.75pt \reducedsf error\kern-1.5pt}
+%
+\setbox\errorbox=\hbox to \dimen0{\hfil
+   \hsize = \dimen0 \advance\hsize by -5.8pt % Space to left+right.
+   \advance\hsize by -2\dimen2 % Rules.
+   \vbox{%
+      \hrule height\dimen2
+      \hbox{\vrule width\dimen2 \kern3pt          % Space to left of text.
+         \vtop{\kern2.4pt \box0 \kern2.4pt}% Space above/below.
+         \kern3pt\vrule width\dimen2}% Space to right.
+      \hrule height\dimen2}
+    \hfil}
+%
+\def\error{\leavevmode\lower.7ex\copy\errorbox}
+
+% @pounds{} is a sterling sign, which Knuth put in the CM italic font.
+%
+\def\pounds{{\it\$}}
+
+% @euro{} comes from a separate font, depending on the current style.
+% We use the free feym* fonts from the eurosym package by Henrik
+% Theiling, which support regular, slanted, bold and bold slanted (and
+% "outlined" (blackboard board, sort of) versions, which we don't need).
+% It is available from http://www.ctan.org/tex-archive/fonts/eurosym.
+%
+% Although only regular is the truly official Euro symbol, we ignore
+% that.  The Euro is designed to be slightly taller than the regular
+% font height.
+%
+% feymr - regular
+% feymo - slanted
+% feybr - bold
+% feybo - bold slanted
+%
+% There is no good (free) typewriter version, to my knowledge.
+% A feymr10 euro is ~7.3pt wide, while a normal cmtt10 char is ~5.25pt wide.
+% Hmm.
+%
+% Also doesn't work in math.  Do we need to do math with euro symbols?
+% Hope not.
+%
+%
+\def\euro{{\eurofont e}}
+\def\eurofont{%
+  % We set the font at each command, rather than predefining it in
+  % \textfonts and the other font-switching commands, so that
+  % installations which never need the symbol don't have to have the
+  % font installed.
+  %
+  % There is only one designed size (nominal 10pt), so we always scale
+  % that to the current nominal size.
+  %
+  % By the way, simply using "at 1em" works for cmr10 and the like, but
+  % does not work for cmbx10 and other extended/shrunken fonts.
+  %
+  \def\eurosize{\csname\curfontsize nominalsize\endcsname}%
+  %
+  \ifx\curfontstyle\bfstylename
+    % bold:
+    \font\thiseurofont = \ifusingit{feybo10}{feybr10} at \eurosize
+  \else
+    % regular:
+    \font\thiseurofont = \ifusingit{feymo10}{feymr10} at \eurosize
+  \fi
+  \thiseurofont
+}
+
+% Glyphs from the EC fonts.  We don't use \let for the aliases, because
+% sometimes we redefine the original macro, and the alias should reflect
+% the redefinition.
+%
+% Use LaTeX names for the Icelandic letters.
+\def\DH{{\ecfont \char"D0}} % Eth
+\def\dh{{\ecfont \char"F0}} % eth
+\def\TH{{\ecfont \char"DE}} % Thorn
+\def\th{{\ecfont \char"FE}} % thorn
+%
+\def\guillemetleft{{\ecfont \char"13}}
+\def\guillemotleft{\guillemetleft}
+\def\guillemetright{{\ecfont \char"14}}
+\def\guillemotright{\guillemetright}
+\def\guilsinglleft{{\ecfont \char"0E}}
+\def\guilsinglright{{\ecfont \char"0F}}
+\def\quotedblbase{{\ecfont \char"12}}
+\def\quotesinglbase{{\ecfont \char"0D}}
+%
+% This positioning is not perfect (see the ogonek LaTeX package), but
+% we have the precomposed glyphs for the most common cases.  We put the
+% tests to use those glyphs in the single \ogonek macro so we have fewer
+% dummy definitions to worry about for index entries, etc.
+%
+% ogonek is also used with other letters in Lithuanian (IOU), but using
+% the precomposed glyphs for those is not so easy since they aren't in
+% the same EC font.
+\def\ogonek#1{{%
+  \def\temp{#1}%
+  \ifx\temp\macrocharA\Aogonek
+  \else\ifx\temp\macrochara\aogonek
+  \else\ifx\temp\macrocharE\Eogonek
+  \else\ifx\temp\macrochare\eogonek
+  \else
+    \ecfont \setbox0=\hbox{#1}%
+    \ifdim\ht0=1ex\accent"0C #1%
+    \else\ooalign{\unhbox0\crcr\hidewidth\char"0C \hidewidth}%
+    \fi
+  \fi\fi\fi\fi
+  }%
+}
+\def\Aogonek{{\ecfont \char"81}}\def\macrocharA{A}
+\def\aogonek{{\ecfont \char"A1}}\def\macrochara{a}
+\def\Eogonek{{\ecfont \char"86}}\def\macrocharE{E}
+\def\eogonek{{\ecfont \char"A6}}\def\macrochare{e}
+%
+% Use the ec* fonts (cm-super in outline format) for non-CM glyphs.
+\def\ecfont{%
+  % We can't distinguish serif/sans and italic/slanted, but this
+  % is used for crude hacks anyway (like adding French and German
+  % quotes to documents typeset with CM, where we lose kerning), so
+  % hopefully nobody will notice/care.
+  \edef\ecsize{\csname\curfontsize ecsize\endcsname}%
+  \edef\nominalsize{\csname\curfontsize nominalsize\endcsname}%
+  \ifx\curfontstyle\bfstylename
+    % bold:
+    \font\thisecfont = ecb\ifusingit{i}{x}\ecsize \space at \nominalsize
+  \else
+    % regular:
+    \font\thisecfont = ec\ifusingit{ti}{rm}\ecsize \space at \nominalsize
+  \fi
+  \thisecfont
+}
+
+% @registeredsymbol - R in a circle.  The font for the R should really
+% be smaller yet, but lllsize is the best we can do for now.
+% Adapted from the plain.tex definition of \copyright.
+%
+\def\registeredsymbol{%
+  $^{{\ooalign{\hfil\raise.07ex\hbox{\selectfonts\lllsize R}%
+               \hfil\crcr\Orb}}%
+    }$%
+}
+
+% @textdegree - the normal degrees sign.
+%
+\def\textdegree{$^\circ$}
+
+% Laurent Siebenmann reports \Orb undefined with:
+%  Textures 1.7.7 (preloaded format=plain 93.10.14)  (68K)  16 APR 2004 02:38
+% so we'll define it if necessary.
+%
+\ifx\Orb\undefined
+\def\Orb{\mathhexbox20D}
+\fi
+
+% Quotes.
+\chardef\quotedblleft="5C
+\chardef\quotedblright=`\"
+\chardef\quoteleft=`\`
+\chardef\quoteright=`\'
+
+
+\message{page headings,}
+
+\newskip\titlepagetopglue \titlepagetopglue = 1.5in
+\newskip\titlepagebottomglue \titlepagebottomglue = 2pc
+
+% First the title page.  Must do @settitle before @titlepage.
+\newif\ifseenauthor
+\newif\iffinishedtitlepage
+
+% Do an implicit @contents or @shortcontents after @end titlepage if the
+% user says @setcontentsaftertitlepage or @setshortcontentsaftertitlepage.
+%
+\newif\ifsetcontentsaftertitlepage
+ \let\setcontentsaftertitlepage = \setcontentsaftertitlepagetrue
+\newif\ifsetshortcontentsaftertitlepage
+ \let\setshortcontentsaftertitlepage = \setshortcontentsaftertitlepagetrue
+
+\parseargdef\shorttitlepage{\begingroup\hbox{}\vskip 1.5in \chaprm \centerline{#1}%
+        \endgroup\page\hbox{}\page}
+
+\envdef\titlepage{%
+  % Open one extra group, as we want to close it in the middle of \Etitlepage.
+  \begingroup
+    \parindent=0pt \textfonts
+    % Leave some space at the very top of the page.
+    \vglue\titlepagetopglue
+    % No rule at page bottom unless we print one at the top with @title.
+    \finishedtitlepagetrue
+    %
+    % Most title ``pages'' are actually two pages long, with space
+    % at the top of the second.  We don't want the ragged left on the second.
+    \let\oldpage = \page
+    \def\page{%
+      \iffinishedtitlepage\else
+	 \finishtitlepage
+      \fi
+      \let\page = \oldpage
+      \page
+      \null
+    }%
+}
+
+\def\Etitlepage{%
+    \iffinishedtitlepage\else
+	\finishtitlepage
+    \fi
+    % It is important to do the page break before ending the group,
+    % because the headline and footline are only empty inside the group.
+    % If we use the new definition of \page, we always get a blank page
+    % after the title page, which we certainly don't want.
+    \oldpage
+  \endgroup
+  %
+  % Need this before the \...aftertitlepage checks so that if they are
+  % in effect the toc pages will come out with page numbers.
+  \HEADINGSon
+  %
+  % If they want short, they certainly want long too.
+  \ifsetshortcontentsaftertitlepage
+    \shortcontents
+    \contents
+    \global\let\shortcontents = \relax
+    \global\let\contents = \relax
+  \fi
+  %
+  \ifsetcontentsaftertitlepage
+    \contents
+    \global\let\contents = \relax
+    \global\let\shortcontents = \relax
+  \fi
+}
+
+\def\finishtitlepage{%
+  \vskip4pt \hrule height 2pt width \hsize
+  \vskip\titlepagebottomglue
+  \finishedtitlepagetrue
+}
+
+%%% Macros to be used within @titlepage:
+
+\let\subtitlerm=\tenrm
+\def\subtitlefont{\subtitlerm \normalbaselineskip = 13pt \normalbaselines}
+
+\parseargdef\title{%
+  \checkenv\titlepage
+  \leftline{\titlefonts\rmisbold #1}
+  % print a rule at the page bottom also.
+  \finishedtitlepagefalse
+  \vskip4pt \hrule height 4pt width \hsize \vskip4pt
+}
+
+\parseargdef\subtitle{%
+  \checkenv\titlepage
+  {\subtitlefont \rightline{#1}}%
+}
+
+% @author should come last, but may come many times.
+% It can also be used inside @quotation.
+%
+\parseargdef\author{%
+  \def\temp{\quotation}%
+  \ifx\thisenv\temp
+    \def\quotationauthor{#1}% printed in \Equotation.
+  \else
+    \checkenv\titlepage
+    \ifseenauthor\else \vskip 0pt plus 1filll \seenauthortrue \fi
+    {\secfonts\rmisbold \leftline{#1}}%
+  \fi
+}
+
+
+%%% Set up page headings and footings.
+
+\let\thispage=\folio
+
+\newtoks\evenheadline    % headline on even pages
+\newtoks\oddheadline     % headline on odd pages
+\newtoks\evenfootline    % footline on even pages
+\newtoks\oddfootline     % footline on odd pages
+
+% Now make TeX use those variables
+\headline={{\textfonts\rm \ifodd\pageno \the\oddheadline
+                            \else \the\evenheadline \fi}}
+\footline={{\textfonts\rm \ifodd\pageno \the\oddfootline
+                            \else \the\evenfootline \fi}\HEADINGShook}
+\let\HEADINGShook=\relax
+
+% Commands to set those variables.
+% For example, this is what  @headings on  does
+% @evenheading @thistitle|@thispage|@thischapter
+% @oddheading @thischapter|@thispage|@thistitle
+% @evenfooting @thisfile||
+% @oddfooting ||@thisfile
+
+
+\def\evenheading{\parsearg\evenheadingxxx}
+\def\evenheadingxxx #1{\evenheadingyyy #1\|\|\|\|\finish}
+\def\evenheadingyyy #1\|#2\|#3\|#4\finish{%
+\global\evenheadline={\rlap{\centerline{#2}}\line{#1\hfil#3}}}
+
+\def\oddheading{\parsearg\oddheadingxxx}
+\def\oddheadingxxx #1{\oddheadingyyy #1\|\|\|\|\finish}
+\def\oddheadingyyy #1\|#2\|#3\|#4\finish{%
+\global\oddheadline={\rlap{\centerline{#2}}\line{#1\hfil#3}}}
+
+\parseargdef\everyheading{\oddheadingxxx{#1}\evenheadingxxx{#1}}%
+
+\def\evenfooting{\parsearg\evenfootingxxx}
+\def\evenfootingxxx #1{\evenfootingyyy #1\|\|\|\|\finish}
+\def\evenfootingyyy #1\|#2\|#3\|#4\finish{%
+\global\evenfootline={\rlap{\centerline{#2}}\line{#1\hfil#3}}}
+
+\def\oddfooting{\parsearg\oddfootingxxx}
+\def\oddfootingxxx #1{\oddfootingyyy #1\|\|\|\|\finish}
+\def\oddfootingyyy #1\|#2\|#3\|#4\finish{%
+  \global\oddfootline = {\rlap{\centerline{#2}}\line{#1\hfil#3}}%
+  %
+  % Leave some space for the footline.  Hopefully ok to assume
+  % @evenfooting will not be used by itself.
+  \global\advance\pageheight by -12pt
+  \global\advance\vsize by -12pt
+}
+
+\parseargdef\everyfooting{\oddfootingxxx{#1}\evenfootingxxx{#1}}
+
+% @evenheadingmarks top     \thischapter <- chapter at the top of a page
+% @evenheadingmarks bottom  \thischapter <- chapter at the bottom of a page
+%
+% The same set of arguments for:
+%
+% @oddheadingmarks
+% @evenfootingmarks
+% @oddfootingmarks
+% @everyheadingmarks
+% @everyfootingmarks
+
+\def\evenheadingmarks{\headingmarks{even}{heading}}
+\def\oddheadingmarks{\headingmarks{odd}{heading}}
+\def\evenfootingmarks{\headingmarks{even}{footing}}
+\def\oddfootingmarks{\headingmarks{odd}{footing}}
+\def\everyheadingmarks#1 {\headingmarks{even}{heading}{#1}
+                          \headingmarks{odd}{heading}{#1} }
+\def\everyfootingmarks#1 {\headingmarks{even}{footing}{#1}
+                          \headingmarks{odd}{footing}{#1} }
+% #1 = even/odd, #2 = heading/footing, #3 = top/bottom.
+\def\headingmarks#1#2#3 {%
+  \expandafter\let\expandafter\temp \csname get#3headingmarks\endcsname
+  \global\expandafter\let\csname get#1#2marks\endcsname \temp
+}
+
+\everyheadingmarks bottom
+\everyfootingmarks bottom
+
+% @headings double      turns headings on for double-sided printing.
+% @headings single      turns headings on for single-sided printing.
+% @headings off         turns them off.
+% @headings on          same as @headings double, retained for compatibility.
+% @headings after       turns on double-sided headings after this page.
+% @headings doubleafter turns on double-sided headings after this page.
+% @headings singleafter turns on single-sided headings after this page.
+% By default, they are off at the start of a document,
+% and turned `on' after @end titlepage.
+
+\def\headings #1 {\csname HEADINGS#1\endcsname}
+
+\def\HEADINGSoff{%
+\global\evenheadline={\hfil} \global\evenfootline={\hfil}
+\global\oddheadline={\hfil} \global\oddfootline={\hfil}}
+\HEADINGSoff
+% When we turn headings on, set the page number to 1.
+% For double-sided printing, put current file name in lower left corner,
+% chapter name on inside top of right hand pages, document
+% title on inside top of left hand pages, and page numbers on outside top
+% edge of all pages.
+\def\HEADINGSdouble{%
+\global\pageno=1
+\global\evenfootline={\hfil}
+\global\oddfootline={\hfil}
+\global\evenheadline={\line{\folio\hfil\thistitle}}
+\global\oddheadline={\line{\thischapter\hfil\folio}}
+\global\let\contentsalignmacro = \chapoddpage
+}
+\let\contentsalignmacro = \chappager
+
+% For single-sided printing, chapter title goes across top left of page,
+% page number on top right.
+\def\HEADINGSsingle{%
+\global\pageno=1
+\global\evenfootline={\hfil}
+\global\oddfootline={\hfil}
+\global\evenheadline={\line{\thischapter\hfil\folio}}
+\global\oddheadline={\line{\thischapter\hfil\folio}}
+\global\let\contentsalignmacro = \chappager
+}
+\def\HEADINGSon{\HEADINGSdouble}
+
+\def\HEADINGSafter{\let\HEADINGShook=\HEADINGSdoublex}
+\let\HEADINGSdoubleafter=\HEADINGSafter
+\def\HEADINGSdoublex{%
+\global\evenfootline={\hfil}
+\global\oddfootline={\hfil}
+\global\evenheadline={\line{\folio\hfil\thistitle}}
+\global\oddheadline={\line{\thischapter\hfil\folio}}
+\global\let\contentsalignmacro = \chapoddpage
+}
+
+\def\HEADINGSsingleafter{\let\HEADINGShook=\HEADINGSsinglex}
+\def\HEADINGSsinglex{%
+\global\evenfootline={\hfil}
+\global\oddfootline={\hfil}
+\global\evenheadline={\line{\thischapter\hfil\folio}}
+\global\oddheadline={\line{\thischapter\hfil\folio}}
+\global\let\contentsalignmacro = \chappager
+}
+
+% Subroutines used in generating headings
+% This produces Day Month Year style of output.
+% Only define if not already defined, in case a txi-??.tex file has set
+% up a different format (e.g., txi-cs.tex does this).
+\ifx\today\undefined
+\def\today{%
+  \number\day\space
+  \ifcase\month
+  \or\putwordMJan\or\putwordMFeb\or\putwordMMar\or\putwordMApr
+  \or\putwordMMay\or\putwordMJun\or\putwordMJul\or\putwordMAug
+  \or\putwordMSep\or\putwordMOct\or\putwordMNov\or\putwordMDec
+  \fi
+  \space\number\year}
+\fi
+
+% @settitle line...  specifies the title of the document, for headings.
+% It generates no output of its own.
+\def\thistitle{\putwordNoTitle}
+\def\settitle{\parsearg{\gdef\thistitle}}
+
+
+\message{tables,}
+% Tables -- @table, @ftable, @vtable, @item(x).
+
+% default indentation of table text
+\newdimen\tableindent \tableindent=.8in
+% default indentation of @itemize and @enumerate text
+\newdimen\itemindent  \itemindent=.3in
+% margin between end of table item and start of table text.
+\newdimen\itemmargin  \itemmargin=.1in
+
+% used internally for \itemindent minus \itemmargin
+\newdimen\itemmax
+
+% Note @table, @ftable, and @vtable define @item, @itemx, etc., with
+% these defs.
+% They also define \itemindex
+% to index the item name in whatever manner is desired (perhaps none).
+
+\newif\ifitemxneedsnegativevskip
+
+\def\itemxpar{\par\ifitemxneedsnegativevskip\nobreak\vskip-\parskip\nobreak\fi}
+
+\def\internalBitem{\smallbreak \parsearg\itemzzz}
+\def\internalBitemx{\itemxpar \parsearg\itemzzz}
+
+\def\itemzzz #1{\begingroup %
+  \advance\hsize by -\rightskip
+  \advance\hsize by -\tableindent
+  \setbox0=\hbox{\itemindicate{#1}}%
+  \itemindex{#1}%
+  \nobreak % This prevents a break before @itemx.
+  %
+  % If the item text does not fit in the space we have, put it on a line
+  % by itself, and do not allow a page break either before or after that
+  % line.  We do not start a paragraph here because then if the next
+  % command is, e.g., @kindex, the whatsit would get put into the
+  % horizontal list on a line by itself, resulting in extra blank space.
+  \ifdim \wd0>\itemmax
+    %
+    % Make this a paragraph so we get the \parskip glue and wrapping,
+    % but leave it ragged-right.
+    \begingroup
+      \advance\leftskip by-\tableindent
+      \advance\hsize by\tableindent
+      \advance\rightskip by0pt plus1fil
+      \leavevmode\unhbox0\par
+    \endgroup
+    %
+    % We're going to be starting a paragraph, but we don't want the
+    % \parskip glue -- logically it's part of the @item we just started.
+    \nobreak \vskip-\parskip
+    %
+    % Stop a page break at the \parskip glue coming up.  However, if
+    % what follows is an environment such as @example, there will be no
+    % \parskip glue; then the negative vskip we just inserted would
+    % cause the example and the item to crash together.  So we use this
+    % bizarre value of 10001 as a signal to \aboveenvbreak to insert
+    % \parskip glue after all.  Section titles are handled this way also.
+    %
+    \penalty 10001
+    \endgroup
+    \itemxneedsnegativevskipfalse
+  \else
+    % The item text fits into the space.  Start a paragraph, so that the
+    % following text (if any) will end up on the same line.
+    \noindent
+    % Do this with kerns and \unhbox so that if there is a footnote in
+    % the item text, it can migrate to the main vertical list and
+    % eventually be printed.
+    \nobreak\kern-\tableindent
+    \dimen0 = \itemmax  \advance\dimen0 by \itemmargin \advance\dimen0 by -\wd0
+    \unhbox0
+    \nobreak\kern\dimen0
+    \endgroup
+    \itemxneedsnegativevskiptrue
+  \fi
+}
+
+\def\item{\errmessage{@item while not in a list environment}}
+\def\itemx{\errmessage{@itemx while not in a list environment}}
+
+% @table, @ftable, @vtable.
+\envdef\table{%
+  \let\itemindex\gobble
+  \tablecheck{table}%
+}
+\envdef\ftable{%
+  \def\itemindex ##1{\doind {fn}{\code{##1}}}%
+  \tablecheck{ftable}%
+}
+\envdef\vtable{%
+  \def\itemindex ##1{\doind {vr}{\code{##1}}}%
+  \tablecheck{vtable}%
+}
+\def\tablecheck#1{%
+  \ifnum \the\catcode`\^^M=\active
+    \endgroup
+    \errmessage{This command won't work in this context; perhaps the problem is
+      that we are \inenvironment\thisenv}%
+    \def\next{\doignore{#1}}%
+  \else
+    \let\next\tablex
+  \fi
+  \next
+}
+\def\tablex#1{%
+  \def\itemindicate{#1}%
+  \parsearg\tabley
+}
+\def\tabley#1{%
+  {%
+    \makevalueexpandable
+    \edef\temp{\noexpand\tablez #1\space\space\space}%
+    \expandafter
+  }\temp \endtablez
+}
+\def\tablez #1 #2 #3 #4\endtablez{%
+  \aboveenvbreak
+  \ifnum 0#1>0 \advance \leftskip by #1\mil \fi
+  \ifnum 0#2>0 \tableindent=#2\mil \fi
+  \ifnum 0#3>0 \advance \rightskip by #3\mil \fi
+  \itemmax=\tableindent
+  \advance \itemmax by -\itemmargin
+  \advance \leftskip by \tableindent
+  \exdentamount=\tableindent
+  \parindent = 0pt
+  \parskip = \smallskipamount
+  \ifdim \parskip=0pt \parskip=2pt \fi
+  \let\item = \internalBitem
+  \let\itemx = \internalBitemx
+}
+\def\Etable{\endgraf\afterenvbreak}
+\let\Eftable\Etable
+\let\Evtable\Etable
+\let\Eitemize\Etable
+\let\Eenumerate\Etable
+
+% This is the counter used by @enumerate, which is really @itemize
+
+\newcount \itemno
+
+\envdef\itemize{\parsearg\doitemize}
+
+\def\doitemize#1{%
+  \aboveenvbreak
+  \itemmax=\itemindent
+  \advance\itemmax by -\itemmargin
+  \advance\leftskip by \itemindent
+  \exdentamount=\itemindent
+  \parindent=0pt
+  \parskip=\smallskipamount
+  \ifdim\parskip=0pt \parskip=2pt \fi
+  %
+  % Try typesetting the item mark that if the document erroneously says
+  % something like @itemize @samp (intending @table), there's an error
+  % right away at the @itemize.  It's not the best error message in the
+  % world, but it's better than leaving it to the @item.  This means if
+  % the user wants an empty mark, they have to say @w{} not just @w.
+  \def\itemcontents{#1}%
+  \setbox0 = \hbox{\itemcontents}%
+  %
+  % @itemize with no arg is equivalent to @itemize @bullet.
+  \ifx\itemcontents\empty\def\itemcontents{\bullet}\fi
+  %
+  \let\item=\itemizeitem
+}
+
+% Definition of @item while inside @itemize and @enumerate.
+%
+\def\itemizeitem{%
+  \advance\itemno by 1  % for enumerations
+  {\let\par=\endgraf \smallbreak}% reasonable place to break
+  {%
+   % If the document has an @itemize directly after a section title, a
+   % \nobreak will be last on the list, and \sectionheading will have
+   % done a \vskip-\parskip.  In that case, we don't want to zero
+   % parskip, or the item text will crash with the heading.  On the
+   % other hand, when there is normal text preceding the item (as there
+   % usually is), we do want to zero parskip, or there would be too much
+   % space.  In that case, we won't have a \nobreak before.  At least
+   % that's the theory.
+   \ifnum\lastpenalty<10000 \parskip=0in \fi
+   \noindent
+   \hbox to 0pt{\hss \itemcontents \kern\itemmargin}%
+   %
+   \vadjust{\penalty 1200}}% not good to break after first line of item.
+  \flushcr
+}
+
+% \splitoff TOKENS\endmark defines \first to be the first token in
+% TOKENS, and \rest to be the remainder.
+%
+\def\splitoff#1#2\endmark{\def\first{#1}\def\rest{#2}}%
+
+% Allow an optional argument of an uppercase letter, lowercase letter,
+% or number, to specify the first label in the enumerated list.  No
+% argument is the same as `1'.
+%
+\envparseargdef\enumerate{\enumeratey #1  \endenumeratey}
+\def\enumeratey #1 #2\endenumeratey{%
+  % If we were given no argument, pretend we were given `1'.
+  \def\thearg{#1}%
+  \ifx\thearg\empty \def\thearg{1}\fi
+  %
+  % Detect if the argument is a single token.  If so, it might be a
+  % letter.  Otherwise, the only valid thing it can be is a number.
+  % (We will always have one token, because of the test we just made.
+  % This is a good thing, since \splitoff doesn't work given nothing at
+  % all -- the first parameter is undelimited.)
+  \expandafter\splitoff\thearg\endmark
+  \ifx\rest\empty
+    % Only one token in the argument.  It could still be anything.
+    % A ``lowercase letter'' is one whose \lccode is nonzero.
+    % An ``uppercase letter'' is one whose \lccode is both nonzero, and
+    %   not equal to itself.
+    % Otherwise, we assume it's a number.
+    %
+    % We need the \relax at the end of the \ifnum lines to stop TeX from
+    % continuing to look for a <number>.
+    %
+    \ifnum\lccode\expandafter`\thearg=0\relax
+      \numericenumerate % a number (we hope)
+    \else
+      % It's a letter.
+      \ifnum\lccode\expandafter`\thearg=\expandafter`\thearg\relax
+        \lowercaseenumerate % lowercase letter
+      \else
+        \uppercaseenumerate % uppercase letter
+      \fi
+    \fi
+  \else
+    % Multiple tokens in the argument.  We hope it's a number.
+    \numericenumerate
+  \fi
+}
+
+% An @enumerate whose labels are integers.  The starting integer is
+% given in \thearg.
+%
+\def\numericenumerate{%
+  \itemno = \thearg
+  \startenumeration{\the\itemno}%
+}
+
+% The starting (lowercase) letter is in \thearg.
+\def\lowercaseenumerate{%
+  \itemno = \expandafter`\thearg
+  \startenumeration{%
+    % Be sure we're not beyond the end of the alphabet.
+    \ifnum\itemno=0
+      \errmessage{No more lowercase letters in @enumerate; get a bigger
+                  alphabet}%
+    \fi
+    \char\lccode\itemno
+  }%
+}
+
+% The starting (uppercase) letter is in \thearg.
+\def\uppercaseenumerate{%
+  \itemno = \expandafter`\thearg
+  \startenumeration{%
+    % Be sure we're not beyond the end of the alphabet.
+    \ifnum\itemno=0
+      \errmessage{No more uppercase letters in @enumerate; get a bigger
+                  alphabet}
+    \fi
+    \char\uccode\itemno
+  }%
+}
+
+% Call \doitemize, adding a period to the first argument and supplying the
+% common last two arguments.  Also subtract one from the initial value in
+% \itemno, since @item increments \itemno.
+%
+\def\startenumeration#1{%
+  \advance\itemno by -1
+  \doitemize{#1.}\flushcr
+}
+
+% @alphaenumerate and @capsenumerate are abbreviations for giving an arg
+% to @enumerate.
+%
+\def\alphaenumerate{\enumerate{a}}
+\def\capsenumerate{\enumerate{A}}
+\def\Ealphaenumerate{\Eenumerate}
+\def\Ecapsenumerate{\Eenumerate}
+
+
+% @multitable macros
+% Amy Hendrickson, 8/18/94, 3/6/96
+%
+% @multitable ... @end multitable will make as many columns as desired.
+% Contents of each column will wrap at width given in preamble.  Width
+% can be specified either with sample text given in a template line,
+% or in percent of \hsize, the current width of text on page.
+
+% Table can continue over pages but will only break between lines.
+
+% To make preamble:
+%
+% Either define widths of columns in terms of percent of \hsize:
+%   @multitable @columnfractions .25 .3 .45
+%   @item ...
+%
+%   Numbers following @columnfractions are the percent of the total
+%   current hsize to be used for each column. You may use as many
+%   columns as desired.
+
+
+% Or use a template:
+%   @multitable {Column 1 template} {Column 2 template} {Column 3 template}
+%   @item ...
+%   using the widest term desired in each column.
+
+% Each new table line starts with @item, each subsequent new column
+% starts with @tab. Empty columns may be produced by supplying @tab's
+% with nothing between them for as many times as empty columns are needed,
+% ie, @tab@tab@tab will produce two empty columns.
+
+% @item, @tab do not need to be on their own lines, but it will not hurt
+% if they are.
+
+% Sample multitable:
+
+%   @multitable {Column 1 template} {Column 2 template} {Column 3 template}
+%   @item first col stuff @tab second col stuff @tab third col
+%   @item
+%   first col stuff
+%   @tab
+%   second col stuff
+%   @tab
+%   third col
+%   @item first col stuff @tab second col stuff
+%   @tab Many paragraphs of text may be used in any column.
+%
+%         They will wrap at the width determined by the template.
+%   @item@tab@tab This will be in third column.
+%   @end multitable
+
+% Default dimensions may be reset by user.
+% @multitableparskip is vertical space between paragraphs in table.
+% @multitableparindent is paragraph indent in table.
+% @multitablecolmargin is horizontal space to be left between columns.
+% @multitablelinespace is space to leave between table items, baseline
+%                                                            to baseline.
+%   0pt means it depends on current normal line spacing.
+%
+\newskip\multitableparskip
+\newskip\multitableparindent
+\newdimen\multitablecolspace
+\newskip\multitablelinespace
+\multitableparskip=0pt
+\multitableparindent=6pt
+\multitablecolspace=12pt
+\multitablelinespace=0pt
+
+% Macros used to set up halign preamble:
+%
+\let\endsetuptable\relax
+\def\xendsetuptable{\endsetuptable}
+\let\columnfractions\relax
+\def\xcolumnfractions{\columnfractions}
+\newif\ifsetpercent
+
+% #1 is the @columnfraction, usually a decimal number like .5, but might
+% be just 1.  We just use it, whatever it is.
+%
+\def\pickupwholefraction#1 {%
+  \global\advance\colcount by 1
+  \expandafter\xdef\csname col\the\colcount\endcsname{#1\hsize}%
+  \setuptable
+}
+
+\newcount\colcount
+\def\setuptable#1{%
+  \def\firstarg{#1}%
+  \ifx\firstarg\xendsetuptable
+    \let\go = \relax
+  \else
+    \ifx\firstarg\xcolumnfractions
+      \global\setpercenttrue
+    \else
+      \ifsetpercent
+         \let\go\pickupwholefraction
+      \else
+         \global\advance\colcount by 1
+         \setbox0=\hbox{#1\unskip\space}% Add a normal word space as a
+                   % separator; typically that is always in the input, anyway.
+         \expandafter\xdef\csname col\the\colcount\endcsname{\the\wd0}%
+      \fi
+    \fi
+    \ifx\go\pickupwholefraction
+      % Put the argument back for the \pickupwholefraction call, so
+      % we'll always have a period there to be parsed.
+      \def\go{\pickupwholefraction#1}%
+    \else
+      \let\go = \setuptable
+    \fi%
+  \fi
+  \go
+}
+
+% multitable-only commands.
+%
+% @headitem starts a heading row, which we typeset in bold.
+% Assignments have to be global since we are inside the implicit group
+% of an alignment entry.  \everycr resets \everytab so we don't have to
+% undo it ourselves.
+\def\headitemfont{\b}% for people to use in the template row; not changeable
+\def\headitem{%
+  \checkenv\multitable
+  \crcr
+  \global\everytab={\bf}% can't use \headitemfont since the parsing differs
+  \the\everytab % for the first item
+}%
+%
+% A \tab used to include \hskip1sp.  But then the space in a template
+% line is not enough.  That is bad.  So let's go back to just `&' until
+% we again encounter the problem the 1sp was intended to solve.
+%					--karl, nathan@acm.org, 20apr99.
+\def\tab{\checkenv\multitable &\the\everytab}%
+
+% @multitable ... @end multitable definitions:
+%
+\newtoks\everytab  % insert after every tab.
+%
+\envdef\multitable{%
+  \vskip\parskip
+  \startsavinginserts
+  %
+  % @item within a multitable starts a normal row.
+  % We use \def instead of \let so that if one of the multitable entries
+  % contains an @itemize, we don't choke on the \item (seen as \crcr aka
+  % \endtemplate) expanding \doitemize.
+  \def\item{\crcr}%
+  %
+  \tolerance=9500
+  \hbadness=9500
+  \setmultitablespacing
+  \parskip=\multitableparskip
+  \parindent=\multitableparindent
+  \overfullrule=0pt
+  \global\colcount=0
+  %
+  \everycr = {%
+    \noalign{%
+      \global\everytab={}%
+      \global\colcount=0 % Reset the column counter.
+      % Check for saved footnotes, etc.
+      \checkinserts
+      % Keeps underfull box messages off when table breaks over pages.
+      %\filbreak
+	% Maybe so, but it also creates really weird page breaks when the
+	% table breaks over pages. Wouldn't \vfil be better?  Wait until the
+	% problem manifests itself, so it can be fixed for real --karl.
+    }%
+  }%
+  %
+  \parsearg\domultitable
+}
+\def\domultitable#1{%
+  % To parse everything between @multitable and @item:
+  \setuptable#1 \endsetuptable
+  %
+  % This preamble sets up a generic column definition, which will
+  % be used as many times as user calls for columns.
+  % \vtop will set a single line and will also let text wrap and
+  % continue for many paragraphs if desired.
+  \halign\bgroup &%
+    \global\advance\colcount by 1
+    \multistrut
+    \vtop{%
+      % Use the current \colcount to find the correct column width:
+      \hsize=\expandafter\csname col\the\colcount\endcsname
+      %
+      % In order to keep entries from bumping into each other
+      % we will add a \leftskip of \multitablecolspace to all columns after
+      % the first one.
+      %
+      % If a template has been used, we will add \multitablecolspace
+      % to the width of each template entry.
+      %
+      % If the user has set preamble in terms of percent of \hsize we will
+      % use that dimension as the width of the column, and the \leftskip
+      % will keep entries from bumping into each other.  Table will start at
+      % left margin and final column will justify at right margin.
+      %
+      % Make sure we don't inherit \rightskip from the outer environment.
+      \rightskip=0pt
+      \ifnum\colcount=1
+	% The first column will be indented with the surrounding text.
+	\advance\hsize by\leftskip
+      \else
+	\ifsetpercent \else
+	  % If user has not set preamble in terms of percent of \hsize
+	  % we will advance \hsize by \multitablecolspace.
+	  \advance\hsize by \multitablecolspace
+	\fi
+       % In either case we will make \leftskip=\multitablecolspace:
+      \leftskip=\multitablecolspace
+      \fi
+      % Ignoring space at the beginning and end avoids an occasional spurious
+      % blank line, when TeX decides to break the line at the space before the
+      % box from the multistrut, so the strut ends up on a line by itself.
+      % For example:
+      % @multitable @columnfractions .11 .89
+      % @item @code{#}
+      % @tab Legal holiday which is valid in major parts of the whole country.
+      % Is automatically provided with highlighting sequences respectively
+      % marking characters.
+      \noindent\ignorespaces##\unskip\multistrut
+    }\cr
+}
+\def\Emultitable{%
+  \crcr
+  \egroup % end the \halign
+  \global\setpercentfalse
+}
+
+\def\setmultitablespacing{%
+  \def\multistrut{\strut}% just use the standard line spacing
+  %
+  % Compute \multitablelinespace (if not defined by user) for use in
+  % \multitableparskip calculation.  We used define \multistrut based on
+  % this, but (ironically) that caused the spacing to be off.
+  % See bug-texinfo report from Werner Lemberg, 31 Oct 2004 12:52:20 +0100.
+\ifdim\multitablelinespace=0pt
+\setbox0=\vbox{X}\global\multitablelinespace=\the\baselineskip
+\global\advance\multitablelinespace by-\ht0
+\fi
+%% Test to see if parskip is larger than space between lines of
+%% table. If not, do nothing.
+%%        If so, set to same dimension as multitablelinespace.
+\ifdim\multitableparskip>\multitablelinespace
+\global\multitableparskip=\multitablelinespace
+\global\advance\multitableparskip-7pt %% to keep parskip somewhat smaller
+                                      %% than skip between lines in the table.
+\fi%
+\ifdim\multitableparskip=0pt
+\global\multitableparskip=\multitablelinespace
+\global\advance\multitableparskip-7pt %% to keep parskip somewhat smaller
+                                      %% than skip between lines in the table.
+\fi}
+
+
+\message{conditionals,}
+
+% @iftex, @ifnotdocbook, @ifnothtml, @ifnotinfo, @ifnotplaintext,
+% @ifnotxml always succeed.  They currently do nothing; we don't
+% attempt to check whether the conditionals are properly nested.  But we
+% have to remember that they are conditionals, so that @end doesn't
+% attempt to close an environment group.
+%
+\def\makecond#1{%
+  \expandafter\let\csname #1\endcsname = \relax
+  \expandafter\let\csname iscond.#1\endcsname = 1
+}
+\makecond{iftex}
+\makecond{ifnotdocbook}
+\makecond{ifnothtml}
+\makecond{ifnotinfo}
+\makecond{ifnotplaintext}
+\makecond{ifnotxml}
+
+% Ignore @ignore, @ifhtml, @ifinfo, and the like.
+%
+\def\direntry{\doignore{direntry}}
+\def\documentdescription{\doignore{documentdescription}}
+\def\docbook{\doignore{docbook}}
+\def\html{\doignore{html}}
+\def\ifdocbook{\doignore{ifdocbook}}
+\def\ifhtml{\doignore{ifhtml}}
+\def\ifinfo{\doignore{ifinfo}}
+\def\ifnottex{\doignore{ifnottex}}
+\def\ifplaintext{\doignore{ifplaintext}}
+\def\ifxml{\doignore{ifxml}}
+\def\ignore{\doignore{ignore}}
+\def\menu{\doignore{menu}}
+\def\xml{\doignore{xml}}
+
+% Ignore text until a line `@end #1', keeping track of nested conditionals.
+%
+% A count to remember the depth of nesting.
+\newcount\doignorecount
+
+\def\doignore#1{\begingroup
+  % Scan in ``verbatim'' mode:
+  \obeylines
+  \catcode`\@ = \other
+  \catcode`\{ = \other
+  \catcode`\} = \other
+  %
+  % Make sure that spaces turn into tokens that match what \doignoretext wants.
+  \spaceisspace
+  %
+  % Count number of #1's that we've seen.
+  \doignorecount = 0
+  %
+  % Swallow text until we reach the matching `@end #1'.
+  \dodoignore{#1}%
+}
+
+{ \catcode`_=11 % We want to use \_STOP_ which cannot appear in texinfo source.
+  \obeylines %
+  %
+  \gdef\dodoignore#1{%
+    % #1 contains the command name as a string, e.g., `ifinfo'.
+    %
+    % Define a command to find the next `@end #1'.
+    \long\def\doignoretext##1^^M@end #1{%
+      \doignoretextyyy##1^^M@#1\_STOP_}%
+    %
+    % And this command to find another #1 command, at the beginning of a
+    % line.  (Otherwise, we would consider a line `@c @ifset', for
+    % example, to count as an @ifset for nesting.)
+    \long\def\doignoretextyyy##1^^M@#1##2\_STOP_{\doignoreyyy{##2}\_STOP_}%
+    %
+    % And now expand that command.
+    \doignoretext ^^M%
+  }%
+}
+
+\def\doignoreyyy#1{%
+  \def\temp{#1}%
+  \ifx\temp\empty			% Nothing found.
+    \let\next\doignoretextzzz
+  \else					% Found a nested condition, ...
+    \advance\doignorecount by 1
+    \let\next\doignoretextyyy		% ..., look for another.
+    % If we're here, #1 ends with ^^M\ifinfo (for example).
+  \fi
+  \next #1% the token \_STOP_ is present just after this macro.
+}
+
+% We have to swallow the remaining "\_STOP_".
+%
+\def\doignoretextzzz#1{%
+  \ifnum\doignorecount = 0	% We have just found the outermost @end.
+    \let\next\enddoignore
+  \else				% Still inside a nested condition.
+    \advance\doignorecount by -1
+    \let\next\doignoretext      % Look for the next @end.
+  \fi
+  \next
+}
+
+% Finish off ignored text.
+{ \obeylines%
+  % Ignore anything after the last `@end #1'; this matters in verbatim
+  % environments, where otherwise the newline after an ignored conditional
+  % would result in a blank line in the output.
+  \gdef\enddoignore#1^^M{\endgroup\ignorespaces}%
+}
+
+
+% @set VAR sets the variable VAR to an empty value.
+% @set VAR REST-OF-LINE sets VAR to the value REST-OF-LINE.
+%
+% Since we want to separate VAR from REST-OF-LINE (which might be
+% empty), we can't just use \parsearg; we have to insert a space of our
+% own to delimit the rest of the line, and then take it out again if we
+% didn't need it.
+% We rely on the fact that \parsearg sets \catcode`\ =10.
+%
+\parseargdef\set{\setyyy#1 \endsetyyy}
+\def\setyyy#1 #2\endsetyyy{%
+  {%
+    \makevalueexpandable
+    \def\temp{#2}%
+    \edef\next{\gdef\makecsname{SET#1}}%
+    \ifx\temp\empty
+      \next{}%
+    \else
+      \setzzz#2\endsetzzz
+    \fi
+  }%
+}
+% Remove the trailing space \setxxx inserted.
+\def\setzzz#1 \endsetzzz{\next{#1}}
+
+% @clear VAR clears (i.e., unsets) the variable VAR.
+%
+\parseargdef\clear{%
+  {%
+    \makevalueexpandable
+    \global\expandafter\let\csname SET#1\endcsname=\relax
+  }%
+}
+
+% @value{foo} gets the text saved in variable foo.
+\def\value{\begingroup\makevalueexpandable\valuexxx}
+\def\valuexxx#1{\expandablevalue{#1}\endgroup}
+{
+  \catcode`\- = \active \catcode`\_ = \active
+  %
+  \gdef\makevalueexpandable{%
+    \let\value = \expandablevalue
+    % We don't want these characters active, ...
+    \catcode`\-=\other \catcode`\_=\other
+    % ..., but we might end up with active ones in the argument if
+    % we're called from @code, as @code{@value{foo-bar_}}, though.
+    % So \let them to their normal equivalents.
+    \let-\realdash \let_\normalunderscore
+  }
+}
+
+% We have this subroutine so that we can handle at least some @value's
+% properly in indexes (we call \makevalueexpandable in \indexdummies).
+% The command has to be fully expandable (if the variable is set), since
+% the result winds up in the index file.  This means that if the
+% variable's value contains other Texinfo commands, it's almost certain
+% it will fail (although perhaps we could fix that with sufficient work
+% to do a one-level expansion on the result, instead of complete).
+%
+\def\expandablevalue#1{%
+  \expandafter\ifx\csname SET#1\endcsname\relax
+    {[No value for ``#1'']}%
+    \message{Variable `#1', used in @value, is not set.}%
+  \else
+    \csname SET#1\endcsname
+  \fi
+}
+
+% @ifset VAR ... @end ifset reads the `...' iff VAR has been defined
+% with @set.
+%
+% To get special treatment of `@end ifset,' call \makeond and the redefine.
+%
+\makecond{ifset}
+\def\ifset{\parsearg{\doifset{\let\next=\ifsetfail}}}
+\def\doifset#1#2{%
+  {%
+    \makevalueexpandable
+    \let\next=\empty
+    \expandafter\ifx\csname SET#2\endcsname\relax
+      #1% If not set, redefine \next.
+    \fi
+    \expandafter
+  }\next
+}
+\def\ifsetfail{\doignore{ifset}}
+
+% @ifclear VAR ... @end ifclear reads the `...' iff VAR has never been
+% defined with @set, or has been undefined with @clear.
+%
+% The `\else' inside the `\doifset' parameter is a trick to reuse the
+% above code: if the variable is not set, do nothing, if it is set,
+% then redefine \next to \ifclearfail.
+%
+\makecond{ifclear}
+\def\ifclear{\parsearg{\doifset{\else \let\next=\ifclearfail}}}
+\def\ifclearfail{\doignore{ifclear}}
+
+% @dircategory CATEGORY  -- specify a category of the dir file
+% which this file should belong to.  Ignore this in TeX.
+\let\dircategory=\comment
+
+% @defininfoenclose.
+\let\definfoenclose=\comment
+
+
+\message{indexing,}
+% Index generation facilities
+
+% Define \newwrite to be identical to plain tex's \newwrite
+% except not \outer, so it can be used within macros and \if's.
+\edef\newwrite{\makecsname{ptexnewwrite}}
+
+% \newindex {foo} defines an index named foo.
+% It automatically defines \fooindex such that
+% \fooindex ...rest of line... puts an entry in the index foo.
+% It also defines \fooindfile to be the number of the output channel for
+% the file that accumulates this index.  The file's extension is foo.
+% The name of an index should be no more than 2 characters long
+% for the sake of vms.
+%
+\def\newindex#1{%
+  \iflinks
+    \expandafter\newwrite \csname#1indfile\endcsname
+    \openout \csname#1indfile\endcsname \jobname.#1 % Open the file
+  \fi
+  \expandafter\xdef\csname#1index\endcsname{%     % Define @#1index
+    \noexpand\doindex{#1}}
+}
+
+% @defindex foo  ==  \newindex{foo}
+%
+\def\defindex{\parsearg\newindex}
+
+% Define @defcodeindex, like @defindex except put all entries in @code.
+%
+\def\defcodeindex{\parsearg\newcodeindex}
+%
+\def\newcodeindex#1{%
+  \iflinks
+    \expandafter\newwrite \csname#1indfile\endcsname
+    \openout \csname#1indfile\endcsname \jobname.#1
+  \fi
+  \expandafter\xdef\csname#1index\endcsname{%
+    \noexpand\docodeindex{#1}}%
+}
+
+
+% @synindex foo bar    makes index foo feed into index bar.
+% Do this instead of @defindex foo if you don't want it as a separate index.
+%
+% @syncodeindex foo bar   similar, but put all entries made for index foo
+% inside @code.
+%
+\def\synindex#1 #2 {\dosynindex\doindex{#1}{#2}}
+\def\syncodeindex#1 #2 {\dosynindex\docodeindex{#1}{#2}}
+
+% #1 is \doindex or \docodeindex, #2 the index getting redefined (foo),
+% #3 the target index (bar).
+\def\dosynindex#1#2#3{%
+  % Only do \closeout if we haven't already done it, else we'll end up
+  % closing the target index.
+  \expandafter \ifx\csname donesynindex#2\endcsname \relax
+    % The \closeout helps reduce unnecessary open files; the limit on the
+    % Acorn RISC OS is a mere 16 files.
+    \expandafter\closeout\csname#2indfile\endcsname
+    \expandafter\let\csname donesynindex#2\endcsname = 1
+  \fi
+  % redefine \fooindfile:
+  \expandafter\let\expandafter\temp\expandafter=\csname#3indfile\endcsname
+  \expandafter\let\csname#2indfile\endcsname=\temp
+  % redefine \fooindex:
+  \expandafter\xdef\csname#2index\endcsname{\noexpand#1{#3}}%
+}
+
+% Define \doindex, the driver for all \fooindex macros.
+% Argument #1 is generated by the calling \fooindex macro,
+%  and it is "foo", the name of the index.
+
+% \doindex just uses \parsearg; it calls \doind for the actual work.
+% This is because \doind is more useful to call from other macros.
+
+% There is also \dosubind {index}{topic}{subtopic}
+% which makes an entry in a two-level index such as the operation index.
+
+\def\doindex#1{\edef\indexname{#1}\parsearg\singleindexer}
+\def\singleindexer #1{\doind{\indexname}{#1}}
+
+% like the previous two, but they put @code around the argument.
+\def\docodeindex#1{\edef\indexname{#1}\parsearg\singlecodeindexer}
+\def\singlecodeindexer #1{\doind{\indexname}{\code{#1}}}
+
+% Take care of Texinfo commands that can appear in an index entry.
+% Since there are some commands we want to expand, and others we don't,
+% we have to laboriously prevent expansion for those that we don't.
+%
+\def\indexdummies{%
+  \escapechar = `\\     % use backslash in output files.
+  \def\@{@}% change to @@ when we switch to @ as escape char in index files.
+  \def\ {\realbackslash\space }%
+  %
+  % Need these in case \tex is in effect and \{ is a \delimiter again.
+  % But can't use \lbracecmd and \rbracecmd because texindex assumes
+  % braces and backslashes are used only as delimiters.
+  \let\{ = \mylbrace
+  \let\} = \myrbrace
+  %
+  % I don't entirely understand this, but when an index entry is
+  % generated from a macro call, the \endinput which \scanmacro inserts
+  % causes processing to be prematurely terminated.  This is,
+  % apparently, because \indexsorttmp is fully expanded, and \endinput
+  % is an expandable command.  The redefinition below makes \endinput
+  % disappear altogether for that purpose -- although logging shows that
+  % processing continues to some further point.  On the other hand, it
+  % seems \endinput does not hurt in the printed index arg, since that
+  % is still getting written without apparent harm.
+  %
+  % Sample source (mac-idx3.tex, reported by Graham Percival to
+  % help-texinfo, 22may06):
+  % @macro funindex {WORD}
+  % @findex xyz
+  % @end macro
+  % ...
+  % @funindex commtest
+  %
+  % The above is not enough to reproduce the bug, but it gives the flavor.
+  %
+  % Sample whatsit resulting:
+  % .@write3{\entry{xyz}{@folio }{@code {xyz@endinput }}}
+  %
+  % So:
+  \let\endinput = \empty
+  %
+  % Do the redefinitions.
+  \commondummies
+}
+
+% For the aux and toc files, @ is the escape character.  So we want to
+% redefine everything using @ as the escape character (instead of
+% \realbackslash, still used for index files).  When everything uses @,
+% this will be simpler.
+%
+\def\atdummies{%
+  \def\@{@@}%
+  \def\ {@ }%
+  \let\{ = \lbraceatcmd
+  \let\} = \rbraceatcmd
+  %
+  % Do the redefinitions.
+  \commondummies
+  \otherbackslash
+}
+
+% Called from \indexdummies and \atdummies.
+%
+\def\commondummies{%
+  %
+  % \definedummyword defines \#1 as \string\#1\space, thus effectively
+  % preventing its expansion.  This is used only for control% words,
+  % not control letters, because the \space would be incorrect for
+  % control characters, but is needed to separate the control word
+  % from whatever follows.
+  %
+  % For control letters, we have \definedummyletter, which omits the
+  % space.
+  %
+  % These can be used both for control words that take an argument and
+  % those that do not.  If it is followed by {arg} in the input, then
+  % that will dutifully get written to the index (or wherever).
+  %
+  \def\definedummyword  ##1{\def##1{\string##1\space}}%
+  \def\definedummyletter##1{\def##1{\string##1}}%
+  \let\definedummyaccent\definedummyletter
+  %
+  \commondummiesnofonts
+  %
+  \definedummyletter\_%
+  %
+  % Non-English letters.
+  \definedummyword\AA
+  \definedummyword\AE
+  \definedummyword\DH
+  \definedummyword\L
+  \definedummyword\O
+  \definedummyword\OE
+  \definedummyword\TH
+  \definedummyword\aa
+  \definedummyword\ae
+  \definedummyword\dh
+  \definedummyword\exclamdown
+  \definedummyword\l
+  \definedummyword\o
+  \definedummyword\oe
+  \definedummyword\ordf
+  \definedummyword\ordm
+  \definedummyword\questiondown
+  \definedummyword\ss
+  \definedummyword\th
+  %
+  % Although these internal commands shouldn't show up, sometimes they do.
+  \definedummyword\bf
+  \definedummyword\gtr
+  \definedummyword\hat
+  \definedummyword\less
+  \definedummyword\sf
+  \definedummyword\sl
+  \definedummyword\tclose
+  \definedummyword\tt
+  %
+  \definedummyword\LaTeX
+  \definedummyword\TeX
+  %
+  % Assorted special characters.
+  \definedummyword\bullet
+  \definedummyword\comma
+  \definedummyword\copyright
+  \definedummyword\registeredsymbol
+  \definedummyword\dots
+  \definedummyword\enddots
+  \definedummyword\equiv
+  \definedummyword\error
+  \definedummyword\euro
+  \definedummyword\guillemetleft
+  \definedummyword\guillemetright
+  \definedummyword\guilsinglleft
+  \definedummyword\guilsinglright
+  \definedummyword\expansion
+  \definedummyword\minus
+  \definedummyword\ogonek
+  \definedummyword\pounds
+  \definedummyword\point
+  \definedummyword\print
+  \definedummyword\quotedblbase
+  \definedummyword\quotedblleft
+  \definedummyword\quotedblright
+  \definedummyword\quoteleft
+  \definedummyword\quoteright
+  \definedummyword\quotesinglbase
+  \definedummyword\result
+  \definedummyword\textdegree
+  %
+  % We want to disable all macros so that they are not expanded by \write.
+  \macrolist
+  %
+  \normalturnoffactive
+  %
+  % Handle some cases of @value -- where it does not contain any
+  % (non-fully-expandable) commands.
+  \makevalueexpandable
+}
+
+% \commondummiesnofonts: common to \commondummies and \indexnofonts.
+%
+\def\commondummiesnofonts{%
+  % Control letters and accents.
+  \definedummyletter\!%
+  \definedummyaccent\"%
+  \definedummyaccent\'%
+  \definedummyletter\*%
+  \definedummyaccent\,%
+  \definedummyletter\.%
+  \definedummyletter\/%
+  \definedummyletter\:%
+  \definedummyaccent\=%
+  \definedummyletter\?%
+  \definedummyaccent\^%
+  \definedummyaccent\`%
+  \definedummyaccent\~%
+  \definedummyword\u
+  \definedummyword\v
+  \definedummyword\H
+  \definedummyword\dotaccent
+  \definedummyword\ogonek
+  \definedummyword\ringaccent
+  \definedummyword\tieaccent
+  \definedummyword\ubaraccent
+  \definedummyword\udotaccent
+  \definedummyword\dotless
+  %
+  % Texinfo font commands.
+  \definedummyword\b
+  \definedummyword\i
+  \definedummyword\r
+  \definedummyword\sc
+  \definedummyword\t
+  %
+  % Commands that take arguments.
+  \definedummyword\acronym
+  \definedummyword\cite
+  \definedummyword\code
+  \definedummyword\command
+  \definedummyword\dfn
+  \definedummyword\email
+  \definedummyword\emph
+  \definedummyword\env
+  \definedummyword\file
+  \definedummyword\kbd
+  \definedummyword\key
+  \definedummyword\math
+  \definedummyword\option
+  \definedummyword\pxref
+  \definedummyword\ref
+  \definedummyword\samp
+  \definedummyword\strong
+  \definedummyword\tie
+  \definedummyword\uref
+  \definedummyword\url
+  \definedummyword\var
+  \definedummyword\verb
+  \definedummyword\w
+  \definedummyword\xref
+}
+
+% \indexnofonts is used when outputting the strings to sort the index
+% by, and when constructing control sequence names.  It eliminates all
+% control sequences and just writes whatever the best ASCII sort string
+% would be for a given command (usually its argument).
+%
+\def\indexnofonts{%
+  % Accent commands should become @asis.
+  \def\definedummyaccent##1{\let##1\asis}%
+  % We can just ignore other control letters.
+  \def\definedummyletter##1{\let##1\empty}%
+  % Hopefully, all control words can become @asis.
+  \let\definedummyword\definedummyaccent
+  %
+  \commondummiesnofonts
+  %
+  % Don't no-op \tt, since it isn't a user-level command
+  % and is used in the definitions of the active chars like <, >, |, etc.
+  % Likewise with the other plain tex font commands.
+  %\let\tt=\asis
+  %
+  \def\ { }%
+  \def\@{@}%
+  % how to handle braces?
+  \def\_{\normalunderscore}%
+  %
+  % Non-English letters.
+  \def\AA{AA}%
+  \def\AE{AE}%
+  \def\DH{DZZ}%
+  \def\L{L}%
+  \def\OE{OE}%
+  \def\O{O}%
+  \def\TH{ZZZ}%
+  \def\aa{aa}%
+  \def\ae{ae}%
+  \def\dh{dzz}%
+  \def\exclamdown{!}%
+  \def\l{l}%
+  \def\oe{oe}%
+  \def\ordf{a}%
+  \def\ordm{o}%
+  \def\o{o}%
+  \def\questiondown{?}%
+  \def\ss{ss}%
+  \def\th{zzz}%
+  %
+  \def\LaTeX{LaTeX}%
+  \def\TeX{TeX}%
+  %
+  % Assorted special characters.
+  % (The following {} will end up in the sort string, but that's ok.)
+  \def\bullet{bullet}%
+  \def\comma{,}%
+  \def\copyright{copyright}%
+  \def\dots{...}%
+  \def\enddots{...}%
+  \def\equiv{==}%
+  \def\error{error}%
+  \def\euro{euro}%
+  \def\expansion{==>}%
+  \def\guillemetleft{<<}%
+  \def\guillemetright{>>}%
+  \def\guilsinglleft{<}%
+  \def\guilsinglright{>}%
+  \def\minus{-}%
+  \def\point{.}%
+  \def\pounds{pounds}%
+  \def\print{-|}%
+  \def\quotedblbase{"}%
+  \def\quotedblleft{"}%
+  \def\quotedblright{"}%
+  \def\quoteleft{`}%
+  \def\quoteright{'}%
+  \def\quotesinglbase{,}%
+  \def\registeredsymbol{R}%
+  \def\result{=>}%
+  \def\textdegree{o}%
+  %
+  % We need to get rid of all macros, leaving only the arguments (if present).
+  % Of course this is not nearly correct, but it is the best we can do for now.
+  % makeinfo does not expand macros in the argument to @deffn, which ends up
+  % writing an index entry, and texindex isn't prepared for an index sort entry
+  % that starts with \.
+  %
+  % Since macro invocations are followed by braces, we can just redefine them
+  % to take a single TeX argument.  The case of a macro invocation that
+  % goes to end-of-line is not handled.
+  %
+  \macrolist
+}
+
+\let\indexbackslash=0  %overridden during \printindex.
+\let\SETmarginindex=\relax % put index entries in margin (undocumented)?
+
+% Most index entries go through here, but \dosubind is the general case.
+% #1 is the index name, #2 is the entry text.
+\def\doind#1#2{\dosubind{#1}{#2}{}}
+
+% Workhorse for all \fooindexes.
+% #1 is name of index, #2 is stuff to put there, #3 is subentry --
+% empty if called from \doind, as we usually are (the main exception
+% is with most defuns, which call us directly).
+%
+\def\dosubind#1#2#3{%
+  \iflinks
+  {%
+    % Store the main index entry text (including the third arg).
+    \toks0 = {#2}%
+    % If third arg is present, precede it with a space.
+    \def\thirdarg{#3}%
+    \ifx\thirdarg\empty \else
+      \toks0 = \expandafter{\the\toks0 \space #3}%
+    \fi
+    %
+    \edef\writeto{\csname#1indfile\endcsname}%
+    %
+    \safewhatsit\dosubindwrite
+  }%
+  \fi
+}
+
+% Write the entry in \toks0 to the index file:
+%
+\def\dosubindwrite{%
+  % Put the index entry in the margin if desired.
+  \ifx\SETmarginindex\relax\else
+    \insert\margin{\hbox{\vrule height8pt depth3pt width0pt \the\toks0}}%
+  \fi
+  %
+  % Remember, we are within a group.
+  \indexdummies % Must do this here, since \bf, etc expand at this stage
+  \def\backslashcurfont{\indexbackslash}% \indexbackslash isn't defined now
+      % so it will be output as is; and it will print as backslash.
+  %
+  % Process the index entry with all font commands turned off, to
+  % get the string to sort by.
+  {\indexnofonts
+   \edef\temp{\the\toks0}% need full expansion
+   \xdef\indexsorttmp{\temp}%
+  }%
+  %
+  % Set up the complete index entry, with both the sort key and
+  % the original text, including any font commands.  We write
+  % three arguments to \entry to the .?? file (four in the
+  % subentry case), texindex reduces to two when writing the .??s
+  % sorted result.
+  \edef\temp{%
+    \write\writeto{%
+      \string\entry{\indexsorttmp}{\noexpand\folio}{\the\toks0}}%
+  }%
+  \temp
+}
+
+% Take care of unwanted page breaks/skips around a whatsit:
+%
+% If a skip is the last thing on the list now, preserve it
+% by backing up by \lastskip, doing the \write, then inserting
+% the skip again.  Otherwise, the whatsit generated by the
+% \write or \pdfdest will make \lastskip zero.  The result is that
+% sequences like this:
+% @end defun
+% @tindex whatever
+% @defun ...
+% will have extra space inserted, because the \medbreak in the
+% start of the @defun won't see the skip inserted by the @end of
+% the previous defun.
+%
+% But don't do any of this if we're not in vertical mode.  We
+% don't want to do a \vskip and prematurely end a paragraph.
+%
+% Avoid page breaks due to these extra skips, too.
+%
+% But wait, there is a catch there:
+% We'll have to check whether \lastskip is zero skip.  \ifdim is not
+% sufficient for this purpose, as it ignores stretch and shrink parts
+% of the skip.  The only way seems to be to check the textual
+% representation of the skip.
+%
+% The following is almost like \def\zeroskipmacro{0.0pt} except that
+% the ``p'' and ``t'' characters have catcode \other, not 11 (letter).
+%
+\edef\zeroskipmacro{\expandafter\the\csname z@skip\endcsname}
+%
+\newskip\whatsitskip
+\newcount\whatsitpenalty
+%
+% ..., ready, GO:
+%
+\def\safewhatsit#1{%
+\ifhmode
+  #1%
+\else
+  % \lastskip and \lastpenalty cannot both be nonzero simultaneously.
+  \whatsitskip = \lastskip
+  \edef\lastskipmacro{\the\lastskip}%
+  \whatsitpenalty = \lastpenalty
+  %
+  % If \lastskip is nonzero, that means the last item was a
+  % skip.  And since a skip is discardable, that means this
+  % -\whatsitskip glue we're inserting is preceded by a
+  % non-discardable item, therefore it is not a potential
+  % breakpoint, therefore no \nobreak needed.
+  \ifx\lastskipmacro\zeroskipmacro
+  \else
+    \vskip-\whatsitskip
+  \fi
+  %
+  #1%
+  %
+  \ifx\lastskipmacro\zeroskipmacro
+    % If \lastskip was zero, perhaps the last item was a penalty, and
+    % perhaps it was >=10000, e.g., a \nobreak.  In that case, we want
+    % to re-insert the same penalty (values >10000 are used for various
+    % signals); since we just inserted a non-discardable item, any
+    % following glue (such as a \parskip) would be a breakpoint.  For example:
+    %
+    %   @deffn deffn-whatever
+    %   @vindex index-whatever
+    %   Description.
+    % would allow a break between the index-whatever whatsit
+    % and the "Description." paragraph.
+    \ifnum\whatsitpenalty>9999 \penalty\whatsitpenalty \fi
+  \else
+    % On the other hand, if we had a nonzero \lastskip,
+    % this make-up glue would be preceded by a non-discardable item
+    % (the whatsit from the \write), so we must insert a \nobreak.
+    \nobreak\vskip\whatsitskip
+  \fi
+\fi
+}
+
+% The index entry written in the file actually looks like
+%  \entry {sortstring}{page}{topic}
+% or
+%  \entry {sortstring}{page}{topic}{subtopic}
+% The texindex program reads in these files and writes files
+% containing these kinds of lines:
+%  \initial {c}
+%     before the first topic whose initial is c
+%  \entry {topic}{pagelist}
+%     for a topic that is used without subtopics
+%  \primary {topic}
+%     for the beginning of a topic that is used with subtopics
+%  \secondary {subtopic}{pagelist}
+%     for each subtopic.
+
+% Define the user-accessible indexing commands
+% @findex, @vindex, @kindex, @cindex.
+
+\def\findex {\fnindex}
+\def\kindex {\kyindex}
+\def\cindex {\cpindex}
+\def\vindex {\vrindex}
+\def\tindex {\tpindex}
+\def\pindex {\pgindex}
+
+\def\cindexsub {\begingroup\obeylines\cindexsub}
+{\obeylines %
+\gdef\cindexsub "#1" #2^^M{\endgroup %
+\dosubind{cp}{#2}{#1}}}
+
+% Define the macros used in formatting output of the sorted index material.
+
+% @printindex causes a particular index (the ??s file) to get printed.
+% It does not print any chapter heading (usually an @unnumbered).
+%
+\parseargdef\printindex{\begingroup
+  \dobreak \chapheadingskip{10000}%
+  %
+  \smallfonts \rm
+  \tolerance = 9500
+  \plainfrenchspacing
+  \everypar = {}% don't want the \kern\-parindent from indentation suppression.
+  %
+  % See if the index file exists and is nonempty.
+  % Change catcode of @ here so that if the index file contains
+  % \initial {@}
+  % as its first line, TeX doesn't complain about mismatched braces
+  % (because it thinks @} is a control sequence).
+  \catcode`\@ = 11
+  \openin 1 \jobname.#1s
+  \ifeof 1
+    % \enddoublecolumns gets confused if there is no text in the index,
+    % and it loses the chapter title and the aux file entries for the
+    % index.  The easiest way to prevent this problem is to make sure
+    % there is some text.
+    \putwordIndexNonexistent
+  \else
+    %
+    % If the index file exists but is empty, then \openin leaves \ifeof
+    % false.  We have to make TeX try to read something from the file, so
+    % it can discover if there is anything in it.
+    \read 1 to \temp
+    \ifeof 1
+      \putwordIndexIsEmpty
+    \else
+      % Index files are almost Texinfo source, but we use \ as the escape
+      % character.  It would be better to use @, but that's too big a change
+      % to make right now.
+      \def\indexbackslash{\backslashcurfont}%
+      \catcode`\\ = 0
+      \escapechar = `\\
+      \begindoublecolumns
+      \input \jobname.#1s
+      \enddoublecolumns
+    \fi
+  \fi
+  \closein 1
+\endgroup}
+
+% These macros are used by the sorted index file itself.
+% Change them to control the appearance of the index.
+
+\def\initial#1{{%
+  % Some minor font changes for the special characters.
+  \let\tentt=\sectt \let\tt=\sectt \let\sf=\sectt
+  %
+  % Remove any glue we may have, we'll be inserting our own.
+  \removelastskip
+  %
+  % We like breaks before the index initials, so insert a bonus.
+  \nobreak
+  \vskip 0pt plus 3\baselineskip
+  \penalty 0
+  \vskip 0pt plus -3\baselineskip
+  %
+  % Typeset the initial.  Making this add up to a whole number of
+  % baselineskips increases the chance of the dots lining up from column
+  % to column.  It still won't often be perfect, because of the stretch
+  % we need before each entry, but it's better.
+  %
+  % No shrink because it confuses \balancecolumns.
+  \vskip 1.67\baselineskip plus .5\baselineskip
+  \leftline{\secbf #1}%
+  % Do our best not to break after the initial.
+  \nobreak
+  \vskip .33\baselineskip plus .1\baselineskip
+}}
+
+% \entry typesets a paragraph consisting of the text (#1), dot leaders, and
+% then page number (#2) flushed to the right margin.  It is used for index
+% and table of contents entries.  The paragraph is indented by \leftskip.
+%
+% A straightforward implementation would start like this:
+%	\def\entry#1#2{...
+% But this freezes the catcodes in the argument, and can cause problems to
+% @code, which sets - active.  This problem was fixed by a kludge---
+% ``-'' was active throughout whole index, but this isn't really right.
+%
+% The right solution is to prevent \entry from swallowing the whole text.
+%                                 --kasal, 21nov03
+\def\entry{%
+  \begingroup
+    %
+    % Start a new paragraph if necessary, so our assignments below can't
+    % affect previous text.
+    \par
+    %
+    % Do not fill out the last line with white space.
+    \parfillskip = 0in
+    %
+    % No extra space above this paragraph.
+    \parskip = 0in
+    %
+    % Do not prefer a separate line ending with a hyphen to fewer lines.
+    \finalhyphendemerits = 0
+    %
+    % \hangindent is only relevant when the entry text and page number
+    % don't both fit on one line.  In that case, bob suggests starting the
+    % dots pretty far over on the line.  Unfortunately, a large
+    % indentation looks wrong when the entry text itself is broken across
+    % lines.  So we use a small indentation and put up with long leaders.
+    %
+    % \hangafter is reset to 1 (which is the value we want) at the start
+    % of each paragraph, so we need not do anything with that.
+    \hangindent = 2em
+    %
+    % When the entry text needs to be broken, just fill out the first line
+    % with blank space.
+    \rightskip = 0pt plus1fil
+    %
+    % A bit of stretch before each entry for the benefit of balancing
+    % columns.
+    \vskip 0pt plus1pt
+    %
+    % Swallow the left brace of the text (first parameter):
+    \afterassignment\doentry
+    \let\temp =
+}
+\def\doentry{%
+    \bgroup % Instead of the swallowed brace.
+      \noindent
+      \aftergroup\finishentry
+      % And now comes the text of the entry.
+}
+\def\finishentry#1{%
+    % #1 is the page number.
+    %
+    % The following is kludged to not output a line of dots in the index if
+    % there are no page numbers.  The next person who breaks this will be
+    % cursed by a Unix daemon.
+    \setbox\boxA = \hbox{#1}%
+    \ifdim\wd\boxA = 0pt
+      \ %
+    \else
+      %
+      % If we must, put the page number on a line of its own, and fill out
+      % this line with blank space.  (The \hfil is overwhelmed with the
+      % fill leaders glue in \indexdotfill if the page number does fit.)
+      \hfil\penalty50
+      \null\nobreak\indexdotfill % Have leaders before the page number.
+      %
+      % The `\ ' here is removed by the implicit \unskip that TeX does as
+      % part of (the primitive) \par.  Without it, a spurious underfull
+      % \hbox ensues.
+      \ifpdf
+	\pdfgettoks#1.%
+	\ \the\toksA
+      \else
+	\ #1%
+      \fi
+    \fi
+    \par
+  \endgroup
+}
+
+% Like plain.tex's \dotfill, except uses up at least 1 em.
+\def\indexdotfill{\cleaders
+  \hbox{$\mathsurround=0pt \mkern1.5mu.\mkern1.5mu$}\hskip 1em plus 1fill}
+
+\def\primary #1{\line{#1\hfil}}
+
+\newskip\secondaryindent \secondaryindent=0.5cm
+\def\secondary#1#2{{%
+  \parfillskip=0in
+  \parskip=0in
+  \hangindent=1in
+  \hangafter=1
+  \noindent\hskip\secondaryindent\hbox{#1}\indexdotfill
+  \ifpdf
+    \pdfgettoks#2.\ \the\toksA % The page number ends the paragraph.
+  \else
+    #2
+  \fi
+  \par
+}}
+
+% Define two-column mode, which we use to typeset indexes.
+% Adapted from the TeXbook, page 416, which is to say,
+% the manmac.tex format used to print the TeXbook itself.
+\catcode`\@=11
+
+\newbox\partialpage
+\newdimen\doublecolumnhsize
+
+\def\begindoublecolumns{\begingroup % ended by \enddoublecolumns
+  % Grab any single-column material above us.
+  \output = {%
+    %
+    % Here is a possibility not foreseen in manmac: if we accumulate a
+    % whole lot of material, we might end up calling this \output
+    % routine twice in a row (see the doublecol-lose test, which is
+    % essentially a couple of indexes with @setchapternewpage off).  In
+    % that case we just ship out what is in \partialpage with the normal
+    % output routine.  Generally, \partialpage will be empty when this
+    % runs and this will be a no-op.  See the indexspread.tex test case.
+    \ifvoid\partialpage \else
+      \onepageout{\pagecontents\partialpage}%
+    \fi
+    %
+    \global\setbox\partialpage = \vbox{%
+      % Unvbox the main output page.
+      \unvbox\PAGE
+      \kern-\topskip \kern\baselineskip
+    }%
+  }%
+  \eject % run that output routine to set \partialpage
+  %
+  % Use the double-column output routine for subsequent pages.
+  \output = {\doublecolumnout}%
+  %
+  % Change the page size parameters.  We could do this once outside this
+  % routine, in each of @smallbook, @afourpaper, and the default 8.5x11
+  % format, but then we repeat the same computation.  Repeating a couple
+  % of assignments once per index is clearly meaningless for the
+  % execution time, so we may as well do it in one place.
+  %
+  % First we halve the line length, less a little for the gutter between
+  % the columns.  We compute the gutter based on the line length, so it
+  % changes automatically with the paper format.  The magic constant
+  % below is chosen so that the gutter has the same value (well, +-<1pt)
+  % as it did when we hard-coded it.
+  %
+  % We put the result in a separate register, \doublecolumhsize, so we
+  % can restore it in \pagesofar, after \hsize itself has (potentially)
+  % been clobbered.
+  %
+  \doublecolumnhsize = \hsize
+    \advance\doublecolumnhsize by -.04154\hsize
+    \divide\doublecolumnhsize by 2
+  \hsize = \doublecolumnhsize
+  %
+  % Double the \vsize as well.  (We don't need a separate register here,
+  % since nobody clobbers \vsize.)
+  \vsize = 2\vsize
+}
+
+% The double-column output routine for all double-column pages except
+% the last.
+%
+\def\doublecolumnout{%
+  \splittopskip=\topskip \splitmaxdepth=\maxdepth
+  % Get the available space for the double columns -- the normal
+  % (undoubled) page height minus any material left over from the
+  % previous page.
+  \dimen@ = \vsize
+  \divide\dimen@ by 2
+  \advance\dimen@ by -\ht\partialpage
+  %
+  % box0 will be the left-hand column, box2 the right.
+  \setbox0=\vsplit255 to\dimen@ \setbox2=\vsplit255 to\dimen@
+  \onepageout\pagesofar
+  \unvbox255
+  \penalty\outputpenalty
+}
+%
+% Re-output the contents of the output page -- any previous material,
+% followed by the two boxes we just split, in box0 and box2.
+\def\pagesofar{%
+  \unvbox\partialpage
+  %
+  \hsize = \doublecolumnhsize
+  \wd0=\hsize \wd2=\hsize
+  \hbox to\pagewidth{\box0\hfil\box2}%
+}
+%
+% All done with double columns.
+\def\enddoublecolumns{%
+  % The following penalty ensures that the page builder is exercised
+  % _before_ we change the output routine.  This is necessary in the
+  % following situation:
+  %
+  % The last section of the index consists only of a single entry.
+  % Before this section, \pagetotal is less than \pagegoal, so no
+  % break occurs before the last section starts.  However, the last
+  % section, consisting of \initial and the single \entry, does not
+  % fit on the page and has to be broken off.  Without the following
+  % penalty the page builder will not be exercised until \eject
+  % below, and by that time we'll already have changed the output
+  % routine to the \balancecolumns version, so the next-to-last
+  % double-column page will be processed with \balancecolumns, which
+  % is wrong:  The two columns will go to the main vertical list, with
+  % the broken-off section in the recent contributions.  As soon as
+  % the output routine finishes, TeX starts reconsidering the page
+  % break.  The two columns and the broken-off section both fit on the
+  % page, because the two columns now take up only half of the page
+  % goal.  When TeX sees \eject from below which follows the final
+  % section, it invokes the new output routine that we've set after
+  % \balancecolumns below; \onepageout will try to fit the two columns
+  % and the final section into the vbox of \pageheight (see
+  % \pagebody), causing an overfull box.
+  %
+  % Note that glue won't work here, because glue does not exercise the
+  % page builder, unlike penalties (see The TeXbook, pp. 280-281).
+  \penalty0
+  %
+  \output = {%
+    % Split the last of the double-column material.  Leave it on the
+    % current page, no automatic page break.
+    \balancecolumns
+    %
+    % If we end up splitting too much material for the current page,
+    % though, there will be another page break right after this \output
+    % invocation ends.  Having called \balancecolumns once, we do not
+    % want to call it again.  Therefore, reset \output to its normal
+    % definition right away.  (We hope \balancecolumns will never be
+    % called on to balance too much material, but if it is, this makes
+    % the output somewhat more palatable.)
+    \global\output = {\onepageout{\pagecontents\PAGE}}%
+  }%
+  \eject
+  \endgroup % started in \begindoublecolumns
+  %
+  % \pagegoal was set to the doubled \vsize above, since we restarted
+  % the current page.  We're now back to normal single-column
+  % typesetting, so reset \pagegoal to the normal \vsize (after the
+  % \endgroup where \vsize got restored).
+  \pagegoal = \vsize
+}
+%
+% Called at the end of the double column material.
+\def\balancecolumns{%
+  \setbox0 = \vbox{\unvbox255}% like \box255 but more efficient, see p.120.
+  \dimen@ = \ht0
+  \advance\dimen@ by \topskip
+  \advance\dimen@ by-\baselineskip
+  \divide\dimen@ by 2 % target to split to
+  %debug\message{final 2-column material height=\the\ht0, target=\the\dimen@.}%
+  \splittopskip = \topskip
+  % Loop until we get a decent breakpoint.
+  {%
+    \vbadness = 10000
+    \loop
+      \global\setbox3 = \copy0
+      \global\setbox1 = \vsplit3 to \dimen@
+    \ifdim\ht3>\dimen@
+      \global\advance\dimen@ by 1pt
+    \repeat
+  }%
+  %debug\message{split to \the\dimen@, column heights: \the\ht1, \the\ht3.}%
+  \setbox0=\vbox to\dimen@{\unvbox1}%
+  \setbox2=\vbox to\dimen@{\unvbox3}%
+  %
+  \pagesofar
+}
+\catcode`\@ = \other
+
+
+\message{sectioning,}
+% Chapters, sections, etc.
+
+% \unnumberedno is an oxymoron, of course.  But we count the unnumbered
+% sections so that we can refer to them unambiguously in the pdf
+% outlines by their "section number".  We avoid collisions with chapter
+% numbers by starting them at 10000.  (If a document ever has 10000
+% chapters, we're in trouble anyway, I'm sure.)
+\newcount\unnumberedno \unnumberedno = 10000
+\newcount\chapno
+\newcount\secno        \secno=0
+\newcount\subsecno     \subsecno=0
+\newcount\subsubsecno  \subsubsecno=0
+
+% This counter is funny since it counts through charcodes of letters A, B, ...
+\newcount\appendixno  \appendixno = `\@
+%
+% \def\appendixletter{\char\the\appendixno}
+% We do the following ugly conditional instead of the above simple
+% construct for the sake of pdftex, which needs the actual
+% letter in the expansion, not just typeset.
+%
+\def\appendixletter{%
+  \ifnum\appendixno=`A A%
+  \else\ifnum\appendixno=`B B%
+  \else\ifnum\appendixno=`C C%
+  \else\ifnum\appendixno=`D D%
+  \else\ifnum\appendixno=`E E%
+  \else\ifnum\appendixno=`F F%
+  \else\ifnum\appendixno=`G G%
+  \else\ifnum\appendixno=`H H%
+  \else\ifnum\appendixno=`I I%
+  \else\ifnum\appendixno=`J J%
+  \else\ifnum\appendixno=`K K%
+  \else\ifnum\appendixno=`L L%
+  \else\ifnum\appendixno=`M M%
+  \else\ifnum\appendixno=`N N%
+  \else\ifnum\appendixno=`O O%
+  \else\ifnum\appendixno=`P P%
+  \else\ifnum\appendixno=`Q Q%
+  \else\ifnum\appendixno=`R R%
+  \else\ifnum\appendixno=`S S%
+  \else\ifnum\appendixno=`T T%
+  \else\ifnum\appendixno=`U U%
+  \else\ifnum\appendixno=`V V%
+  \else\ifnum\appendixno=`W W%
+  \else\ifnum\appendixno=`X X%
+  \else\ifnum\appendixno=`Y Y%
+  \else\ifnum\appendixno=`Z Z%
+  % The \the is necessary, despite appearances, because \appendixletter is
+  % expanded while writing the .toc file.  \char\appendixno is not
+  % expandable, thus it is written literally, thus all appendixes come out
+  % with the same letter (or @) in the toc without it.
+  \else\char\the\appendixno
+  \fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi
+  \fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi\fi}
+
+% Each @chapter defines these (using marks) as the number+name, number
+% and name of the chapter.  Page headings and footings can use
+% these.  @section does likewise.
+\def\thischapter{}
+\def\thischapternum{}
+\def\thischaptername{}
+\def\thissection{}
+\def\thissectionnum{}
+\def\thissectionname{}
+
+\newcount\absseclevel % used to calculate proper heading level
+\newcount\secbase\secbase=0 % @raisesections/@lowersections modify this count
+
+% @raisesections: treat @section as chapter, @subsection as section, etc.
+\def\raisesections{\global\advance\secbase by -1}
+\let\up=\raisesections % original BFox name
+
+% @lowersections: treat @chapter as section, @section as subsection, etc.
+\def\lowersections{\global\advance\secbase by 1}
+\let\down=\lowersections % original BFox name
+
+% we only have subsub.
+\chardef\maxseclevel = 3
+%
+% A numbered section within an unnumbered changes to unnumbered too.
+% To achive this, remember the "biggest" unnum. sec. we are currently in:
+\chardef\unmlevel = \maxseclevel
+%
+% Trace whether the current chapter is an appendix or not:
+% \chapheadtype is "N" or "A", unnumbered chapters are ignored.
+\def\chapheadtype{N}
+
+% Choose a heading macro
+% #1 is heading type
+% #2 is heading level
+% #3 is text for heading
+\def\genhead#1#2#3{%
+  % Compute the abs. sec. level:
+  \absseclevel=#2
+  \advance\absseclevel by \secbase
+  % Make sure \absseclevel doesn't fall outside the range:
+  \ifnum \absseclevel < 0
+    \absseclevel = 0
+  \else
+    \ifnum \absseclevel > 3
+      \absseclevel = 3
+    \fi
+  \fi
+  % The heading type:
+  \def\headtype{#1}%
+  \if \headtype U%
+    \ifnum \absseclevel < \unmlevel
+      \chardef\unmlevel = \absseclevel
+    \fi
+  \else
+    % Check for appendix sections:
+    \ifnum \absseclevel = 0
+      \edef\chapheadtype{\headtype}%
+    \else
+      \if \headtype A\if \chapheadtype N%
+	\errmessage{@appendix... within a non-appendix chapter}%
+      \fi\fi
+    \fi
+    % Check for numbered within unnumbered:
+    \ifnum \absseclevel > \unmlevel
+      \def\headtype{U}%
+    \else
+      \chardef\unmlevel = 3
+    \fi
+  \fi
+  % Now print the heading:
+  \if \headtype U%
+    \ifcase\absseclevel
+	\unnumberedzzz{#3}%
+    \or \unnumberedseczzz{#3}%
+    \or \unnumberedsubseczzz{#3}%
+    \or \unnumberedsubsubseczzz{#3}%
+    \fi
+  \else
+    \if \headtype A%
+      \ifcase\absseclevel
+	  \appendixzzz{#3}%
+      \or \appendixsectionzzz{#3}%
+      \or \appendixsubseczzz{#3}%
+      \or \appendixsubsubseczzz{#3}%
+      \fi
+    \else
+      \ifcase\absseclevel
+	  \chapterzzz{#3}%
+      \or \seczzz{#3}%
+      \or \numberedsubseczzz{#3}%
+      \or \numberedsubsubseczzz{#3}%
+      \fi
+    \fi
+  \fi
+  \suppressfirstparagraphindent
+}
+
+% an interface:
+\def\numhead{\genhead N}
+\def\apphead{\genhead A}
+\def\unnmhead{\genhead U}
+
+% @chapter, @appendix, @unnumbered.  Increment top-level counter, reset
+% all lower-level sectioning counters to zero.
+%
+% Also set \chaplevelprefix, which we prepend to @float sequence numbers
+% (e.g., figures), q.v.  By default (before any chapter), that is empty.
+\let\chaplevelprefix = \empty
+%
+\outer\parseargdef\chapter{\numhead0{#1}} % normally numhead0 calls chapterzzz
+\def\chapterzzz#1{%
+  % section resetting is \global in case the chapter is in a group, such
+  % as an @include file.
+  \global\secno=0 \global\subsecno=0 \global\subsubsecno=0
+    \global\advance\chapno by 1
+  %
+  % Used for \float.
+  \gdef\chaplevelprefix{\the\chapno.}%
+  \resetallfloatnos
+  %
+  % \putwordChapter can contain complex things in translations.
+  \toks0=\expandafter{\putwordChapter}%
+  \message{\the\toks0 \space \the\chapno}%
+  %
+  % Write the actual heading.
+  \chapmacro{#1}{Ynumbered}{\the\chapno}%
+  %
+  % So @section and the like are numbered underneath this chapter.
+  \global\let\section = \numberedsec
+  \global\let\subsection = \numberedsubsec
+  \global\let\subsubsection = \numberedsubsubsec
+}
+
+\outer\parseargdef\appendix{\apphead0{#1}} % normally calls appendixzzz
+%
+\def\appendixzzz#1{%
+  \global\secno=0 \global\subsecno=0 \global\subsubsecno=0
+    \global\advance\appendixno by 1
+  \gdef\chaplevelprefix{\appendixletter.}%
+  \resetallfloatnos
+  %
+  % \putwordAppendix can contain complex things in translations.
+  \toks0=\expandafter{\putwordAppendix}%
+  \message{\the\toks0 \space \appendixletter}%
+  %
+  \chapmacro{#1}{Yappendix}{\appendixletter}%
+  %
+  \global\let\section = \appendixsec
+  \global\let\subsection = \appendixsubsec
+  \global\let\subsubsection = \appendixsubsubsec
+}
+
+\outer\parseargdef\unnumbered{\unnmhead0{#1}} % normally unnmhead0 calls unnumberedzzz
+\def\unnumberedzzz#1{%
+  \global\secno=0 \global\subsecno=0 \global\subsubsecno=0
+    \global\advance\unnumberedno by 1
+  %
+  % Since an unnumbered has no number, no prefix for figures.
+  \global\let\chaplevelprefix = \empty
+  \resetallfloatnos
+  %
+  % This used to be simply \message{#1}, but TeX fully expands the
+  % argument to \message.  Therefore, if #1 contained @-commands, TeX
+  % expanded them.  For example, in `@unnumbered The @cite{Book}', TeX
+  % expanded @cite (which turns out to cause errors because \cite is meant
+  % to be executed, not expanded).
+  %
+  % Anyway, we don't want the fully-expanded definition of @cite to appear
+  % as a result of the \message, we just want `@cite' itself.  We use
+  % \the<toks register> to achieve this: TeX expands \the<toks> only once,
+  % simply yielding the contents of <toks register>.  (We also do this for
+  % the toc entries.)
+  \toks0 = {#1}%
+  \message{(\the\toks0)}%
+  %
+  \chapmacro{#1}{Ynothing}{\the\unnumberedno}%
+  %
+  \global\let\section = \unnumberedsec
+  \global\let\subsection = \unnumberedsubsec
+  \global\let\subsubsection = \unnumberedsubsubsec
+}
+
+% @centerchap is like @unnumbered, but the heading is centered.
+\outer\parseargdef\centerchap{%
+  % Well, we could do the following in a group, but that would break
+  % an assumption that \chapmacro is called at the outermost level.
+  % Thus we are safer this way:		--kasal, 24feb04
+  \let\centerparametersmaybe = \centerparameters
+  \unnmhead0{#1}%
+  \let\centerparametersmaybe = \relax
+}
+
+% @top is like @unnumbered.
+\let\top\unnumbered
+
+% Sections.
+\outer\parseargdef\numberedsec{\numhead1{#1}} % normally calls seczzz
+\def\seczzz#1{%
+  \global\subsecno=0 \global\subsubsecno=0  \global\advance\secno by 1
+  \sectionheading{#1}{sec}{Ynumbered}{\the\chapno.\the\secno}%
+}
+
+\outer\parseargdef\appendixsection{\apphead1{#1}} % normally calls appendixsectionzzz
+\def\appendixsectionzzz#1{%
+  \global\subsecno=0 \global\subsubsecno=0  \global\advance\secno by 1
+  \sectionheading{#1}{sec}{Yappendix}{\appendixletter.\the\secno}%
+}
+\let\appendixsec\appendixsection
+
+\outer\parseargdef\unnumberedsec{\unnmhead1{#1}} % normally calls unnumberedseczzz
+\def\unnumberedseczzz#1{%
+  \global\subsecno=0 \global\subsubsecno=0  \global\advance\secno by 1
+  \sectionheading{#1}{sec}{Ynothing}{\the\unnumberedno.\the\secno}%
+}
+
+% Subsections.
+\outer\parseargdef\numberedsubsec{\numhead2{#1}} % normally calls numberedsubseczzz
+\def\numberedsubseczzz#1{%
+  \global\subsubsecno=0  \global\advance\subsecno by 1
+  \sectionheading{#1}{subsec}{Ynumbered}{\the\chapno.\the\secno.\the\subsecno}%
+}
+
+\outer\parseargdef\appendixsubsec{\apphead2{#1}} % normally calls appendixsubseczzz
+\def\appendixsubseczzz#1{%
+  \global\subsubsecno=0  \global\advance\subsecno by 1
+  \sectionheading{#1}{subsec}{Yappendix}%
+                 {\appendixletter.\the\secno.\the\subsecno}%
+}
+
+\outer\parseargdef\unnumberedsubsec{\unnmhead2{#1}} %normally calls unnumberedsubseczzz
+\def\unnumberedsubseczzz#1{%
+  \global\subsubsecno=0  \global\advance\subsecno by 1
+  \sectionheading{#1}{subsec}{Ynothing}%
+                 {\the\unnumberedno.\the\secno.\the\subsecno}%
+}
+
+% Subsubsections.
+\outer\parseargdef\numberedsubsubsec{\numhead3{#1}} % normally numberedsubsubseczzz
+\def\numberedsubsubseczzz#1{%
+  \global\advance\subsubsecno by 1
+  \sectionheading{#1}{subsubsec}{Ynumbered}%
+                 {\the\chapno.\the\secno.\the\subsecno.\the\subsubsecno}%
+}
+
+\outer\parseargdef\appendixsubsubsec{\apphead3{#1}} % normally appendixsubsubseczzz
+\def\appendixsubsubseczzz#1{%
+  \global\advance\subsubsecno by 1
+  \sectionheading{#1}{subsubsec}{Yappendix}%
+                 {\appendixletter.\the\secno.\the\subsecno.\the\subsubsecno}%
+}
+
+\outer\parseargdef\unnumberedsubsubsec{\unnmhead3{#1}} %normally unnumberedsubsubseczzz
+\def\unnumberedsubsubseczzz#1{%
+  \global\advance\subsubsecno by 1
+  \sectionheading{#1}{subsubsec}{Ynothing}%
+                 {\the\unnumberedno.\the\secno.\the\subsecno.\the\subsubsecno}%
+}
+
+% These macros control what the section commands do, according
+% to what kind of chapter we are in (ordinary, appendix, or unnumbered).
+% Define them by default for a numbered chapter.
+\let\section = \numberedsec
+\let\subsection = \numberedsubsec
+\let\subsubsection = \numberedsubsubsec
+
+% Define @majorheading, @heading and @subheading
+
+% NOTE on use of \vbox for chapter headings, section headings, and such:
+%       1) We use \vbox rather than the earlier \line to permit
+%          overlong headings to fold.
+%       2) \hyphenpenalty is set to 10000 because hyphenation in a
+%          heading is obnoxious; this forbids it.
+%       3) Likewise, headings look best if no \parindent is used, and
+%          if justification is not attempted.  Hence \raggedright.
+
+\def\majorheading{%
+  {\advance\chapheadingskip by 10pt \chapbreak }%
+  \parsearg\chapheadingzzz
+}
+
+\def\chapheading{\chapbreak \parsearg\chapheadingzzz}
+\def\chapheadingzzz#1{%
+  {\chapfonts \vbox{\hyphenpenalty=10000\tolerance=5000
+                    \parindent=0pt\ptexraggedright
+                    \rmisbold #1\hfill}}%
+  \bigskip \par\penalty 200\relax
+  \suppressfirstparagraphindent
+}
+
+% @heading, @subheading, @subsubheading.
+\parseargdef\heading{\sectionheading{#1}{sec}{Yomitfromtoc}{}
+  \suppressfirstparagraphindent}
+\parseargdef\subheading{\sectionheading{#1}{subsec}{Yomitfromtoc}{}
+  \suppressfirstparagraphindent}
+\parseargdef\subsubheading{\sectionheading{#1}{subsubsec}{Yomitfromtoc}{}
+  \suppressfirstparagraphindent}
+
+% These macros generate a chapter, section, etc. heading only
+% (including whitespace, linebreaking, etc. around it),
+% given all the information in convenient, parsed form.
+
+%%% Args are the skip and penalty (usually negative)
+\def\dobreak#1#2{\par\ifdim\lastskip<#1\removelastskip\penalty#2\vskip#1\fi}
+
+%%% Define plain chapter starts, and page on/off switching for it
+% Parameter controlling skip before chapter headings (if needed)
+
+\newskip\chapheadingskip
+
+\def\chapbreak{\dobreak \chapheadingskip {-4000}}
+\def\chappager{\par\vfill\supereject}
+% Because \domark is called before \chapoddpage, the filler page will
+% get the headings for the next chapter, which is wrong.  But we don't
+% care -- we just disable all headings on the filler page.
+\def\chapoddpage{%
+  \chappager
+  \ifodd\pageno \else
+    \begingroup
+      \evenheadline={\hfil}\evenfootline={\hfil}%
+      \oddheadline={\hfil}\oddfootline={\hfil}%
+      \hbox to 0pt{}%
+      \chappager
+    \endgroup
+  \fi
+}
+
+\def\setchapternewpage #1 {\csname CHAPPAG#1\endcsname}
+
+\def\CHAPPAGoff{%
+\global\let\contentsalignmacro = \chappager
+\global\let\pchapsepmacro=\chapbreak
+\global\let\pagealignmacro=\chappager}
+
+\def\CHAPPAGon{%
+\global\let\contentsalignmacro = \chappager
+\global\let\pchapsepmacro=\chappager
+\global\let\pagealignmacro=\chappager
+\global\def\HEADINGSon{\HEADINGSsingle}}
+
+\def\CHAPPAGodd{%
+\global\let\contentsalignmacro = \chapoddpage
+\global\let\pchapsepmacro=\chapoddpage
+\global\let\pagealignmacro=\chapoddpage
+\global\def\HEADINGSon{\HEADINGSdouble}}
+
+\CHAPPAGon
+
+% Chapter opening.
+%
+% #1 is the text, #2 is the section type (Ynumbered, Ynothing,
+% Yappendix, Yomitfromtoc), #3 the chapter number.
+%
+% To test against our argument.
+\def\Ynothingkeyword{Ynothing}
+\def\Yomitfromtockeyword{Yomitfromtoc}
+\def\Yappendixkeyword{Yappendix}
+%
+\def\chapmacro#1#2#3{%
+  % Insert the first mark before the heading break (see notes for \domark).
+  \let\prevchapterdefs=\lastchapterdefs
+  \let\prevsectiondefs=\lastsectiondefs
+  \gdef\lastsectiondefs{\gdef\thissectionname{}\gdef\thissectionnum{}%
+                        \gdef\thissection{}}%
+  %
+  \def\temptype{#2}%
+  \ifx\temptype\Ynothingkeyword
+    \gdef\lastchapterdefs{\gdef\thischaptername{#1}\gdef\thischapternum{}%
+                          \gdef\thischapter{\thischaptername}}%
+  \else\ifx\temptype\Yomitfromtockeyword
+    \gdef\lastchapterdefs{\gdef\thischaptername{#1}\gdef\thischapternum{}%
+                          \gdef\thischapter{}}%
+  \else\ifx\temptype\Yappendixkeyword
+    \toks0={#1}%
+    \xdef\lastchapterdefs{%
+      \gdef\noexpand\thischaptername{\the\toks0}%
+      \gdef\noexpand\thischapternum{\appendixletter}%
+      % \noexpand\putwordAppendix avoids expanding indigestible
+      % commands in some of the translations.
+      \gdef\noexpand\thischapter{\noexpand\putwordAppendix{}
+                                 \noexpand\thischapternum:
+                                 \noexpand\thischaptername}%
+    }%
+  \else
+    \toks0={#1}%
+    \xdef\lastchapterdefs{%
+      \gdef\noexpand\thischaptername{\the\toks0}%
+      \gdef\noexpand\thischapternum{\the\chapno}%
+      % \noexpand\putwordChapter avoids expanding indigestible
+      % commands in some of the translations.
+      \gdef\noexpand\thischapter{\noexpand\putwordChapter{}
+                                 \noexpand\thischapternum:
+                                 \noexpand\thischaptername}%
+    }%
+  \fi\fi\fi
+  %
+  % Output the mark.  Pass it through \safewhatsit, to take care of
+  % the preceding space.
+  \safewhatsit\domark
+  %
+  % Insert the chapter heading break.
+  \pchapsepmacro
+  %
+  % Now the second mark, after the heading break.  No break points
+  % between here and the heading.
+  \let\prevchapterdefs=\lastchapterdefs
+  \let\prevsectiondefs=\lastsectiondefs
+  \domark
+  %
+  {%
+    \chapfonts \rmisbold
+    %
+    % Have to define \lastsection before calling \donoderef, because the
+    % xref code eventually uses it.  On the other hand, it has to be called
+    % after \pchapsepmacro, or the headline will change too soon.
+    \gdef\lastsection{#1}%
+    %
+    % Only insert the separating space if we have a chapter/appendix
+    % number, and don't print the unnumbered ``number''.
+    \ifx\temptype\Ynothingkeyword
+      \setbox0 = \hbox{}%
+      \def\toctype{unnchap}%
+    \else\ifx\temptype\Yomitfromtockeyword
+      \setbox0 = \hbox{}% contents like unnumbered, but no toc entry
+      \def\toctype{omit}%
+    \else\ifx\temptype\Yappendixkeyword
+      \setbox0 = \hbox{\putwordAppendix{} #3\enspace}%
+      \def\toctype{app}%
+    \else
+      \setbox0 = \hbox{#3\enspace}%
+      \def\toctype{numchap}%
+    \fi\fi\fi
+    %
+    % Write the toc entry for this chapter.  Must come before the
+    % \donoderef, because we include the current node name in the toc
+    % entry, and \donoderef resets it to empty.
+    \writetocentry{\toctype}{#1}{#3}%
+    %
+    % For pdftex, we have to write out the node definition (aka, make
+    % the pdfdest) after any page break, but before the actual text has
+    % been typeset.  If the destination for the pdf outline is after the
+    % text, then jumping from the outline may wind up with the text not
+    % being visible, for instance under high magnification.
+    \donoderef{#2}%
+    %
+    % Typeset the actual heading.
+    \nobreak % Avoid page breaks at the interline glue.
+    \vbox{\hyphenpenalty=10000 \tolerance=5000 \parindent=0pt \ptexraggedright
+          \hangindent=\wd0 \centerparametersmaybe
+          \unhbox0 #1\par}%
+  }%
+  \nobreak\bigskip % no page break after a chapter title
+  \nobreak
+}
+
+% @centerchap -- centered and unnumbered.
+\let\centerparametersmaybe = \relax
+\def\centerparameters{%
+  \advance\rightskip by 3\rightskip
+  \leftskip = \rightskip
+  \parfillskip = 0pt
+}
+
+
+% I don't think this chapter style is supported any more, so I'm not
+% updating it with the new noderef stuff.  We'll see.  --karl, 11aug03.
+%
+\def\setchapterstyle #1 {\csname CHAPF#1\endcsname}
+%
+\def\unnchfopen #1{%
+\chapoddpage {\chapfonts \vbox{\hyphenpenalty=10000\tolerance=5000
+                       \parindent=0pt\ptexraggedright
+                       \rmisbold #1\hfill}}\bigskip \par\nobreak
+}
+\def\chfopen #1#2{\chapoddpage {\chapfonts
+\vbox to 3in{\vfil \hbox to\hsize{\hfil #2} \hbox to\hsize{\hfil #1} \vfil}}%
+\par\penalty 5000 %
+}
+\def\centerchfopen #1{%
+\chapoddpage {\chapfonts \vbox{\hyphenpenalty=10000\tolerance=5000
+                       \parindent=0pt
+                       \hfill {\rmisbold #1}\hfill}}\bigskip \par\nobreak
+}
+\def\CHAPFopen{%
+  \global\let\chapmacro=\chfopen
+  \global\let\centerchapmacro=\centerchfopen}
+
+
+% Section titles.  These macros combine the section number parts and
+% call the generic \sectionheading to do the printing.
+%
+\newskip\secheadingskip
+\def\secheadingbreak{\dobreak \secheadingskip{-1000}}
+
+% Subsection titles.
+\newskip\subsecheadingskip
+\def\subsecheadingbreak{\dobreak \subsecheadingskip{-500}}
+
+% Subsubsection titles.
+\def\subsubsecheadingskip{\subsecheadingskip}
+\def\subsubsecheadingbreak{\subsecheadingbreak}
+
+
+% Print any size, any type, section title.
+%
+% #1 is the text, #2 is the section level (sec/subsec/subsubsec), #3 is
+% the section type for xrefs (Ynumbered, Ynothing, Yappendix), #4 is the
+% section number.
+%
+\def\seckeyword{sec}
+%
+\def\sectionheading#1#2#3#4{%
+  {%
+    % Switch to the right set of fonts.
+    \csname #2fonts\endcsname \rmisbold
+    %
+    \def\sectionlevel{#2}%
+    \def\temptype{#3}%
+    %
+    % Insert first mark before the heading break (see notes for \domark).
+    \let\prevsectiondefs=\lastsectiondefs
+    \ifx\temptype\Ynothingkeyword
+      \ifx\sectionlevel\seckeyword
+        \gdef\lastsectiondefs{\gdef\thissectionname{#1}\gdef\thissectionnum{}%
+                              \gdef\thissection{\thissectionname}}%
+      \fi
+    \else\ifx\temptype\Yomitfromtockeyword
+      % Don't redefine \thissection.
+    \else\ifx\temptype\Yappendixkeyword
+      \ifx\sectionlevel\seckeyword
+        \toks0={#1}%
+        \xdef\lastsectiondefs{%
+          \gdef\noexpand\thissectionname{\the\toks0}%
+          \gdef\noexpand\thissectionnum{#4}%
+          % \noexpand\putwordSection avoids expanding indigestible
+          % commands in some of the translations.
+          \gdef\noexpand\thissection{\noexpand\putwordSection{}
+                                     \noexpand\thissectionnum:
+                                     \noexpand\thissectionname}%
+        }%
+      \fi
+    \else
+      \ifx\sectionlevel\seckeyword
+        \toks0={#1}%
+        \xdef\lastsectiondefs{%
+          \gdef\noexpand\thissectionname{\the\toks0}%
+          \gdef\noexpand\thissectionnum{#4}%
+          % \noexpand\putwordSection avoids expanding indigestible
+          % commands in some of the translations.
+          \gdef\noexpand\thissection{\noexpand\putwordSection{}
+                                     \noexpand\thissectionnum:
+                                     \noexpand\thissectionname}%
+        }%
+      \fi
+    \fi\fi\fi
+    %
+    % Go into vertical mode.  Usually we'll already be there, but we
+    % don't want the following whatsit to end up in a preceding paragraph
+    % if the document didn't happen to have a blank line.
+    \par
+    %
+    % Output the mark.  Pass it through \safewhatsit, to take care of
+    % the preceding space.
+    \safewhatsit\domark
+    %
+    % Insert space above the heading.
+    \csname #2headingbreak\endcsname
+    %
+    % Now the second mark, after the heading break.  No break points
+    % between here and the heading.
+    \let\prevsectiondefs=\lastsectiondefs
+    \domark
+    %
+    % Only insert the space after the number if we have a section number.
+    \ifx\temptype\Ynothingkeyword
+      \setbox0 = \hbox{}%
+      \def\toctype{unn}%
+      \gdef\lastsection{#1}%
+    \else\ifx\temptype\Yomitfromtockeyword
+      % for @headings -- no section number, don't include in toc,
+      % and don't redefine \lastsection.
+      \setbox0 = \hbox{}%
+      \def\toctype{omit}%
+      \let\sectionlevel=\empty
+    \else\ifx\temptype\Yappendixkeyword
+      \setbox0 = \hbox{#4\enspace}%
+      \def\toctype{app}%
+      \gdef\lastsection{#1}%
+    \else
+      \setbox0 = \hbox{#4\enspace}%
+      \def\toctype{num}%
+      \gdef\lastsection{#1}%
+    \fi\fi\fi
+    %
+    % Write the toc entry (before \donoderef).  See comments in \chapmacro.
+    \writetocentry{\toctype\sectionlevel}{#1}{#4}%
+    %
+    % Write the node reference (= pdf destination for pdftex).
+    % Again, see comments in \chapmacro.
+    \donoderef{#3}%
+    %
+    % Interline glue will be inserted when the vbox is completed.
+    % That glue will be a valid breakpoint for the page, since it'll be
+    % preceded by a whatsit (usually from the \donoderef, or from the
+    % \writetocentry if there was no node).  We don't want to allow that
+    % break, since then the whatsits could end up on page n while the
+    % section is on page n+1, thus toc/etc. are wrong.  Debian bug 276000.
+    \nobreak
+    %
+    % Output the actual section heading.
+    \vbox{\hyphenpenalty=10000 \tolerance=5000 \parindent=0pt \ptexraggedright
+          \hangindent=\wd0  % zero if no section number
+          \unhbox0 #1}%
+  }%
+  % Add extra space after the heading -- half of whatever came above it.
+  % Don't allow stretch, though.
+  \kern .5 \csname #2headingskip\endcsname
+  %
+  % Do not let the kern be a potential breakpoint, as it would be if it
+  % was followed by glue.
+  \nobreak
+  %
+  % We'll almost certainly start a paragraph next, so don't let that
+  % glue accumulate.  (Not a breakpoint because it's preceded by a
+  % discardable item.)
+  \vskip-\parskip
+  %
+  % This is purely so the last item on the list is a known \penalty >
+  % 10000.  This is so \startdefun can avoid allowing breakpoints after
+  % section headings.  Otherwise, it would insert a valid breakpoint between:
+  %
+  %   @section sec-whatever
+  %   @deffn def-whatever
+  \penalty 10001
+}
+
+
+\message{toc,}
+% Table of contents.
+\newwrite\tocfile
+
+% Write an entry to the toc file, opening it if necessary.
+% Called from @chapter, etc.
+%
+% Example usage: \writetocentry{sec}{Section Name}{\the\chapno.\the\secno}
+% We append the current node name (if any) and page number as additional
+% arguments for the \{chap,sec,...}entry macros which will eventually
+% read this.  The node name is used in the pdf outlines as the
+% destination to jump to.
+%
+% We open the .toc file for writing here instead of at @setfilename (or
+% any other fixed time) so that @contents can be anywhere in the document.
+% But if #1 is `omit', then we don't do anything.  This is used for the
+% table of contents chapter openings themselves.
+%
+\newif\iftocfileopened
+\def\omitkeyword{omit}%
+%
+\def\writetocentry#1#2#3{%
+  \edef\writetoctype{#1}%
+  \ifx\writetoctype\omitkeyword \else
+    \iftocfileopened\else
+      \immediate\openout\tocfile = \jobname.toc
+      \global\tocfileopenedtrue
+    \fi
+    %
+    \iflinks
+      {\atdummies
+       \edef\temp{%
+         \write\tocfile{@#1entry{#2}{#3}{\lastnode}{\noexpand\folio}}}%
+       \temp
+      }%
+    \fi
+  \fi
+  %
+  % Tell \shipout to create a pdf destination on each page, if we're
+  % writing pdf.  These are used in the table of contents.  We can't
+  % just write one on every page because the title pages are numbered
+  % 1 and 2 (the page numbers aren't printed), and so are the first
+  % two pages of the document.  Thus, we'd have two destinations named
+  % `1', and two named `2'.
+  \ifpdf \global\pdfmakepagedesttrue \fi
+}
+
+
+% These characters do not print properly in the Computer Modern roman
+% fonts, so we must take special care.  This is more or less redundant
+% with the Texinfo input format setup at the end of this file.
+%
+\def\activecatcodes{%
+  \catcode`\"=\active
+  \catcode`\$=\active
+  \catcode`\<=\active
+  \catcode`\>=\active
+  \catcode`\\=\active
+  \catcode`\^=\active
+  \catcode`\_=\active
+  \catcode`\|=\active
+  \catcode`\~=\active
+}
+
+
+% Read the toc file, which is essentially Texinfo input.
+\def\readtocfile{%
+  \setupdatafile
+  \activecatcodes
+  \input \tocreadfilename
+}
+
+\newskip\contentsrightmargin \contentsrightmargin=1in
+\newcount\savepageno
+\newcount\lastnegativepageno \lastnegativepageno = -1
+
+% Prepare to read what we've written to \tocfile.
+%
+\def\startcontents#1{%
+  % If @setchapternewpage on, and @headings double, the contents should
+  % start on an odd page, unlike chapters.  Thus, we maintain
+  % \contentsalignmacro in parallel with \pagealignmacro.
+  % From: Torbjorn Granlund <tege@matematik.su.se>
+  \contentsalignmacro
+  \immediate\closeout\tocfile
+  %
+  % Don't need to put `Contents' or `Short Contents' in the headline.
+  % It is abundantly clear what they are.
+  \chapmacro{#1}{Yomitfromtoc}{}%
+  %
+  \savepageno = \pageno
+  \begingroup                  % Set up to handle contents files properly.
+    \raggedbottom              % Worry more about breakpoints than the bottom.
+    \advance\hsize by -\contentsrightmargin % Don't use the full line length.
+    %
+    % Roman numerals for page numbers.
+    \ifnum \pageno>0 \global\pageno = \lastnegativepageno \fi
+}
+
+% redefined for the two-volume lispref.  We always output on
+% \jobname.toc even if this is redefined.
+%
+\def\tocreadfilename{\jobname.toc}
+
+% Normal (long) toc.
+%
+\def\contents{%
+  \startcontents{\putwordTOC}%
+    \openin 1 \tocreadfilename\space
+    \ifeof 1 \else
+      \readtocfile
+    \fi
+    \vfill \eject
+    \contentsalignmacro % in case @setchapternewpage odd is in effect
+    \ifeof 1 \else
+      \pdfmakeoutlines
+    \fi
+    \closein 1
+  \endgroup
+  \lastnegativepageno = \pageno
+  \global\pageno = \savepageno
+}
+
+% And just the chapters.
+\def\summarycontents{%
+  \startcontents{\putwordShortTOC}%
+    %
+    \let\numchapentry = \shortchapentry
+    \let\appentry = \shortchapentry
+    \let\unnchapentry = \shortunnchapentry
+    % We want a true roman here for the page numbers.
+    \secfonts
+    \let\rm=\shortcontrm \let\bf=\shortcontbf
+    \let\sl=\shortcontsl \let\tt=\shortconttt
+    \rm
+    \hyphenpenalty = 10000
+    \advance\baselineskip by 1pt % Open it up a little.
+    \def\numsecentry##1##2##3##4{}
+    \let\appsecentry = \numsecentry
+    \let\unnsecentry = \numsecentry
+    \let\numsubsecentry = \numsecentry
+    \let\appsubsecentry = \numsecentry
+    \let\unnsubsecentry = \numsecentry
+    \let\numsubsubsecentry = \numsecentry
+    \let\appsubsubsecentry = \numsecentry
+    \let\unnsubsubsecentry = \numsecentry
+    \openin 1 \tocreadfilename\space
+    \ifeof 1 \else
+      \readtocfile
+    \fi
+    \closein 1
+    \vfill \eject
+    \contentsalignmacro % in case @setchapternewpage odd is in effect
+  \endgroup
+  \lastnegativepageno = \pageno
+  \global\pageno = \savepageno
+}
+\let\shortcontents = \summarycontents
+
+% Typeset the label for a chapter or appendix for the short contents.
+% The arg is, e.g., `A' for an appendix, or `3' for a chapter.
+%
+\def\shortchaplabel#1{%
+  % This space should be enough, since a single number is .5em, and the
+  % widest letter (M) is 1em, at least in the Computer Modern fonts.
+  % But use \hss just in case.
+  % (This space doesn't include the extra space that gets added after
+  % the label; that gets put in by \shortchapentry above.)
+  %
+  % We'd like to right-justify chapter numbers, but that looks strange
+  % with appendix letters.  And right-justifying numbers and
+  % left-justifying letters looks strange when there is less than 10
+  % chapters.  Have to read the whole toc once to know how many chapters
+  % there are before deciding ...
+  \hbox to 1em{#1\hss}%
+}
+
+% These macros generate individual entries in the table of contents.
+% The first argument is the chapter or section name.
+% The last argument is the page number.
+% The arguments in between are the chapter number, section number, ...
+
+% Chapters, in the main contents.
+\def\numchapentry#1#2#3#4{\dochapentry{#2\labelspace#1}{#4}}
+%
+% Chapters, in the short toc.
+% See comments in \dochapentry re vbox and related settings.
+\def\shortchapentry#1#2#3#4{%
+  \tocentry{\shortchaplabel{#2}\labelspace #1}{\doshortpageno\bgroup#4\egroup}%
+}
+
+% Appendices, in the main contents.
+% Need the word Appendix, and a fixed-size box.
+%
+\def\appendixbox#1{%
+  % We use M since it's probably the widest letter.
+  \setbox0 = \hbox{\putwordAppendix{} M}%
+  \hbox to \wd0{\putwordAppendix{} #1\hss}}
+%
+\def\appentry#1#2#3#4{\dochapentry{\appendixbox{#2}\labelspace#1}{#4}}
+
+% Unnumbered chapters.
+\def\unnchapentry#1#2#3#4{\dochapentry{#1}{#4}}
+\def\shortunnchapentry#1#2#3#4{\tocentry{#1}{\doshortpageno\bgroup#4\egroup}}
+
+% Sections.
+\def\numsecentry#1#2#3#4{\dosecentry{#2\labelspace#1}{#4}}
+\let\appsecentry=\numsecentry
+\def\unnsecentry#1#2#3#4{\dosecentry{#1}{#4}}
+
+% Subsections.
+\def\numsubsecentry#1#2#3#4{\dosubsecentry{#2\labelspace#1}{#4}}
+\let\appsubsecentry=\numsubsecentry
+\def\unnsubsecentry#1#2#3#4{\dosubsecentry{#1}{#4}}
+
+% And subsubsections.
+\def\numsubsubsecentry#1#2#3#4{\dosubsubsecentry{#2\labelspace#1}{#4}}
+\let\appsubsubsecentry=\numsubsubsecentry
+\def\unnsubsubsecentry#1#2#3#4{\dosubsubsecentry{#1}{#4}}
+
+% This parameter controls the indentation of the various levels.
+% Same as \defaultparindent.
+\newdimen\tocindent \tocindent = 15pt
+
+% Now for the actual typesetting. In all these, #1 is the text and #2 is the
+% page number.
+%
+% If the toc has to be broken over pages, we want it to be at chapters
+% if at all possible; hence the \penalty.
+\def\dochapentry#1#2{%
+   \penalty-300 \vskip1\baselineskip plus.33\baselineskip minus.25\baselineskip
+   \begingroup
+     \chapentryfonts
+     \tocentry{#1}{\dopageno\bgroup#2\egroup}%
+   \endgroup
+   \nobreak\vskip .25\baselineskip plus.1\baselineskip
+}
+
+\def\dosecentry#1#2{\begingroup
+  \secentryfonts \leftskip=\tocindent
+  \tocentry{#1}{\dopageno\bgroup#2\egroup}%
+\endgroup}
+
+\def\dosubsecentry#1#2{\begingroup
+  \subsecentryfonts \leftskip=2\tocindent
+  \tocentry{#1}{\dopageno\bgroup#2\egroup}%
+\endgroup}
+
+\def\dosubsubsecentry#1#2{\begingroup
+  \subsubsecentryfonts \leftskip=3\tocindent
+  \tocentry{#1}{\dopageno\bgroup#2\egroup}%
+\endgroup}
+
+% We use the same \entry macro as for the index entries.
+\let\tocentry = \entry
+
+% Space between chapter (or whatever) number and the title.
+\def\labelspace{\hskip1em \relax}
+
+\def\dopageno#1{{\rm #1}}
+\def\doshortpageno#1{{\rm #1}}
+
+\def\chapentryfonts{\secfonts \rm}
+\def\secentryfonts{\textfonts}
+\def\subsecentryfonts{\textfonts}
+\def\subsubsecentryfonts{\textfonts}
+
+
+\message{environments,}
+% @foo ... @end foo.
+
+% @tex ... @end tex    escapes into raw Tex temporarily.
+% One exception: @ is still an escape character, so that @end tex works.
+% But \@ or @@ will get a plain tex @ character.
+
+\envdef\tex{%
+  \setupmarkupstyle{tex}%
+  \catcode `\\=0 \catcode `\{=1 \catcode `\}=2
+  \catcode `\$=3 \catcode `\&=4 \catcode `\#=6
+  \catcode `\^=7 \catcode `\_=8 \catcode `\~=\active \let~=\tie
+  \catcode `\%=14
+  \catcode `\+=\other
+  \catcode `\"=\other
+  \catcode `\|=\other
+  \catcode `\<=\other
+  \catcode `\>=\other
+  \catcode`\`=\other
+  \catcode`\'=\other
+  \escapechar=`\\
+  %
+  \let\b=\ptexb
+  \let\bullet=\ptexbullet
+  \let\c=\ptexc
+  \let\,=\ptexcomma
+  \let\.=\ptexdot
+  \let\dots=\ptexdots
+  \let\equiv=\ptexequiv
+  \let\!=\ptexexclam
+  \let\i=\ptexi
+  \let\indent=\ptexindent
+  \let\noindent=\ptexnoindent
+  \let\{=\ptexlbrace
+  \let\+=\tabalign
+  \let\}=\ptexrbrace
+  \let\/=\ptexslash
+  \let\*=\ptexstar
+  \let\t=\ptext
+  \expandafter \let\csname top\endcsname=\ptextop  % outer
+  \let\frenchspacing=\plainfrenchspacing
+  %
+  \def\endldots{\mathinner{\ldots\ldots\ldots\ldots}}%
+  \def\enddots{\relax\ifmmode\endldots\else$\mathsurround=0pt \endldots\,$\fi}%
+  \def\@{@}%
+}
+% There is no need to define \Etex.
+
+% Define @lisp ... @end lisp.
+% @lisp environment forms a group so it can rebind things,
+% including the definition of @end lisp (which normally is erroneous).
+
+% Amount to narrow the margins by for @lisp.
+\newskip\lispnarrowing \lispnarrowing=0.4in
+
+% This is the definition that ^^M gets inside @lisp, @example, and other
+% such environments.  \null is better than a space, since it doesn't
+% have any width.
+\def\lisppar{\null\endgraf}
+
+% This space is always present above and below environments.
+\newskip\envskipamount \envskipamount = 0pt
+
+% Make spacing and below environment symmetrical.  We use \parskip here
+% to help in doing that, since in @example-like environments \parskip
+% is reset to zero; thus the \afterenvbreak inserts no space -- but the
+% start of the next paragraph will insert \parskip.
+%
+\def\aboveenvbreak{{%
+  % =10000 instead of <10000 because of a special case in \itemzzz and
+  % \sectionheading, q.v.
+  \ifnum \lastpenalty=10000 \else
+    \advance\envskipamount by \parskip
+    \endgraf
+    \ifdim\lastskip<\envskipamount
+      \removelastskip
+      % it's not a good place to break if the last penalty was \nobreak
+      % or better ...
+      \ifnum\lastpenalty<10000 \penalty-50 \fi
+      \vskip\envskipamount
+    \fi
+  \fi
+}}
+
+\let\afterenvbreak = \aboveenvbreak
+
+% \nonarrowing is a flag.  If "set", @lisp etc don't narrow margins; it will
+% also clear it, so that its embedded environments do the narrowing again.
+\let\nonarrowing=\relax
+
+% @cartouche ... @end cartouche: draw rectangle w/rounded corners around
+% environment contents.
+\font\circle=lcircle10
+\newdimen\circthick
+\newdimen\cartouter\newdimen\cartinner
+\newskip\normbskip\newskip\normpskip\newskip\normlskip
+\circthick=\fontdimen8\circle
+%
+\def\ctl{{\circle\char'013\hskip -6pt}}% 6pt from pl file: 1/2charwidth
+\def\ctr{{\hskip 6pt\circle\char'010}}
+\def\cbl{{\circle\char'012\hskip -6pt}}
+\def\cbr{{\hskip 6pt\circle\char'011}}
+\def\carttop{\hbox to \cartouter{\hskip\lskip
+        \ctl\leaders\hrule height\circthick\hfil\ctr
+        \hskip\rskip}}
+\def\cartbot{\hbox to \cartouter{\hskip\lskip
+        \cbl\leaders\hrule height\circthick\hfil\cbr
+        \hskip\rskip}}
+%
+\newskip\lskip\newskip\rskip
+
+\envdef\cartouche{%
+  \ifhmode\par\fi  % can't be in the midst of a paragraph.
+  \startsavinginserts
+  \lskip=\leftskip \rskip=\rightskip
+  \leftskip=0pt\rightskip=0pt % we want these *outside*.
+  \cartinner=\hsize \advance\cartinner by-\lskip
+  \advance\cartinner by-\rskip
+  \cartouter=\hsize
+  \advance\cartouter by 18.4pt	% allow for 3pt kerns on either
+				% side, and for 6pt waste from
+				% each corner char, and rule thickness
+  \normbskip=\baselineskip \normpskip=\parskip \normlskip=\lineskip
+  % Flag to tell @lisp, etc., not to narrow margin.
+  \let\nonarrowing = t%
+  \vbox\bgroup
+      \baselineskip=0pt\parskip=0pt\lineskip=0pt
+      \carttop
+      \hbox\bgroup
+	  \hskip\lskip
+	  \vrule\kern3pt
+	  \vbox\bgroup
+	      \kern3pt
+	      \hsize=\cartinner
+	      \baselineskip=\normbskip
+	      \lineskip=\normlskip
+	      \parskip=\normpskip
+	      \vskip -\parskip
+	      \comment % For explanation, see the end of \def\group.
+}
+\def\Ecartouche{%
+              \ifhmode\par\fi
+	      \kern3pt
+	  \egroup
+	  \kern3pt\vrule
+	  \hskip\rskip
+      \egroup
+      \cartbot
+  \egroup
+  \checkinserts
+}
+
+
+% This macro is called at the beginning of all the @example variants,
+% inside a group.
+\newdimen\nonfillparindent
+\def\nonfillstart{%
+  \aboveenvbreak
+  \hfuzz = 12pt % Don't be fussy
+  \sepspaces % Make spaces be word-separators rather than space tokens.
+  \let\par = \lisppar % don't ignore blank lines
+  \obeylines % each line of input is a line of output
+  \parskip = 0pt
+  % Turn off paragraph indentation but redefine \indent to emulate
+  % the normal \indent.
+  \nonfillparindent=\parindent
+  \parindent = 0pt
+  \let\indent\nonfillindent
+  %
+  \emergencystretch = 0pt % don't try to avoid overfull boxes
+  \ifx\nonarrowing\relax
+    \advance \leftskip by \lispnarrowing
+    \exdentamount=\lispnarrowing
+  \else
+    \let\nonarrowing = \relax
+  \fi
+  \let\exdent=\nofillexdent
+}
+
+\begingroup
+\obeyspaces
+% We want to swallow spaces (but not other tokens) after the fake
+% @indent in our nonfill-environments, where spaces are normally
+% active and set to @tie, resulting in them not being ignored after
+% @indent.
+\gdef\nonfillindent{\futurelet\temp\nonfillindentcheck}%
+\gdef\nonfillindentcheck{%
+\ifx\temp %
+\expandafter\nonfillindentgobble%
+\else%
+\leavevmode\nonfillindentbox%
+\fi%
+}%
+\endgroup
+\def\nonfillindentgobble#1{\nonfillindent}
+\def\nonfillindentbox{\hbox to \nonfillparindent{\hss}}
+
+% If you want all examples etc. small: @set dispenvsize small.
+% If you want even small examples the full size: @set dispenvsize nosmall.
+% This affects the following displayed environments:
+%    @example, @display, @format, @lisp
+%
+\def\smallword{small}
+\def\nosmallword{nosmall}
+\let\SETdispenvsize\relax
+\def\setnormaldispenv{%
+  \ifx\SETdispenvsize\smallword
+    % end paragraph for sake of leading, in case document has no blank
+    % line.  This is redundant with what happens in \aboveenvbreak, but
+    % we need to do it before changing the fonts, and it's inconvenient
+    % to change the fonts afterward.
+    \ifnum \lastpenalty=10000 \else \endgraf \fi
+    \smallexamplefonts \rm
+  \fi
+}
+\def\setsmalldispenv{%
+  \ifx\SETdispenvsize\nosmallword
+  \else
+    \ifnum \lastpenalty=10000 \else \endgraf \fi
+    \smallexamplefonts \rm
+  \fi
+}
+
+% We often define two environments, @foo and @smallfoo.
+% Let's do it by one command:
+\def\makedispenv #1#2{
+  \expandafter\envdef\csname#1\endcsname {\setnormaldispenv #2}
+  \expandafter\envdef\csname small#1\endcsname {\setsmalldispenv #2}
+  \expandafter\let\csname E#1\endcsname \afterenvbreak
+  \expandafter\let\csname Esmall#1\endcsname \afterenvbreak
+}
+
+% Define two synonyms:
+\def\maketwodispenvs #1#2#3{
+  \makedispenv{#1}{#3}
+  \makedispenv{#2}{#3}
+}
+
+% @lisp: indented, narrowed, typewriter font; @example: same as @lisp.
+%
+% @smallexample and @smalllisp: use smaller fonts.
+% Originally contributed by Pavel@xerox.
+%
+\maketwodispenvs {lisp}{example}{%
+  \nonfillstart
+  \tt\setupmarkupstyle{example}%
+  \let\kbdfont = \kbdexamplefont % Allow @kbd to do something special.
+  \gobble       % eat return
+}
+% @display/@smalldisplay: same as @lisp except keep current font.
+%
+\makedispenv {display}{%
+  \nonfillstart
+  \gobble
+}
+
+% @format/@smallformat: same as @display except don't narrow margins.
+%
+\makedispenv{format}{%
+  \let\nonarrowing = t%
+  \nonfillstart
+  \gobble
+}
+
+% @flushleft: same as @format, but doesn't obey \SETdispenvsize.
+\envdef\flushleft{%
+  \let\nonarrowing = t%
+  \nonfillstart
+  \gobble
+}
+\let\Eflushleft = \afterenvbreak
+
+% @flushright.
+%
+\envdef\flushright{%
+  \let\nonarrowing = t%
+  \nonfillstart
+  \advance\leftskip by 0pt plus 1fill
+  \gobble
+}
+\let\Eflushright = \afterenvbreak
+
+
+% @raggedright does more-or-less normal line breaking but no right
+% justification.  From plain.tex.
+\envdef\raggedright{%
+  \rightskip0pt plus2em \spaceskip.3333em \xspaceskip.5em\relax
+}
+\let\Eraggedright\par
+
+\envdef\raggedleft{%
+  \parindent=0pt \leftskip0pt plus2em
+  \spaceskip.3333em \xspaceskip.5em \parfillskip=0pt
+  \hbadness=10000 % Last line will usually be underfull, so turn off
+                  % badness reporting.
+}
+\let\Eraggedleft\par
+
+\envdef\raggedcenter{%
+  \parindent=0pt \rightskip0pt plus1em \leftskip0pt plus1em
+  \spaceskip.3333em \xspaceskip.5em \parfillskip=0pt
+  \hbadness=10000 % Last line will usually be underfull, so turn off
+                  % badness reporting.
+}
+\let\Eraggedcenter\par
+
+
+% @quotation does normal linebreaking (hence we can't use \nonfillstart)
+% and narrows the margins.  We keep \parskip nonzero in general, since
+% we're doing normal filling.  So, when using \aboveenvbreak and
+% \afterenvbreak, temporarily make \parskip 0.
+%
+\def\quotationstart{%
+  {\parskip=0pt \aboveenvbreak}% because \aboveenvbreak inserts \parskip
+  \parindent=0pt
+  %
+  % @cartouche defines \nonarrowing to inhibit narrowing at next level down.
+  \ifx\nonarrowing\relax
+    \advance\leftskip by \lispnarrowing
+    \advance\rightskip by \lispnarrowing
+    \exdentamount = \lispnarrowing
+  \else
+    \let\nonarrowing = \relax
+  \fi
+  \parsearg\quotationlabel
+}
+
+\envdef\quotation{%
+  \setnormaldispenv
+  \quotationstart
+}
+
+\envdef\smallquotation{%
+  \setsmalldispenv
+  \quotationstart
+}
+\let\Esmallquotation = \Equotation
+
+% We have retained a nonzero parskip for the environment, since we're
+% doing normal filling.
+%
+\def\Equotation{%
+  \par
+  \ifx\quotationauthor\undefined\else
+    % indent a bit.
+    \leftline{\kern 2\leftskip \sl ---\quotationauthor}%
+  \fi
+  {\parskip=0pt \afterenvbreak}%
+}
+
+% If we're given an argument, typeset it in bold with a colon after.
+\def\quotationlabel#1{%
+  \def\temp{#1}%
+  \ifx\temp\empty \else
+    {\bf #1: }%
+  \fi
+}
+
+
+% LaTeX-like @verbatim...@end verbatim and @verb{<char>...<char>}
+% If we want to allow any <char> as delimiter,
+% we need the curly braces so that makeinfo sees the @verb command, eg:
+% `@verbx...x' would look like the '@verbx' command.  --janneke@gnu.org
+%
+% [Knuth]: Donald Ervin Knuth, 1996.  The TeXbook.
+%
+% [Knuth] p.344; only we need to do the other characters Texinfo sets
+% active too.  Otherwise, they get lost as the first character on a
+% verbatim line.
+\def\dospecials{%
+  \do\ \do\\\do\{\do\}\do\$\do\&%
+  \do\#\do\^\do\^^K\do\_\do\^^A\do\%\do\~%
+  \do\<\do\>\do\|\do\@\do+\do\"%
+  % Don't do the quotes -- if we do, @set txicodequoteundirected and
+  % @set txicodequotebacktick will not have effect on @verb and
+  % @verbatim, and ?` and !` ligatures won't get disabled.
+  %\do\`\do\'%
+}
+%
+% [Knuth] p. 380
+\def\uncatcodespecials{%
+  \def\do##1{\catcode`##1=\other}\dospecials}
+%
+% Setup for the @verb command.
+%
+% Eight spaces for a tab
+\begingroup
+  \catcode`\^^I=\active
+  \gdef\tabeightspaces{\catcode`\^^I=\active\def^^I{\ \ \ \ \ \ \ \ }}
+\endgroup
+%
+\def\setupverb{%
+  \tt  % easiest (and conventionally used) font for verbatim
+  \def\par{\leavevmode\endgraf}%
+  \setupmarkupstyle{verb}%
+  \tabeightspaces
+  % Respect line breaks,
+  % print special symbols as themselves, and
+  % make each space count
+  % must do in this order:
+  \obeylines \uncatcodespecials \sepspaces
+}
+
+% Setup for the @verbatim environment
+%
+% Real tab expansion
+\newdimen\tabw \setbox0=\hbox{\tt\space} \tabw=8\wd0 % tab amount
+%
+\def\starttabbox{\setbox0=\hbox\bgroup}
+%
+\begingroup
+  \catcode`\^^I=\active
+  \gdef\tabexpand{%
+    \catcode`\^^I=\active
+    \def^^I{\leavevmode\egroup
+      \dimen0=\wd0 % the width so far, or since the previous tab
+      \divide\dimen0 by\tabw
+      \multiply\dimen0 by\tabw % compute previous multiple of \tabw
+      \advance\dimen0 by\tabw  % advance to next multiple of \tabw
+      \wd0=\dimen0 \box0 \starttabbox
+    }%
+  }
+\endgroup
+
+% start the verbatim environment.
+\def\setupverbatim{%
+  \let\nonarrowing = t%
+  \nonfillstart
+  % Easiest (and conventionally used) font for verbatim
+  \tt
+  \def\par{\leavevmode\egroup\box0\endgraf}%
+  \tabexpand
+  \setupmarkupstyle{verbatim}%
+  % Respect line breaks,
+  % print special symbols as themselves, and
+  % make each space count
+  % must do in this order:
+  \obeylines \uncatcodespecials \sepspaces
+  \everypar{\starttabbox}%
+}
+
+% Do the @verb magic: verbatim text is quoted by unique
+% delimiter characters.  Before first delimiter expect a
+% right brace, after last delimiter expect closing brace:
+%
+%    \def\doverb'{'<char>#1<char>'}'{#1}
+%
+% [Knuth] p. 382; only eat outer {}
+\begingroup
+  \catcode`[=1\catcode`]=2\catcode`\{=\other\catcode`\}=\other
+  \gdef\doverb{#1[\def\next##1#1}[##1\endgroup]\next]
+\endgroup
+%
+\def\verb{\begingroup\setupverb\doverb}
+%
+%
+% Do the @verbatim magic: define the macro \doverbatim so that
+% the (first) argument ends when '@end verbatim' is reached, ie:
+%
+%     \def\doverbatim#1@end verbatim{#1}
+%
+% For Texinfo it's a lot easier than for LaTeX,
+% because texinfo's \verbatim doesn't stop at '\end{verbatim}':
+% we need not redefine '\', '{' and '}'.
+%
+% Inspired by LaTeX's verbatim command set [latex.ltx]
+%
+\begingroup
+  \catcode`\ =\active
+  \obeylines %
+  % ignore everything up to the first ^^M, that's the newline at the end
+  % of the @verbatim input line itself.  Otherwise we get an extra blank
+  % line in the output.
+  \xdef\doverbatim#1^^M#2@end verbatim{#2\noexpand\end\gobble verbatim}%
+  % We really want {...\end verbatim} in the body of the macro, but
+  % without the active space; thus we have to use \xdef and \gobble.
+\endgroup
+%
+\envdef\verbatim{%
+    \setupverbatim\doverbatim
+}
+\let\Everbatim = \afterenvbreak
+
+
+% @verbatiminclude FILE - insert text of file in verbatim environment.
+%
+\def\verbatiminclude{\parseargusing\filenamecatcodes\doverbatiminclude}
+%
+\def\doverbatiminclude#1{%
+  {%
+    \makevalueexpandable
+    \setupverbatim
+    \indexnofonts       % Allow `@@' and other weird things in file names.
+    \input #1
+    \afterenvbreak
+  }%
+}
+
+% @copying ... @end copying.
+% Save the text away for @insertcopying later.
+%
+% We save the uninterpreted tokens, rather than creating a box.
+% Saving the text in a box would be much easier, but then all the
+% typesetting commands (@smallbook, font changes, etc.) have to be done
+% beforehand -- and a) we want @copying to be done first in the source
+% file; b) letting users define the frontmatter in as flexible order as
+% possible is very desirable.
+%
+\def\copying{\checkenv{}\begingroup\scanargctxt\docopying}
+\def\docopying#1@end copying{\endgroup\def\copyingtext{#1}}
+%
+\def\insertcopying{%
+  \begingroup
+    \parindent = 0pt  % paragraph indentation looks wrong on title page
+    \scanexp\copyingtext
+  \endgroup
+}
+
+
+\message{defuns,}
+% @defun etc.
+
+\newskip\defbodyindent \defbodyindent=.4in
+\newskip\defargsindent \defargsindent=50pt
+\newskip\deflastargmargin \deflastargmargin=18pt
+\newcount\defunpenalty
+
+% Start the processing of @deffn:
+\def\startdefun{%
+  \ifnum\lastpenalty<10000
+    \medbreak
+    \defunpenalty=10003 % Will keep this @deffn together with the
+                        % following @def command, see below.
+  \else
+    % If there are two @def commands in a row, we'll have a \nobreak,
+    % which is there to keep the function description together with its
+    % header.  But if there's nothing but headers, we need to allow a
+    % break somewhere.  Check specifically for penalty 10002, inserted
+    % by \printdefunline, instead of 10000, since the sectioning
+    % commands also insert a nobreak penalty, and we don't want to allow
+    % a break between a section heading and a defun.
+    %
+    % As a minor refinement, we avoid "club" headers by signalling
+    % with penalty of 10003 after the very first @deffn in the
+    % sequence (see above), and penalty of 10002 after any following
+    % @def command.
+    \ifnum\lastpenalty=10002 \penalty2000 \else \defunpenalty=10002 \fi
+    %
+    % Similarly, after a section heading, do not allow a break.
+    % But do insert the glue.
+    \medskip  % preceded by discardable penalty, so not a breakpoint
+  \fi
+  %
+  \parindent=0in
+  \advance\leftskip by \defbodyindent
+  \exdentamount=\defbodyindent
+}
+
+\def\dodefunx#1{%
+  % First, check whether we are in the right environment:
+  \checkenv#1%
+  %
+  % As above, allow line break if we have multiple x headers in a row.
+  % It's not a great place, though.
+  \ifnum\lastpenalty=10002 \penalty3000 \else \defunpenalty=10002 \fi
+  %
+  % And now, it's time to reuse the body of the original defun:
+  \expandafter\gobbledefun#1%
+}
+\def\gobbledefun#1\startdefun{}
+
+% \printdefunline \deffnheader{text}
+%
+\def\printdefunline#1#2{%
+  \begingroup
+    % call \deffnheader:
+    #1#2 \endheader
+    % common ending:
+    \interlinepenalty = 10000
+    \advance\rightskip by 0pt plus 1fil
+    \endgraf
+    \nobreak\vskip -\parskip
+    \penalty\defunpenalty  % signal to \startdefun and \dodefunx
+    % Some of the @defun-type tags do not enable magic parentheses,
+    % rendering the following check redundant.  But we don't optimize.
+    \checkparencounts
+  \endgroup
+}
+
+\def\Edefun{\endgraf\medbreak}
+
+% \makedefun{deffn} creates \deffn, \deffnx and \Edeffn;
+% the only thing remaining is to define \deffnheader.
+%
+\def\makedefun#1{%
+  \expandafter\let\csname E#1\endcsname = \Edefun
+  \edef\temp{\noexpand\domakedefun
+    \makecsname{#1}\makecsname{#1x}\makecsname{#1header}}%
+  \temp
+}
+
+% \domakedefun \deffn \deffnx \deffnheader
+%
+% Define \deffn and \deffnx, without parameters.
+% \deffnheader has to be defined explicitly.
+%
+\def\domakedefun#1#2#3{%
+  \envdef#1{%
+    \startdefun
+    \parseargusing\activeparens{\printdefunline#3}%
+  }%
+  \def#2{\dodefunx#1}%
+  \def#3%
+}
+
+%%% Untyped functions:
+
+% @deffn category name args
+\makedefun{deffn}{\deffngeneral{}}
+
+% @deffn category class name args
+\makedefun{defop}#1 {\defopon{#1\ \putwordon}}
+
+% \defopon {category on}class name args
+\def\defopon#1#2 {\deffngeneral{\putwordon\ \code{#2}}{#1\ \code{#2}} }
+
+% \deffngeneral {subind}category name args
+%
+\def\deffngeneral#1#2 #3 #4\endheader{%
+  % Remember that \dosubind{fn}{foo}{} is equivalent to \doind{fn}{foo}.
+  \dosubind{fn}{\code{#3}}{#1}%
+  \defname{#2}{}{#3}\magicamp\defunargs{#4\unskip}%
+}
+
+%%% Typed functions:
+
+% @deftypefn category type name args
+\makedefun{deftypefn}{\deftypefngeneral{}}
+
+% @deftypeop category class type name args
+\makedefun{deftypeop}#1 {\deftypeopon{#1\ \putwordon}}
+
+% \deftypeopon {category on}class type name args
+\def\deftypeopon#1#2 {\deftypefngeneral{\putwordon\ \code{#2}}{#1\ \code{#2}} }
+
+% \deftypefngeneral {subind}category type name args
+%
+\def\deftypefngeneral#1#2 #3 #4 #5\endheader{%
+  \dosubind{fn}{\code{#4}}{#1}%
+  \defname{#2}{#3}{#4}\defunargs{#5\unskip}%
+}
+
+%%% Typed variables:
+
+% @deftypevr category type var args
+\makedefun{deftypevr}{\deftypecvgeneral{}}
+
+% @deftypecv category class type var args
+\makedefun{deftypecv}#1 {\deftypecvof{#1\ \putwordof}}
+
+% \deftypecvof {category of}class type var args
+\def\deftypecvof#1#2 {\deftypecvgeneral{\putwordof\ \code{#2}}{#1\ \code{#2}} }
+
+% \deftypecvgeneral {subind}category type var args
+%
+\def\deftypecvgeneral#1#2 #3 #4 #5\endheader{%
+  \dosubind{vr}{\code{#4}}{#1}%
+  \defname{#2}{#3}{#4}\defunargs{#5\unskip}%
+}
+
+%%% Untyped variables:
+
+% @defvr category var args
+\makedefun{defvr}#1 {\deftypevrheader{#1} {} }
+
+% @defcv category class var args
+\makedefun{defcv}#1 {\defcvof{#1\ \putwordof}}
+
+% \defcvof {category of}class var args
+\def\defcvof#1#2 {\deftypecvof{#1}#2 {} }
+
+%%% Type:
+% @deftp category name args
+\makedefun{deftp}#1 #2 #3\endheader{%
+  \doind{tp}{\code{#2}}%
+  \defname{#1}{}{#2}\defunargs{#3\unskip}%
+}
+
+% Remaining @defun-like shortcuts:
+\makedefun{defun}{\deffnheader{\putwordDeffunc} }
+\makedefun{defmac}{\deffnheader{\putwordDefmac} }
+\makedefun{defspec}{\deffnheader{\putwordDefspec} }
+\makedefun{deftypefun}{\deftypefnheader{\putwordDeffunc} }
+\makedefun{defvar}{\defvrheader{\putwordDefvar} }
+\makedefun{defopt}{\defvrheader{\putwordDefopt} }
+\makedefun{deftypevar}{\deftypevrheader{\putwordDefvar} }
+\makedefun{defmethod}{\defopon\putwordMethodon}
+\makedefun{deftypemethod}{\deftypeopon\putwordMethodon}
+\makedefun{defivar}{\defcvof\putwordInstanceVariableof}
+\makedefun{deftypeivar}{\deftypecvof\putwordInstanceVariableof}
+
+% \defname, which formats the name of the @def (not the args).
+% #1 is the category, such as "Function".
+% #2 is the return type, if any.
+% #3 is the function name.
+%
+% We are followed by (but not passed) the arguments, if any.
+%
+\def\defname#1#2#3{%
+  % Get the values of \leftskip and \rightskip as they were outside the @def...
+  \advance\leftskip by -\defbodyindent
+  %
+  % How we'll format the type name.  Putting it in brackets helps
+  % distinguish it from the body text that may end up on the next line
+  % just below it.
+  \def\temp{#1}%
+  \setbox0=\hbox{\kern\deflastargmargin \ifx\temp\empty\else [\rm\temp]\fi}
+  %
+  % Figure out line sizes for the paragraph shape.
+  % The first line needs space for \box0; but if \rightskip is nonzero,
+  % we need only space for the part of \box0 which exceeds it:
+  \dimen0=\hsize  \advance\dimen0 by -\wd0  \advance\dimen0 by \rightskip
+  % The continuations:
+  \dimen2=\hsize  \advance\dimen2 by -\defargsindent
+  % (plain.tex says that \dimen1 should be used only as global.)
+  \parshape 2 0in \dimen0 \defargsindent \dimen2
+  %
+  % Put the type name to the right margin.
+  \noindent
+  \hbox to 0pt{%
+    \hfil\box0 \kern-\hsize
+    % \hsize has to be shortened this way:
+    \kern\leftskip
+    % Intentionally do not respect \rightskip, since we need the space.
+  }%
+  %
+  % Allow all lines to be underfull without complaint:
+  \tolerance=10000 \hbadness=10000
+  \exdentamount=\defbodyindent
+  {%
+    % defun fonts. We use typewriter by default (used to be bold) because:
+    % . we're printing identifiers, they should be in tt in principle.
+    % . in languages with many accents, such as Czech or French, it's
+    %   common to leave accents off identifiers.  The result looks ok in
+    %   tt, but exceedingly strange in rm.
+    % . we don't want -- and --- to be treated as ligatures.
+    % . this still does not fix the ?` and !` ligatures, but so far no
+    %   one has made identifiers using them :).
+    \df \tt
+    \def\temp{#2}% return value type
+    \ifx\temp\empty\else \tclose{\temp} \fi
+    #3% output function name
+  }%
+  {\rm\enskip}% hskip 0.5 em of \tenrm
+  %
+  \boldbrax
+  % arguments will be output next, if any.
+}
+
+% Print arguments in slanted roman (not ttsl), inconsistently with using
+% tt for the name.  This is because literal text is sometimes needed in
+% the argument list (groff manual), and ttsl and tt are not very
+% distinguishable.  Prevent hyphenation at `-' chars.
+%
+\def\defunargs#1{%
+  % use sl by default (not ttsl),
+  % tt for the names.
+  \df \sl \hyphenchar\font=0
+  %
+  % On the other hand, if an argument has two dashes (for instance), we
+  % want a way to get ttsl.  Let's try @var for that.
+  \def\var##1{{\setupmarkupstyle{var}\ttslanted{##1}}}%
+  #1%
+  \sl\hyphenchar\font=45
+}
+
+% We want ()&[] to print specially on the defun line.
+%
+\def\activeparens{%
+  \catcode`\(=\active \catcode`\)=\active
+  \catcode`\[=\active \catcode`\]=\active
+  \catcode`\&=\active
+}
+
+% Make control sequences which act like normal parenthesis chars.
+\let\lparen = ( \let\rparen = )
+
+% Be sure that we always have a definition for `(', etc.  For example,
+% if the fn name has parens in it, \boldbrax will not be in effect yet,
+% so TeX would otherwise complain about undefined control sequence.
+{
+  \activeparens
+  \global\let(=\lparen \global\let)=\rparen
+  \global\let[=\lbrack \global\let]=\rbrack
+  \global\let& = \&
+
+  \gdef\boldbrax{\let(=\opnr\let)=\clnr\let[=\lbrb\let]=\rbrb}
+  \gdef\magicamp{\let&=\amprm}
+}
+
+\newcount\parencount
+
+% If we encounter &foo, then turn on ()-hacking afterwards
+\newif\ifampseen
+\def\amprm#1 {\ampseentrue{\bf\&#1 }}
+
+\def\parenfont{%
+  \ifampseen
+    % At the first level, print parens in roman,
+    % otherwise use the default font.
+    \ifnum \parencount=1 \rm \fi
+  \else
+    % The \sf parens (in \boldbrax) actually are a little bolder than
+    % the contained text.  This is especially needed for [ and ] .
+    \sf
+  \fi
+}
+\def\infirstlevel#1{%
+  \ifampseen
+    \ifnum\parencount=1
+      #1%
+    \fi
+  \fi
+}
+\def\bfafterword#1 {#1 \bf}
+
+\def\opnr{%
+  \global\advance\parencount by 1
+  {\parenfont(}%
+  \infirstlevel \bfafterword
+}
+\def\clnr{%
+  {\parenfont)}%
+  \infirstlevel \sl
+  \global\advance\parencount by -1
+}
+
+\newcount\brackcount
+\def\lbrb{%
+  \global\advance\brackcount by 1
+  {\bf[}%
+}
+\def\rbrb{%
+  {\bf]}%
+  \global\advance\brackcount by -1
+}
+
+\def\checkparencounts{%
+  \ifnum\parencount=0 \else \badparencount \fi
+  \ifnum\brackcount=0 \else \badbrackcount \fi
+}
+% these should not use \errmessage; the glibc manual, at least, actually
+% has such constructs (when documenting function pointers).
+\def\badparencount{%
+  \message{Warning: unbalanced parentheses in @def...}%
+  \global\parencount=0
+}
+\def\badbrackcount{%
+  \message{Warning: unbalanced square brackets in @def...}%
+  \global\brackcount=0
+}
+
+
+\message{macros,}
+% @macro.
+
+% To do this right we need a feature of e-TeX, \scantokens,
+% which we arrange to emulate with a temporary file in ordinary TeX.
+\ifx\eTeXversion\undefined
+  \newwrite\macscribble
+  \def\scantokens#1{%
+    \toks0={#1}%
+    \immediate\openout\macscribble=\jobname.tmp
+    \immediate\write\macscribble{\the\toks0}%
+    \immediate\closeout\macscribble
+    \input \jobname.tmp
+  }
+\fi
+
+\def\scanmacro#1{%
+  \begingroup
+    \newlinechar`\^^M
+    \let\xeatspaces\eatspaces
+    % Undo catcode changes of \startcontents and \doprintindex
+    % When called from @insertcopying or (short)caption, we need active
+    % backslash to get it printed correctly.  Previously, we had
+    % \catcode`\\=\other instead.  We'll see whether a problem appears
+    % with macro expansion.				--kasal, 19aug04
+    \catcode`\@=0 \catcode`\\=\active \escapechar=`\@
+    % ... and \example
+    \spaceisspace
+    %
+    % Append \endinput to make sure that TeX does not see the ending newline.
+    % I've verified that it is necessary both for e-TeX and for ordinary TeX
+    %							--kasal, 29nov03
+    \scantokens{#1\endinput}%
+  \endgroup
+}
+
+\def\scanexp#1{%
+  \edef\temp{\noexpand\scanmacro{#1}}%
+  \temp
+}
+
+\newcount\paramno   % Count of parameters
+\newtoks\macname    % Macro name
+\newif\ifrecursive  % Is it recursive?
+
+% List of all defined macros in the form
+%    \definedummyword\macro1\definedummyword\macro2...
+% Currently is also contains all @aliases; the list can be split
+% if there is a need.
+\def\macrolist{}
+
+% Add the macro to \macrolist
+\def\addtomacrolist#1{\expandafter \addtomacrolistxxx \csname#1\endcsname}
+\def\addtomacrolistxxx#1{%
+     \toks0 = \expandafter{\macrolist\definedummyword#1}%
+     \xdef\macrolist{\the\toks0}%
+}
+
+% Utility routines.
+% This does \let #1 = #2, with \csnames; that is,
+%   \let \csname#1\endcsname = \csname#2\endcsname
+% (except of course we have to play expansion games).
+%
+\def\cslet#1#2{%
+  \expandafter\let
+  \csname#1\expandafter\endcsname
+  \csname#2\endcsname
+}
+
+% Trim leading and trailing spaces off a string.
+% Concepts from aro-bend problem 15 (see CTAN).
+{\catcode`\@=11
+\gdef\eatspaces #1{\expandafter\trim@\expandafter{#1 }}
+\gdef\trim@ #1{\trim@@ @#1 @ #1 @ @@}
+\gdef\trim@@ #1@ #2@ #3@@{\trim@@@\empty #2 @}
+\def\unbrace#1{#1}
+\unbrace{\gdef\trim@@@ #1 } #2@{#1}
+}
+
+% Trim a single trailing ^^M off a string.
+{\catcode`\^^M=\other \catcode`\Q=3%
+\gdef\eatcr #1{\eatcra #1Q^^MQ}%
+\gdef\eatcra#1^^MQ{\eatcrb#1Q}%
+\gdef\eatcrb#1Q#2Q{#1}%
+}
+
+% Macro bodies are absorbed as an argument in a context where
+% all characters are catcode 10, 11 or 12, except \ which is active
+% (as in normal texinfo). It is necessary to change the definition of \.
+
+% Non-ASCII encodings make 8-bit characters active, so un-activate
+% them to avoid their expansion.  Must do this non-globally, to
+% confine the change to the current group.
+
+% It's necessary to have hard CRs when the macro is executed. This is
+% done by  making ^^M (\endlinechar) catcode 12 when reading the macro
+% body, and then making it the \newlinechar in \scanmacro.
+
+\def\scanctxt{%
+  \catcode`\"=\other
+  \catcode`\+=\other
+  \catcode`\<=\other
+  \catcode`\>=\other
+  \catcode`\@=\other
+  \catcode`\^=\other
+  \catcode`\_=\other
+  \catcode`\|=\other
+  \catcode`\~=\other
+  \ifx\declaredencoding\ascii \else \setnonasciicharscatcodenonglobal\other \fi
+}
+
+\def\scanargctxt{%
+  \scanctxt
+  \catcode`\\=\other
+  \catcode`\^^M=\other
+}
+
+\def\macrobodyctxt{%
+  \scanctxt
+  \catcode`\{=\other
+  \catcode`\}=\other
+  \catcode`\^^M=\other
+  \usembodybackslash
+}
+
+\def\macroargctxt{%
+  \scanctxt
+  \catcode`\\=\other
+}
+
+% \mbodybackslash is the definition of \ in @macro bodies.
+% It maps \foo\ => \csname macarg.foo\endcsname => #N
+% where N is the macro parameter number.
+% We define \csname macarg.\endcsname to be \realbackslash, so
+% \\ in macro replacement text gets you a backslash.
+
+{\catcode`@=0 @catcode`@\=@active
+ @gdef@usembodybackslash{@let\=@mbodybackslash}
+ @gdef@mbodybackslash#1\{@csname macarg.#1@endcsname}
+}
+\expandafter\def\csname macarg.\endcsname{\realbackslash}
+
+\def\macro{\recursivefalse\parsearg\macroxxx}
+\def\rmacro{\recursivetrue\parsearg\macroxxx}
+
+\def\macroxxx#1{%
+  \getargs{#1}%           now \macname is the macname and \argl the arglist
+  \ifx\argl\empty       % no arguments
+     \paramno=0%
+  \else
+     \expandafter\parsemargdef \argl;%
+  \fi
+  \if1\csname ismacro.\the\macname\endcsname
+     \message{Warning: redefining \the\macname}%
+  \else
+     \expandafter\ifx\csname \the\macname\endcsname \relax
+     \else \errmessage{Macro name \the\macname\space already defined}\fi
+     \global\cslet{macsave.\the\macname}{\the\macname}%
+     \global\expandafter\let\csname ismacro.\the\macname\endcsname=1%
+     \addtomacrolist{\the\macname}%
+  \fi
+  \begingroup \macrobodyctxt
+  \ifrecursive \expandafter\parsermacbody
+  \else \expandafter\parsemacbody
+  \fi}
+
+\parseargdef\unmacro{%
+  \if1\csname ismacro.#1\endcsname
+    \global\cslet{#1}{macsave.#1}%
+    \global\expandafter\let \csname ismacro.#1\endcsname=0%
+    % Remove the macro name from \macrolist:
+    \begingroup
+      \expandafter\let\csname#1\endcsname \relax
+      \let\definedummyword\unmacrodo
+      \xdef\macrolist{\macrolist}%
+    \endgroup
+  \else
+    \errmessage{Macro #1 not defined}%
+  \fi
+}
+
+% Called by \do from \dounmacro on each macro.  The idea is to omit any
+% macro definitions that have been changed to \relax.
+%
+\def\unmacrodo#1{%
+  \ifx #1\relax
+    % remove this
+  \else
+    \noexpand\definedummyword \noexpand#1%
+  \fi
+}
+
+% This makes use of the obscure feature that if the last token of a
+% <parameter list> is #, then the preceding argument is delimited by
+% an opening brace, and that opening brace is not consumed.
+\def\getargs#1{\getargsxxx#1{}}
+\def\getargsxxx#1#{\getmacname #1 \relax\getmacargs}
+\def\getmacname #1 #2\relax{\macname={#1}}
+\def\getmacargs#1{\def\argl{#1}}
+
+% Parse the optional {params} list.  Set up \paramno and \paramlist
+% so \defmacro knows what to do.  Define \macarg.blah for each blah
+% in the params list, to be ##N where N is the position in that list.
+% That gets used by \mbodybackslash (above).
+
+% We need to get `macro parameter char #' into several definitions.
+% The technique used is stolen from LaTeX:  let \hash be something
+% unexpandable, insert that wherever you need a #, and then redefine
+% it to # just before using the token list produced.
+%
+% The same technique is used to protect \eatspaces till just before
+% the macro is used.
+
+\def\parsemargdef#1;{\paramno=0\def\paramlist{}%
+        \let\hash\relax\let\xeatspaces\relax\parsemargdefxxx#1,;,}
+\def\parsemargdefxxx#1,{%
+  \if#1;\let\next=\relax
+  \else \let\next=\parsemargdefxxx
+    \advance\paramno by 1%
+    \expandafter\edef\csname macarg.\eatspaces{#1}\endcsname
+        {\xeatspaces{\hash\the\paramno}}%
+    \edef\paramlist{\paramlist\hash\the\paramno,}%
+  \fi\next}
+
+% These two commands read recursive and nonrecursive macro bodies.
+% (They're different since rec and nonrec macros end differently.)
+
+\long\def\parsemacbody#1@end macro%
+{\xdef\temp{\eatcr{#1}}\endgroup\defmacro}%
+\long\def\parsermacbody#1@end rmacro%
+{\xdef\temp{\eatcr{#1}}\endgroup\defmacro}%
+
+% This defines the macro itself. There are six cases: recursive and
+% nonrecursive macros of zero, one, and many arguments.
+% Much magic with \expandafter here.
+% \xdef is used so that macro definitions will survive the file
+% they're defined in; @include reads the file inside a group.
+\def\defmacro{%
+  \let\hash=##% convert placeholders to macro parameter chars
+  \ifrecursive
+    \ifcase\paramno
+    % 0
+      \expandafter\xdef\csname\the\macname\endcsname{%
+        \noexpand\scanmacro{\temp}}%
+    \or % 1
+      \expandafter\xdef\csname\the\macname\endcsname{%
+         \bgroup\noexpand\macroargctxt
+         \noexpand\braceorline
+         \expandafter\noexpand\csname\the\macname xxx\endcsname}%
+      \expandafter\xdef\csname\the\macname xxx\endcsname##1{%
+         \egroup\noexpand\scanmacro{\temp}}%
+    \else % many
+      \expandafter\xdef\csname\the\macname\endcsname{%
+         \bgroup\noexpand\macroargctxt
+         \noexpand\csname\the\macname xx\endcsname}%
+      \expandafter\xdef\csname\the\macname xx\endcsname##1{%
+          \expandafter\noexpand\csname\the\macname xxx\endcsname ##1,}%
+      \expandafter\expandafter
+      \expandafter\xdef
+      \expandafter\expandafter
+        \csname\the\macname xxx\endcsname
+          \paramlist{\egroup\noexpand\scanmacro{\temp}}%
+    \fi
+  \else
+    \ifcase\paramno
+    % 0
+      \expandafter\xdef\csname\the\macname\endcsname{%
+        \noexpand\norecurse{\the\macname}%
+        \noexpand\scanmacro{\temp}\egroup}%
+    \or % 1
+      \expandafter\xdef\csname\the\macname\endcsname{%
+         \bgroup\noexpand\macroargctxt
+         \noexpand\braceorline
+         \expandafter\noexpand\csname\the\macname xxx\endcsname}%
+      \expandafter\xdef\csname\the\macname xxx\endcsname##1{%
+        \egroup
+        \noexpand\norecurse{\the\macname}%
+        \noexpand\scanmacro{\temp}\egroup}%
+    \else % many
+      \expandafter\xdef\csname\the\macname\endcsname{%
+         \bgroup\noexpand\macroargctxt
+         \expandafter\noexpand\csname\the\macname xx\endcsname}%
+      \expandafter\xdef\csname\the\macname xx\endcsname##1{%
+          \expandafter\noexpand\csname\the\macname xxx\endcsname ##1,}%
+      \expandafter\expandafter
+      \expandafter\xdef
+      \expandafter\expandafter
+      \csname\the\macname xxx\endcsname
+      \paramlist{%
+          \egroup
+          \noexpand\norecurse{\the\macname}%
+          \noexpand\scanmacro{\temp}\egroup}%
+    \fi
+  \fi}
+
+\def\norecurse#1{\bgroup\cslet{#1}{macsave.#1}}
+
+% \braceorline decides whether the next nonwhitespace character is a
+% {.  If so it reads up to the closing }, if not, it reads the whole
+% line.  Whatever was read is then fed to the next control sequence
+% as an argument (by \parsebrace or \parsearg)
+\def\braceorline#1{\let\macnamexxx=#1\futurelet\nchar\braceorlinexxx}
+\def\braceorlinexxx{%
+  \ifx\nchar\bgroup\else
+    \expandafter\parsearg
+  \fi \macnamexxx}
+
+
+% @alias.
+% We need some trickery to remove the optional spaces around the equal
+% sign.  Just make them active and then expand them all to nothing.
+\def\alias{\parseargusing\obeyspaces\aliasxxx}
+\def\aliasxxx #1{\aliasyyy#1\relax}
+\def\aliasyyy #1=#2\relax{%
+  {%
+    \expandafter\let\obeyedspace=\empty
+    \addtomacrolist{#1}%
+    \xdef\next{\global\let\makecsname{#1}=\makecsname{#2}}%
+  }%
+  \next
+}
+
+
+\message{cross references,}
+
+\newwrite\auxfile
+\newif\ifhavexrefs    % True if xref values are known.
+\newif\ifwarnedxrefs  % True if we warned once that they aren't known.
+
+% @inforef is relatively simple.
+\def\inforef #1{\inforefzzz #1,,,,**}
+\def\inforefzzz #1,#2,#3,#4**{\putwordSee{} \putwordInfo{} \putwordfile{} \file{\ignorespaces #3{}},
+  node \samp{\ignorespaces#1{}}}
+
+% @node's only job in TeX is to define \lastnode, which is used in
+% cross-references.  The @node line might or might not have commas, and
+% might or might not have spaces before the first comma, like:
+% @node foo , bar , ...
+% We don't want such trailing spaces in the node name.
+%
+\parseargdef\node{\checkenv{}\donode #1 ,\finishnodeparse}
+%
+% also remove a trailing comma, in case of something like this:
+% @node Help-Cross,  ,  , Cross-refs
+\def\donode#1 ,#2\finishnodeparse{\dodonode #1,\finishnodeparse}
+\def\dodonode#1,#2\finishnodeparse{\gdef\lastnode{#1}}
+
+\let\nwnode=\node
+\let\lastnode=\empty
+
+% Write a cross-reference definition for the current node.  #1 is the
+% type (Ynumbered, Yappendix, Ynothing).
+%
+\def\donoderef#1{%
+  \ifx\lastnode\empty\else
+    \setref{\lastnode}{#1}%
+    \global\let\lastnode=\empty
+  \fi
+}
+
+% @anchor{NAME} -- define xref target at arbitrary point.
+%
+\newcount\savesfregister
+%
+\def\savesf{\relax \ifhmode \savesfregister=\spacefactor \fi}
+\def\restoresf{\relax \ifhmode \spacefactor=\savesfregister \fi}
+\def\anchor#1{\savesf \setref{#1}{Ynothing}\restoresf \ignorespaces}
+
+% \setref{NAME}{SNT} defines a cross-reference point NAME (a node or an
+% anchor), which consists of three parts:
+% 1) NAME-title - the current sectioning name taken from \lastsection,
+%                 or the anchor name.
+% 2) NAME-snt   - section number and type, passed as the SNT arg, or
+%                 empty for anchors.
+% 3) NAME-pg    - the page number.
+%
+% This is called from \donoderef, \anchor, and \dofloat.  In the case of
+% floats, there is an additional part, which is not written here:
+% 4) NAME-lof   - the text as it should appear in a @listoffloats.
+%
+\def\setref#1#2{%
+  \pdfmkdest{#1}%
+  \iflinks
+    {%
+      \atdummies  % preserve commands, but don't expand them
+      \edef\writexrdef##1##2{%
+	\write\auxfile{@xrdef{#1-% #1 of \setref, expanded by the \edef
+	  ##1}{##2}}% these are parameters of \writexrdef
+      }%
+      \toks0 = \expandafter{\lastsection}%
+      \immediate \writexrdef{title}{\the\toks0 }%
+      \immediate \writexrdef{snt}{\csname #2\endcsname}% \Ynumbered etc.
+      \safewhatsit{\writexrdef{pg}{\folio}}% will be written later, during \shipout
+    }%
+  \fi
+}
+
+% @xref, @pxref, and @ref generate cross-references.  For \xrefX, #1 is
+% the node name, #2 the name of the Info cross-reference, #3 the printed
+% node name, #4 the name of the Info file, #5 the name of the printed
+% manual.  All but the node name can be omitted.
+%
+\def\pxref#1{\putwordsee{} \xrefX[#1,,,,,,,]}
+\def\xref#1{\putwordSee{} \xrefX[#1,,,,,,,]}
+\def\ref#1{\xrefX[#1,,,,,,,]}
+\def\xrefX[#1,#2,#3,#4,#5,#6]{\begingroup
+  \unsepspaces
+  \def\printedmanual{\ignorespaces #5}%
+  \def\printedrefname{\ignorespaces #3}%
+  \setbox1=\hbox{\printedmanual\unskip}%
+  \setbox0=\hbox{\printedrefname\unskip}%
+  \ifdim \wd0 = 0pt
+    % No printed node name was explicitly given.
+    \expandafter\ifx\csname SETxref-automatic-section-title\endcsname\relax
+      % Use the node name inside the square brackets.
+      \def\printedrefname{\ignorespaces #1}%
+    \else
+      % Use the actual chapter/section title appear inside
+      % the square brackets.  Use the real section title if we have it.
+      \ifdim \wd1 > 0pt
+        % It is in another manual, so we don't have it.
+        \def\printedrefname{\ignorespaces #1}%
+      \else
+        \ifhavexrefs
+          % We know the real title if we have the xref values.
+          \def\printedrefname{\refx{#1-title}{}}%
+        \else
+          % Otherwise just copy the Info node name.
+          \def\printedrefname{\ignorespaces #1}%
+        \fi%
+      \fi
+    \fi
+  \fi
+  %
+  % Make link in pdf output.
+  \ifpdf
+    {\indexnofonts
+     \turnoffactive
+     % This expands tokens, so do it after making catcode changes, so _
+     % etc. don't get their TeX definitions.
+     \getfilename{#4}%
+     %
+     % See comments at \activebackslashdouble.
+     {\activebackslashdouble \xdef\pdfxrefdest{#1}%
+      \backslashparens\pdfxrefdest}%
+     %
+     \leavevmode
+     \startlink attr{/Border [0 0 0]}%
+     \ifnum\filenamelength>0
+       goto file{\the\filename.pdf} name{\pdfxrefdest}%
+     \else
+       goto name{\pdfmkpgn{\pdfxrefdest}}%
+     \fi
+    }%
+    \setcolor{\linkcolor}%
+  \fi
+  %
+  % Float references are printed completely differently: "Figure 1.2"
+  % instead of "[somenode], p.3".  We distinguish them by the
+  % LABEL-title being set to a magic string.
+  {%
+    % Have to otherify everything special to allow the \csname to
+    % include an _ in the xref name, etc.
+    \indexnofonts
+    \turnoffactive
+    \expandafter\global\expandafter\let\expandafter\Xthisreftitle
+      \csname XR#1-title\endcsname
+  }%
+  \iffloat\Xthisreftitle
+    % If the user specified the print name (third arg) to the ref,
+    % print it instead of our usual "Figure 1.2".
+    \ifdim\wd0 = 0pt
+      \refx{#1-snt}{}%
+    \else
+      \printedrefname
+    \fi
+    %
+    % if the user also gave the printed manual name (fifth arg), append
+    % "in MANUALNAME".
+    \ifdim \wd1 > 0pt
+      \space \putwordin{} \cite{\printedmanual}%
+    \fi
+  \else
+    % node/anchor (non-float) references.
+    %
+    % If we use \unhbox0 and \unhbox1 to print the node names, TeX does not
+    % insert empty discretionaries after hyphens, which means that it will
+    % not find a line break at a hyphen in a node names.  Since some manuals
+    % are best written with fairly long node names, containing hyphens, this
+    % is a loss.  Therefore, we give the text of the node name again, so it
+    % is as if TeX is seeing it for the first time.
+    \ifdim \wd1 > 0pt
+      \putwordSection{} ``\printedrefname'' \putwordin{} \cite{\printedmanual}%
+    \else
+      % _ (for example) has to be the character _ for the purposes of the
+      % control sequence corresponding to the node, but it has to expand
+      % into the usual \leavevmode...\vrule stuff for purposes of
+      % printing. So we \turnoffactive for the \refx-snt, back on for the
+      % printing, back off for the \refx-pg.
+      {\turnoffactive
+       % Only output a following space if the -snt ref is nonempty; for
+       % @unnumbered and @anchor, it won't be.
+       \setbox2 = \hbox{\ignorespaces \refx{#1-snt}{}}%
+       \ifdim \wd2 > 0pt \refx{#1-snt}\space\fi
+      }%
+      % output the `[mynode]' via a macro so it can be overridden.
+      \xrefprintnodename\printedrefname
+      %
+      % But we always want a comma and a space:
+      ,\space
+      %
+      % output the `page 3'.
+      \turnoffactive \putwordpage\tie\refx{#1-pg}{}%
+    \fi
+  \fi
+  \endlink
+\endgroup}
+
+% This macro is called from \xrefX for the `[nodename]' part of xref
+% output.  It's a separate macro only so it can be changed more easily,
+% since square brackets don't work well in some documents.  Particularly
+% one that Bob is working on :).
+%
+\def\xrefprintnodename#1{[#1]}
+
+% Things referred to by \setref.
+%
+\def\Ynothing{}
+\def\Yomitfromtoc{}
+\def\Ynumbered{%
+  \ifnum\secno=0
+    \putwordChapter@tie \the\chapno
+  \else \ifnum\subsecno=0
+    \putwordSection@tie \the\chapno.\the\secno
+  \else \ifnum\subsubsecno=0
+    \putwordSection@tie \the\chapno.\the\secno.\the\subsecno
+  \else
+    \putwordSection@tie \the\chapno.\the\secno.\the\subsecno.\the\subsubsecno
+  \fi\fi\fi
+}
+\def\Yappendix{%
+  \ifnum\secno=0
+     \putwordAppendix@tie @char\the\appendixno{}%
+  \else \ifnum\subsecno=0
+     \putwordSection@tie @char\the\appendixno.\the\secno
+  \else \ifnum\subsubsecno=0
+    \putwordSection@tie @char\the\appendixno.\the\secno.\the\subsecno
+  \else
+    \putwordSection@tie
+      @char\the\appendixno.\the\secno.\the\subsecno.\the\subsubsecno
+  \fi\fi\fi
+}
+
+% Define \refx{NAME}{SUFFIX} to reference a cross-reference string named NAME.
+% If its value is nonempty, SUFFIX is output afterward.
+%
+\def\refx#1#2{%
+  {%
+    \indexnofonts
+    \otherbackslash
+    \expandafter\global\expandafter\let\expandafter\thisrefX
+      \csname XR#1\endcsname
+  }%
+  \ifx\thisrefX\relax
+    % If not defined, say something at least.
+    \angleleft un\-de\-fined\angleright
+    \iflinks
+      \ifhavexrefs
+        \message{\linenumber Undefined cross reference `#1'.}%
+      \else
+        \ifwarnedxrefs\else
+          \global\warnedxrefstrue
+          \message{Cross reference values unknown; you must run TeX again.}%
+        \fi
+      \fi
+    \fi
+  \else
+    % It's defined, so just use it.
+    \thisrefX
+  \fi
+  #2% Output the suffix in any case.
+}
+
+% This is the macro invoked by entries in the aux file.  Usually it's
+% just a \def (we prepend XR to the control sequence name to avoid
+% collisions).  But if this is a float type, we have more work to do.
+%
+\def\xrdef#1#2{%
+  {% The node name might contain 8-bit characters, which in our current
+   % implementation are changed to commands like @'e.  Don't let these
+   % mess up the control sequence name.
+    \indexnofonts
+    \turnoffactive
+    \xdef\safexrefname{#1}%
+  }%
+  %
+  \expandafter\gdef\csname XR\safexrefname\endcsname{#2}% remember this xref
+  %
+  % Was that xref control sequence that we just defined for a float?
+  \expandafter\iffloat\csname XR\safexrefname\endcsname
+    % it was a float, and we have the (safe) float type in \iffloattype.
+    \expandafter\let\expandafter\floatlist
+      \csname floatlist\iffloattype\endcsname
+    %
+    % Is this the first time we've seen this float type?
+    \expandafter\ifx\floatlist\relax
+      \toks0 = {\do}% yes, so just \do
+    \else
+      % had it before, so preserve previous elements in list.
+      \toks0 = \expandafter{\floatlist\do}%
+    \fi
+    %
+    % Remember this xref in the control sequence \floatlistFLOATTYPE,
+    % for later use in \listoffloats.
+    \expandafter\xdef\csname floatlist\iffloattype\endcsname{\the\toks0
+      {\safexrefname}}%
+  \fi
+}
+
+% Read the last existing aux file, if any.  No error if none exists.
+%
+\def\tryauxfile{%
+  \openin 1 \jobname.aux
+  \ifeof 1 \else
+    \readdatafile{aux}%
+    \global\havexrefstrue
+  \fi
+  \closein 1
+}
+
+\def\setupdatafile{%
+  \catcode`\^^@=\other
+  \catcode`\^^A=\other
+  \catcode`\^^B=\other
+  \catcode`\^^C=\other
+  \catcode`\^^D=\other
+  \catcode`\^^E=\other
+  \catcode`\^^F=\other
+  \catcode`\^^G=\other
+  \catcode`\^^H=\other
+  \catcode`\^^K=\other
+  \catcode`\^^L=\other
+  \catcode`\^^N=\other
+  \catcode`\^^P=\other
+  \catcode`\^^Q=\other
+  \catcode`\^^R=\other
+  \catcode`\^^S=\other
+  \catcode`\^^T=\other
+  \catcode`\^^U=\other
+  \catcode`\^^V=\other
+  \catcode`\^^W=\other
+  \catcode`\^^X=\other
+  \catcode`\^^Z=\other
+  \catcode`\^^[=\other
+  \catcode`\^^\=\other
+  \catcode`\^^]=\other
+  \catcode`\^^^=\other
+  \catcode`\^^_=\other
+  % It was suggested to set the catcode of ^ to 7, which would allow ^^e4 etc.
+  % in xref tags, i.e., node names.  But since ^^e4 notation isn't
+  % supported in the main text, it doesn't seem desirable.  Furthermore,
+  % that is not enough: for node names that actually contain a ^
+  % character, we would end up writing a line like this: 'xrdef {'hat
+  % b-title}{'hat b} and \xrdef does a \csname...\endcsname on the first
+  % argument, and \hat is not an expandable control sequence.  It could
+  % all be worked out, but why?  Either we support ^^ or we don't.
+  %
+  % The other change necessary for this was to define \auxhat:
+  % \def\auxhat{\def^{'hat }}% extra space so ok if followed by letter
+  % and then to call \auxhat in \setq.
+  %
+  \catcode`\^=\other
+  %
+  % Special characters.  Should be turned off anyway, but...
+  \catcode`\~=\other
+  \catcode`\[=\other
+  \catcode`\]=\other
+  \catcode`\"=\other
+  \catcode`\_=\other
+  \catcode`\|=\other
+  \catcode`\<=\other
+  \catcode`\>=\other
+  \catcode`\$=\other
+  \catcode`\#=\other
+  \catcode`\&=\other
+  \catcode`\%=\other
+  \catcode`+=\other % avoid \+ for paranoia even though we've turned it off
+  %
+  % This is to support \ in node names and titles, since the \
+  % characters end up in a \csname.  It's easier than
+  % leaving it active and making its active definition an actual \
+  % character.  What I don't understand is why it works in the *value*
+  % of the xrdef.  Seems like it should be a catcode12 \, and that
+  % should not typeset properly.  But it works, so I'm moving on for
+  % now.  --karl, 15jan04.
+  \catcode`\\=\other
+  %
+  % Make the characters 128-255 be printing characters.
+  {%
+    \count1=128
+    \def\loop{%
+      \catcode\count1=\other
+      \advance\count1 by 1
+      \ifnum \count1<256 \loop \fi
+    }%
+  }%
+  %
+  % @ is our escape character in .aux files, and we need braces.
+  \catcode`\{=1
+  \catcode`\}=2
+  \catcode`\@=0
+}
+
+\def\readdatafile#1{%
+\begingroup
+  \setupdatafile
+  \input\jobname.#1
+\endgroup}
+
+
+\message{insertions,}
+% including footnotes.
+
+\newcount \footnoteno
+
+% The trailing space in the following definition for supereject is
+% vital for proper filling; pages come out unaligned when you do a
+% pagealignmacro call if that space before the closing brace is
+% removed. (Generally, numeric constants should always be followed by a
+% space to prevent strange expansion errors.)
+\def\supereject{\par\penalty -20000\footnoteno =0 }
+
+% @footnotestyle is meaningful for info output only.
+\let\footnotestyle=\comment
+
+{\catcode `\@=11
+%
+% Auto-number footnotes.  Otherwise like plain.
+\gdef\footnote{%
+  \let\indent=\ptexindent
+  \let\noindent=\ptexnoindent
+  \global\advance\footnoteno by \@ne
+  \edef\thisfootno{$^{\the\footnoteno}$}%
+  %
+  % In case the footnote comes at the end of a sentence, preserve the
+  % extra spacing after we do the footnote number.
+  \let\@sf\empty
+  \ifhmode\edef\@sf{\spacefactor\the\spacefactor}\ptexslash\fi
+  %
+  % Remove inadvertent blank space before typesetting the footnote number.
+  \unskip
+  \thisfootno\@sf
+  \dofootnote
+}%
+
+% Don't bother with the trickery in plain.tex to not require the
+% footnote text as a parameter.  Our footnotes don't need to be so general.
+%
+% Oh yes, they do; otherwise, @ifset (and anything else that uses
+% \parseargline) fails inside footnotes because the tokens are fixed when
+% the footnote is read.  --karl, 16nov96.
+%
+\gdef\dofootnote{%
+  \insert\footins\bgroup
+  % We want to typeset this text as a normal paragraph, even if the
+  % footnote reference occurs in (for example) a display environment.
+  % So reset some parameters.
+  \hsize=\pagewidth
+  \interlinepenalty\interfootnotelinepenalty
+  \splittopskip\ht\strutbox % top baseline for broken footnotes
+  \splitmaxdepth\dp\strutbox
+  \floatingpenalty\@MM
+  \leftskip\z@skip
+  \rightskip\z@skip
+  \spaceskip\z@skip
+  \xspaceskip\z@skip
+  \parindent\defaultparindent
+  %
+  \smallfonts \rm
+  %
+  % Because we use hanging indentation in footnotes, a @noindent appears
+  % to exdent this text, so make it be a no-op.  makeinfo does not use
+  % hanging indentation so @noindent can still be needed within footnote
+  % text after an @example or the like (not that this is good style).
+  \let\noindent = \relax
+  %
+  % Hang the footnote text off the number.  Use \everypar in case the
+  % footnote extends for more than one paragraph.
+  \everypar = {\hang}%
+  \textindent{\thisfootno}%
+  %
+  % Don't crash into the line above the footnote text.  Since this
+  % expands into a box, it must come within the paragraph, lest it
+  % provide a place where TeX can split the footnote.
+  \footstrut
+  \futurelet\next\fo@t
+}
+}%end \catcode `\@=11
+
+% In case a @footnote appears in a vbox, save the footnote text and create
+% the real \insert just after the vbox finished.  Otherwise, the insertion
+% would be lost.
+% Similarly, if a @footnote appears inside an alignment, save the footnote
+% text to a box and make the \insert when a row of the table is finished.
+% And the same can be done for other insert classes.  --kasal, 16nov03.
+
+% Replace the \insert primitive by a cheating macro.
+% Deeper inside, just make sure that the saved insertions are not spilled
+% out prematurely.
+%
+\def\startsavinginserts{%
+  \ifx \insert\ptexinsert
+    \let\insert\saveinsert
+  \else
+    \let\checkinserts\relax
+  \fi
+}
+
+% This \insert replacement works for both \insert\footins{foo} and
+% \insert\footins\bgroup foo\egroup, but it doesn't work for \insert27{foo}.
+%
+\def\saveinsert#1{%
+  \edef\next{\noexpand\savetobox \makeSAVEname#1}%
+  \afterassignment\next
+  % swallow the left brace
+  \let\temp =
+}
+\def\makeSAVEname#1{\makecsname{SAVE\expandafter\gobble\string#1}}
+\def\savetobox#1{\global\setbox#1 = \vbox\bgroup \unvbox#1}
+
+\def\checksaveins#1{\ifvoid#1\else \placesaveins#1\fi}
+
+\def\placesaveins#1{%
+  \ptexinsert \csname\expandafter\gobblesave\string#1\endcsname
+    {\box#1}%
+}
+
+% eat @SAVE -- beware, all of them have catcode \other:
+{
+  \def\dospecials{\do S\do A\do V\do E} \uncatcodespecials  %  ;-)
+  \gdef\gobblesave @SAVE{}
+}
+
+% initialization:
+\def\newsaveins #1{%
+  \edef\next{\noexpand\newsaveinsX \makeSAVEname#1}%
+  \next
+}
+\def\newsaveinsX #1{%
+  \csname newbox\endcsname #1%
+  \expandafter\def\expandafter\checkinserts\expandafter{\checkinserts
+    \checksaveins #1}%
+}
+
+% initialize:
+\let\checkinserts\empty
+\newsaveins\footins
+\newsaveins\margin
+
+
+% @image.  We use the macros from epsf.tex to support this.
+% If epsf.tex is not installed and @image is used, we complain.
+%
+% Check for and read epsf.tex up front.  If we read it only at @image
+% time, we might be inside a group, and then its definitions would get
+% undone and the next image would fail.
+\openin 1 = epsf.tex
+\ifeof 1 \else
+  % Do not bother showing banner with epsf.tex v2.7k (available in
+  % doc/epsf.tex and on ctan).
+  \def\epsfannounce{\toks0 = }%
+  \input epsf.tex
+\fi
+\closein 1
+%
+% We will only complain once about lack of epsf.tex.
+\newif\ifwarnednoepsf
+\newhelp\noepsfhelp{epsf.tex must be installed for images to
+  work.  It is also included in the Texinfo distribution, or you can get
+  it from ftp://tug.org/tex/epsf.tex.}
+%
+\def\image#1{%
+  \ifx\epsfbox\undefined
+    \ifwarnednoepsf \else
+      \errhelp = \noepsfhelp
+      \errmessage{epsf.tex not found, images will be ignored}%
+      \global\warnednoepsftrue
+    \fi
+  \else
+    \imagexxx #1,,,,,\finish
+  \fi
+}
+%
+% Arguments to @image:
+% #1 is (mandatory) image filename; we tack on .eps extension.
+% #2 is (optional) width, #3 is (optional) height.
+% #4 is (ignored optional) html alt text.
+% #5 is (ignored optional) extension.
+% #6 is just the usual extra ignored arg for parsing this stuff.
+\newif\ifimagevmode
+\def\imagexxx#1,#2,#3,#4,#5,#6\finish{\begingroup
+  \catcode`\^^M = 5     % in case we're inside an example
+  \normalturnoffactive  % allow _ et al. in names
+  % If the image is by itself, center it.
+  \ifvmode
+    \imagevmodetrue
+    \nobreak\medskip
+    % Usually we'll have text after the image which will insert
+    % \parskip glue, so insert it here too to equalize the space
+    % above and below.
+    \nobreak\vskip\parskip
+    \nobreak
+  \fi
+  %
+  % Leave vertical mode so that indentation from an enclosing
+  % environment such as @quotation is respected.  On the other hand, if
+  % it's at the top level, we don't want the normal paragraph indentation.
+  \noindent
+  %
+  % Output the image.
+  \ifpdf
+    \dopdfimage{#1}{#2}{#3}%
+  \else
+    % \epsfbox itself resets \epsf?size at each figure.
+    \setbox0 = \hbox{\ignorespaces #2}\ifdim\wd0 > 0pt \epsfxsize=#2\relax \fi
+    \setbox0 = \hbox{\ignorespaces #3}\ifdim\wd0 > 0pt \epsfysize=#3\relax \fi
+    \epsfbox{#1.eps}%
+  \fi
+  %
+  \ifimagevmode \medskip \fi  % space after the standalone image
+\endgroup}
+
+
+% @float FLOATTYPE,LABEL,LOC ... @end float for displayed figures, tables,
+% etc.  We don't actually implement floating yet, we always include the
+% float "here".  But it seemed the best name for the future.
+%
+\envparseargdef\float{\eatcommaspace\eatcommaspace\dofloat#1, , ,\finish}
+
+% There may be a space before second and/or third parameter; delete it.
+\def\eatcommaspace#1, {#1,}
+
+% #1 is the optional FLOATTYPE, the text label for this float, typically
+% "Figure", "Table", "Example", etc.  Can't contain commas.  If omitted,
+% this float will not be numbered and cannot be referred to.
+%
+% #2 is the optional xref label.  Also must be present for the float to
+% be referable.
+%
+% #3 is the optional positioning argument; for now, it is ignored.  It
+% will somehow specify the positions allowed to float to (here, top, bottom).
+%
+% We keep a separate counter for each FLOATTYPE, which we reset at each
+% chapter-level command.
+\let\resetallfloatnos=\empty
+%
+\def\dofloat#1,#2,#3,#4\finish{%
+  \let\thiscaption=\empty
+  \let\thisshortcaption=\empty
+  %
+  % don't lose footnotes inside @float.
+  %
+  % BEWARE: when the floats start float, we have to issue warning whenever an
+  % insert appears inside a float which could possibly float. --kasal, 26may04
+  %
+  \startsavinginserts
+  %
+  % We can't be used inside a paragraph.
+  \par
+  %
+  \vtop\bgroup
+    \def\floattype{#1}%
+    \def\floatlabel{#2}%
+    \def\floatloc{#3}% we do nothing with this yet.
+    %
+    \ifx\floattype\empty
+      \let\safefloattype=\empty
+    \else
+      {%
+        % the floattype might have accents or other special characters,
+        % but we need to use it in a control sequence name.
+        \indexnofonts
+        \turnoffactive
+        \xdef\safefloattype{\floattype}%
+      }%
+    \fi
+    %
+    % If label is given but no type, we handle that as the empty type.
+    \ifx\floatlabel\empty \else
+      % We want each FLOATTYPE to be numbered separately (Figure 1,
+      % Table 1, Figure 2, ...).  (And if no label, no number.)
+      %
+      \expandafter\getfloatno\csname\safefloattype floatno\endcsname
+      \global\advance\floatno by 1
+      %
+      {%
+        % This magic value for \lastsection is output by \setref as the
+        % XREFLABEL-title value.  \xrefX uses it to distinguish float
+        % labels (which have a completely different output format) from
+        % node and anchor labels.  And \xrdef uses it to construct the
+        % lists of floats.
+        %
+        \edef\lastsection{\floatmagic=\safefloattype}%
+        \setref{\floatlabel}{Yfloat}%
+      }%
+    \fi
+    %
+    % start with \parskip glue, I guess.
+    \vskip\parskip
+    %
+    % Don't suppress indentation if a float happens to start a section.
+    \restorefirstparagraphindent
+}
+
+% we have these possibilities:
+% @float Foo,lbl & @caption{Cap}: Foo 1.1: Cap
+% @float Foo,lbl & no caption:    Foo 1.1
+% @float Foo & @caption{Cap}:     Foo: Cap
+% @float Foo & no caption:        Foo
+% @float ,lbl & Caption{Cap}:     1.1: Cap
+% @float ,lbl & no caption:       1.1
+% @float & @caption{Cap}:         Cap
+% @float & no caption:
+%
+\def\Efloat{%
+    \let\floatident = \empty
+    %
+    % In all cases, if we have a float type, it comes first.
+    \ifx\floattype\empty \else \def\floatident{\floattype}\fi
+    %
+    % If we have an xref label, the number comes next.
+    \ifx\floatlabel\empty \else
+      \ifx\floattype\empty \else % if also had float type, need tie first.
+        \appendtomacro\floatident{\tie}%
+      \fi
+      % the number.
+      \appendtomacro\floatident{\chaplevelprefix\the\floatno}%
+    \fi
+    %
+    % Start the printed caption with what we've constructed in
+    % \floatident, but keep it separate; we need \floatident again.
+    \let\captionline = \floatident
+    %
+    \ifx\thiscaption\empty \else
+      \ifx\floatident\empty \else
+	\appendtomacro\captionline{: }% had ident, so need a colon between
+      \fi
+      %
+      % caption text.
+      \appendtomacro\captionline{\scanexp\thiscaption}%
+    \fi
+    %
+    % If we have anything to print, print it, with space before.
+    % Eventually this needs to become an \insert.
+    \ifx\captionline\empty \else
+      \vskip.5\parskip
+      \captionline
+      %
+      % Space below caption.
+      \vskip\parskip
+    \fi
+    %
+    % If have an xref label, write the list of floats info.  Do this
+    % after the caption, to avoid chance of it being a breakpoint.
+    \ifx\floatlabel\empty \else
+      % Write the text that goes in the lof to the aux file as
+      % \floatlabel-lof.  Besides \floatident, we include the short
+      % caption if specified, else the full caption if specified, else nothing.
+      {%
+        \atdummies
+        %
+        % since we read the caption text in the macro world, where ^^M
+        % is turned into a normal character, we have to scan it back, so
+        % we don't write the literal three characters "^^M" into the aux file.
+	\scanexp{%
+	  \xdef\noexpand\gtemp{%
+	    \ifx\thisshortcaption\empty
+	      \thiscaption
+	    \else
+	      \thisshortcaption
+	    \fi
+	  }%
+	}%
+        \immediate\write\auxfile{@xrdef{\floatlabel-lof}{\floatident
+	  \ifx\gtemp\empty \else : \gtemp \fi}}%
+      }%
+    \fi
+  \egroup  % end of \vtop
+  %
+  % place the captured inserts
+  %
+  % BEWARE: when the floats start floating, we have to issue warning
+  % whenever an insert appears inside a float which could possibly
+  % float. --kasal, 26may04
+  %
+  \checkinserts
+}
+
+% Append the tokens #2 to the definition of macro #1, not expanding either.
+%
+\def\appendtomacro#1#2{%
+  \expandafter\def\expandafter#1\expandafter{#1#2}%
+}
+
+% @caption, @shortcaption
+%
+\def\caption{\docaption\thiscaption}
+\def\shortcaption{\docaption\thisshortcaption}
+\def\docaption{\checkenv\float \bgroup\scanargctxt\defcaption}
+\def\defcaption#1#2{\egroup \def#1{#2}}
+
+% The parameter is the control sequence identifying the counter we are
+% going to use.  Create it if it doesn't exist and assign it to \floatno.
+\def\getfloatno#1{%
+  \ifx#1\relax
+      % Haven't seen this figure type before.
+      \csname newcount\endcsname #1%
+      %
+      % Remember to reset this floatno at the next chap.
+      \expandafter\gdef\expandafter\resetallfloatnos
+        \expandafter{\resetallfloatnos #1=0 }%
+  \fi
+  \let\floatno#1%
+}
+
+% \setref calls this to get the XREFLABEL-snt value.  We want an @xref
+% to the FLOATLABEL to expand to "Figure 3.1".  We call \setref when we
+% first read the @float command.
+%
+\def\Yfloat{\floattype@tie \chaplevelprefix\the\floatno}%
+
+% Magic string used for the XREFLABEL-title value, so \xrefX can
+% distinguish floats from other xref types.
+\def\floatmagic{!!float!!}
+
+% #1 is the control sequence we are passed; we expand into a conditional
+% which is true if #1 represents a float ref.  That is, the magic
+% \lastsection value which we \setref above.
+%
+\def\iffloat#1{\expandafter\doiffloat#1==\finish}
+%
+% #1 is (maybe) the \floatmagic string.  If so, #2 will be the
+% (safe) float type for this float.  We set \iffloattype to #2.
+%
+\def\doiffloat#1=#2=#3\finish{%
+  \def\temp{#1}%
+  \def\iffloattype{#2}%
+  \ifx\temp\floatmagic
+}
+
+% @listoffloats FLOATTYPE - print a list of floats like a table of contents.
+%
+\parseargdef\listoffloats{%
+  \def\floattype{#1}% floattype
+  {%
+    % the floattype might have accents or other special characters,
+    % but we need to use it in a control sequence name.
+    \indexnofonts
+    \turnoffactive
+    \xdef\safefloattype{\floattype}%
+  }%
+  %
+  % \xrdef saves the floats as a \do-list in \floatlistSAFEFLOATTYPE.
+  \expandafter\ifx\csname floatlist\safefloattype\endcsname \relax
+    \ifhavexrefs
+      % if the user said @listoffloats foo but never @float foo.
+      \message{\linenumber No `\safefloattype' floats to list.}%
+    \fi
+  \else
+    \begingroup
+      \leftskip=\tocindent  % indent these entries like a toc
+      \let\do=\listoffloatsdo
+      \csname floatlist\safefloattype\endcsname
+    \endgroup
+  \fi
+}
+
+% This is called on each entry in a list of floats.  We're passed the
+% xref label, in the form LABEL-title, which is how we save it in the
+% aux file.  We strip off the -title and look up \XRLABEL-lof, which
+% has the text we're supposed to typeset here.
+%
+% Figures without xref labels will not be included in the list (since
+% they won't appear in the aux file).
+%
+\def\listoffloatsdo#1{\listoffloatsdoentry#1\finish}
+\def\listoffloatsdoentry#1-title\finish{{%
+  % Can't fully expand XR#1-lof because it can contain anything.  Just
+  % pass the control sequence.  On the other hand, XR#1-pg is just the
+  % page number, and we want to fully expand that so we can get a link
+  % in pdf output.
+  \toksA = \expandafter{\csname XR#1-lof\endcsname}%
+  %
+  % use the same \entry macro we use to generate the TOC and index.
+  \edef\writeentry{\noexpand\entry{\the\toksA}{\csname XR#1-pg\endcsname}}%
+  \writeentry
+}}
+
+
+\message{localization,}
+
+% For single-language documents, @documentlanguage is usually given very
+% early, just after @documentencoding.  Single argument is the language
+% (de) or locale (de_DE) abbreviation.
+%
+{
+  \catcode`\_ = \active
+  \globaldefs=1
+\parseargdef\documentlanguage{\begingroup
+  \let_=\normalunderscore  % normal _ character for filenames
+  \tex % read txi-??.tex file in plain TeX.
+    % Read the file by the name they passed if it exists.
+    \openin 1 txi-#1.tex
+    \ifeof 1
+      \documentlanguagetrywithoutunderscore{#1_\finish}%
+    \else
+      \globaldefs = 1  % everything in the txi-LL files needs to persist
+      \input txi-#1.tex
+    \fi
+    \closein 1
+  \endgroup % end raw TeX
+\endgroup}
+%
+% If they passed de_DE, and txi-de_DE.tex doesn't exist,
+% try txi-de.tex.
+%
+\gdef\documentlanguagetrywithoutunderscore#1_#2\finish{%
+  \openin 1 txi-#1.tex
+  \ifeof 1
+    \errhelp = \nolanghelp
+    \errmessage{Cannot read language file txi-#1.tex}%
+  \else
+    \globaldefs = 1  % everything in the txi-LL files needs to persist
+    \input txi-#1.tex
+  \fi
+  \closein 1
+}
+}% end of special _ catcode
+%
+\newhelp\nolanghelp{The given language definition file cannot be found or
+is empty.  Maybe you need to install it?  Putting it in the current
+directory should work if nowhere else does.}
+
+% This macro is called from txi-??.tex files; the first argument is the
+% \language name to set (without the "\lang@" prefix), the second and
+% third args are \{left,right}hyphenmin.
+%
+% The language names to pass are determined when the format is built.
+% See the etex.log file created at that time, e.g.,
+% /usr/local/texlive/2008/texmf-var/web2c/pdftex/etex.log.
+%
+% With TeX Live 2008, etex now includes hyphenation patterns for all
+% available languages.  This means we can support hyphenation in
+% Texinfo, at least to some extent.  (This still doesn't solve the
+% accented characters problem.)
+%
+\catcode`@=11
+\def\txisetlanguage#1#2#3{%
+  % do not set the language if the name is undefined in the current TeX.
+  \expandafter\ifx\csname lang@#1\endcsname \relax
+    \message{no patterns for #1}%
+  \else
+    \global\language = \csname lang@#1\endcsname
+  \fi
+  % but there is no harm in adjusting the hyphenmin values regardless.
+  \global\lefthyphenmin = #2\relax
+  \global\righthyphenmin = #3\relax
+}
+
+% Helpers for encodings.
+% Set the catcode of characters 128 through 255 to the specified number.
+%
+\def\setnonasciicharscatcode#1{%
+   \count255=128
+   \loop\ifnum\count255<256
+      \global\catcode\count255=#1\relax
+      \advance\count255 by 1
+   \repeat
+}
+
+\def\setnonasciicharscatcodenonglobal#1{%
+   \count255=128
+   \loop\ifnum\count255<256
+      \catcode\count255=#1\relax
+      \advance\count255 by 1
+   \repeat
+}
+
+% @documentencoding sets the definition of non-ASCII characters
+% according to the specified encoding.
+%
+\parseargdef\documentencoding{%
+  % Encoding being declared for the document.
+  \def\declaredencoding{\csname #1.enc\endcsname}%
+  %
+  % Supported encodings: names converted to tokens in order to be able
+  % to compare them with \ifx.
+  \def\ascii{\csname US-ASCII.enc\endcsname}%
+  \def\latnine{\csname ISO-8859-15.enc\endcsname}%
+  \def\latone{\csname ISO-8859-1.enc\endcsname}%
+  \def\lattwo{\csname ISO-8859-2.enc\endcsname}%
+  \def\utfeight{\csname UTF-8.enc\endcsname}%
+  %
+  \ifx \declaredencoding \ascii
+     \asciichardefs
+  %
+  \else \ifx \declaredencoding \lattwo
+     \setnonasciicharscatcode\active
+     \lattwochardefs
+  %
+  \else \ifx \declaredencoding \latone
+     \setnonasciicharscatcode\active
+     \latonechardefs
+  %
+  \else \ifx \declaredencoding \latnine
+     \setnonasciicharscatcode\active
+     \latninechardefs
+  %
+  \else \ifx \declaredencoding \utfeight
+     \setnonasciicharscatcode\active
+     \utfeightchardefs
+  %
+  \else
+    \message{Unknown document encoding #1, ignoring.}%
+  %
+  \fi % utfeight
+  \fi % latnine
+  \fi % latone
+  \fi % lattwo
+  \fi % ascii
+}
+
+% A message to be logged when using a character that isn't available
+% the default font encoding (OT1).
+%
+\def\missingcharmsg#1{\message{Character missing in OT1 encoding: #1.}}
+
+% Take account of \c (plain) vs. \, (Texinfo) difference.
+\def\cedilla#1{\ifx\c\ptexc\c{#1}\else\,{#1}\fi}
+
+% First, make active non-ASCII characters in order for them to be
+% correctly categorized when TeX reads the replacement text of
+% macros containing the character definitions.
+\setnonasciicharscatcode\active
+%
+% Latin1 (ISO-8859-1) character definitions.
+\def\latonechardefs{%
+  \gdef^^a0{~}
+  \gdef^^a1{\exclamdown}
+  \gdef^^a2{\missingcharmsg{CENT SIGN}}
+  \gdef^^a3{{\pounds}}
+  \gdef^^a4{\missingcharmsg{CURRENCY SIGN}}
+  \gdef^^a5{\missingcharmsg{YEN SIGN}}
+  \gdef^^a6{\missingcharmsg{BROKEN BAR}}
+  \gdef^^a7{\S}
+  \gdef^^a8{\"{}}
+  \gdef^^a9{\copyright}
+  \gdef^^aa{\ordf}
+  \gdef^^ab{\guillemetleft}
+  \gdef^^ac{$\lnot$}
+  \gdef^^ad{\-}
+  \gdef^^ae{\registeredsymbol}
+  \gdef^^af{\={}}
+  %
+  \gdef^^b0{\textdegree}
+  \gdef^^b1{$\pm$}
+  \gdef^^b2{$^2$}
+  \gdef^^b3{$^3$}
+  \gdef^^b4{\'{}}
+  \gdef^^b5{$\mu$}
+  \gdef^^b6{\P}
+  %
+  \gdef^^b7{$^.$}
+  \gdef^^b8{\cedilla\ }
+  \gdef^^b9{$^1$}
+  \gdef^^ba{\ordm}
+  %
+  \gdef^^bb{\guilletright}
+  \gdef^^bc{$1\over4$}
+  \gdef^^bd{$1\over2$}
+  \gdef^^be{$3\over4$}
+  \gdef^^bf{\questiondown}
+  %
+  \gdef^^c0{\`A}
+  \gdef^^c1{\'A}
+  \gdef^^c2{\^A}
+  \gdef^^c3{\~A}
+  \gdef^^c4{\"A}
+  \gdef^^c5{\ringaccent A}
+  \gdef^^c6{\AE}
+  \gdef^^c7{\cedilla C}
+  \gdef^^c8{\`E}
+  \gdef^^c9{\'E}
+  \gdef^^ca{\^E}
+  \gdef^^cb{\"E}
+  \gdef^^cc{\`I}
+  \gdef^^cd{\'I}
+  \gdef^^ce{\^I}
+  \gdef^^cf{\"I}
+  %
+  \gdef^^d0{\DH}
+  \gdef^^d1{\~N}
+  \gdef^^d2{\`O}
+  \gdef^^d3{\'O}
+  \gdef^^d4{\^O}
+  \gdef^^d5{\~O}
+  \gdef^^d6{\"O}
+  \gdef^^d7{$\times$}
+  \gdef^^d8{\O}
+  \gdef^^d9{\`U}
+  \gdef^^da{\'U}
+  \gdef^^db{\^U}
+  \gdef^^dc{\"U}
+  \gdef^^dd{\'Y}
+  \gdef^^de{\TH}
+  \gdef^^df{\ss}
+  %
+  \gdef^^e0{\`a}
+  \gdef^^e1{\'a}
+  \gdef^^e2{\^a}
+  \gdef^^e3{\~a}
+  \gdef^^e4{\"a}
+  \gdef^^e5{\ringaccent a}
+  \gdef^^e6{\ae}
+  \gdef^^e7{\cedilla c}
+  \gdef^^e8{\`e}
+  \gdef^^e9{\'e}
+  \gdef^^ea{\^e}
+  \gdef^^eb{\"e}
+  \gdef^^ec{\`{\dotless i}}
+  \gdef^^ed{\'{\dotless i}}
+  \gdef^^ee{\^{\dotless i}}
+  \gdef^^ef{\"{\dotless i}}
+  %
+  \gdef^^f0{\dh}
+  \gdef^^f1{\~n}
+  \gdef^^f2{\`o}
+  \gdef^^f3{\'o}
+  \gdef^^f4{\^o}
+  \gdef^^f5{\~o}
+  \gdef^^f6{\"o}
+  \gdef^^f7{$\div$}
+  \gdef^^f8{\o}
+  \gdef^^f9{\`u}
+  \gdef^^fa{\'u}
+  \gdef^^fb{\^u}
+  \gdef^^fc{\"u}
+  \gdef^^fd{\'y}
+  \gdef^^fe{\th}
+  \gdef^^ff{\"y}
+}
+
+% Latin9 (ISO-8859-15) encoding character definitions.
+\def\latninechardefs{%
+  % Encoding is almost identical to Latin1.
+  \latonechardefs
+  %
+  \gdef^^a4{\euro}
+  \gdef^^a6{\v S}
+  \gdef^^a8{\v s}
+  \gdef^^b4{\v Z}
+  \gdef^^b8{\v z}
+  \gdef^^bc{\OE}
+  \gdef^^bd{\oe}
+  \gdef^^be{\"Y}
+}
+
+% Latin2 (ISO-8859-2) character definitions.
+\def\lattwochardefs{%
+  \gdef^^a0{~}
+  \gdef^^a1{\ogonek{A}}
+  \gdef^^a2{\u{}}
+  \gdef^^a3{\L}
+  \gdef^^a4{\missingcharmsg{CURRENCY SIGN}}
+  \gdef^^a5{\v L}
+  \gdef^^a6{\'S}
+  \gdef^^a7{\S}
+  \gdef^^a8{\"{}}
+  \gdef^^a9{\v S}
+  \gdef^^aa{\cedilla S}
+  \gdef^^ab{\v T}
+  \gdef^^ac{\'Z}
+  \gdef^^ad{\-}
+  \gdef^^ae{\v Z}
+  \gdef^^af{\dotaccent Z}
+  %
+  \gdef^^b0{\textdegree}
+  \gdef^^b1{\ogonek{a}}
+  \gdef^^b2{\ogonek{ }}
+  \gdef^^b3{\l}
+  \gdef^^b4{\'{}}
+  \gdef^^b5{\v l}
+  \gdef^^b6{\'s}
+  \gdef^^b7{\v{}}
+  \gdef^^b8{\cedilla\ }
+  \gdef^^b9{\v s}
+  \gdef^^ba{\cedilla s}
+  \gdef^^bb{\v t}
+  \gdef^^bc{\'z}
+  \gdef^^bd{\H{}}
+  \gdef^^be{\v z}
+  \gdef^^bf{\dotaccent z}
+  %
+  \gdef^^c0{\'R}
+  \gdef^^c1{\'A}
+  \gdef^^c2{\^A}
+  \gdef^^c3{\u A}
+  \gdef^^c4{\"A}
+  \gdef^^c5{\'L}
+  \gdef^^c6{\'C}
+  \gdef^^c7{\cedilla C}
+  \gdef^^c8{\v C}
+  \gdef^^c9{\'E}
+  \gdef^^ca{\ogonek{E}}
+  \gdef^^cb{\"E}
+  \gdef^^cc{\v E}
+  \gdef^^cd{\'I}
+  \gdef^^ce{\^I}
+  \gdef^^cf{\v D}
+  %
+  \gdef^^d0{\DH}
+  \gdef^^d1{\'N}
+  \gdef^^d2{\v N}
+  \gdef^^d3{\'O}
+  \gdef^^d4{\^O}
+  \gdef^^d5{\H O}
+  \gdef^^d6{\"O}
+  \gdef^^d7{$\times$}
+  \gdef^^d8{\v R}
+  \gdef^^d9{\ringaccent U}
+  \gdef^^da{\'U}
+  \gdef^^db{\H U}
+  \gdef^^dc{\"U}
+  \gdef^^dd{\'Y}
+  \gdef^^de{\cedilla T}
+  \gdef^^df{\ss}
+  %
+  \gdef^^e0{\'r}
+  \gdef^^e1{\'a}
+  \gdef^^e2{\^a}
+  \gdef^^e3{\u a}
+  \gdef^^e4{\"a}
+  \gdef^^e5{\'l}
+  \gdef^^e6{\'c}
+  \gdef^^e7{\cedilla c}
+  \gdef^^e8{\v c}
+  \gdef^^e9{\'e}
+  \gdef^^ea{\ogonek{e}}
+  \gdef^^eb{\"e}
+  \gdef^^ec{\v e}
+  \gdef^^ed{\'\i}
+  \gdef^^ee{\^\i}
+  \gdef^^ef{\v d}
+  %
+  \gdef^^f0{\dh}
+  \gdef^^f1{\'n}
+  \gdef^^f2{\v n}
+  \gdef^^f3{\'o}
+  \gdef^^f4{\^o}
+  \gdef^^f5{\H o}
+  \gdef^^f6{\"o}
+  \gdef^^f7{$\div$}
+  \gdef^^f8{\v r}
+  \gdef^^f9{\ringaccent u}
+  \gdef^^fa{\'u}
+  \gdef^^fb{\H u}
+  \gdef^^fc{\"u}
+  \gdef^^fd{\'y}
+  \gdef^^fe{\cedilla t}
+  \gdef^^ff{\dotaccent{}}
+}
+
+% UTF-8 character definitions.
+%
+% This code to support UTF-8 is based on LaTeX's utf8.def, with some
+% changes for Texinfo conventions.  It is included here under the GPL by
+% permission from Frank Mittelbach and the LaTeX team.
+%
+\newcount\countUTFx
+\newcount\countUTFy
+\newcount\countUTFz
+
+\gdef\UTFviiiTwoOctets#1#2{\expandafter
+   \UTFviiiDefined\csname u8:#1\string #2\endcsname}
+%
+\gdef\UTFviiiThreeOctets#1#2#3{\expandafter
+   \UTFviiiDefined\csname u8:#1\string #2\string #3\endcsname}
+%
+\gdef\UTFviiiFourOctets#1#2#3#4{\expandafter
+   \UTFviiiDefined\csname u8:#1\string #2\string #3\string #4\endcsname}
+
+\gdef\UTFviiiDefined#1{%
+  \ifx #1\relax
+    \message{\linenumber Unicode char \string #1 not defined for Texinfo}%
+  \else
+    \expandafter #1%
+  \fi
+}
+
+\begingroup
+  \catcode`\~13
+  \catcode`\"12
+
+  \def\UTFviiiLoop{%
+    \global\catcode\countUTFx\active
+    \uccode`\~\countUTFx
+    \uppercase\expandafter{\UTFviiiTmp}%
+    \advance\countUTFx by 1
+    \ifnum\countUTFx < \countUTFy
+      \expandafter\UTFviiiLoop
+    \fi}
+
+  \countUTFx = "C2
+  \countUTFy = "E0
+  \def\UTFviiiTmp{%
+    \xdef~{\noexpand\UTFviiiTwoOctets\string~}}
+  \UTFviiiLoop
+
+  \countUTFx = "E0
+  \countUTFy = "F0
+  \def\UTFviiiTmp{%
+    \xdef~{\noexpand\UTFviiiThreeOctets\string~}}
+  \UTFviiiLoop
+
+  \countUTFx = "F0
+  \countUTFy = "F4
+  \def\UTFviiiTmp{%
+    \xdef~{\noexpand\UTFviiiFourOctets\string~}}
+  \UTFviiiLoop
+\endgroup
+
+\begingroup
+  \catcode`\"=12
+  \catcode`\<=12
+  \catcode`\.=12
+  \catcode`\,=12
+  \catcode`\;=12
+  \catcode`\!=12
+  \catcode`\~=13
+
+  \gdef\DeclareUnicodeCharacter#1#2{%
+    \countUTFz = "#1\relax
+    \wlog{\space\space defining Unicode char U+#1 (decimal \the\countUTFz)}%
+    \begingroup
+      \parseXMLCharref
+      \def\UTFviiiTwoOctets##1##2{%
+        \csname u8:##1\string ##2\endcsname}%
+      \def\UTFviiiThreeOctets##1##2##3{%
+        \csname u8:##1\string ##2\string ##3\endcsname}%
+      \def\UTFviiiFourOctets##1##2##3##4{%
+        \csname u8:##1\string ##2\string ##3\string ##4\endcsname}%
+      \expandafter\expandafter\expandafter\expandafter
+       \expandafter\expandafter\expandafter
+       \gdef\UTFviiiTmp{#2}%
+    \endgroup}
+
+  \gdef\parseXMLCharref{%
+    \ifnum\countUTFz < "A0\relax
+      \errhelp = \EMsimple
+      \errmessage{Cannot define Unicode char value < 00A0}%
+    \else\ifnum\countUTFz < "800\relax
+      \parseUTFviiiA,%
+      \parseUTFviiiB C\UTFviiiTwoOctets.,%
+    \else\ifnum\countUTFz < "10000\relax
+      \parseUTFviiiA;%
+      \parseUTFviiiA,%
+      \parseUTFviiiB E\UTFviiiThreeOctets.{,;}%
+    \else
+      \parseUTFviiiA;%
+      \parseUTFviiiA,%
+      \parseUTFviiiA!%
+      \parseUTFviiiB F\UTFviiiFourOctets.{!,;}%
+    \fi\fi\fi
+  }
+
+  \gdef\parseUTFviiiA#1{%
+    \countUTFx = \countUTFz
+    \divide\countUTFz by 64
+    \countUTFy = \countUTFz
+    \multiply\countUTFz by 64
+    \advance\countUTFx by -\countUTFz
+    \advance\countUTFx by 128
+    \uccode `#1\countUTFx
+    \countUTFz = \countUTFy}
+
+  \gdef\parseUTFviiiB#1#2#3#4{%
+    \advance\countUTFz by "#10\relax
+    \uccode `#3\countUTFz
+    \uppercase{\gdef\UTFviiiTmp{#2#3#4}}}
+\endgroup
+
+\def\utfeightchardefs{%
+  \DeclareUnicodeCharacter{00A0}{\tie}
+  \DeclareUnicodeCharacter{00A1}{\exclamdown}
+  \DeclareUnicodeCharacter{00A3}{\pounds}
+  \DeclareUnicodeCharacter{00A8}{\"{ }}
+  \DeclareUnicodeCharacter{00A9}{\copyright}
+  \DeclareUnicodeCharacter{00AA}{\ordf}
+  \DeclareUnicodeCharacter{00AB}{\guillemetleft}
+  \DeclareUnicodeCharacter{00AD}{\-}
+  \DeclareUnicodeCharacter{00AE}{\registeredsymbol}
+  \DeclareUnicodeCharacter{00AF}{\={ }}
+
+  \DeclareUnicodeCharacter{00B0}{\ringaccent{ }}
+  \DeclareUnicodeCharacter{00B4}{\'{ }}
+  \DeclareUnicodeCharacter{00B8}{\cedilla{ }}
+  \DeclareUnicodeCharacter{00BA}{\ordm}
+  \DeclareUnicodeCharacter{00BB}{\guillemetright}
+  \DeclareUnicodeCharacter{00BF}{\questiondown}
+
+  \DeclareUnicodeCharacter{00C0}{\`A}
+  \DeclareUnicodeCharacter{00C1}{\'A}
+  \DeclareUnicodeCharacter{00C2}{\^A}
+  \DeclareUnicodeCharacter{00C3}{\~A}
+  \DeclareUnicodeCharacter{00C4}{\"A}
+  \DeclareUnicodeCharacter{00C5}{\AA}
+  \DeclareUnicodeCharacter{00C6}{\AE}
+  \DeclareUnicodeCharacter{00C7}{\cedilla{C}}
+  \DeclareUnicodeCharacter{00C8}{\`E}
+  \DeclareUnicodeCharacter{00C9}{\'E}
+  \DeclareUnicodeCharacter{00CA}{\^E}
+  \DeclareUnicodeCharacter{00CB}{\"E}
+  \DeclareUnicodeCharacter{00CC}{\`I}
+  \DeclareUnicodeCharacter{00CD}{\'I}
+  \DeclareUnicodeCharacter{00CE}{\^I}
+  \DeclareUnicodeCharacter{00CF}{\"I}
+
+  \DeclareUnicodeCharacter{00D0}{\DH}
+  \DeclareUnicodeCharacter{00D1}{\~N}
+  \DeclareUnicodeCharacter{00D2}{\`O}
+  \DeclareUnicodeCharacter{00D3}{\'O}
+  \DeclareUnicodeCharacter{00D4}{\^O}
+  \DeclareUnicodeCharacter{00D5}{\~O}
+  \DeclareUnicodeCharacter{00D6}{\"O}
+  \DeclareUnicodeCharacter{00D8}{\O}
+  \DeclareUnicodeCharacter{00D9}{\`U}
+  \DeclareUnicodeCharacter{00DA}{\'U}
+  \DeclareUnicodeCharacter{00DB}{\^U}
+  \DeclareUnicodeCharacter{00DC}{\"U}
+  \DeclareUnicodeCharacter{00DD}{\'Y}
+  \DeclareUnicodeCharacter{00DE}{\TH}
+  \DeclareUnicodeCharacter{00DF}{\ss}
+
+  \DeclareUnicodeCharacter{00E0}{\`a}
+  \DeclareUnicodeCharacter{00E1}{\'a}
+  \DeclareUnicodeCharacter{00E2}{\^a}
+  \DeclareUnicodeCharacter{00E3}{\~a}
+  \DeclareUnicodeCharacter{00E4}{\"a}
+  \DeclareUnicodeCharacter{00E5}{\aa}
+  \DeclareUnicodeCharacter{00E6}{\ae}
+  \DeclareUnicodeCharacter{00E7}{\cedilla{c}}
+  \DeclareUnicodeCharacter{00E8}{\`e}
+  \DeclareUnicodeCharacter{00E9}{\'e}
+  \DeclareUnicodeCharacter{00EA}{\^e}
+  \DeclareUnicodeCharacter{00EB}{\"e}
+  \DeclareUnicodeCharacter{00EC}{\`{\dotless{i}}}
+  \DeclareUnicodeCharacter{00ED}{\'{\dotless{i}}}
+  \DeclareUnicodeCharacter{00EE}{\^{\dotless{i}}}
+  \DeclareUnicodeCharacter{00EF}{\"{\dotless{i}}}
+
+  \DeclareUnicodeCharacter{00F0}{\dh}
+  \DeclareUnicodeCharacter{00F1}{\~n}
+  \DeclareUnicodeCharacter{00F2}{\`o}
+  \DeclareUnicodeCharacter{00F3}{\'o}
+  \DeclareUnicodeCharacter{00F4}{\^o}
+  \DeclareUnicodeCharacter{00F5}{\~o}
+  \DeclareUnicodeCharacter{00F6}{\"o}
+  \DeclareUnicodeCharacter{00F8}{\o}
+  \DeclareUnicodeCharacter{00F9}{\`u}
+  \DeclareUnicodeCharacter{00FA}{\'u}
+  \DeclareUnicodeCharacter{00FB}{\^u}
+  \DeclareUnicodeCharacter{00FC}{\"u}
+  \DeclareUnicodeCharacter{00FD}{\'y}
+  \DeclareUnicodeCharacter{00FE}{\th}
+  \DeclareUnicodeCharacter{00FF}{\"y}
+
+  \DeclareUnicodeCharacter{0100}{\=A}
+  \DeclareUnicodeCharacter{0101}{\=a}
+  \DeclareUnicodeCharacter{0102}{\u{A}}
+  \DeclareUnicodeCharacter{0103}{\u{a}}
+  \DeclareUnicodeCharacter{0104}{\ogonek{A}}
+  \DeclareUnicodeCharacter{0105}{\ogonek{a}}
+  \DeclareUnicodeCharacter{0106}{\'C}
+  \DeclareUnicodeCharacter{0107}{\'c}
+  \DeclareUnicodeCharacter{0108}{\^C}
+  \DeclareUnicodeCharacter{0109}{\^c}
+  \DeclareUnicodeCharacter{0118}{\ogonek{E}}
+  \DeclareUnicodeCharacter{0119}{\ogonek{e}}
+  \DeclareUnicodeCharacter{010A}{\dotaccent{C}}
+  \DeclareUnicodeCharacter{010B}{\dotaccent{c}}
+  \DeclareUnicodeCharacter{010C}{\v{C}}
+  \DeclareUnicodeCharacter{010D}{\v{c}}
+  \DeclareUnicodeCharacter{010E}{\v{D}}
+
+  \DeclareUnicodeCharacter{0112}{\=E}
+  \DeclareUnicodeCharacter{0113}{\=e}
+  \DeclareUnicodeCharacter{0114}{\u{E}}
+  \DeclareUnicodeCharacter{0115}{\u{e}}
+  \DeclareUnicodeCharacter{0116}{\dotaccent{E}}
+  \DeclareUnicodeCharacter{0117}{\dotaccent{e}}
+  \DeclareUnicodeCharacter{011A}{\v{E}}
+  \DeclareUnicodeCharacter{011B}{\v{e}}
+  \DeclareUnicodeCharacter{011C}{\^G}
+  \DeclareUnicodeCharacter{011D}{\^g}
+  \DeclareUnicodeCharacter{011E}{\u{G}}
+  \DeclareUnicodeCharacter{011F}{\u{g}}
+
+  \DeclareUnicodeCharacter{0120}{\dotaccent{G}}
+  \DeclareUnicodeCharacter{0121}{\dotaccent{g}}
+  \DeclareUnicodeCharacter{0124}{\^H}
+  \DeclareUnicodeCharacter{0125}{\^h}
+  \DeclareUnicodeCharacter{0128}{\~I}
+  \DeclareUnicodeCharacter{0129}{\~{\dotless{i}}}
+  \DeclareUnicodeCharacter{012A}{\=I}
+  \DeclareUnicodeCharacter{012B}{\={\dotless{i}}}
+  \DeclareUnicodeCharacter{012C}{\u{I}}
+  \DeclareUnicodeCharacter{012D}{\u{\dotless{i}}}
+
+  \DeclareUnicodeCharacter{0130}{\dotaccent{I}}
+  \DeclareUnicodeCharacter{0131}{\dotless{i}}
+  \DeclareUnicodeCharacter{0132}{IJ}
+  \DeclareUnicodeCharacter{0133}{ij}
+  \DeclareUnicodeCharacter{0134}{\^J}
+  \DeclareUnicodeCharacter{0135}{\^{\dotless{j}}}
+  \DeclareUnicodeCharacter{0139}{\'L}
+  \DeclareUnicodeCharacter{013A}{\'l}
+
+  \DeclareUnicodeCharacter{0141}{\L}
+  \DeclareUnicodeCharacter{0142}{\l}
+  \DeclareUnicodeCharacter{0143}{\'N}
+  \DeclareUnicodeCharacter{0144}{\'n}
+  \DeclareUnicodeCharacter{0147}{\v{N}}
+  \DeclareUnicodeCharacter{0148}{\v{n}}
+  \DeclareUnicodeCharacter{014C}{\=O}
+  \DeclareUnicodeCharacter{014D}{\=o}
+  \DeclareUnicodeCharacter{014E}{\u{O}}
+  \DeclareUnicodeCharacter{014F}{\u{o}}
+
+  \DeclareUnicodeCharacter{0150}{\H{O}}
+  \DeclareUnicodeCharacter{0151}{\H{o}}
+  \DeclareUnicodeCharacter{0152}{\OE}
+  \DeclareUnicodeCharacter{0153}{\oe}
+  \DeclareUnicodeCharacter{0154}{\'R}
+  \DeclareUnicodeCharacter{0155}{\'r}
+  \DeclareUnicodeCharacter{0158}{\v{R}}
+  \DeclareUnicodeCharacter{0159}{\v{r}}
+  \DeclareUnicodeCharacter{015A}{\'S}
+  \DeclareUnicodeCharacter{015B}{\'s}
+  \DeclareUnicodeCharacter{015C}{\^S}
+  \DeclareUnicodeCharacter{015D}{\^s}
+  \DeclareUnicodeCharacter{015E}{\cedilla{S}}
+  \DeclareUnicodeCharacter{015F}{\cedilla{s}}
+
+  \DeclareUnicodeCharacter{0160}{\v{S}}
+  \DeclareUnicodeCharacter{0161}{\v{s}}
+  \DeclareUnicodeCharacter{0162}{\cedilla{t}}
+  \DeclareUnicodeCharacter{0163}{\cedilla{T}}
+  \DeclareUnicodeCharacter{0164}{\v{T}}
+
+  \DeclareUnicodeCharacter{0168}{\~U}
+  \DeclareUnicodeCharacter{0169}{\~u}
+  \DeclareUnicodeCharacter{016A}{\=U}
+  \DeclareUnicodeCharacter{016B}{\=u}
+  \DeclareUnicodeCharacter{016C}{\u{U}}
+  \DeclareUnicodeCharacter{016D}{\u{u}}
+  \DeclareUnicodeCharacter{016E}{\ringaccent{U}}
+  \DeclareUnicodeCharacter{016F}{\ringaccent{u}}
+
+  \DeclareUnicodeCharacter{0170}{\H{U}}
+  \DeclareUnicodeCharacter{0171}{\H{u}}
+  \DeclareUnicodeCharacter{0174}{\^W}
+  \DeclareUnicodeCharacter{0175}{\^w}
+  \DeclareUnicodeCharacter{0176}{\^Y}
+  \DeclareUnicodeCharacter{0177}{\^y}
+  \DeclareUnicodeCharacter{0178}{\"Y}
+  \DeclareUnicodeCharacter{0179}{\'Z}
+  \DeclareUnicodeCharacter{017A}{\'z}
+  \DeclareUnicodeCharacter{017B}{\dotaccent{Z}}
+  \DeclareUnicodeCharacter{017C}{\dotaccent{z}}
+  \DeclareUnicodeCharacter{017D}{\v{Z}}
+  \DeclareUnicodeCharacter{017E}{\v{z}}
+
+  \DeclareUnicodeCharacter{01C4}{D\v{Z}}
+  \DeclareUnicodeCharacter{01C5}{D\v{z}}
+  \DeclareUnicodeCharacter{01C6}{d\v{z}}
+  \DeclareUnicodeCharacter{01C7}{LJ}
+  \DeclareUnicodeCharacter{01C8}{Lj}
+  \DeclareUnicodeCharacter{01C9}{lj}
+  \DeclareUnicodeCharacter{01CA}{NJ}
+  \DeclareUnicodeCharacter{01CB}{Nj}
+  \DeclareUnicodeCharacter{01CC}{nj}
+  \DeclareUnicodeCharacter{01CD}{\v{A}}
+  \DeclareUnicodeCharacter{01CE}{\v{a}}
+  \DeclareUnicodeCharacter{01CF}{\v{I}}
+
+  \DeclareUnicodeCharacter{01D0}{\v{\dotless{i}}}
+  \DeclareUnicodeCharacter{01D1}{\v{O}}
+  \DeclareUnicodeCharacter{01D2}{\v{o}}
+  \DeclareUnicodeCharacter{01D3}{\v{U}}
+  \DeclareUnicodeCharacter{01D4}{\v{u}}
+
+  \DeclareUnicodeCharacter{01E2}{\={\AE}}
+  \DeclareUnicodeCharacter{01E3}{\={\ae}}
+  \DeclareUnicodeCharacter{01E6}{\v{G}}
+  \DeclareUnicodeCharacter{01E7}{\v{g}}
+  \DeclareUnicodeCharacter{01E8}{\v{K}}
+  \DeclareUnicodeCharacter{01E9}{\v{k}}
+
+  \DeclareUnicodeCharacter{01F0}{\v{\dotless{j}}}
+  \DeclareUnicodeCharacter{01F1}{DZ}
+  \DeclareUnicodeCharacter{01F2}{Dz}
+  \DeclareUnicodeCharacter{01F3}{dz}
+  \DeclareUnicodeCharacter{01F4}{\'G}
+  \DeclareUnicodeCharacter{01F5}{\'g}
+  \DeclareUnicodeCharacter{01F8}{\`N}
+  \DeclareUnicodeCharacter{01F9}{\`n}
+  \DeclareUnicodeCharacter{01FC}{\'{\AE}}
+  \DeclareUnicodeCharacter{01FD}{\'{\ae}}
+  \DeclareUnicodeCharacter{01FE}{\'{\O}}
+  \DeclareUnicodeCharacter{01FF}{\'{\o}}
+
+  \DeclareUnicodeCharacter{021E}{\v{H}}
+  \DeclareUnicodeCharacter{021F}{\v{h}}
+
+  \DeclareUnicodeCharacter{0226}{\dotaccent{A}}
+  \DeclareUnicodeCharacter{0227}{\dotaccent{a}}
+  \DeclareUnicodeCharacter{0228}{\cedilla{E}}
+  \DeclareUnicodeCharacter{0229}{\cedilla{e}}
+  \DeclareUnicodeCharacter{022E}{\dotaccent{O}}
+  \DeclareUnicodeCharacter{022F}{\dotaccent{o}}
+
+  \DeclareUnicodeCharacter{0232}{\=Y}
+  \DeclareUnicodeCharacter{0233}{\=y}
+  \DeclareUnicodeCharacter{0237}{\dotless{j}}
+
+  \DeclareUnicodeCharacter{02DB}{\ogonek{ }}
+
+  \DeclareUnicodeCharacter{1E02}{\dotaccent{B}}
+  \DeclareUnicodeCharacter{1E03}{\dotaccent{b}}
+  \DeclareUnicodeCharacter{1E04}{\udotaccent{B}}
+  \DeclareUnicodeCharacter{1E05}{\udotaccent{b}}
+  \DeclareUnicodeCharacter{1E06}{\ubaraccent{B}}
+  \DeclareUnicodeCharacter{1E07}{\ubaraccent{b}}
+  \DeclareUnicodeCharacter{1E0A}{\dotaccent{D}}
+  \DeclareUnicodeCharacter{1E0B}{\dotaccent{d}}
+  \DeclareUnicodeCharacter{1E0C}{\udotaccent{D}}
+  \DeclareUnicodeCharacter{1E0D}{\udotaccent{d}}
+  \DeclareUnicodeCharacter{1E0E}{\ubaraccent{D}}
+  \DeclareUnicodeCharacter{1E0F}{\ubaraccent{d}}
+
+  \DeclareUnicodeCharacter{1E1E}{\dotaccent{F}}
+  \DeclareUnicodeCharacter{1E1F}{\dotaccent{f}}
+
+  \DeclareUnicodeCharacter{1E20}{\=G}
+  \DeclareUnicodeCharacter{1E21}{\=g}
+  \DeclareUnicodeCharacter{1E22}{\dotaccent{H}}
+  \DeclareUnicodeCharacter{1E23}{\dotaccent{h}}
+  \DeclareUnicodeCharacter{1E24}{\udotaccent{H}}
+  \DeclareUnicodeCharacter{1E25}{\udotaccent{h}}
+  \DeclareUnicodeCharacter{1E26}{\"H}
+  \DeclareUnicodeCharacter{1E27}{\"h}
+
+  \DeclareUnicodeCharacter{1E30}{\'K}
+  \DeclareUnicodeCharacter{1E31}{\'k}
+  \DeclareUnicodeCharacter{1E32}{\udotaccent{K}}
+  \DeclareUnicodeCharacter{1E33}{\udotaccent{k}}
+  \DeclareUnicodeCharacter{1E34}{\ubaraccent{K}}
+  \DeclareUnicodeCharacter{1E35}{\ubaraccent{k}}
+  \DeclareUnicodeCharacter{1E36}{\udotaccent{L}}
+  \DeclareUnicodeCharacter{1E37}{\udotaccent{l}}
+  \DeclareUnicodeCharacter{1E3A}{\ubaraccent{L}}
+  \DeclareUnicodeCharacter{1E3B}{\ubaraccent{l}}
+  \DeclareUnicodeCharacter{1E3E}{\'M}
+  \DeclareUnicodeCharacter{1E3F}{\'m}
+
+  \DeclareUnicodeCharacter{1E40}{\dotaccent{M}}
+  \DeclareUnicodeCharacter{1E41}{\dotaccent{m}}
+  \DeclareUnicodeCharacter{1E42}{\udotaccent{M}}
+  \DeclareUnicodeCharacter{1E43}{\udotaccent{m}}
+  \DeclareUnicodeCharacter{1E44}{\dotaccent{N}}
+  \DeclareUnicodeCharacter{1E45}{\dotaccent{n}}
+  \DeclareUnicodeCharacter{1E46}{\udotaccent{N}}
+  \DeclareUnicodeCharacter{1E47}{\udotaccent{n}}
+  \DeclareUnicodeCharacter{1E48}{\ubaraccent{N}}
+  \DeclareUnicodeCharacter{1E49}{\ubaraccent{n}}
+
+  \DeclareUnicodeCharacter{1E54}{\'P}
+  \DeclareUnicodeCharacter{1E55}{\'p}
+  \DeclareUnicodeCharacter{1E56}{\dotaccent{P}}
+  \DeclareUnicodeCharacter{1E57}{\dotaccent{p}}
+  \DeclareUnicodeCharacter{1E58}{\dotaccent{R}}
+  \DeclareUnicodeCharacter{1E59}{\dotaccent{r}}
+  \DeclareUnicodeCharacter{1E5A}{\udotaccent{R}}
+  \DeclareUnicodeCharacter{1E5B}{\udotaccent{r}}
+  \DeclareUnicodeCharacter{1E5E}{\ubaraccent{R}}
+  \DeclareUnicodeCharacter{1E5F}{\ubaraccent{r}}
+
+  \DeclareUnicodeCharacter{1E60}{\dotaccent{S}}
+  \DeclareUnicodeCharacter{1E61}{\dotaccent{s}}
+  \DeclareUnicodeCharacter{1E62}{\udotaccent{S}}
+  \DeclareUnicodeCharacter{1E63}{\udotaccent{s}}
+  \DeclareUnicodeCharacter{1E6A}{\dotaccent{T}}
+  \DeclareUnicodeCharacter{1E6B}{\dotaccent{t}}
+  \DeclareUnicodeCharacter{1E6C}{\udotaccent{T}}
+  \DeclareUnicodeCharacter{1E6D}{\udotaccent{t}}
+  \DeclareUnicodeCharacter{1E6E}{\ubaraccent{T}}
+  \DeclareUnicodeCharacter{1E6F}{\ubaraccent{t}}
+
+  \DeclareUnicodeCharacter{1E7C}{\~V}
+  \DeclareUnicodeCharacter{1E7D}{\~v}
+  \DeclareUnicodeCharacter{1E7E}{\udotaccent{V}}
+  \DeclareUnicodeCharacter{1E7F}{\udotaccent{v}}
+
+  \DeclareUnicodeCharacter{1E80}{\`W}
+  \DeclareUnicodeCharacter{1E81}{\`w}
+  \DeclareUnicodeCharacter{1E82}{\'W}
+  \DeclareUnicodeCharacter{1E83}{\'w}
+  \DeclareUnicodeCharacter{1E84}{\"W}
+  \DeclareUnicodeCharacter{1E85}{\"w}
+  \DeclareUnicodeCharacter{1E86}{\dotaccent{W}}
+  \DeclareUnicodeCharacter{1E87}{\dotaccent{w}}
+  \DeclareUnicodeCharacter{1E88}{\udotaccent{W}}
+  \DeclareUnicodeCharacter{1E89}{\udotaccent{w}}
+  \DeclareUnicodeCharacter{1E8A}{\dotaccent{X}}
+  \DeclareUnicodeCharacter{1E8B}{\dotaccent{x}}
+  \DeclareUnicodeCharacter{1E8C}{\"X}
+  \DeclareUnicodeCharacter{1E8D}{\"x}
+  \DeclareUnicodeCharacter{1E8E}{\dotaccent{Y}}
+  \DeclareUnicodeCharacter{1E8F}{\dotaccent{y}}
+
+  \DeclareUnicodeCharacter{1E90}{\^Z}
+  \DeclareUnicodeCharacter{1E91}{\^z}
+  \DeclareUnicodeCharacter{1E92}{\udotaccent{Z}}
+  \DeclareUnicodeCharacter{1E93}{\udotaccent{z}}
+  \DeclareUnicodeCharacter{1E94}{\ubaraccent{Z}}
+  \DeclareUnicodeCharacter{1E95}{\ubaraccent{z}}
+  \DeclareUnicodeCharacter{1E96}{\ubaraccent{h}}
+  \DeclareUnicodeCharacter{1E97}{\"t}
+  \DeclareUnicodeCharacter{1E98}{\ringaccent{w}}
+  \DeclareUnicodeCharacter{1E99}{\ringaccent{y}}
+
+  \DeclareUnicodeCharacter{1EA0}{\udotaccent{A}}
+  \DeclareUnicodeCharacter{1EA1}{\udotaccent{a}}
+
+  \DeclareUnicodeCharacter{1EB8}{\udotaccent{E}}
+  \DeclareUnicodeCharacter{1EB9}{\udotaccent{e}}
+  \DeclareUnicodeCharacter{1EBC}{\~E}
+  \DeclareUnicodeCharacter{1EBD}{\~e}
+
+  \DeclareUnicodeCharacter{1ECA}{\udotaccent{I}}
+  \DeclareUnicodeCharacter{1ECB}{\udotaccent{i}}
+  \DeclareUnicodeCharacter{1ECC}{\udotaccent{O}}
+  \DeclareUnicodeCharacter{1ECD}{\udotaccent{o}}
+
+  \DeclareUnicodeCharacter{1EE4}{\udotaccent{U}}
+  \DeclareUnicodeCharacter{1EE5}{\udotaccent{u}}
+
+  \DeclareUnicodeCharacter{1EF2}{\`Y}
+  \DeclareUnicodeCharacter{1EF3}{\`y}
+  \DeclareUnicodeCharacter{1EF4}{\udotaccent{Y}}
+
+  \DeclareUnicodeCharacter{1EF8}{\~Y}
+  \DeclareUnicodeCharacter{1EF9}{\~y}
+
+  \DeclareUnicodeCharacter{2013}{--}
+  \DeclareUnicodeCharacter{2014}{---}
+  \DeclareUnicodeCharacter{2018}{\quoteleft}
+  \DeclareUnicodeCharacter{2019}{\quoteright}
+  \DeclareUnicodeCharacter{201A}{\quotesinglbase}
+  \DeclareUnicodeCharacter{201C}{\quotedblleft}
+  \DeclareUnicodeCharacter{201D}{\quotedblright}
+  \DeclareUnicodeCharacter{201E}{\quotedblbase}
+  \DeclareUnicodeCharacter{2022}{\bullet}
+  \DeclareUnicodeCharacter{2026}{\dots}
+  \DeclareUnicodeCharacter{2039}{\guilsinglleft}
+  \DeclareUnicodeCharacter{203A}{\guilsinglright}
+  \DeclareUnicodeCharacter{20AC}{\euro}
+
+  \DeclareUnicodeCharacter{2192}{\expansion}
+  \DeclareUnicodeCharacter{21D2}{\result}
+
+  \DeclareUnicodeCharacter{2212}{\minus}
+  \DeclareUnicodeCharacter{2217}{\point}
+  \DeclareUnicodeCharacter{2261}{\equiv}
+}% end of \utfeightchardefs
+
+
+% US-ASCII character definitions.
+\def\asciichardefs{% nothing need be done
+   \relax
+}
+
+% Make non-ASCII characters printable again for compatibility with
+% existing Texinfo documents that may use them, even without declaring a
+% document encoding.
+%
+\setnonasciicharscatcode \other
+
+
+\message{formatting,}
+
+\newdimen\defaultparindent \defaultparindent = 15pt
+
+\chapheadingskip = 15pt plus 4pt minus 2pt
+\secheadingskip = 12pt plus 3pt minus 2pt
+\subsecheadingskip = 9pt plus 2pt minus 2pt
+
+% Prevent underfull vbox error messages.
+\vbadness = 10000
+
+% Don't be so finicky about underfull hboxes, either.
+\hbadness = 2000
+
+% Following George Bush, get rid of widows and orphans.
+\widowpenalty=10000
+\clubpenalty=10000
+
+% Use TeX 3.0's \emergencystretch to help line breaking, but if we're
+% using an old version of TeX, don't do anything.  We want the amount of
+% stretch added to depend on the line length, hence the dependence on
+% \hsize.  We call this whenever the paper size is set.
+%
+\def\setemergencystretch{%
+  \ifx\emergencystretch\thisisundefined
+    % Allow us to assign to \emergencystretch anyway.
+    \def\emergencystretch{\dimen0}%
+  \else
+    \emergencystretch = .15\hsize
+  \fi
+}
+
+% Parameters in order: 1) textheight; 2) textwidth;
+% 3) voffset; 4) hoffset; 5) binding offset; 6) topskip;
+% 7) physical page height; 8) physical page width.
+%
+% We also call \setleading{\textleading}, so the caller should define
+% \textleading.  The caller should also set \parskip.
+%
+\def\internalpagesizes#1#2#3#4#5#6#7#8{%
+  \voffset = #3\relax
+  \topskip = #6\relax
+  \splittopskip = \topskip
+  %
+  \vsize = #1\relax
+  \advance\vsize by \topskip
+  \outervsize = \vsize
+  \advance\outervsize by 2\topandbottommargin
+  \pageheight = \vsize
+  %
+  \hsize = #2\relax
+  \outerhsize = \hsize
+  \advance\outerhsize by 0.5in
+  \pagewidth = \hsize
+  %
+  \normaloffset = #4\relax
+  \bindingoffset = #5\relax
+  %
+  \ifpdf
+    \pdfpageheight #7\relax
+    \pdfpagewidth #8\relax
+    % if we don't reset these, they will remain at "1 true in" of
+    % whatever layout pdftex was dumped with.
+    \pdfhorigin = 1 true in
+    \pdfvorigin = 1 true in
+  \fi
+  %
+  \setleading{\textleading}
+  %
+  \parindent = \defaultparindent
+  \setemergencystretch
+}
+
+% @letterpaper (the default).
+\def\letterpaper{{\globaldefs = 1
+  \parskip = 3pt plus 2pt minus 1pt
+  \textleading = 13.2pt
+  %
+  % If page is nothing but text, make it come out even.
+  \internalpagesizes{607.2pt}{6in}% that's 46 lines
+                    {\voffset}{.25in}%
+                    {\bindingoffset}{36pt}%
+                    {11in}{8.5in}%
+}}
+
+% Use @smallbook to reset parameters for 7x9.25 trim size.
+\def\smallbook{{\globaldefs = 1
+  \parskip = 2pt plus 1pt
+  \textleading = 12pt
+  %
+  \internalpagesizes{7.5in}{5in}%
+                    {-.2in}{0in}%
+                    {\bindingoffset}{16pt}%
+                    {9.25in}{7in}%
+  %
+  \lispnarrowing = 0.3in
+  \tolerance = 700
+  \hfuzz = 1pt
+  \contentsrightmargin = 0pt
+  \defbodyindent = .5cm
+}}
+
+% Use @smallerbook to reset parameters for 6x9 trim size.
+% (Just testing, parameters still in flux.)
+\def\smallerbook{{\globaldefs = 1
+  \parskip = 1.5pt plus 1pt
+  \textleading = 12pt
+  %
+  \internalpagesizes{7.4in}{4.8in}%
+                    {-.2in}{-.4in}%
+                    {0pt}{14pt}%
+                    {9in}{6in}%
+  %
+  \lispnarrowing = 0.25in
+  \tolerance = 700
+  \hfuzz = 1pt
+  \contentsrightmargin = 0pt
+  \defbodyindent = .4cm
+}}
+
+% Use @afourpaper to print on European A4 paper.
+\def\afourpaper{{\globaldefs = 1
+  \parskip = 3pt plus 2pt minus 1pt
+  \textleading = 13.2pt
+  %
+  % Double-side printing via postscript on Laserjet 4050
+  % prints double-sided nicely when \bindingoffset=10mm and \hoffset=-6mm.
+  % To change the settings for a different printer or situation, adjust
+  % \normaloffset until the front-side and back-side texts align.  Then
+  % do the same for \bindingoffset.  You can set these for testing in
+  % your texinfo source file like this:
+  % @tex
+  % \global\normaloffset = -6mm
+  % \global\bindingoffset = 10mm
+  % @end tex
+  \internalpagesizes{673.2pt}{160mm}% that's 51 lines
+                    {\voffset}{\hoffset}%
+                    {\bindingoffset}{44pt}%
+                    {297mm}{210mm}%
+  %
+  \tolerance = 700
+  \hfuzz = 1pt
+  \contentsrightmargin = 0pt
+  \defbodyindent = 5mm
+}}
+
+% Use @afivepaper to print on European A5 paper.
+% From romildo@urano.iceb.ufop.br, 2 July 2000.
+% He also recommends making @example and @lisp be small.
+\def\afivepaper{{\globaldefs = 1
+  \parskip = 2pt plus 1pt minus 0.1pt
+  \textleading = 12.5pt
+  %
+  \internalpagesizes{160mm}{120mm}%
+                    {\voffset}{\hoffset}%
+                    {\bindingoffset}{8pt}%
+                    {210mm}{148mm}%
+  %
+  \lispnarrowing = 0.2in
+  \tolerance = 800
+  \hfuzz = 1.2pt
+  \contentsrightmargin = 0pt
+  \defbodyindent = 2mm
+  \tableindent = 12mm
+}}
+
+% A specific text layout, 24x15cm overall, intended for A4 paper.
+\def\afourlatex{{\globaldefs = 1
+  \afourpaper
+  \internalpagesizes{237mm}{150mm}%
+                    {\voffset}{4.6mm}%
+                    {\bindingoffset}{7mm}%
+                    {297mm}{210mm}%
+  %
+  % Must explicitly reset to 0 because we call \afourpaper.
+  \globaldefs = 0
+}}
+
+% Use @afourwide to print on A4 paper in landscape format.
+\def\afourwide{{\globaldefs = 1
+  \afourpaper
+  \internalpagesizes{241mm}{165mm}%
+                    {\voffset}{-2.95mm}%
+                    {\bindingoffset}{7mm}%
+                    {297mm}{210mm}%
+  \globaldefs = 0
+}}
+
+% @pagesizes TEXTHEIGHT[,TEXTWIDTH]
+% Perhaps we should allow setting the margins, \topskip, \parskip,
+% and/or leading, also. Or perhaps we should compute them somehow.
+%
+\parseargdef\pagesizes{\pagesizesyyy #1,,\finish}
+\def\pagesizesyyy#1,#2,#3\finish{{%
+  \setbox0 = \hbox{\ignorespaces #2}\ifdim\wd0 > 0pt \hsize=#2\relax \fi
+  \globaldefs = 1
+  %
+  \parskip = 3pt plus 2pt minus 1pt
+  \setleading{\textleading}%
+  %
+  \dimen0 = #1\relax
+  \advance\dimen0 by \voffset
+  %
+  \dimen2 = \hsize
+  \advance\dimen2 by \normaloffset
+  %
+  \internalpagesizes{#1}{\hsize}%
+                    {\voffset}{\normaloffset}%
+                    {\bindingoffset}{44pt}%
+                    {\dimen0}{\dimen2}%
+}}
+
+% Set default to letter.
+%
+\letterpaper
+
+
+\message{and turning on texinfo input format.}
+
+% DEL is a comment character, in case @c does not suffice.
+\catcode`\^^? = 14
+
+% Define macros to output various characters with catcode for normal text.
+\catcode`\"=\other
+\catcode`\~=\other
+\catcode`\^=\other
+\catcode`\_=\other
+\catcode`\|=\other
+\catcode`\<=\other
+\catcode`\>=\other
+\catcode`\+=\other
+\catcode`\$=\other
+\def\normaldoublequote{"}
+\def\normaltilde{~}
+\def\normalcaret{^}
+\def\normalunderscore{_}
+\def\normalverticalbar{|}
+\def\normalless{<}
+\def\normalgreater{>}
+\def\normalplus{+}
+\def\normaldollar{$}%$ font-lock fix
+
+% This macro is used to make a character print one way in \tt
+% (where it can probably be output as-is), and another way in other fonts,
+% where something hairier probably needs to be done.
+%
+% #1 is what to print if we are indeed using \tt; #2 is what to print
+% otherwise.  Since all the Computer Modern typewriter fonts have zero
+% interword stretch (and shrink), and it is reasonable to expect all
+% typewriter fonts to have this, we can check that font parameter.
+%
+\def\ifusingtt#1#2{\ifdim \fontdimen3\font=0pt #1\else #2\fi}
+
+% Same as above, but check for italic font.  Actually this also catches
+% non-italic slanted fonts since it is impossible to distinguish them from
+% italic fonts.  But since this is only used by $ and it uses \sl anyway
+% this is not a problem.
+\def\ifusingit#1#2{\ifdim \fontdimen1\font>0pt #1\else #2\fi}
+
+% Turn off all special characters except @
+% (and those which the user can use as if they were ordinary).
+% Most of these we simply print from the \tt font, but for some, we can
+% use math or other variants that look better in normal text.
+
+\catcode`\"=\active
+\def\activedoublequote{{\tt\char34}}
+\let"=\activedoublequote
+\catcode`\~=\active
+\def~{{\tt\char126}}
+\chardef\hat=`\^
+\catcode`\^=\active
+\def^{{\tt \hat}}
+
+\catcode`\_=\active
+\def_{\ifusingtt\normalunderscore\_}
+\let\realunder=_
+% Subroutine for the previous macro.
+\def\_{\leavevmode \kern.07em \vbox{\hrule width.3em height.1ex}\kern .07em }
+
+\catcode`\|=\active
+\def|{{\tt\char124}}
+\chardef \less=`\<
+\catcode`\<=\active
+\def<{{\tt \less}}
+\chardef \gtr=`\>
+\catcode`\>=\active
+\def>{{\tt \gtr}}
+\catcode`\+=\active
+\def+{{\tt \char 43}}
+\catcode`\$=\active
+\def${\ifusingit{{\sl\$}}\normaldollar}%$ font-lock fix
+
+% If a .fmt file is being used, characters that might appear in a file
+% name cannot be active until we have parsed the command line.
+% So turn them off again, and have \everyjob (or @setfilename) turn them on.
+% \otherifyactive is called near the end of this file.
+\def\otherifyactive{\catcode`+=\other \catcode`\_=\other}
+
+% Used sometimes to turn off (effectively) the active characters even after
+% parsing them.
+\def\turnoffactive{%
+  \normalturnoffactive
+  \otherbackslash
+}
+
+\catcode`\@=0
+
+% \backslashcurfont outputs one backslash character in current font,
+% as in \char`\\.
+\global\chardef\backslashcurfont=`\\
+\global\let\rawbackslashxx=\backslashcurfont  % let existing .??s files work
+
+% \realbackslash is an actual character `\' with catcode other, and
+% \doublebackslash is two of them (for the pdf outlines).
+{\catcode`\\=\other @gdef@realbackslash{\} @gdef@doublebackslash{\\}}
+
+% In texinfo, backslash is an active character; it prints the backslash
+% in fixed width font.
+\catcode`\\=\active
+@def@normalbackslash{{@tt@backslashcurfont}}
+% On startup, @fixbackslash assigns:
+%  @let \ = @normalbackslash
+
+% \rawbackslash defines an active \ to do \backslashcurfont.
+% \otherbackslash defines an active \ to be a literal `\' character with
+% catcode other.
+@gdef@rawbackslash{@let\=@backslashcurfont}
+@gdef@otherbackslash{@let\=@realbackslash}
+
+% Same as @turnoffactive except outputs \ as {\tt\char`\\} instead of
+% the literal character `\'.
+%
+@def@normalturnoffactive{%
+  @let\=@normalbackslash
+  @let"=@normaldoublequote
+  @let~=@normaltilde
+  @let^=@normalcaret
+  @let_=@normalunderscore
+  @let|=@normalverticalbar
+  @let<=@normalless
+  @let>=@normalgreater
+  @let+=@normalplus
+  @let$=@normaldollar %$ font-lock fix
+  @markupsetuplqdefault
+  @markupsetuprqdefault
+  @unsepspaces
+}
+
+% Make _ and + \other characters, temporarily.
+% This is canceled by @fixbackslash.
+@otherifyactive
+
+% If a .fmt file is being used, we don't want the `\input texinfo' to show up.
+% That is what \eatinput is for; after that, the `\' should revert to printing
+% a backslash.
+%
+@gdef@eatinput input texinfo{@fixbackslash}
+@global@let\ = @eatinput
+
+% On the other hand, perhaps the file did not have a `\input texinfo'. Then
+% the first `\' in the file would cause an error. This macro tries to fix
+% that, assuming it is called before the first `\' could plausibly occur.
+% Also turn back on active characters that might appear in the input
+% file name, in case not using a pre-dumped format.
+%
+@gdef@fixbackslash{%
+  @ifx\@eatinput @let\ = @normalbackslash @fi
+  @catcode`+=@active
+  @catcode`@_=@active
+}
+
+% Say @foo, not \foo, in error messages.
+@escapechar = `@@
+
+% These look ok in all fonts, so just make them not special.
+@catcode`@& = @other
+@catcode`@# = @other
+@catcode`@% = @other
+
+@c Finally, make ` and ' active, so that txicodequoteundirected and
+@c txicodequotebacktick work right in, e.g., @w{@code{`foo'}}.  If we
+@c don't make ` and ' active, @code will not get them as active chars.
+@c Do this last of all since we use ` in the previous @catcode assignments.
+@catcode`@'=@active
+@catcode`@`=@active
+@markupsetuplqdefault
+@markupsetuprqdefault
+
+@c Local variables:
+@c eval: (add-hook 'write-file-hooks 'time-stamp)
+@c page-delimiter: "^\\\\message"
+@c time-stamp-start: "def\\\\texinfoversion{"
+@c time-stamp-format: "%:y-%02m-%02d.%02H"
+@c time-stamp-end: "}"
+@c End:
+
+@c vim:sw=2:
+
+@ignore
+   arch-tag: e1b36e32-c96e-4135-a41a-0b2efa2ea115
+@end ignore
diff --git a/mpc/doc/version.texi b/mpc/doc/version.texi
new file mode 100644
index 0000000..b109a80
--- /dev/null
+++ b/mpc/doc/version.texi
@@ -0,0 +1,4 @@
+@set UPDATED 21 February 2011
+@set UPDATED-MONTH February 2011
+@set EDITION 0.9
+@set VERSION 0.9
diff --git a/mpc/install-sh b/mpc/install-sh
new file mode 100755
index 0000000..6781b98
--- /dev/null
+++ b/mpc/install-sh
@@ -0,0 +1,520 @@
+#!/bin/sh
+# install - install a program, script, or datafile
+
+scriptversion=2009-04-28.21; # UTC
+
+# This originates from X11R5 (mit/util/scripts/install.sh), which was
+# later released in X11R6 (xc/config/util/install.sh) with the
+# following copyright and license.
+#
+# Copyright (C) 1994 X Consortium
+#
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to
+# deal in the Software without restriction, including without limitation the
+# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+# sell copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
+# X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
+# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-
+# TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+#
+# Except as contained in this notice, the name of the X Consortium shall not
+# be used in advertising or otherwise to promote the sale, use or other deal-
+# ings in this Software without prior written authorization from the X Consor-
+# tium.
+#
+#
+# FSF changes to this file are in the public domain.
+#
+# Calling this script install-sh is preferred over install.sh, to prevent
+# `make' implicit rules from creating a file called install from it
+# when there is no Makefile.
+#
+# This script is compatible with the BSD install script, but was written
+# from scratch.
+
+nl='
+'
+IFS=" ""	$nl"
+
+# set DOITPROG to echo to test this script
+
+# Don't use :- since 4.3BSD and earlier shells don't like it.
+doit=${DOITPROG-}
+if test -z "$doit"; then
+  doit_exec=exec
+else
+  doit_exec=$doit
+fi
+
+# Put in absolute file names if you don't have them in your path;
+# or use environment vars.
+
+chgrpprog=${CHGRPPROG-chgrp}
+chmodprog=${CHMODPROG-chmod}
+chownprog=${CHOWNPROG-chown}
+cmpprog=${CMPPROG-cmp}
+cpprog=${CPPROG-cp}
+mkdirprog=${MKDIRPROG-mkdir}
+mvprog=${MVPROG-mv}
+rmprog=${RMPROG-rm}
+stripprog=${STRIPPROG-strip}
+
+posix_glob='?'
+initialize_posix_glob='
+  test "$posix_glob" != "?" || {
+    if (set -f) 2>/dev/null; then
+      posix_glob=
+    else
+      posix_glob=:
+    fi
+  }
+'
+
+posix_mkdir=
+
+# Desired mode of installed file.
+mode=0755
+
+chgrpcmd=
+chmodcmd=$chmodprog
+chowncmd=
+mvcmd=$mvprog
+rmcmd="$rmprog -f"
+stripcmd=
+
+src=
+dst=
+dir_arg=
+dst_arg=
+
+copy_on_change=false
+no_target_directory=
+
+usage="\
+Usage: $0 [OPTION]... [-T] SRCFILE DSTFILE
+   or: $0 [OPTION]... SRCFILES... DIRECTORY
+   or: $0 [OPTION]... -t DIRECTORY SRCFILES...
+   or: $0 [OPTION]... -d DIRECTORIES...
+
+In the 1st form, copy SRCFILE to DSTFILE.
+In the 2nd and 3rd, copy all SRCFILES to DIRECTORY.
+In the 4th, create DIRECTORIES.
+
+Options:
+     --help     display this help and exit.
+     --version  display version info and exit.
+
+  -c            (ignored)
+  -C            install only if different (preserve the last data modification time)
+  -d            create directories instead of installing files.
+  -g GROUP      $chgrpprog installed files to GROUP.
+  -m MODE       $chmodprog installed files to MODE.
+  -o USER       $chownprog installed files to USER.
+  -s            $stripprog installed files.
+  -t DIRECTORY  install into DIRECTORY.
+  -T            report an error if DSTFILE is a directory.
+
+Environment variables override the default commands:
+  CHGRPPROG CHMODPROG CHOWNPROG CMPPROG CPPROG MKDIRPROG MVPROG
+  RMPROG STRIPPROG
+"
+
+while test $# -ne 0; do
+  case $1 in
+    -c) ;;
+
+    -C) copy_on_change=true;;
+
+    -d) dir_arg=true;;
+
+    -g) chgrpcmd="$chgrpprog $2"
+	shift;;
+
+    --help) echo "$usage"; exit $?;;
+
+    -m) mode=$2
+	case $mode in
+	  *' '* | *'	'* | *'
+'*	  | *'*'* | *'?'* | *'['*)
+	    echo "$0: invalid mode: $mode" >&2
+	    exit 1;;
+	esac
+	shift;;
+
+    -o) chowncmd="$chownprog $2"
+	shift;;
+
+    -s) stripcmd=$stripprog;;
+
+    -t) dst_arg=$2
+	shift;;
+
+    -T) no_target_directory=true;;
+
+    --version) echo "$0 $scriptversion"; exit $?;;
+
+    --)	shift
+	break;;
+
+    -*)	echo "$0: invalid option: $1" >&2
+	exit 1;;
+
+    *)  break;;
+  esac
+  shift
+done
+
+if test $# -ne 0 && test -z "$dir_arg$dst_arg"; then
+  # When -d is used, all remaining arguments are directories to create.
+  # When -t is used, the destination is already specified.
+  # Otherwise, the last argument is the destination.  Remove it from $@.
+  for arg
+  do
+    if test -n "$dst_arg"; then
+      # $@ is not empty: it contains at least $arg.
+      set fnord "$@" "$dst_arg"
+      shift # fnord
+    fi
+    shift # arg
+    dst_arg=$arg
+  done
+fi
+
+if test $# -eq 0; then
+  if test -z "$dir_arg"; then
+    echo "$0: no input file specified." >&2
+    exit 1
+  fi
+  # It's OK to call `install-sh -d' without argument.
+  # This can happen when creating conditional directories.
+  exit 0
+fi
+
+if test -z "$dir_arg"; then
+  trap '(exit $?); exit' 1 2 13 15
+
+  # Set umask so as not to create temps with too-generous modes.
+  # However, 'strip' requires both read and write access to temps.
+  case $mode in
+    # Optimize common cases.
+    *644) cp_umask=133;;
+    *755) cp_umask=22;;
+
+    *[0-7])
+      if test -z "$stripcmd"; then
+	u_plus_rw=
+      else
+	u_plus_rw='% 200'
+      fi
+      cp_umask=`expr '(' 777 - $mode % 1000 ')' $u_plus_rw`;;
+    *)
+      if test -z "$stripcmd"; then
+	u_plus_rw=
+      else
+	u_plus_rw=,u+rw
+      fi
+      cp_umask=$mode$u_plus_rw;;
+  esac
+fi
+
+for src
+do
+  # Protect names starting with `-'.
+  case $src in
+    -*) src=./$src;;
+  esac
+
+  if test -n "$dir_arg"; then
+    dst=$src
+    dstdir=$dst
+    test -d "$dstdir"
+    dstdir_status=$?
+  else
+
+    # Waiting for this to be detected by the "$cpprog $src $dsttmp" command
+    # might cause directories to be created, which would be especially bad
+    # if $src (and thus $dsttmp) contains '*'.
+    if test ! -f "$src" && test ! -d "$src"; then
+      echo "$0: $src does not exist." >&2
+      exit 1
+    fi
+
+    if test -z "$dst_arg"; then
+      echo "$0: no destination specified." >&2
+      exit 1
+    fi
+
+    dst=$dst_arg
+    # Protect names starting with `-'.
+    case $dst in
+      -*) dst=./$dst;;
+    esac
+
+    # If destination is a directory, append the input filename; won't work
+    # if double slashes aren't ignored.
+    if test -d "$dst"; then
+      if test -n "$no_target_directory"; then
+	echo "$0: $dst_arg: Is a directory" >&2
+	exit 1
+      fi
+      dstdir=$dst
+      dst=$dstdir/`basename "$src"`
+      dstdir_status=0
+    else
+      # Prefer dirname, but fall back on a substitute if dirname fails.
+      dstdir=`
+	(dirname "$dst") 2>/dev/null ||
+	expr X"$dst" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	     X"$dst" : 'X\(//\)[^/]' \| \
+	     X"$dst" : 'X\(//\)$' \| \
+	     X"$dst" : 'X\(/\)' \| . 2>/dev/null ||
+	echo X"$dst" |
+	    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+		   s//\1/
+		   q
+		 }
+		 /^X\(\/\/\)[^/].*/{
+		   s//\1/
+		   q
+		 }
+		 /^X\(\/\/\)$/{
+		   s//\1/
+		   q
+		 }
+		 /^X\(\/\).*/{
+		   s//\1/
+		   q
+		 }
+		 s/.*/./; q'
+      `
+
+      test -d "$dstdir"
+      dstdir_status=$?
+    fi
+  fi
+
+  obsolete_mkdir_used=false
+
+  if test $dstdir_status != 0; then
+    case $posix_mkdir in
+      '')
+	# Create intermediate dirs using mode 755 as modified by the umask.
+	# This is like FreeBSD 'install' as of 1997-10-28.
+	umask=`umask`
+	case $stripcmd.$umask in
+	  # Optimize common cases.
+	  *[2367][2367]) mkdir_umask=$umask;;
+	  .*0[02][02] | .[02][02] | .[02]) mkdir_umask=22;;
+
+	  *[0-7])
+	    mkdir_umask=`expr $umask + 22 \
+	      - $umask % 100 % 40 + $umask % 20 \
+	      - $umask % 10 % 4 + $umask % 2
+	    `;;
+	  *) mkdir_umask=$umask,go-w;;
+	esac
+
+	# With -d, create the new directory with the user-specified mode.
+	# Otherwise, rely on $mkdir_umask.
+	if test -n "$dir_arg"; then
+	  mkdir_mode=-m$mode
+	else
+	  mkdir_mode=
+	fi
+
+	posix_mkdir=false
+	case $umask in
+	  *[123567][0-7][0-7])
+	    # POSIX mkdir -p sets u+wx bits regardless of umask, which
+	    # is incompatible with FreeBSD 'install' when (umask & 300) != 0.
+	    ;;
+	  *)
+	    tmpdir=${TMPDIR-/tmp}/ins$RANDOM-$$
+	    trap 'ret=$?; rmdir "$tmpdir/d" "$tmpdir" 2>/dev/null; exit $ret' 0
+
+	    if (umask $mkdir_umask &&
+		exec $mkdirprog $mkdir_mode -p -- "$tmpdir/d") >/dev/null 2>&1
+	    then
+	      if test -z "$dir_arg" || {
+		   # Check for POSIX incompatibilities with -m.
+		   # HP-UX 11.23 and IRIX 6.5 mkdir -m -p sets group- or
+		   # other-writeable bit of parent directory when it shouldn't.
+		   # FreeBSD 6.1 mkdir -m -p sets mode of existing directory.
+		   ls_ld_tmpdir=`ls -ld "$tmpdir"`
+		   case $ls_ld_tmpdir in
+		     d????-?r-*) different_mode=700;;
+		     d????-?--*) different_mode=755;;
+		     *) false;;
+		   esac &&
+		   $mkdirprog -m$different_mode -p -- "$tmpdir" && {
+		     ls_ld_tmpdir_1=`ls -ld "$tmpdir"`
+		     test "$ls_ld_tmpdir" = "$ls_ld_tmpdir_1"
+		   }
+		 }
+	      then posix_mkdir=:
+	      fi
+	      rmdir "$tmpdir/d" "$tmpdir"
+	    else
+	      # Remove any dirs left behind by ancient mkdir implementations.
+	      rmdir ./$mkdir_mode ./-p ./-- 2>/dev/null
+	    fi
+	    trap '' 0;;
+	esac;;
+    esac
+
+    if
+      $posix_mkdir && (
+	umask $mkdir_umask &&
+	$doit_exec $mkdirprog $mkdir_mode -p -- "$dstdir"
+      )
+    then :
+    else
+
+      # The umask is ridiculous, or mkdir does not conform to POSIX,
+      # or it failed possibly due to a race condition.  Create the
+      # directory the slow way, step by step, checking for races as we go.
+
+      case $dstdir in
+	/*) prefix='/';;
+	-*) prefix='./';;
+	*)  prefix='';;
+      esac
+
+      eval "$initialize_posix_glob"
+
+      oIFS=$IFS
+      IFS=/
+      $posix_glob set -f
+      set fnord $dstdir
+      shift
+      $posix_glob set +f
+      IFS=$oIFS
+
+      prefixes=
+
+      for d
+      do
+	test -z "$d" && continue
+
+	prefix=$prefix$d
+	if test -d "$prefix"; then
+	  prefixes=
+	else
+	  if $posix_mkdir; then
+	    (umask=$mkdir_umask &&
+	     $doit_exec $mkdirprog $mkdir_mode -p -- "$dstdir") && break
+	    # Don't fail if two instances are running concurrently.
+	    test -d "$prefix" || exit 1
+	  else
+	    case $prefix in
+	      *\'*) qprefix=`echo "$prefix" | sed "s/'/'\\\\\\\\''/g"`;;
+	      *) qprefix=$prefix;;
+	    esac
+	    prefixes="$prefixes '$qprefix'"
+	  fi
+	fi
+	prefix=$prefix/
+      done
+
+      if test -n "$prefixes"; then
+	# Don't fail if two instances are running concurrently.
+	(umask $mkdir_umask &&
+	 eval "\$doit_exec \$mkdirprog $prefixes") ||
+	  test -d "$dstdir" || exit 1
+	obsolete_mkdir_used=true
+      fi
+    fi
+  fi
+
+  if test -n "$dir_arg"; then
+    { test -z "$chowncmd" || $doit $chowncmd "$dst"; } &&
+    { test -z "$chgrpcmd" || $doit $chgrpcmd "$dst"; } &&
+    { test "$obsolete_mkdir_used$chowncmd$chgrpcmd" = false ||
+      test -z "$chmodcmd" || $doit $chmodcmd $mode "$dst"; } || exit 1
+  else
+
+    # Make a couple of temp file names in the proper directory.
+    dsttmp=$dstdir/_inst.$$_
+    rmtmp=$dstdir/_rm.$$_
+
+    # Trap to clean up those temp files at exit.
+    trap 'ret=$?; rm -f "$dsttmp" "$rmtmp" && exit $ret' 0
+
+    # Copy the file name to the temp name.
+    (umask $cp_umask && $doit_exec $cpprog "$src" "$dsttmp") &&
+
+    # and set any options; do chmod last to preserve setuid bits.
+    #
+    # If any of these fail, we abort the whole thing.  If we want to
+    # ignore errors from any of these, just make sure not to ignore
+    # errors from the above "$doit $cpprog $src $dsttmp" command.
+    #
+    { test -z "$chowncmd" || $doit $chowncmd "$dsttmp"; } &&
+    { test -z "$chgrpcmd" || $doit $chgrpcmd "$dsttmp"; } &&
+    { test -z "$stripcmd" || $doit $stripcmd "$dsttmp"; } &&
+    { test -z "$chmodcmd" || $doit $chmodcmd $mode "$dsttmp"; } &&
+
+    # If -C, don't bother to copy if it wouldn't change the file.
+    if $copy_on_change &&
+       old=`LC_ALL=C ls -dlL "$dst"	2>/dev/null` &&
+       new=`LC_ALL=C ls -dlL "$dsttmp"	2>/dev/null` &&
+
+       eval "$initialize_posix_glob" &&
+       $posix_glob set -f &&
+       set X $old && old=:$2:$4:$5:$6 &&
+       set X $new && new=:$2:$4:$5:$6 &&
+       $posix_glob set +f &&
+
+       test "$old" = "$new" &&
+       $cmpprog "$dst" "$dsttmp" >/dev/null 2>&1
+    then
+      rm -f "$dsttmp"
+    else
+      # Rename the file to the real destination.
+      $doit $mvcmd -f "$dsttmp" "$dst" 2>/dev/null ||
+
+      # The rename failed, perhaps because mv can't rename something else
+      # to itself, or perhaps because mv is so ancient that it does not
+      # support -f.
+      {
+	# Now remove or move aside any old file at destination location.
+	# We try this two ways since rm can't unlink itself on some
+	# systems and the destination file might be busy for other
+	# reasons.  In this case, the final cleanup might fail but the new
+	# file should still install successfully.
+	{
+	  test ! -f "$dst" ||
+	  $doit $rmcmd -f "$dst" 2>/dev/null ||
+	  { $doit $mvcmd -f "$dst" "$rmtmp" 2>/dev/null &&
+	    { $doit $rmcmd -f "$rmtmp" 2>/dev/null; :; }
+	  } ||
+	  { echo "$0: cannot unlink or rename $dst" >&2
+	    (exit 1); exit 1
+	  }
+	} &&
+
+	# Now rename the file to the real destination.
+	$doit $mvcmd "$dsttmp" "$dst"
+      }
+    fi || exit 1
+
+    trap '' 0
+  fi
+done
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-time-zone: "UTC"
+# time-stamp-end: "; # UTC"
+# End:
diff --git a/mpc/ltmain.sh b/mpc/ltmain.sh
new file mode 100755
index 0000000..d88da2c
--- /dev/null
+++ b/mpc/ltmain.sh
@@ -0,0 +1,8413 @@
+# Generated from ltmain.m4sh.
+
+# ltmain.sh (GNU libtool) 2.2.6b
+# Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
+
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007 2008 Free Software Foundation, Inc.
+# This is free software; see the source for copying conditions.  There is NO
+# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+# GNU Libtool is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# As a special exception to the GNU General Public License,
+# if you distribute this file as part of a program or library that
+# is built using GNU Libtool, you may include this file under the
+# same distribution terms that you use for the rest of that program.
+#
+# GNU Libtool is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GNU Libtool; see the file COPYING.  If not, a copy
+# can be downloaded from http://www.gnu.org/licenses/gpl.html,
+# or obtained by writing to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+
+# Usage: $progname [OPTION]... [MODE-ARG]...
+#
+# Provide generalized library-building support services.
+#
+#     --config             show all configuration variables
+#     --debug              enable verbose shell tracing
+# -n, --dry-run            display commands without modifying any files
+#     --features           display basic configuration information and exit
+#     --mode=MODE          use operation mode MODE
+#     --preserve-dup-deps  don't remove duplicate dependency libraries
+#     --quiet, --silent    don't print informational messages
+#     --tag=TAG            use configuration variables from tag TAG
+# -v, --verbose            print informational messages (default)
+#     --version            print version information
+# -h, --help               print short or long help message
+#
+# MODE must be one of the following:
+#
+#       clean              remove files from the build directory
+#       compile            compile a source file into a libtool object
+#       execute            automatically set library path, then run a program
+#       finish             complete the installation of libtool libraries
+#       install            install libraries or executables
+#       link               create a library or an executable
+#       uninstall          remove libraries from an installed directory
+#
+# MODE-ARGS vary depending on the MODE.
+# Try `$progname --help --mode=MODE' for a more detailed description of MODE.
+#
+# When reporting a bug, please describe a test case to reproduce it and
+# include the following information:
+#
+#       host-triplet:	$host
+#       shell:		$SHELL
+#       compiler:		$LTCC
+#       compiler flags:		$LTCFLAGS
+#       linker:		$LD (gnu? $with_gnu_ld)
+#       $progname:		(GNU libtool) 2.2.6b Debian-2.2.6b-2
+#       automake:		$automake_version
+#       autoconf:		$autoconf_version
+#
+# Report bugs to <bug-libtool@gnu.org>.
+
+PROGRAM=ltmain.sh
+PACKAGE=libtool
+VERSION="2.2.6b Debian-2.2.6b-2"
+TIMESTAMP=""
+package_revision=1.3017
+
+# Be Bourne compatible
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac
+fi
+BIN_SH=xpg4; export BIN_SH # for Tru64
+DUALCASE=1; export DUALCASE # for MKS sh
+
+# NLS nuisances: We save the old values to restore during execute mode.
+# Only set LANG and LC_ALL to C if already set.
+# These must not be set unconditionally because not all systems understand
+# e.g. LANG=C (notably SCO).
+lt_user_locale=
+lt_safe_locale=
+for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES
+do
+  eval "if test \"\${$lt_var+set}\" = set; then
+          save_$lt_var=\$$lt_var
+          $lt_var=C
+	  export $lt_var
+	  lt_user_locale=\"$lt_var=\\\$save_\$lt_var; \$lt_user_locale\"
+	  lt_safe_locale=\"$lt_var=C; \$lt_safe_locale\"
+	fi"
+done
+
+$lt_unset CDPATH
+
+
+
+
+
+: ${CP="cp -f"}
+: ${ECHO="echo"}
+: ${EGREP="/bin/grep -E"}
+: ${FGREP="/bin/grep -F"}
+: ${GREP="/bin/grep"}
+: ${LN_S="ln -s"}
+: ${MAKE="make"}
+: ${MKDIR="mkdir"}
+: ${MV="mv -f"}
+: ${RM="rm -f"}
+: ${SED="/bin/sed"}
+: ${SHELL="${CONFIG_SHELL-/bin/sh}"}
+: ${Xsed="$SED -e 1s/^X//"}
+
+# Global variables:
+EXIT_SUCCESS=0
+EXIT_FAILURE=1
+EXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.
+EXIT_SKIP=77	  # $? = 77 is used to indicate a skipped test to automake.
+
+exit_status=$EXIT_SUCCESS
+
+# Make sure IFS has a sensible default
+lt_nl='
+'
+IFS=" 	$lt_nl"
+
+dirname="s,/[^/]*$,,"
+basename="s,^.*/,,"
+
+# func_dirname_and_basename file append nondir_replacement
+# perform func_basename and func_dirname in a single function
+# call:
+#   dirname:  Compute the dirname of FILE.  If nonempty,
+#             add APPEND to the result, otherwise set result
+#             to NONDIR_REPLACEMENT.
+#             value returned in "$func_dirname_result"
+#   basename: Compute filename of FILE.
+#             value retuned in "$func_basename_result"
+# Implementation must be kept synchronized with func_dirname
+# and func_basename. For efficiency, we do not delegate to
+# those functions but instead duplicate the functionality here.
+func_dirname_and_basename ()
+{
+  # Extract subdirectory from the argument.
+  func_dirname_result=`$ECHO "X${1}" | $Xsed -e "$dirname"`
+  if test "X$func_dirname_result" = "X${1}"; then
+    func_dirname_result="${3}"
+  else
+    func_dirname_result="$func_dirname_result${2}"
+  fi
+  func_basename_result=`$ECHO "X${1}" | $Xsed -e "$basename"`
+}
+
+# Generated shell functions inserted here.
+
+# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh
+# is ksh but when the shell is invoked as "sh" and the current value of
+# the _XPG environment variable is not equal to 1 (one), the special
+# positional parameter $0, within a function call, is the name of the
+# function.
+progpath="$0"
+
+# The name of this program:
+# In the unlikely event $progname began with a '-', it would play havoc with
+# func_echo (imagine progname=-n), so we prepend ./ in that case:
+func_dirname_and_basename "$progpath"
+progname=$func_basename_result
+case $progname in
+  -*) progname=./$progname ;;
+esac
+
+# Make sure we have an absolute path for reexecution:
+case $progpath in
+  [\\/]*|[A-Za-z]:\\*) ;;
+  *[\\/]*)
+     progdir=$func_dirname_result
+     progdir=`cd "$progdir" && pwd`
+     progpath="$progdir/$progname"
+     ;;
+  *)
+     save_IFS="$IFS"
+     IFS=:
+     for progdir in $PATH; do
+       IFS="$save_IFS"
+       test -x "$progdir/$progname" && break
+     done
+     IFS="$save_IFS"
+     test -n "$progdir" || progdir=`pwd`
+     progpath="$progdir/$progname"
+     ;;
+esac
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed="${SED}"' -e 1s/^X//'
+sed_quote_subst='s/\([`"$\\]\)/\\\1/g'
+
+# Same as above, but do not quote variable references.
+double_quote_subst='s/\(["`\\]\)/\\\1/g'
+
+# Re-`\' parameter expansions in output of double_quote_subst that were
+# `\'-ed in input to the same.  If an odd number of `\' preceded a '$'
+# in input to double_quote_subst, that '$' was protected from expansion.
+# Since each input `\' is now two `\'s, look for any number of runs of
+# four `\'s followed by two `\'s and then a '$'.  `\' that '$'.
+bs='\\'
+bs2='\\\\'
+bs4='\\\\\\\\'
+dollar='\$'
+sed_double_backslash="\
+  s/$bs4/&\\
+/g
+  s/^$bs2$dollar/$bs&/
+  s/\\([^$bs]\\)$bs2$dollar/\\1$bs2$bs$dollar/g
+  s/\n//g"
+
+# Standard options:
+opt_dry_run=false
+opt_help=false
+opt_quiet=false
+opt_verbose=false
+opt_warning=:
+
+# func_echo arg...
+# Echo program name prefixed message, along with the current mode
+# name if it has been set yet.
+func_echo ()
+{
+    $ECHO "$progname${mode+: }$mode: $*"
+}
+
+# func_verbose arg...
+# Echo program name prefixed message in verbose mode only.
+func_verbose ()
+{
+    $opt_verbose && func_echo ${1+"$@"}
+
+    # A bug in bash halts the script if the last line of a function
+    # fails when set -e is in force, so we need another command to
+    # work around that:
+    :
+}
+
+# func_error arg...
+# Echo program name prefixed message to standard error.
+func_error ()
+{
+    $ECHO "$progname${mode+: }$mode: "${1+"$@"} 1>&2
+}
+
+# func_warning arg...
+# Echo program name prefixed warning message to standard error.
+func_warning ()
+{
+    $opt_warning && $ECHO "$progname${mode+: }$mode: warning: "${1+"$@"} 1>&2
+
+    # bash bug again:
+    :
+}
+
+# func_fatal_error arg...
+# Echo program name prefixed message to standard error, and exit.
+func_fatal_error ()
+{
+    func_error ${1+"$@"}
+    exit $EXIT_FAILURE
+}
+
+# func_fatal_help arg...
+# Echo program name prefixed message to standard error, followed by
+# a help hint, and exit.
+func_fatal_help ()
+{
+    func_error ${1+"$@"}
+    func_fatal_error "$help"
+}
+help="Try \`$progname --help' for more information."  ## default
+
+
+# func_grep expression filename
+# Check whether EXPRESSION matches any line of FILENAME, without output.
+func_grep ()
+{
+    $GREP "$1" "$2" >/dev/null 2>&1
+}
+
+
+# func_mkdir_p directory-path
+# Make sure the entire path to DIRECTORY-PATH is available.
+func_mkdir_p ()
+{
+    my_directory_path="$1"
+    my_dir_list=
+
+    if test -n "$my_directory_path" && test "$opt_dry_run" != ":"; then
+
+      # Protect directory names starting with `-'
+      case $my_directory_path in
+        -*) my_directory_path="./$my_directory_path" ;;
+      esac
+
+      # While some portion of DIR does not yet exist...
+      while test ! -d "$my_directory_path"; do
+        # ...make a list in topmost first order.  Use a colon delimited
+	# list incase some portion of path contains whitespace.
+        my_dir_list="$my_directory_path:$my_dir_list"
+
+        # If the last portion added has no slash in it, the list is done
+        case $my_directory_path in */*) ;; *) break ;; esac
+
+        # ...otherwise throw away the child directory and loop
+        my_directory_path=`$ECHO "X$my_directory_path" | $Xsed -e "$dirname"`
+      done
+      my_dir_list=`$ECHO "X$my_dir_list" | $Xsed -e 's,:*$,,'`
+
+      save_mkdir_p_IFS="$IFS"; IFS=':'
+      for my_dir in $my_dir_list; do
+	IFS="$save_mkdir_p_IFS"
+        # mkdir can fail with a `File exist' error if two processes
+        # try to create one of the directories concurrently.  Don't
+        # stop in that case!
+        $MKDIR "$my_dir" 2>/dev/null || :
+      done
+      IFS="$save_mkdir_p_IFS"
+
+      # Bail out if we (or some other process) failed to create a directory.
+      test -d "$my_directory_path" || \
+        func_fatal_error "Failed to create \`$1'"
+    fi
+}
+
+
+# func_mktempdir [string]
+# Make a temporary directory that won't clash with other running
+# libtool processes, and avoids race conditions if possible.  If
+# given, STRING is the basename for that directory.
+func_mktempdir ()
+{
+    my_template="${TMPDIR-/tmp}/${1-$progname}"
+
+    if test "$opt_dry_run" = ":"; then
+      # Return a directory name, but don't create it in dry-run mode
+      my_tmpdir="${my_template}-$$"
+    else
+
+      # If mktemp works, use that first and foremost
+      my_tmpdir=`mktemp -d "${my_template}-XXXXXXXX" 2>/dev/null`
+
+      if test ! -d "$my_tmpdir"; then
+        # Failing that, at least try and use $RANDOM to avoid a race
+        my_tmpdir="${my_template}-${RANDOM-0}$$"
+
+        save_mktempdir_umask=`umask`
+        umask 0077
+        $MKDIR "$my_tmpdir"
+        umask $save_mktempdir_umask
+      fi
+
+      # If we're not in dry-run mode, bomb out on failure
+      test -d "$my_tmpdir" || \
+        func_fatal_error "cannot create temporary directory \`$my_tmpdir'"
+    fi
+
+    $ECHO "X$my_tmpdir" | $Xsed
+}
+
+
+# func_quote_for_eval arg
+# Aesthetically quote ARG to be evaled later.
+# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT
+# is double-quoted, suitable for a subsequent eval, whereas
+# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters
+# which are still active within double quotes backslashified.
+func_quote_for_eval ()
+{
+    case $1 in
+      *[\\\`\"\$]*)
+	func_quote_for_eval_unquoted_result=`$ECHO "X$1" | $Xsed -e "$sed_quote_subst"` ;;
+      *)
+        func_quote_for_eval_unquoted_result="$1" ;;
+    esac
+
+    case $func_quote_for_eval_unquoted_result in
+      # Double-quote args containing shell metacharacters to delay
+      # word splitting, command substitution and and variable
+      # expansion for a subsequent eval.
+      # Many Bourne shells cannot handle close brackets correctly
+      # in scan sets, so we specify it separately.
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+        func_quote_for_eval_result="\"$func_quote_for_eval_unquoted_result\""
+        ;;
+      *)
+        func_quote_for_eval_result="$func_quote_for_eval_unquoted_result"
+    esac
+}
+
+
+# func_quote_for_expand arg
+# Aesthetically quote ARG to be evaled later; same as above,
+# but do not quote variable references.
+func_quote_for_expand ()
+{
+    case $1 in
+      *[\\\`\"]*)
+	my_arg=`$ECHO "X$1" | $Xsed \
+	    -e "$double_quote_subst" -e "$sed_double_backslash"` ;;
+      *)
+        my_arg="$1" ;;
+    esac
+
+    case $my_arg in
+      # Double-quote args containing shell metacharacters to delay
+      # word splitting and command substitution for a subsequent eval.
+      # Many Bourne shells cannot handle close brackets correctly
+      # in scan sets, so we specify it separately.
+      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+        my_arg="\"$my_arg\""
+        ;;
+    esac
+
+    func_quote_for_expand_result="$my_arg"
+}
+
+
+# func_show_eval cmd [fail_exp]
+# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is
+# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP
+# is given, then evaluate it.
+func_show_eval ()
+{
+    my_cmd="$1"
+    my_fail_exp="${2-:}"
+
+    ${opt_silent-false} || {
+      func_quote_for_expand "$my_cmd"
+      eval "func_echo $func_quote_for_expand_result"
+    }
+
+    if ${opt_dry_run-false}; then :; else
+      eval "$my_cmd"
+      my_status=$?
+      if test "$my_status" -eq 0; then :; else
+	eval "(exit $my_status); $my_fail_exp"
+      fi
+    fi
+}
+
+
+# func_show_eval_locale cmd [fail_exp]
+# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is
+# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP
+# is given, then evaluate it.  Use the saved locale for evaluation.
+func_show_eval_locale ()
+{
+    my_cmd="$1"
+    my_fail_exp="${2-:}"
+
+    ${opt_silent-false} || {
+      func_quote_for_expand "$my_cmd"
+      eval "func_echo $func_quote_for_expand_result"
+    }
+
+    if ${opt_dry_run-false}; then :; else
+      eval "$lt_user_locale
+	    $my_cmd"
+      my_status=$?
+      eval "$lt_safe_locale"
+      if test "$my_status" -eq 0; then :; else
+	eval "(exit $my_status); $my_fail_exp"
+      fi
+    fi
+}
+
+
+
+
+
+# func_version
+# Echo version message to standard output and exit.
+func_version ()
+{
+    $SED -n '/^# '$PROGRAM' (GNU /,/# warranty; / {
+        s/^# //
+	s/^# *$//
+        s/\((C)\)[ 0-9,-]*\( [1-9][0-9]*\)/\1\2/
+        p
+     }' < "$progpath"
+     exit $?
+}
+
+# func_usage
+# Echo short help message to standard output and exit.
+func_usage ()
+{
+    $SED -n '/^# Usage:/,/# -h/ {
+        s/^# //
+	s/^# *$//
+	s/\$progname/'$progname'/
+	p
+    }' < "$progpath"
+    $ECHO
+    $ECHO "run \`$progname --help | more' for full usage"
+    exit $?
+}
+
+# func_help
+# Echo long help message to standard output and exit.
+func_help ()
+{
+    $SED -n '/^# Usage:/,/# Report bugs to/ {
+        s/^# //
+	s/^# *$//
+	s*\$progname*'$progname'*
+	s*\$host*'"$host"'*
+	s*\$SHELL*'"$SHELL"'*
+	s*\$LTCC*'"$LTCC"'*
+	s*\$LTCFLAGS*'"$LTCFLAGS"'*
+	s*\$LD*'"$LD"'*
+	s/\$with_gnu_ld/'"$with_gnu_ld"'/
+	s/\$automake_version/'"`(automake --version) 2>/dev/null |$SED 1q`"'/
+	s/\$autoconf_version/'"`(autoconf --version) 2>/dev/null |$SED 1q`"'/
+	p
+     }' < "$progpath"
+    exit $?
+}
+
+# func_missing_arg argname
+# Echo program name prefixed message to standard error and set global
+# exit_cmd.
+func_missing_arg ()
+{
+    func_error "missing argument for $1"
+    exit_cmd=exit
+}
+
+exit_cmd=:
+
+
+
+
+
+# Check that we have a working $ECHO.
+if test "X$1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X$1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t'; then
+  # Yippee, $ECHO works!
+  :
+else
+  # Restart under the correct shell, and then maybe $ECHO will work.
+  exec $SHELL "$progpath" --no-reexec ${1+"$@"}
+fi
+
+if test "X$1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<EOF
+$*
+EOF
+  exit $EXIT_SUCCESS
+fi
+
+magic="%%%MAGIC variable%%%"
+magic_exe="%%%MAGIC EXE variable%%%"
+
+# Global variables.
+# $mode is unset
+nonopt=
+execute_dlfiles=
+preserve_args=
+lo2o="s/\\.lo\$/.${objext}/"
+o2lo="s/\\.${objext}\$/.lo/"
+extracted_archives=
+extracted_serial=0
+
+opt_dry_run=false
+opt_duplicate_deps=false
+opt_silent=false
+opt_debug=:
+
+# If this variable is set in any of the actions, the command in it
+# will be execed at the end.  This prevents here-documents from being
+# left over by shells.
+exec_cmd=
+
+# func_fatal_configuration arg...
+# Echo program name prefixed message to standard error, followed by
+# a configuration failure hint, and exit.
+func_fatal_configuration ()
+{
+    func_error ${1+"$@"}
+    func_error "See the $PACKAGE documentation for more information."
+    func_fatal_error "Fatal configuration error."
+}
+
+
+# func_config
+# Display the configuration for all the tags in this script.
+func_config ()
+{
+    re_begincf='^# ### BEGIN LIBTOOL'
+    re_endcf='^# ### END LIBTOOL'
+
+    # Default configuration.
+    $SED "1,/$re_begincf CONFIG/d;/$re_endcf CONFIG/,\$d" < "$progpath"
+
+    # Now print the configurations for the tags.
+    for tagname in $taglist; do
+      $SED -n "/$re_begincf TAG CONFIG: $tagname\$/,/$re_endcf TAG CONFIG: $tagname\$/p" < "$progpath"
+    done
+
+    exit $?
+}
+
+# func_features
+# Display the features supported by this script.
+func_features ()
+{
+    $ECHO "host: $host"
+    if test "$build_libtool_libs" = yes; then
+      $ECHO "enable shared libraries"
+    else
+      $ECHO "disable shared libraries"
+    fi
+    if test "$build_old_libs" = yes; then
+      $ECHO "enable static libraries"
+    else
+      $ECHO "disable static libraries"
+    fi
+
+    exit $?
+}
+
+# func_enable_tag tagname
+# Verify that TAGNAME is valid, and either flag an error and exit, or
+# enable the TAGNAME tag.  We also add TAGNAME to the global $taglist
+# variable here.
+func_enable_tag ()
+{
+  # Global variable:
+  tagname="$1"
+
+  re_begincf="^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\$"
+  re_endcf="^# ### END LIBTOOL TAG CONFIG: $tagname\$"
+  sed_extractcf="/$re_begincf/,/$re_endcf/p"
+
+  # Validate tagname.
+  case $tagname in
+    *[!-_A-Za-z0-9,/]*)
+      func_fatal_error "invalid tag name: $tagname"
+      ;;
+  esac
+
+  # Don't test for the "default" C tag, as we know it's
+  # there but not specially marked.
+  case $tagname in
+    CC) ;;
+    *)
+      if $GREP "$re_begincf" "$progpath" >/dev/null 2>&1; then
+	taglist="$taglist $tagname"
+
+	# Evaluate the configuration.  Be careful to quote the path
+	# and the sed script, to avoid splitting on whitespace, but
+	# also don't use non-portable quotes within backquotes within
+	# quotes we have to do it in 2 steps:
+	extractedcf=`$SED -n -e "$sed_extractcf" < "$progpath"`
+	eval "$extractedcf"
+      else
+	func_error "ignoring unknown tag $tagname"
+      fi
+      ;;
+  esac
+}
+
+# Parse options once, thoroughly.  This comes as soon as possible in
+# the script to make things like `libtool --version' happen quickly.
+{
+
+  # Shorthand for --mode=foo, only valid as the first argument
+  case $1 in
+  clean|clea|cle|cl)
+    shift; set dummy --mode clean ${1+"$@"}; shift
+    ;;
+  compile|compil|compi|comp|com|co|c)
+    shift; set dummy --mode compile ${1+"$@"}; shift
+    ;;
+  execute|execut|execu|exec|exe|ex|e)
+    shift; set dummy --mode execute ${1+"$@"}; shift
+    ;;
+  finish|finis|fini|fin|fi|f)
+    shift; set dummy --mode finish ${1+"$@"}; shift
+    ;;
+  install|instal|insta|inst|ins|in|i)
+    shift; set dummy --mode install ${1+"$@"}; shift
+    ;;
+  link|lin|li|l)
+    shift; set dummy --mode link ${1+"$@"}; shift
+    ;;
+  uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)
+    shift; set dummy --mode uninstall ${1+"$@"}; shift
+    ;;
+  esac
+
+  # Parse non-mode specific arguments:
+  while test "$#" -gt 0; do
+    opt="$1"
+    shift
+
+    case $opt in
+      --config)		func_config					;;
+
+      --debug)		preserve_args="$preserve_args $opt"
+			func_echo "enabling shell trace mode"
+			opt_debug='set -x'
+			$opt_debug
+			;;
+
+      -dlopen)		test "$#" -eq 0 && func_missing_arg "$opt" && break
+			execute_dlfiles="$execute_dlfiles $1"
+			shift
+			;;
+
+      --dry-run | -n)	opt_dry_run=:					;;
+      --features)       func_features					;;
+      --finish)		mode="finish"					;;
+
+      --mode)		test "$#" -eq 0 && func_missing_arg "$opt" && break
+			case $1 in
+			  # Valid mode arguments:
+			  clean)	;;
+			  compile)	;;
+			  execute)	;;
+			  finish)	;;
+			  install)	;;
+			  link)		;;
+			  relink)	;;
+			  uninstall)	;;
+
+			  # Catch anything else as an error
+			  *) func_error "invalid argument for $opt"
+			     exit_cmd=exit
+			     break
+			     ;;
+		        esac
+
+			mode="$1"
+			shift
+			;;
+
+      --preserve-dup-deps)
+			opt_duplicate_deps=:				;;
+
+      --quiet|--silent)	preserve_args="$preserve_args $opt"
+			opt_silent=:
+			;;
+
+      --verbose| -v)	preserve_args="$preserve_args $opt"
+			opt_silent=false
+			;;
+
+      --tag)		test "$#" -eq 0 && func_missing_arg "$opt" && break
+			preserve_args="$preserve_args $opt $1"
+			func_enable_tag "$1"	# tagname is set here
+			shift
+			;;
+
+      # Separate optargs to long options:
+      -dlopen=*|--mode=*|--tag=*)
+			func_opt_split "$opt"
+			set dummy "$func_opt_split_opt" "$func_opt_split_arg" ${1+"$@"}
+			shift
+			;;
+
+      -\?|-h)		func_usage					;;
+      --help)		opt_help=:					;;
+      --version)	func_version					;;
+
+      -*)		func_fatal_help "unrecognized option \`$opt'"	;;
+
+      *)		nonopt="$opt"
+			break
+			;;
+    esac
+  done
+
+
+  case $host in
+    *cygwin* | *mingw* | *pw32* | *cegcc*)
+      # don't eliminate duplications in $postdeps and $predeps
+      opt_duplicate_compiler_generated_deps=:
+      ;;
+    *)
+      opt_duplicate_compiler_generated_deps=$opt_duplicate_deps
+      ;;
+  esac
+
+  # Having warned about all mis-specified options, bail out if
+  # anything was wrong.
+  $exit_cmd $EXIT_FAILURE
+}
+
+# func_check_version_match
+# Ensure that we are using m4 macros, and libtool script from the same
+# release of libtool.
+func_check_version_match ()
+{
+  if test "$package_revision" != "$macro_revision"; then
+    if test "$VERSION" != "$macro_version"; then
+      if test -z "$macro_version"; then
+        cat >&2 <<_LT_EOF
+$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the
+$progname: definition of this LT_INIT comes from an older release.
+$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION
+$progname: and run autoconf again.
+_LT_EOF
+      else
+        cat >&2 <<_LT_EOF
+$progname: Version mismatch error.  This is $PACKAGE $VERSION, but the
+$progname: definition of this LT_INIT comes from $PACKAGE $macro_version.
+$progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION
+$progname: and run autoconf again.
+_LT_EOF
+      fi
+    else
+      cat >&2 <<_LT_EOF
+$progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,
+$progname: but the definition of this LT_INIT comes from revision $macro_revision.
+$progname: You should recreate aclocal.m4 with macros from revision $package_revision
+$progname: of $PACKAGE $VERSION and run autoconf again.
+_LT_EOF
+    fi
+
+    exit $EXIT_MISMATCH
+  fi
+}
+
+
+## ----------- ##
+##    Main.    ##
+## ----------- ##
+
+$opt_help || {
+  # Sanity checks first:
+  func_check_version_match
+
+  if test "$build_libtool_libs" != yes && test "$build_old_libs" != yes; then
+    func_fatal_configuration "not configured to build any kind of library"
+  fi
+
+  test -z "$mode" && func_fatal_error "error: you must specify a MODE."
+
+
+  # Darwin sucks
+  eval std_shrext=\"$shrext_cmds\"
+
+
+  # Only execute mode is allowed to have -dlopen flags.
+  if test -n "$execute_dlfiles" && test "$mode" != execute; then
+    func_error "unrecognized option \`-dlopen'"
+    $ECHO "$help" 1>&2
+    exit $EXIT_FAILURE
+  fi
+
+  # Change the help message to a mode-specific one.
+  generic_help="$help"
+  help="Try \`$progname --help --mode=$mode' for more information."
+}
+
+
+# func_lalib_p file
+# True iff FILE is a libtool `.la' library or `.lo' object file.
+# This function is only a basic sanity check; it will hardly flush out
+# determined imposters.
+func_lalib_p ()
+{
+    test -f "$1" &&
+      $SED -e 4q "$1" 2>/dev/null \
+        | $GREP "^# Generated by .*$PACKAGE" > /dev/null 2>&1
+}
+
+# func_lalib_unsafe_p file
+# True iff FILE is a libtool `.la' library or `.lo' object file.
+# This function implements the same check as func_lalib_p without
+# resorting to external programs.  To this end, it redirects stdin and
+# closes it afterwards, without saving the original file descriptor.
+# As a safety measure, use it only where a negative result would be
+# fatal anyway.  Works if `file' does not exist.
+func_lalib_unsafe_p ()
+{
+    lalib_p=no
+    if test -f "$1" && test -r "$1" && exec 5<&0 <"$1"; then
+	for lalib_p_l in 1 2 3 4
+	do
+	    read lalib_p_line
+	    case "$lalib_p_line" in
+		\#\ Generated\ by\ *$PACKAGE* ) lalib_p=yes; break;;
+	    esac
+	done
+	exec 0<&5 5<&-
+    fi
+    test "$lalib_p" = yes
+}
+
+# func_ltwrapper_script_p file
+# True iff FILE is a libtool wrapper script
+# This function is only a basic sanity check; it will hardly flush out
+# determined imposters.
+func_ltwrapper_script_p ()
+{
+    func_lalib_p "$1"
+}
+
+# func_ltwrapper_executable_p file
+# True iff FILE is a libtool wrapper executable
+# This function is only a basic sanity check; it will hardly flush out
+# determined imposters.
+func_ltwrapper_executable_p ()
+{
+    func_ltwrapper_exec_suffix=
+    case $1 in
+    *.exe) ;;
+    *) func_ltwrapper_exec_suffix=.exe ;;
+    esac
+    $GREP "$magic_exe" "$1$func_ltwrapper_exec_suffix" >/dev/null 2>&1
+}
+
+# func_ltwrapper_scriptname file
+# Assumes file is an ltwrapper_executable
+# uses $file to determine the appropriate filename for a
+# temporary ltwrapper_script.
+func_ltwrapper_scriptname ()
+{
+    func_ltwrapper_scriptname_result=""
+    if func_ltwrapper_executable_p "$1"; then
+	func_dirname_and_basename "$1" "" "."
+	func_stripname '' '.exe' "$func_basename_result"
+	func_ltwrapper_scriptname_result="$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper"
+    fi
+}
+
+# func_ltwrapper_p file
+# True iff FILE is a libtool wrapper script or wrapper executable
+# This function is only a basic sanity check; it will hardly flush out
+# determined imposters.
+func_ltwrapper_p ()
+{
+    func_ltwrapper_script_p "$1" || func_ltwrapper_executable_p "$1"
+}
+
+
+# func_execute_cmds commands fail_cmd
+# Execute tilde-delimited COMMANDS.
+# If FAIL_CMD is given, eval that upon failure.
+# FAIL_CMD may read-access the current command in variable CMD!
+func_execute_cmds ()
+{
+    $opt_debug
+    save_ifs=$IFS; IFS='~'
+    for cmd in $1; do
+      IFS=$save_ifs
+      eval cmd=\"$cmd\"
+      func_show_eval "$cmd" "${2-:}"
+    done
+    IFS=$save_ifs
+}
+
+
+# func_source file
+# Source FILE, adding directory component if necessary.
+# Note that it is not necessary on cygwin/mingw to append a dot to
+# FILE even if both FILE and FILE.exe exist: automatic-append-.exe
+# behavior happens only for exec(3), not for open(2)!  Also, sourcing
+# `FILE.' does not work on cygwin managed mounts.
+func_source ()
+{
+    $opt_debug
+    case $1 in
+    */* | *\\*)	. "$1" ;;
+    *)		. "./$1" ;;
+    esac
+}
+
+
+# func_infer_tag arg
+# Infer tagged configuration to use if any are available and
+# if one wasn't chosen via the "--tag" command line option.
+# Only attempt this if the compiler in the base compile
+# command doesn't match the default compiler.
+# arg is usually of the form 'gcc ...'
+func_infer_tag ()
+{
+    $opt_debug
+    if test -n "$available_tags" && test -z "$tagname"; then
+      CC_quoted=
+      for arg in $CC; do
+        func_quote_for_eval "$arg"
+	CC_quoted="$CC_quoted $func_quote_for_eval_result"
+      done
+      case $@ in
+      # Blanks in the command may have been stripped by the calling shell,
+      # but not from the CC environment variable when configure was run.
+      " $CC "* | "$CC "* | " `$ECHO $CC` "* | "`$ECHO $CC` "* | " $CC_quoted"* | "$CC_quoted "* | " `$ECHO $CC_quoted` "* | "`$ECHO $CC_quoted` "*) ;;
+      # Blanks at the start of $base_compile will cause this to fail
+      # if we don't check for them as well.
+      *)
+	for z in $available_tags; do
+	  if $GREP "^# ### BEGIN LIBTOOL TAG CONFIG: $z$" < "$progpath" > /dev/null; then
+	    # Evaluate the configuration.
+	    eval "`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`"
+	    CC_quoted=
+	    for arg in $CC; do
+	      # Double-quote args containing other shell metacharacters.
+	      func_quote_for_eval "$arg"
+	      CC_quoted="$CC_quoted $func_quote_for_eval_result"
+	    done
+	    case "$@ " in
+	      " $CC "* | "$CC "* | " `$ECHO $CC` "* | "`$ECHO $CC` "* | " $CC_quoted"* | "$CC_quoted "* | " `$ECHO $CC_quoted` "* | "`$ECHO $CC_quoted` "*)
+	      # The compiler in the base compile command matches
+	      # the one in the tagged configuration.
+	      # Assume this is the tagged configuration we want.
+	      tagname=$z
+	      break
+	      ;;
+	    esac
+	  fi
+	done
+	# If $tagname still isn't set, then no tagged configuration
+	# was found and let the user know that the "--tag" command
+	# line option must be used.
+	if test -z "$tagname"; then
+	  func_echo "unable to infer tagged configuration"
+	  func_fatal_error "specify a tag with \`--tag'"
+#	else
+#	  func_verbose "using $tagname tagged configuration"
+	fi
+	;;
+      esac
+    fi
+}
+
+
+
+# func_write_libtool_object output_name pic_name nonpic_name
+# Create a libtool object file (analogous to a ".la" file),
+# but don't create it if we're doing a dry run.
+func_write_libtool_object ()
+{
+    write_libobj=${1}
+    if test "$build_libtool_libs" = yes; then
+      write_lobj=\'${2}\'
+    else
+      write_lobj=none
+    fi
+
+    if test "$build_old_libs" = yes; then
+      write_oldobj=\'${3}\'
+    else
+      write_oldobj=none
+    fi
+
+    $opt_dry_run || {
+      cat >${write_libobj}T <<EOF
+# $write_libobj - a libtool object file
+# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# Name of the PIC object.
+pic_object=$write_lobj
+
+# Name of the non-PIC object
+non_pic_object=$write_oldobj
+
+EOF
+      $MV "${write_libobj}T" "${write_libobj}"
+    }
+}
+
+# func_mode_compile arg...
+func_mode_compile ()
+{
+    $opt_debug
+    # Get the compilation command and the source file.
+    base_compile=
+    srcfile="$nonopt"  #  always keep a non-empty value in "srcfile"
+    suppress_opt=yes
+    suppress_output=
+    arg_mode=normal
+    libobj=
+    later=
+    pie_flag=
+
+    for arg
+    do
+      case $arg_mode in
+      arg  )
+	# do not "continue".  Instead, add this to base_compile
+	lastarg="$arg"
+	arg_mode=normal
+	;;
+
+      target )
+	libobj="$arg"
+	arg_mode=normal
+	continue
+	;;
+
+      normal )
+	# Accept any command-line options.
+	case $arg in
+	-o)
+	  test -n "$libobj" && \
+	    func_fatal_error "you cannot specify \`-o' more than once"
+	  arg_mode=target
+	  continue
+	  ;;
+
+	-pie | -fpie | -fPIE)
+          pie_flag="$pie_flag $arg"
+	  continue
+	  ;;
+
+	-shared | -static | -prefer-pic | -prefer-non-pic)
+	  later="$later $arg"
+	  continue
+	  ;;
+
+	-no-suppress)
+	  suppress_opt=no
+	  continue
+	  ;;
+
+	-Xcompiler)
+	  arg_mode=arg  #  the next one goes into the "base_compile" arg list
+	  continue      #  The current "srcfile" will either be retained or
+	  ;;            #  replaced later.  I would guess that would be a bug.
+
+	-Wc,*)
+	  func_stripname '-Wc,' '' "$arg"
+	  args=$func_stripname_result
+	  lastarg=
+	  save_ifs="$IFS"; IFS=','
+	  for arg in $args; do
+	    IFS="$save_ifs"
+	    func_quote_for_eval "$arg"
+	    lastarg="$lastarg $func_quote_for_eval_result"
+	  done
+	  IFS="$save_ifs"
+	  func_stripname ' ' '' "$lastarg"
+	  lastarg=$func_stripname_result
+
+	  # Add the arguments to base_compile.
+	  base_compile="$base_compile $lastarg"
+	  continue
+	  ;;
+
+	*)
+	  # Accept the current argument as the source file.
+	  # The previous "srcfile" becomes the current argument.
+	  #
+	  lastarg="$srcfile"
+	  srcfile="$arg"
+	  ;;
+	esac  #  case $arg
+	;;
+      esac    #  case $arg_mode
+
+      # Aesthetically quote the previous argument.
+      func_quote_for_eval "$lastarg"
+      base_compile="$base_compile $func_quote_for_eval_result"
+    done # for arg
+
+    case $arg_mode in
+    arg)
+      func_fatal_error "you must specify an argument for -Xcompile"
+      ;;
+    target)
+      func_fatal_error "you must specify a target with \`-o'"
+      ;;
+    *)
+      # Get the name of the library object.
+      test -z "$libobj" && {
+	func_basename "$srcfile"
+	libobj="$func_basename_result"
+      }
+      ;;
+    esac
+
+    # Recognize several different file suffixes.
+    # If the user specifies -o file.o, it is replaced with file.lo
+    case $libobj in
+    *.[cCFSifmso] | \
+    *.ada | *.adb | *.ads | *.asm | \
+    *.c++ | *.cc | *.ii | *.class | *.cpp | *.cxx | \
+    *.[fF][09]? | *.for | *.java | *.obj | *.sx)
+      func_xform "$libobj"
+      libobj=$func_xform_result
+      ;;
+    esac
+
+    case $libobj in
+    *.lo) func_lo2o "$libobj"; obj=$func_lo2o_result ;;
+    *)
+      func_fatal_error "cannot determine name of library object from \`$libobj'"
+      ;;
+    esac
+
+    func_infer_tag $base_compile
+
+    for arg in $later; do
+      case $arg in
+      -shared)
+	test "$build_libtool_libs" != yes && \
+	  func_fatal_configuration "can not build a shared library"
+	build_old_libs=no
+	continue
+	;;
+
+      -static)
+	build_libtool_libs=no
+	build_old_libs=yes
+	continue
+	;;
+
+      -prefer-pic)
+	pic_mode=yes
+	continue
+	;;
+
+      -prefer-non-pic)
+	pic_mode=no
+	continue
+	;;
+      esac
+    done
+
+    func_quote_for_eval "$libobj"
+    test "X$libobj" != "X$func_quote_for_eval_result" \
+      && $ECHO "X$libobj" | $GREP '[]~#^*{};<>?"'"'"'	 &()|`$[]' \
+      && func_warning "libobj name \`$libobj' may not contain shell special characters."
+    func_dirname_and_basename "$obj" "/" ""
+    objname="$func_basename_result"
+    xdir="$func_dirname_result"
+    lobj=${xdir}$objdir/$objname
+
+    test -z "$base_compile" && \
+      func_fatal_help "you must specify a compilation command"
+
+    # Delete any leftover library objects.
+    if test "$build_old_libs" = yes; then
+      removelist="$obj $lobj $libobj ${libobj}T"
+    else
+      removelist="$lobj $libobj ${libobj}T"
+    fi
+
+    # On Cygwin there's no "real" PIC flag so we must build both object types
+    case $host_os in
+    cygwin* | mingw* | pw32* | os2* | cegcc*)
+      pic_mode=default
+      ;;
+    esac
+    if test "$pic_mode" = no && test "$deplibs_check_method" != pass_all; then
+      # non-PIC code in shared libraries is not supported
+      pic_mode=default
+    fi
+
+    # Calculate the filename of the output object if compiler does
+    # not support -o with -c
+    if test "$compiler_c_o" = no; then
+      output_obj=`$ECHO "X$srcfile" | $Xsed -e 's%^.*/%%' -e 's%\.[^.]*$%%'`.${objext}
+      lockfile="$output_obj.lock"
+    else
+      output_obj=
+      need_locks=no
+      lockfile=
+    fi
+
+    # Lock this critical section if it is needed
+    # We use this script file to make the link, it avoids creating a new file
+    if test "$need_locks" = yes; then
+      until $opt_dry_run || ln "$progpath" "$lockfile" 2>/dev/null; do
+	func_echo "Waiting for $lockfile to be removed"
+	sleep 2
+      done
+    elif test "$need_locks" = warn; then
+      if test -f "$lockfile"; then
+	$ECHO "\
+*** ERROR, $lockfile exists and contains:
+`cat $lockfile 2>/dev/null`
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$opt_dry_run || $RM $removelist
+	exit $EXIT_FAILURE
+      fi
+      removelist="$removelist $output_obj"
+      $ECHO "$srcfile" > "$lockfile"
+    fi
+
+    $opt_dry_run || $RM $removelist
+    removelist="$removelist $lockfile"
+    trap '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE' 1 2 15
+
+    if test -n "$fix_srcfile_path"; then
+      eval srcfile=\"$fix_srcfile_path\"
+    fi
+    func_quote_for_eval "$srcfile"
+    qsrcfile=$func_quote_for_eval_result
+
+    # Only build a PIC object if we are building libtool libraries.
+    if test "$build_libtool_libs" = yes; then
+      # Without this assignment, base_compile gets emptied.
+      fbsd_hideous_sh_bug=$base_compile
+
+      if test "$pic_mode" != no; then
+	command="$base_compile $qsrcfile $pic_flag"
+      else
+	# Don't build PIC code
+	command="$base_compile $qsrcfile"
+      fi
+
+      func_mkdir_p "$xdir$objdir"
+
+      if test -z "$output_obj"; then
+	# Place PIC objects in $objdir
+	command="$command -o $lobj"
+      fi
+
+      func_show_eval_locale "$command"	\
+          'test -n "$output_obj" && $RM $removelist; exit $EXIT_FAILURE'
+
+      if test "$need_locks" = warn &&
+	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
+	$ECHO "\
+*** ERROR, $lockfile contains:
+`cat $lockfile 2>/dev/null`
+
+but it should contain:
+$srcfile
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$opt_dry_run || $RM $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      # Just move the object if needed, then go on to compile the next one
+      if test -n "$output_obj" && test "X$output_obj" != "X$lobj"; then
+	func_show_eval '$MV "$output_obj" "$lobj"' \
+	  'error=$?; $opt_dry_run || $RM $removelist; exit $error'
+      fi
+
+      # Allow error messages only from the first compilation.
+      if test "$suppress_opt" = yes; then
+	suppress_output=' >/dev/null 2>&1'
+      fi
+    fi
+
+    # Only build a position-dependent object if we build old libraries.
+    if test "$build_old_libs" = yes; then
+      if test "$pic_mode" != yes; then
+	# Don't build PIC code
+	command="$base_compile $qsrcfile$pie_flag"
+      else
+	command="$base_compile $qsrcfile $pic_flag"
+      fi
+      if test "$compiler_c_o" = yes; then
+	command="$command -o $obj"
+      fi
+
+      # Suppress compiler output if we already did a PIC compilation.
+      command="$command$suppress_output"
+      func_show_eval_locale "$command" \
+        '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'
+
+      if test "$need_locks" = warn &&
+	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
+	$ECHO "\
+*** ERROR, $lockfile contains:
+`cat $lockfile 2>/dev/null`
+
+but it should contain:
+$srcfile
+
+This indicates that another process is trying to use the same
+temporary object file, and libtool could not work around it because
+your compiler does not support \`-c' and \`-o' together.  If you
+repeat this compilation, it may succeed, by chance, but you had better
+avoid parallel builds (make -j) in this platform, or get a better
+compiler."
+
+	$opt_dry_run || $RM $removelist
+	exit $EXIT_FAILURE
+      fi
+
+      # Just move the object if needed
+      if test -n "$output_obj" && test "X$output_obj" != "X$obj"; then
+	func_show_eval '$MV "$output_obj" "$obj"' \
+	  'error=$?; $opt_dry_run || $RM $removelist; exit $error'
+      fi
+    fi
+
+    $opt_dry_run || {
+      func_write_libtool_object "$libobj" "$objdir/$objname" "$objname"
+
+      # Unlock the critical section if it was locked
+      if test "$need_locks" != no; then
+	removelist=$lockfile
+        $RM "$lockfile"
+      fi
+    }
+
+    exit $EXIT_SUCCESS
+}
+
+$opt_help || {
+test "$mode" = compile && func_mode_compile ${1+"$@"}
+}
+
+func_mode_help ()
+{
+    # We need to display help for each of the modes.
+    case $mode in
+      "")
+        # Generic help is extracted from the usage comments
+        # at the start of this file.
+        func_help
+        ;;
+
+      clean)
+        $ECHO \
+"Usage: $progname [OPTION]... --mode=clean RM [RM-OPTION]... FILE...
+
+Remove files from the build directory.
+
+RM is the name of the program to use to delete files associated with each FILE
+(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+to RM.
+
+If FILE is a libtool library, object or program, all the files associated
+with it are deleted. Otherwise, only FILE itself is deleted using RM."
+        ;;
+
+      compile)
+      $ECHO \
+"Usage: $progname [OPTION]... --mode=compile COMPILE-COMMAND... SOURCEFILE
+
+Compile a source file into a libtool library object.
+
+This mode accepts the following additional options:
+
+  -o OUTPUT-FILE    set the output file name to OUTPUT-FILE
+  -no-suppress      do not suppress compiler output for multiple passes
+  -prefer-pic       try to building PIC objects only
+  -prefer-non-pic   try to building non-PIC objects only
+  -shared           do not build a \`.o' file suitable for static linking
+  -static           only build a \`.o' file suitable for static linking
+
+COMPILE-COMMAND is a command to be used in creating a \`standard' object file
+from the given SOURCEFILE.
+
+The output file name is determined by removing the directory component from
+SOURCEFILE, then substituting the C source code suffix \`.c' with the
+library object suffix, \`.lo'."
+        ;;
+
+      execute)
+        $ECHO \
+"Usage: $progname [OPTION]... --mode=execute COMMAND [ARGS]...
+
+Automatically set library path, then run a program.
+
+This mode accepts the following additional options:
+
+  -dlopen FILE      add the directory containing FILE to the library path
+
+This mode sets the library path environment variable according to \`-dlopen'
+flags.
+
+If any of the ARGS are libtool executable wrappers, then they are translated
+into their corresponding uninstalled binary, and any of their required library
+directories are added to the library path.
+
+Then, COMMAND is executed, with ARGS as arguments."
+        ;;
+
+      finish)
+        $ECHO \
+"Usage: $progname [OPTION]... --mode=finish [LIBDIR]...
+
+Complete the installation of libtool libraries.
+
+Each LIBDIR is a directory that contains libtool libraries.
+
+The commands that this mode executes may require superuser privileges.  Use
+the \`--dry-run' option if you just want to see what would be executed."
+        ;;
+
+      install)
+        $ECHO \
+"Usage: $progname [OPTION]... --mode=install INSTALL-COMMAND...
+
+Install executables or libraries.
+
+INSTALL-COMMAND is the installation command.  The first component should be
+either the \`install' or \`cp' program.
+
+The following components of INSTALL-COMMAND are treated specially:
+
+  -inst-prefix PREFIX-DIR  Use PREFIX-DIR as a staging area for installation
+
+The rest of the components are interpreted as arguments to that command (only
+BSD-compatible install options are recognized)."
+        ;;
+
+      link)
+        $ECHO \
+"Usage: $progname [OPTION]... --mode=link LINK-COMMAND...
+
+Link object files or libraries together to form another library, or to
+create an executable program.
+
+LINK-COMMAND is a command using the C compiler that you would use to create
+a program from several object files.
+
+The following components of LINK-COMMAND are treated specially:
+
+  -all-static       do not do any dynamic linking at all
+  -avoid-version    do not add a version suffix if possible
+  -dlopen FILE      \`-dlpreopen' FILE if it cannot be dlopened at runtime
+  -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols
+  -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)
+  -export-symbols SYMFILE
+                    try to export only the symbols listed in SYMFILE
+  -export-symbols-regex REGEX
+                    try to export only the symbols matching REGEX
+  -LLIBDIR          search LIBDIR for required installed libraries
+  -lNAME            OUTPUT-FILE requires the installed library libNAME
+  -module           build a library that can dlopened
+  -no-fast-install  disable the fast-install mode
+  -no-install       link a not-installable executable
+  -no-undefined     declare that a library does not refer to external symbols
+  -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects
+  -objectlist FILE  Use a list of object files found in FILE to specify objects
+  -precious-files-regex REGEX
+                    don't remove output files matching REGEX
+  -release RELEASE  specify package release information
+  -rpath LIBDIR     the created library will eventually be installed in LIBDIR
+  -R[ ]LIBDIR       add LIBDIR to the runtime path of programs and libraries
+  -shared           only do dynamic linking of libtool libraries
+  -shrext SUFFIX    override the standard shared library file extension
+  -static           do not do any dynamic linking of uninstalled libtool libraries
+  -static-libtool-libs
+                    do not do any dynamic linking of libtool libraries
+  -version-info CURRENT[:REVISION[:AGE]]
+                    specify library version info [each variable defaults to 0]
+  -weak LIBNAME     declare that the target provides the LIBNAME interface
+
+All other options (arguments beginning with \`-') are ignored.
+
+Every other argument is treated as a filename.  Files ending in \`.la' are
+treated as uninstalled libtool libraries, other files are standard or library
+object files.
+
+If the OUTPUT-FILE ends in \`.la', then a libtool library is created,
+only library objects (\`.lo' files) may be specified, and \`-rpath' is
+required, except when creating a convenience library.
+
+If OUTPUT-FILE ends in \`.a' or \`.lib', then a standard library is created
+using \`ar' and \`ranlib', or on Windows using \`lib'.
+
+If OUTPUT-FILE ends in \`.lo' or \`.${objext}', then a reloadable object file
+is created, otherwise an executable program is created."
+        ;;
+
+      uninstall)
+        $ECHO \
+"Usage: $progname [OPTION]... --mode=uninstall RM [RM-OPTION]... FILE...
+
+Remove libraries from an installation directory.
+
+RM is the name of the program to use to delete files associated with each FILE
+(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+to RM.
+
+If FILE is a libtool library, all the files associated with it are deleted.
+Otherwise, only FILE itself is deleted using RM."
+        ;;
+
+      *)
+        func_fatal_help "invalid operation mode \`$mode'"
+        ;;
+    esac
+
+    $ECHO
+    $ECHO "Try \`$progname --help' for more information about other modes."
+
+    exit $?
+}
+
+  # Now that we've collected a possible --mode arg, show help if necessary
+  $opt_help && func_mode_help
+
+
+# func_mode_execute arg...
+func_mode_execute ()
+{
+    $opt_debug
+    # The first argument is the command name.
+    cmd="$nonopt"
+    test -z "$cmd" && \
+      func_fatal_help "you must specify a COMMAND"
+
+    # Handle -dlopen flags immediately.
+    for file in $execute_dlfiles; do
+      test -f "$file" \
+	|| func_fatal_help "\`$file' is not a file"
+
+      dir=
+      case $file in
+      *.la)
+	# Check to see that this really is a libtool archive.
+	func_lalib_unsafe_p "$file" \
+	  || func_fatal_help "\`$lib' is not a valid libtool archive"
+
+	# Read the libtool library.
+	dlname=
+	library_names=
+	func_source "$file"
+
+	# Skip this library if it cannot be dlopened.
+	if test -z "$dlname"; then
+	  # Warn if it was a shared library.
+	  test -n "$library_names" && \
+	    func_warning "\`$file' was not linked with \`-export-dynamic'"
+	  continue
+	fi
+
+	func_dirname "$file" "" "."
+	dir="$func_dirname_result"
+
+	if test -f "$dir/$objdir/$dlname"; then
+	  dir="$dir/$objdir"
+	else
+	  if test ! -f "$dir/$dlname"; then
+	    func_fatal_error "cannot find \`$dlname' in \`$dir' or \`$dir/$objdir'"
+	  fi
+	fi
+	;;
+
+      *.lo)
+	# Just add the directory containing the .lo file.
+	func_dirname "$file" "" "."
+	dir="$func_dirname_result"
+	;;
+
+      *)
+	func_warning "\`-dlopen' is ignored for non-libtool libraries and objects"
+	continue
+	;;
+      esac
+
+      # Get the absolute pathname.
+      absdir=`cd "$dir" && pwd`
+      test -n "$absdir" && dir="$absdir"
+
+      # Now add the directory to shlibpath_var.
+      if eval "test -z \"\$$shlibpath_var\""; then
+	eval "$shlibpath_var=\"\$dir\""
+      else
+	eval "$shlibpath_var=\"\$dir:\$$shlibpath_var\""
+      fi
+    done
+
+    # This variable tells wrapper scripts just to set shlibpath_var
+    # rather than running their programs.
+    libtool_execute_magic="$magic"
+
+    # Check if any of the arguments is a wrapper script.
+    args=
+    for file
+    do
+      case $file in
+      -*) ;;
+      *)
+	# Do a test to see if this is really a libtool program.
+	if func_ltwrapper_script_p "$file"; then
+	  func_source "$file"
+	  # Transform arg to wrapped name.
+	  file="$progdir/$program"
+	elif func_ltwrapper_executable_p "$file"; then
+	  func_ltwrapper_scriptname "$file"
+	  func_source "$func_ltwrapper_scriptname_result"
+	  # Transform arg to wrapped name.
+	  file="$progdir/$program"
+	fi
+	;;
+      esac
+      # Quote arguments (to preserve shell metacharacters).
+      func_quote_for_eval "$file"
+      args="$args $func_quote_for_eval_result"
+    done
+
+    if test "X$opt_dry_run" = Xfalse; then
+      if test -n "$shlibpath_var"; then
+	# Export the shlibpath_var.
+	eval "export $shlibpath_var"
+      fi
+
+      # Restore saved environment variables
+      for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES
+      do
+	eval "if test \"\${save_$lt_var+set}\" = set; then
+                $lt_var=\$save_$lt_var; export $lt_var
+	      else
+		$lt_unset $lt_var
+	      fi"
+      done
+
+      # Now prepare to actually exec the command.
+      exec_cmd="\$cmd$args"
+    else
+      # Display what would be done.
+      if test -n "$shlibpath_var"; then
+	eval "\$ECHO \"\$shlibpath_var=\$$shlibpath_var\""
+	$ECHO "export $shlibpath_var"
+      fi
+      $ECHO "$cmd$args"
+      exit $EXIT_SUCCESS
+    fi
+}
+
+test "$mode" = execute && func_mode_execute ${1+"$@"}
+
+
+# func_mode_finish arg...
+func_mode_finish ()
+{
+    $opt_debug
+    libdirs="$nonopt"
+    admincmds=
+
+    if test -n "$finish_cmds$finish_eval" && test -n "$libdirs"; then
+      for dir
+      do
+	libdirs="$libdirs $dir"
+      done
+
+      for libdir in $libdirs; do
+	if test -n "$finish_cmds"; then
+	  # Do each command in the finish commands.
+	  func_execute_cmds "$finish_cmds" 'admincmds="$admincmds
+'"$cmd"'"'
+	fi
+	if test -n "$finish_eval"; then
+	  # Do the single finish_eval.
+	  eval cmds=\"$finish_eval\"
+	  $opt_dry_run || eval "$cmds" || admincmds="$admincmds
+       $cmds"
+	fi
+      done
+    fi
+
+    # Exit here if they wanted silent mode.
+    $opt_silent && exit $EXIT_SUCCESS
+
+    $ECHO "X----------------------------------------------------------------------" | $Xsed
+    $ECHO "Libraries have been installed in:"
+    for libdir in $libdirs; do
+      $ECHO "   $libdir"
+    done
+    $ECHO
+    $ECHO "If you ever happen to want to link against installed libraries"
+    $ECHO "in a given directory, LIBDIR, you must either use libtool, and"
+    $ECHO "specify the full pathname of the library, or use the \`-LLIBDIR'"
+    $ECHO "flag during linking and do at least one of the following:"
+    if test -n "$shlibpath_var"; then
+      $ECHO "   - add LIBDIR to the \`$shlibpath_var' environment variable"
+      $ECHO "     during execution"
+    fi
+    if test -n "$runpath_var"; then
+      $ECHO "   - add LIBDIR to the \`$runpath_var' environment variable"
+      $ECHO "     during linking"
+    fi
+    if test -n "$hardcode_libdir_flag_spec"; then
+      libdir=LIBDIR
+      eval flag=\"$hardcode_libdir_flag_spec\"
+
+      $ECHO "   - use the \`$flag' linker flag"
+    fi
+    if test -n "$admincmds"; then
+      $ECHO "   - have your system administrator run these commands:$admincmds"
+    fi
+    if test -f /etc/ld.so.conf; then
+      $ECHO "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
+    fi
+    $ECHO
+
+    $ECHO "See any operating system documentation about shared libraries for"
+    case $host in
+      solaris2.[6789]|solaris2.1[0-9])
+        $ECHO "more information, such as the ld(1), crle(1) and ld.so(8) manual"
+	$ECHO "pages."
+	;;
+      *)
+        $ECHO "more information, such as the ld(1) and ld.so(8) manual pages."
+        ;;
+    esac
+    $ECHO "X----------------------------------------------------------------------" | $Xsed
+    exit $EXIT_SUCCESS
+}
+
+test "$mode" = finish && func_mode_finish ${1+"$@"}
+
+
+# func_mode_install arg...
+func_mode_install ()
+{
+    $opt_debug
+    # There may be an optional sh(1) argument at the beginning of
+    # install_prog (especially on Windows NT).
+    if test "$nonopt" = "$SHELL" || test "$nonopt" = /bin/sh ||
+       # Allow the use of GNU shtool's install command.
+       $ECHO "X$nonopt" | $GREP shtool >/dev/null; then
+      # Aesthetically quote it.
+      func_quote_for_eval "$nonopt"
+      install_prog="$func_quote_for_eval_result "
+      arg=$1
+      shift
+    else
+      install_prog=
+      arg=$nonopt
+    fi
+
+    # The real first argument should be the name of the installation program.
+    # Aesthetically quote it.
+    func_quote_for_eval "$arg"
+    install_prog="$install_prog$func_quote_for_eval_result"
+
+    # We need to accept at least all the BSD install flags.
+    dest=
+    files=
+    opts=
+    prev=
+    install_type=
+    isdir=no
+    stripme=
+    for arg
+    do
+      if test -n "$dest"; then
+	files="$files $dest"
+	dest=$arg
+	continue
+      fi
+
+      case $arg in
+      -d) isdir=yes ;;
+      -f)
+	case " $install_prog " in
+	*[\\\ /]cp\ *) ;;
+	*) prev=$arg ;;
+	esac
+	;;
+      -g | -m | -o)
+	prev=$arg
+	;;
+      -s)
+	stripme=" -s"
+	continue
+	;;
+      -*)
+	;;
+      *)
+	# If the previous option needed an argument, then skip it.
+	if test -n "$prev"; then
+	  prev=
+	else
+	  dest=$arg
+	  continue
+	fi
+	;;
+      esac
+
+      # Aesthetically quote the argument.
+      func_quote_for_eval "$arg"
+      install_prog="$install_prog $func_quote_for_eval_result"
+    done
+
+    test -z "$install_prog" && \
+      func_fatal_help "you must specify an install program"
+
+    test -n "$prev" && \
+      func_fatal_help "the \`$prev' option requires an argument"
+
+    if test -z "$files"; then
+      if test -z "$dest"; then
+	func_fatal_help "no file or destination specified"
+      else
+	func_fatal_help "you must specify a destination"
+      fi
+    fi
+
+    # Strip any trailing slash from the destination.
+    func_stripname '' '/' "$dest"
+    dest=$func_stripname_result
+
+    # Check to see that the destination is a directory.
+    test -d "$dest" && isdir=yes
+    if test "$isdir" = yes; then
+      destdir="$dest"
+      destname=
+    else
+      func_dirname_and_basename "$dest" "" "."
+      destdir="$func_dirname_result"
+      destname="$func_basename_result"
+
+      # Not a directory, so check to see that there is only one file specified.
+      set dummy $files; shift
+      test "$#" -gt 1 && \
+	func_fatal_help "\`$dest' is not a directory"
+    fi
+    case $destdir in
+    [\\/]* | [A-Za-z]:[\\/]*) ;;
+    *)
+      for file in $files; do
+	case $file in
+	*.lo) ;;
+	*)
+	  func_fatal_help "\`$destdir' must be an absolute directory name"
+	  ;;
+	esac
+      done
+      ;;
+    esac
+
+    # This variable tells wrapper scripts just to set variables rather
+    # than running their programs.
+    libtool_install_magic="$magic"
+
+    staticlibs=
+    future_libdirs=
+    current_libdirs=
+    for file in $files; do
+
+      # Do each installation.
+      case $file in
+      *.$libext)
+	# Do the static libraries later.
+	staticlibs="$staticlibs $file"
+	;;
+
+      *.la)
+	# Check to see that this really is a libtool archive.
+	func_lalib_unsafe_p "$file" \
+	  || func_fatal_help "\`$file' is not a valid libtool archive"
+
+	library_names=
+	old_library=
+	relink_command=
+	func_source "$file"
+
+	# Add the libdir to current_libdirs if it is the destination.
+	if test "X$destdir" = "X$libdir"; then
+	  case "$current_libdirs " in
+	  *" $libdir "*) ;;
+	  *) current_libdirs="$current_libdirs $libdir" ;;
+	  esac
+	else
+	  # Note the libdir as a future libdir.
+	  case "$future_libdirs " in
+	  *" $libdir "*) ;;
+	  *) future_libdirs="$future_libdirs $libdir" ;;
+	  esac
+	fi
+
+	func_dirname "$file" "/" ""
+	dir="$func_dirname_result"
+	dir="$dir$objdir"
+
+	if test -n "$relink_command"; then
+	  # Determine the prefix the user has applied to our future dir.
+	  inst_prefix_dir=`$ECHO "X$destdir" | $Xsed -e "s%$libdir\$%%"`
+
+	  # Don't allow the user to place us outside of our expected
+	  # location b/c this prevents finding dependent libraries that
+	  # are installed to the same prefix.
+	  # At present, this check doesn't affect windows .dll's that
+	  # are installed into $libdir/../bin (currently, that works fine)
+	  # but it's something to keep an eye on.
+	  test "$inst_prefix_dir" = "$destdir" && \
+	    func_fatal_error "error: cannot install \`$file' to a directory not ending in $libdir"
+
+	  if test -n "$inst_prefix_dir"; then
+	    # Stick the inst_prefix_dir data into the link command.
+	    relink_command=`$ECHO "X$relink_command" | $Xsed -e "s%@inst_prefix_dir@%-inst-prefix-dir $inst_prefix_dir%"`
+	  else
+	    relink_command=`$ECHO "X$relink_command" | $Xsed -e "s%@inst_prefix_dir@%%"`
+	  fi
+
+	  func_warning "relinking \`$file'"
+	  func_show_eval "$relink_command" \
+	    'func_fatal_error "error: relink \`$file'\'' with the above command before installing it"'
+	fi
+
+	# See the names of the shared library.
+	set dummy $library_names; shift
+	if test -n "$1"; then
+	  realname="$1"
+	  shift
+
+	  srcname="$realname"
+	  test -n "$relink_command" && srcname="$realname"T
+
+	  # Install the shared library and build the symlinks.
+	  func_show_eval "$install_prog $dir/$srcname $destdir/$realname" \
+	      'exit $?'
+	  tstripme="$stripme"
+	  case $host_os in
+	  cygwin* | mingw* | pw32* | cegcc*)
+	    case $realname in
+	    *.dll.a)
+	      tstripme=""
+	      ;;
+	    esac
+	    ;;
+	  esac
+	  if test -n "$tstripme" && test -n "$striplib"; then
+	    func_show_eval "$striplib $destdir/$realname" 'exit $?'
+	  fi
+
+	  if test "$#" -gt 0; then
+	    # Delete the old symlinks, and create new ones.
+	    # Try `ln -sf' first, because the `ln' binary might depend on
+	    # the symlink we replace!  Solaris /bin/ln does not understand -f,
+	    # so we also need to try rm && ln -s.
+	    for linkname
+	    do
+	      test "$linkname" != "$realname" \
+		&& func_show_eval "(cd $destdir && { $LN_S -f $realname $linkname || { $RM $linkname && $LN_S $realname $linkname; }; })"
+	    done
+	  fi
+
+	  # Do each command in the postinstall commands.
+	  lib="$destdir/$realname"
+	  func_execute_cmds "$postinstall_cmds" 'exit $?'
+	fi
+
+	# Install the pseudo-library for information purposes.
+	func_basename "$file"
+	name="$func_basename_result"
+	instname="$dir/$name"i
+	func_show_eval "$install_prog $instname $destdir/$name" 'exit $?'
+
+	# Maybe install the static library, too.
+	test -n "$old_library" && staticlibs="$staticlibs $dir/$old_library"
+	;;
+
+      *.lo)
+	# Install (i.e. copy) a libtool object.
+
+	# Figure out destination file name, if it wasn't already specified.
+	if test -n "$destname"; then
+	  destfile="$destdir/$destname"
+	else
+	  func_basename "$file"
+	  destfile="$func_basename_result"
+	  destfile="$destdir/$destfile"
+	fi
+
+	# Deduce the name of the destination old-style object file.
+	case $destfile in
+	*.lo)
+	  func_lo2o "$destfile"
+	  staticdest=$func_lo2o_result
+	  ;;
+	*.$objext)
+	  staticdest="$destfile"
+	  destfile=
+	  ;;
+	*)
+	  func_fatal_help "cannot copy a libtool object to \`$destfile'"
+	  ;;
+	esac
+
+	# Install the libtool object if requested.
+	test -n "$destfile" && \
+	  func_show_eval "$install_prog $file $destfile" 'exit $?'
+
+	# Install the old object if enabled.
+	if test "$build_old_libs" = yes; then
+	  # Deduce the name of the old-style object file.
+	  func_lo2o "$file"
+	  staticobj=$func_lo2o_result
+	  func_show_eval "$install_prog \$staticobj \$staticdest" 'exit $?'
+	fi
+	exit $EXIT_SUCCESS
+	;;
+
+      *)
+	# Figure out destination file name, if it wasn't already specified.
+	if test -n "$destname"; then
+	  destfile="$destdir/$destname"
+	else
+	  func_basename "$file"
+	  destfile="$func_basename_result"
+	  destfile="$destdir/$destfile"
+	fi
+
+	# If the file is missing, and there is a .exe on the end, strip it
+	# because it is most likely a libtool script we actually want to
+	# install
+	stripped_ext=""
+	case $file in
+	  *.exe)
+	    if test ! -f "$file"; then
+	      func_stripname '' '.exe' "$file"
+	      file=$func_stripname_result
+	      stripped_ext=".exe"
+	    fi
+	    ;;
+	esac
+
+	# Do a test to see if this is really a libtool program.
+	case $host in
+	*cygwin* | *mingw*)
+	    if func_ltwrapper_executable_p "$file"; then
+	      func_ltwrapper_scriptname "$file"
+	      wrapper=$func_ltwrapper_scriptname_result
+	    else
+	      func_stripname '' '.exe' "$file"
+	      wrapper=$func_stripname_result
+	    fi
+	    ;;
+	*)
+	    wrapper=$file
+	    ;;
+	esac
+	if func_ltwrapper_script_p "$wrapper"; then
+	  notinst_deplibs=
+	  relink_command=
+
+	  func_source "$wrapper"
+
+	  # Check the variables that should have been set.
+	  test -z "$generated_by_libtool_version" && \
+	    func_fatal_error "invalid libtool wrapper script \`$wrapper'"
+
+	  finalize=yes
+	  for lib in $notinst_deplibs; do
+	    # Check to see that each library is installed.
+	    libdir=
+	    if test -f "$lib"; then
+	      func_source "$lib"
+	    fi
+	    libfile="$libdir/"`$ECHO "X$lib" | $Xsed -e 's%^.*/%%g'` ### testsuite: skip nested quoting test
+	    if test -n "$libdir" && test ! -f "$libfile"; then
+	      func_warning "\`$lib' has not been installed in \`$libdir'"
+	      finalize=no
+	    fi
+	  done
+
+	  relink_command=
+	  func_source "$wrapper"
+
+	  outputname=
+	  if test "$fast_install" = no && test -n "$relink_command"; then
+	    $opt_dry_run || {
+	      if test "$finalize" = yes; then
+	        tmpdir=`func_mktempdir`
+		func_basename "$file$stripped_ext"
+		file="$func_basename_result"
+	        outputname="$tmpdir/$file"
+	        # Replace the output file specification.
+	        relink_command=`$ECHO "X$relink_command" | $Xsed -e 's%@OUTPUT@%'"$outputname"'%g'`
+
+	        $opt_silent || {
+	          func_quote_for_expand "$relink_command"
+		  eval "func_echo $func_quote_for_expand_result"
+	        }
+	        if eval "$relink_command"; then :
+	          else
+		  func_error "error: relink \`$file' with the above command before installing it"
+		  $opt_dry_run || ${RM}r "$tmpdir"
+		  continue
+	        fi
+	        file="$outputname"
+	      else
+	        func_warning "cannot relink \`$file'"
+	      fi
+	    }
+	  else
+	    # Install the binary that we compiled earlier.
+	    file=`$ECHO "X$file$stripped_ext" | $Xsed -e "s%\([^/]*\)$%$objdir/\1%"`
+	  fi
+	fi
+
+	# remove .exe since cygwin /usr/bin/install will append another
+	# one anyway
+	case $install_prog,$host in
+	*/usr/bin/install*,*cygwin*)
+	  case $file:$destfile in
+	  *.exe:*.exe)
+	    # this is ok
+	    ;;
+	  *.exe:*)
+	    destfile=$destfile.exe
+	    ;;
+	  *:*.exe)
+	    func_stripname '' '.exe' "$destfile"
+	    destfile=$func_stripname_result
+	    ;;
+	  esac
+	  ;;
+	esac
+	func_show_eval "$install_prog\$stripme \$file \$destfile" 'exit $?'
+	$opt_dry_run || if test -n "$outputname"; then
+	  ${RM}r "$tmpdir"
+	fi
+	;;
+      esac
+    done
+
+    for file in $staticlibs; do
+      func_basename "$file"
+      name="$func_basename_result"
+
+      # Set up the ranlib parameters.
+      oldlib="$destdir/$name"
+
+      func_show_eval "$install_prog \$file \$oldlib" 'exit $?'
+
+      if test -n "$stripme" && test -n "$old_striplib"; then
+	func_show_eval "$old_striplib $oldlib" 'exit $?'
+      fi
+
+      # Do each command in the postinstall commands.
+      func_execute_cmds "$old_postinstall_cmds" 'exit $?'
+    done
+
+    test -n "$future_libdirs" && \
+      func_warning "remember to run \`$progname --finish$future_libdirs'"
+
+    if test -n "$current_libdirs"; then
+      # Maybe just do a dry run.
+      $opt_dry_run && current_libdirs=" -n$current_libdirs"
+      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'
+    else
+      exit $EXIT_SUCCESS
+    fi
+}
+
+test "$mode" = install && func_mode_install ${1+"$@"}
+
+
+# func_generate_dlsyms outputname originator pic_p
+# Extract symbols from dlprefiles and create ${outputname}S.o with
+# a dlpreopen symbol table.
+func_generate_dlsyms ()
+{
+    $opt_debug
+    my_outputname="$1"
+    my_originator="$2"
+    my_pic_p="${3-no}"
+    my_prefix=`$ECHO "$my_originator" | sed 's%[^a-zA-Z0-9]%_%g'`
+    my_dlsyms=
+
+    if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+      if test -n "$NM" && test -n "$global_symbol_pipe"; then
+	my_dlsyms="${my_outputname}S.c"
+      else
+	func_error "not configured to extract global symbols from dlpreopened files"
+      fi
+    fi
+
+    if test -n "$my_dlsyms"; then
+      case $my_dlsyms in
+      "") ;;
+      *.c)
+	# Discover the nlist of each of the dlfiles.
+	nlist="$output_objdir/${my_outputname}.nm"
+
+	func_show_eval "$RM $nlist ${nlist}S ${nlist}T"
+
+	# Parse the name list into a source file.
+	func_verbose "creating $output_objdir/$my_dlsyms"
+
+	$opt_dry_run || $ECHO > "$output_objdir/$my_dlsyms" "\
+/* $my_dlsyms - symbol resolution table for \`$my_outputname' dlsym emulation. */
+/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */
+
+#ifdef __cplusplus
+extern \"C\" {
+#endif
+
+/* External symbol declarations for the compiler. */\
+"
+
+	if test "$dlself" = yes; then
+	  func_verbose "generating symbol list for \`$output'"
+
+	  $opt_dry_run || echo ': @PROGRAM@ ' > "$nlist"
+
+	  # Add our own program objects to the symbol list.
+	  progfiles=`$ECHO "X$objs$old_deplibs" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+	  for progfile in $progfiles; do
+	    func_verbose "extracting global C symbols from \`$progfile'"
+	    $opt_dry_run || eval "$NM $progfile | $global_symbol_pipe >> '$nlist'"
+	  done
+
+	  if test -n "$exclude_expsyms"; then
+	    $opt_dry_run || {
+	      eval '$EGREP -v " ($exclude_expsyms)$" "$nlist" > "$nlist"T'
+	      eval '$MV "$nlist"T "$nlist"'
+	    }
+	  fi
+
+	  if test -n "$export_symbols_regex"; then
+	    $opt_dry_run || {
+	      eval '$EGREP -e "$export_symbols_regex" "$nlist" > "$nlist"T'
+	      eval '$MV "$nlist"T "$nlist"'
+	    }
+	  fi
+
+	  # Prepare the list of exported symbols
+	  if test -z "$export_symbols"; then
+	    export_symbols="$output_objdir/$outputname.exp"
+	    $opt_dry_run || {
+	      $RM $export_symbols
+	      eval "${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \(.*\)$/\1/p' "'< "$nlist" > "$export_symbols"'
+	      case $host in
+	      *cygwin* | *mingw* | *cegcc* )
+                eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
+                eval 'cat "$export_symbols" >> "$output_objdir/$outputname.def"'
+	        ;;
+	      esac
+	    }
+	  else
+	    $opt_dry_run || {
+	      eval "${SED} -e 's/\([].[*^$]\)/\\\\\1/g' -e 's/^/ /' -e 's/$/$/'"' < "$export_symbols" > "$output_objdir/$outputname.exp"'
+	      eval '$GREP -f "$output_objdir/$outputname.exp" < "$nlist" > "$nlist"T'
+	      eval '$MV "$nlist"T "$nlist"'
+	      case $host in
+	        *cygwin | *mingw* | *cegcc* )
+	          eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
+	          eval 'cat "$nlist" >> "$output_objdir/$outputname.def"'
+	          ;;
+	      esac
+	    }
+	  fi
+	fi
+
+	for dlprefile in $dlprefiles; do
+	  func_verbose "extracting global C symbols from \`$dlprefile'"
+	  func_basename "$dlprefile"
+	  name="$func_basename_result"
+	  $opt_dry_run || {
+	    eval '$ECHO ": $name " >> "$nlist"'
+	    eval "$NM $dlprefile 2>/dev/null | $global_symbol_pipe >> '$nlist'"
+	  }
+	done
+
+	$opt_dry_run || {
+	  # Make sure we have at least an empty file.
+	  test -f "$nlist" || : > "$nlist"
+
+	  if test -n "$exclude_expsyms"; then
+	    $EGREP -v " ($exclude_expsyms)$" "$nlist" > "$nlist"T
+	    $MV "$nlist"T "$nlist"
+	  fi
+
+	  # Try sorting and uniquifying the output.
+	  if $GREP -v "^: " < "$nlist" |
+	      if sort -k 3 </dev/null >/dev/null 2>&1; then
+		sort -k 3
+	      else
+		sort +2
+	      fi |
+	      uniq > "$nlist"S; then
+	    :
+	  else
+	    $GREP -v "^: " < "$nlist" > "$nlist"S
+	  fi
+
+	  if test -f "$nlist"S; then
+	    eval "$global_symbol_to_cdecl"' < "$nlist"S >> "$output_objdir/$my_dlsyms"'
+	  else
+	    $ECHO '/* NONE */' >> "$output_objdir/$my_dlsyms"
+	  fi
+
+	  $ECHO >> "$output_objdir/$my_dlsyms" "\
+
+/* The mapping between symbol names and symbols.  */
+typedef struct {
+  const char *name;
+  void *address;
+} lt_dlsymlist;
+"
+	  case $host in
+	  *cygwin* | *mingw* | *cegcc* )
+	    $ECHO >> "$output_objdir/$my_dlsyms" "\
+/* DATA imports from DLLs on WIN32 con't be const, because
+   runtime relocations are performed -- see ld's documentation
+   on pseudo-relocs.  */"
+	    lt_dlsym_const= ;;
+	  *osf5*)
+	    echo >> "$output_objdir/$my_dlsyms" "\
+/* This system does not cope well with relocations in const data */"
+	    lt_dlsym_const= ;;
+	  *)
+	    lt_dlsym_const=const ;;
+	  esac
+
+	  $ECHO >> "$output_objdir/$my_dlsyms" "\
+extern $lt_dlsym_const lt_dlsymlist
+lt_${my_prefix}_LTX_preloaded_symbols[];
+$lt_dlsym_const lt_dlsymlist
+lt_${my_prefix}_LTX_preloaded_symbols[] =
+{\
+  { \"$my_originator\", (void *) 0 },"
+
+	  case $need_lib_prefix in
+	  no)
+	    eval "$global_symbol_to_c_name_address" < "$nlist" >> "$output_objdir/$my_dlsyms"
+	    ;;
+	  *)
+	    eval "$global_symbol_to_c_name_address_lib_prefix" < "$nlist" >> "$output_objdir/$my_dlsyms"
+	    ;;
+	  esac
+	  $ECHO >> "$output_objdir/$my_dlsyms" "\
+  {0, (void *) 0}
+};
+
+/* This works around a problem in FreeBSD linker */
+#ifdef FREEBSD_WORKAROUND
+static const void *lt_preloaded_setup() {
+  return lt_${my_prefix}_LTX_preloaded_symbols;
+}
+#endif
+
+#ifdef __cplusplus
+}
+#endif\
+"
+	} # !$opt_dry_run
+
+	pic_flag_for_symtable=
+	case "$compile_command " in
+	*" -static "*) ;;
+	*)
+	  case $host in
+	  # compiling the symbol table file with pic_flag works around
+	  # a FreeBSD bug that causes programs to crash when -lm is
+	  # linked before any other PIC object.  But we must not use
+	  # pic_flag when linking with -static.  The problem exists in
+	  # FreeBSD 2.2.6 and is fixed in FreeBSD 3.1.
+	  *-*-freebsd2*|*-*-freebsd3.0*|*-*-freebsdelf3.0*)
+	    pic_flag_for_symtable=" $pic_flag -DFREEBSD_WORKAROUND" ;;
+	  *-*-hpux*)
+	    pic_flag_for_symtable=" $pic_flag"  ;;
+	  *)
+	    if test "X$my_pic_p" != Xno; then
+	      pic_flag_for_symtable=" $pic_flag"
+	    fi
+	    ;;
+	  esac
+	  ;;
+	esac
+	symtab_cflags=
+	for arg in $LTCFLAGS; do
+	  case $arg in
+	  -pie | -fpie | -fPIE) ;;
+	  *) symtab_cflags="$symtab_cflags $arg" ;;
+	  esac
+	done
+
+	# Now compile the dynamic symbol file.
+	func_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable "$my_dlsyms")' 'exit $?'
+
+	# Clean up the generated files.
+	func_show_eval '$RM "$output_objdir/$my_dlsyms" "$nlist" "${nlist}S" "${nlist}T"'
+
+	# Transform the symbol file into the correct name.
+	symfileobj="$output_objdir/${my_outputname}S.$objext"
+	case $host in
+	*cygwin* | *mingw* | *cegcc* )
+	  if test -f "$output_objdir/$my_outputname.def"; then
+	    compile_command=`$ECHO "X$compile_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%"`
+	    finalize_command=`$ECHO "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$output_objdir/$my_outputname.def $symfileobj%"`
+	  else
+	    compile_command=`$ECHO "X$compile_command" | $Xsed -e "s%@SYMFILE@%$symfileobj%"`
+	    finalize_command=`$ECHO "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$symfileobj%"`
+	  fi
+	  ;;
+	*)
+	  compile_command=`$ECHO "X$compile_command" | $Xsed -e "s%@SYMFILE@%$symfileobj%"`
+	  finalize_command=`$ECHO "X$finalize_command" | $Xsed -e "s%@SYMFILE@%$symfileobj%"`
+	  ;;
+	esac
+	;;
+      *)
+	func_fatal_error "unknown suffix for \`$my_dlsyms'"
+	;;
+      esac
+    else
+      # We keep going just in case the user didn't refer to
+      # lt_preloaded_symbols.  The linker will fail if global_symbol_pipe
+      # really was required.
+
+      # Nullify the symbol file.
+      compile_command=`$ECHO "X$compile_command" | $Xsed -e "s% @SYMFILE@%%"`
+      finalize_command=`$ECHO "X$finalize_command" | $Xsed -e "s% @SYMFILE@%%"`
+    fi
+}
+
+# func_win32_libid arg
+# return the library type of file 'arg'
+#
+# Need a lot of goo to handle *both* DLLs and import libs
+# Has to be a shell function in order to 'eat' the argument
+# that is supplied when $file_magic_command is called.
+func_win32_libid ()
+{
+  $opt_debug
+  win32_libid_type="unknown"
+  win32_fileres=`file -L $1 2>/dev/null`
+  case $win32_fileres in
+  *ar\ archive\ import\ library*) # definitely import
+    win32_libid_type="x86 archive import"
+    ;;
+  *ar\ archive*) # could be an import, or static
+    if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |
+       $EGREP 'file format pe-i386(.*architecture: i386)?' >/dev/null ; then
+      win32_nmres=`eval $NM -f posix -A $1 |
+	$SED -n -e '
+	    1,100{
+		/ I /{
+		    s,.*,import,
+		    p
+		    q
+		}
+	    }'`
+      case $win32_nmres in
+      import*)  win32_libid_type="x86 archive import";;
+      *)        win32_libid_type="x86 archive static";;
+      esac
+    fi
+    ;;
+  *DLL*)
+    win32_libid_type="x86 DLL"
+    ;;
+  *executable*) # but shell scripts are "executable" too...
+    case $win32_fileres in
+    *MS\ Windows\ PE\ Intel*)
+      win32_libid_type="x86 DLL"
+      ;;
+    esac
+    ;;
+  esac
+  $ECHO "$win32_libid_type"
+}
+
+
+
+# func_extract_an_archive dir oldlib
+func_extract_an_archive ()
+{
+    $opt_debug
+    f_ex_an_ar_dir="$1"; shift
+    f_ex_an_ar_oldlib="$1"
+    func_show_eval "(cd \$f_ex_an_ar_dir && $AR x \"\$f_ex_an_ar_oldlib\")" 'exit $?'
+    if ($AR t "$f_ex_an_ar_oldlib" | sort | sort -uc >/dev/null 2>&1); then
+     :
+    else
+      func_fatal_error "object name conflicts in archive: $f_ex_an_ar_dir/$f_ex_an_ar_oldlib"
+    fi
+}
+
+
+# func_extract_archives gentop oldlib ...
+func_extract_archives ()
+{
+    $opt_debug
+    my_gentop="$1"; shift
+    my_oldlibs=${1+"$@"}
+    my_oldobjs=""
+    my_xlib=""
+    my_xabs=""
+    my_xdir=""
+
+    for my_xlib in $my_oldlibs; do
+      # Extract the objects.
+      case $my_xlib in
+	[\\/]* | [A-Za-z]:[\\/]*) my_xabs="$my_xlib" ;;
+	*) my_xabs=`pwd`"/$my_xlib" ;;
+      esac
+      func_basename "$my_xlib"
+      my_xlib="$func_basename_result"
+      my_xlib_u=$my_xlib
+      while :; do
+        case " $extracted_archives " in
+	*" $my_xlib_u "*)
+	  func_arith $extracted_serial + 1
+	  extracted_serial=$func_arith_result
+	  my_xlib_u=lt$extracted_serial-$my_xlib ;;
+	*) break ;;
+	esac
+      done
+      extracted_archives="$extracted_archives $my_xlib_u"
+      my_xdir="$my_gentop/$my_xlib_u"
+
+      func_mkdir_p "$my_xdir"
+
+      case $host in
+      *-darwin*)
+	func_verbose "Extracting $my_xabs"
+	# Do not bother doing anything if just a dry run
+	$opt_dry_run || {
+	  darwin_orig_dir=`pwd`
+	  cd $my_xdir || exit $?
+	  darwin_archive=$my_xabs
+	  darwin_curdir=`pwd`
+	  darwin_base_archive=`basename "$darwin_archive"`
+	  darwin_arches=`$LIPO -info "$darwin_archive" 2>/dev/null | $GREP Architectures 2>/dev/null || true`
+	  if test -n "$darwin_arches"; then
+	    darwin_arches=`$ECHO "$darwin_arches" | $SED -e 's/.*are://'`
+	    darwin_arch=
+	    func_verbose "$darwin_base_archive has multiple architectures $darwin_arches"
+	    for darwin_arch in  $darwin_arches ; do
+	      func_mkdir_p "unfat-$$/${darwin_base_archive}-${darwin_arch}"
+	      $LIPO -thin $darwin_arch -output "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}" "${darwin_archive}"
+	      cd "unfat-$$/${darwin_base_archive}-${darwin_arch}"
+	      func_extract_an_archive "`pwd`" "${darwin_base_archive}"
+	      cd "$darwin_curdir"
+	      $RM "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}"
+	    done # $darwin_arches
+            ## Okay now we've a bunch of thin objects, gotta fatten them up :)
+	    darwin_filelist=`find unfat-$$ -type f -name \*.o -print -o -name \*.lo -print | $SED -e "$basename" | sort -u`
+	    darwin_file=
+	    darwin_files=
+	    for darwin_file in $darwin_filelist; do
+	      darwin_files=`find unfat-$$ -name $darwin_file -print | $NL2SP`
+	      $LIPO -create -output "$darwin_file" $darwin_files
+	    done # $darwin_filelist
+	    $RM -rf unfat-$$
+	    cd "$darwin_orig_dir"
+	  else
+	    cd $darwin_orig_dir
+	    func_extract_an_archive "$my_xdir" "$my_xabs"
+	  fi # $darwin_arches
+	} # !$opt_dry_run
+	;;
+      *)
+        func_extract_an_archive "$my_xdir" "$my_xabs"
+	;;
+      esac
+      my_oldobjs="$my_oldobjs "`find $my_xdir -name \*.$objext -print -o -name \*.lo -print | $NL2SP`
+    done
+
+    func_extract_archives_result="$my_oldobjs"
+}
+
+
+
+# func_emit_wrapper_part1 [arg=no]
+#
+# Emit the first part of a libtool wrapper script on stdout.
+# For more information, see the description associated with
+# func_emit_wrapper(), below.
+func_emit_wrapper_part1 ()
+{
+	func_emit_wrapper_part1_arg1=no
+	if test -n "$1" ; then
+	  func_emit_wrapper_part1_arg1=$1
+	fi
+
+	$ECHO "\
+#! $SHELL
+
+# $output - temporary wrapper script for $objdir/$outputname
+# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
+#
+# The $output program cannot be directly executed until all the libtool
+# libraries that it depends on are installed.
+#
+# This wrapper script should never be moved out of the build directory.
+# If it is, it will not operate correctly.
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+Xsed='${SED} -e 1s/^X//'
+sed_quote_subst='$sed_quote_subst'
+
+# Be Bourne compatible
+if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on \${1+\"\$@\"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '\${1+\"\$@\"}'='\"\$@\"'
+  setopt NO_GLOB_SUBST
+else
+  case \`(set -o) 2>/dev/null\` in *posix*) set -o posix;; esac
+fi
+BIN_SH=xpg4; export BIN_SH # for Tru64
+DUALCASE=1; export DUALCASE # for MKS sh
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+relink_command=\"$relink_command\"
+
+# This environment variable determines our operation mode.
+if test \"\$libtool_install_magic\" = \"$magic\"; then
+  # install mode needs the following variables:
+  generated_by_libtool_version='$macro_version'
+  notinst_deplibs='$notinst_deplibs'
+else
+  # When we are sourced in execute mode, \$file and \$ECHO are already set.
+  if test \"\$libtool_execute_magic\" != \"$magic\"; then
+    ECHO=\"$qecho\"
+    file=\"\$0\"
+    # Make sure echo works.
+    if test \"X\$1\" = X--no-reexec; then
+      # Discard the --no-reexec flag, and continue.
+      shift
+    elif test \"X\`{ \$ECHO '\t'; } 2>/dev/null\`\" = 'X\t'; then
+      # Yippee, \$ECHO works!
+      :
+    else
+      # Restart under the correct shell, and then maybe \$ECHO will work.
+      exec $SHELL \"\$0\" --no-reexec \${1+\"\$@\"}
+    fi
+  fi\
+"
+	$ECHO "\
+
+  # Find the directory that this script lives in.
+  thisdir=\`\$ECHO \"X\$file\" | \$Xsed -e 's%/[^/]*$%%'\`
+  test \"x\$thisdir\" = \"x\$file\" && thisdir=.
+
+  # Follow symbolic links until we get to the real thisdir.
+  file=\`ls -ld \"\$file\" | ${SED} -n 's/.*-> //p'\`
+  while test -n \"\$file\"; do
+    destdir=\`\$ECHO \"X\$file\" | \$Xsed -e 's%/[^/]*\$%%'\`
+
+    # If there was a directory component, then change thisdir.
+    if test \"x\$destdir\" != \"x\$file\"; then
+      case \"\$destdir\" in
+      [\\\\/]* | [A-Za-z]:[\\\\/]*) thisdir=\"\$destdir\" ;;
+      *) thisdir=\"\$thisdir/\$destdir\" ;;
+      esac
+    fi
+
+    file=\`\$ECHO \"X\$file\" | \$Xsed -e 's%^.*/%%'\`
+    file=\`ls -ld \"\$thisdir/\$file\" | ${SED} -n 's/.*-> //p'\`
+  done
+"
+}
+# end: func_emit_wrapper_part1
+
+# func_emit_wrapper_part2 [arg=no]
+#
+# Emit the second part of a libtool wrapper script on stdout.
+# For more information, see the description associated with
+# func_emit_wrapper(), below.
+func_emit_wrapper_part2 ()
+{
+	func_emit_wrapper_part2_arg1=no
+	if test -n "$1" ; then
+	  func_emit_wrapper_part2_arg1=$1
+	fi
+
+	$ECHO "\
+
+  # Usually 'no', except on cygwin/mingw when embedded into
+  # the cwrapper.
+  WRAPPER_SCRIPT_BELONGS_IN_OBJDIR=$func_emit_wrapper_part2_arg1
+  if test \"\$WRAPPER_SCRIPT_BELONGS_IN_OBJDIR\" = \"yes\"; then
+    # special case for '.'
+    if test \"\$thisdir\" = \".\"; then
+      thisdir=\`pwd\`
+    fi
+    # remove .libs from thisdir
+    case \"\$thisdir\" in
+    *[\\\\/]$objdir ) thisdir=\`\$ECHO \"X\$thisdir\" | \$Xsed -e 's%[\\\\/][^\\\\/]*$%%'\` ;;
+    $objdir )   thisdir=. ;;
+    esac
+  fi
+
+  # Try to get the absolute directory name.
+  absdir=\`cd \"\$thisdir\" && pwd\`
+  test -n \"\$absdir\" && thisdir=\"\$absdir\"
+"
+
+	if test "$fast_install" = yes; then
+	  $ECHO "\
+  program=lt-'$outputname'$exeext
+  progdir=\"\$thisdir/$objdir\"
+
+  if test ! -f \"\$progdir/\$program\" ||
+     { file=\`ls -1dt \"\$progdir/\$program\" \"\$progdir/../\$program\" 2>/dev/null | ${SED} 1q\`; \\
+       test \"X\$file\" != \"X\$progdir/\$program\"; }; then
+
+    file=\"\$\$-\$program\"
+
+    if test ! -d \"\$progdir\"; then
+      $MKDIR \"\$progdir\"
+    else
+      $RM \"\$progdir/\$file\"
+    fi"
+
+	  $ECHO "\
+
+    # relink executable if necessary
+    if test -n \"\$relink_command\"; then
+      if relink_command_output=\`eval \$relink_command 2>&1\`; then :
+      else
+	$ECHO \"\$relink_command_output\" >&2
+	$RM \"\$progdir/\$file\"
+	exit 1
+      fi
+    fi
+
+    $MV \"\$progdir/\$file\" \"\$progdir/\$program\" 2>/dev/null ||
+    { $RM \"\$progdir/\$program\";
+      $MV \"\$progdir/\$file\" \"\$progdir/\$program\"; }
+    $RM \"\$progdir/\$file\"
+  fi"
+	else
+	  $ECHO "\
+  program='$outputname'
+  progdir=\"\$thisdir/$objdir\"
+"
+	fi
+
+	$ECHO "\
+
+  if test -f \"\$progdir/\$program\"; then"
+
+	# Export our shlibpath_var if we have one.
+	if test "$shlibpath_overrides_runpath" = yes && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
+	  $ECHO "\
+    # Add our own library path to $shlibpath_var
+    $shlibpath_var=\"$temp_rpath\$$shlibpath_var\"
+
+    # Some systems cannot cope with colon-terminated $shlibpath_var
+    # The second colon is a workaround for a bug in BeOS R4 sed
+    $shlibpath_var=\`\$ECHO \"X\$$shlibpath_var\" | \$Xsed -e 's/::*\$//'\`
+
+    export $shlibpath_var
+"
+	fi
+
+	# fixup the dll searchpath if we need to.
+	if test -n "$dllsearchpath"; then
+	  $ECHO "\
+    # Add the dll search path components to the executable PATH
+    PATH=$dllsearchpath:\$PATH
+"
+	fi
+
+	$ECHO "\
+    if test \"\$libtool_execute_magic\" != \"$magic\"; then
+      # Run the actual program with our arguments.
+"
+	case $host in
+	# Backslashes separate directories on plain windows
+	*-*-mingw | *-*-os2* | *-cegcc*)
+	  $ECHO "\
+      exec \"\$progdir\\\\\$program\" \${1+\"\$@\"}
+"
+	  ;;
+
+	*)
+	  $ECHO "\
+      exec \"\$progdir/\$program\" \${1+\"\$@\"}
+"
+	  ;;
+	esac
+	$ECHO "\
+      \$ECHO \"\$0: cannot exec \$program \$*\" 1>&2
+      exit 1
+    fi
+  else
+    # The program doesn't exist.
+    \$ECHO \"\$0: error: \\\`\$progdir/\$program' does not exist\" 1>&2
+    \$ECHO \"This script is just a wrapper for \$program.\" 1>&2
+    $ECHO \"See the $PACKAGE documentation for more information.\" 1>&2
+    exit 1
+  fi
+fi\
+"
+}
+# end: func_emit_wrapper_part2
+
+
+# func_emit_wrapper [arg=no]
+#
+# Emit a libtool wrapper script on stdout.
+# Don't directly open a file because we may want to
+# incorporate the script contents within a cygwin/mingw
+# wrapper executable.  Must ONLY be called from within
+# func_mode_link because it depends on a number of variables
+# set therein.
+#
+# ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR
+# variable will take.  If 'yes', then the emitted script
+# will assume that the directory in which it is stored is
+# the $objdir directory.  This is a cygwin/mingw-specific
+# behavior.
+func_emit_wrapper ()
+{
+	func_emit_wrapper_arg1=no
+	if test -n "$1" ; then
+	  func_emit_wrapper_arg1=$1
+	fi
+
+	# split this up so that func_emit_cwrapperexe_src
+	# can call each part independently.
+	func_emit_wrapper_part1 "${func_emit_wrapper_arg1}"
+	func_emit_wrapper_part2 "${func_emit_wrapper_arg1}"
+}
+
+
+# func_to_host_path arg
+#
+# Convert paths to host format when used with build tools.
+# Intended for use with "native" mingw (where libtool itself
+# is running under the msys shell), or in the following cross-
+# build environments:
+#    $build          $host
+#    mingw (msys)    mingw  [e.g. native]
+#    cygwin          mingw
+#    *nix + wine     mingw
+# where wine is equipped with the `winepath' executable.
+# In the native mingw case, the (msys) shell automatically
+# converts paths for any non-msys applications it launches,
+# but that facility isn't available from inside the cwrapper.
+# Similar accommodations are necessary for $host mingw and
+# $build cygwin.  Calling this function does no harm for other
+# $host/$build combinations not listed above.
+#
+# ARG is the path (on $build) that should be converted to
+# the proper representation for $host. The result is stored
+# in $func_to_host_path_result.
+func_to_host_path ()
+{
+  func_to_host_path_result="$1"
+  if test -n "$1" ; then
+    case $host in
+      *mingw* )
+        lt_sed_naive_backslashify='s|\\\\*|\\|g;s|/|\\|g;s|\\|\\\\|g'
+        case $build in
+          *mingw* ) # actually, msys
+            # awkward: cmd appends spaces to result
+            lt_sed_strip_trailing_spaces="s/[ ]*\$//"
+            func_to_host_path_tmp1=`( cmd //c echo "$1" |\
+              $SED -e "$lt_sed_strip_trailing_spaces" ) 2>/dev/null || echo ""`
+            func_to_host_path_result=`echo "$func_to_host_path_tmp1" |\
+              $SED -e "$lt_sed_naive_backslashify"`
+            ;;
+          *cygwin* )
+            func_to_host_path_tmp1=`cygpath -w "$1"`
+            func_to_host_path_result=`echo "$func_to_host_path_tmp1" |\
+              $SED -e "$lt_sed_naive_backslashify"`
+            ;;
+          * )
+            # Unfortunately, winepath does not exit with a non-zero
+            # error code, so we are forced to check the contents of
+            # stdout. On the other hand, if the command is not
+            # found, the shell will set an exit code of 127 and print
+            # *an error message* to stdout. So we must check for both
+            # error code of zero AND non-empty stdout, which explains
+            # the odd construction:
+            func_to_host_path_tmp1=`winepath -w "$1" 2>/dev/null`
+            if test "$?" -eq 0 && test -n "${func_to_host_path_tmp1}"; then
+              func_to_host_path_result=`echo "$func_to_host_path_tmp1" |\
+                $SED -e "$lt_sed_naive_backslashify"`
+            else
+              # Allow warning below.
+              func_to_host_path_result=""
+            fi
+            ;;
+        esac
+        if test -z "$func_to_host_path_result" ; then
+          func_error "Could not determine host path corresponding to"
+          func_error "  '$1'"
+          func_error "Continuing, but uninstalled executables may not work."
+          # Fallback:
+          func_to_host_path_result="$1"
+        fi
+        ;;
+    esac
+  fi
+}
+# end: func_to_host_path
+
+# func_to_host_pathlist arg
+#
+# Convert pathlists to host format when used with build tools.
+# See func_to_host_path(), above. This function supports the
+# following $build/$host combinations (but does no harm for
+# combinations not listed here):
+#    $build          $host
+#    mingw (msys)    mingw  [e.g. native]
+#    cygwin          mingw
+#    *nix + wine     mingw
+#
+# Path separators are also converted from $build format to
+# $host format. If ARG begins or ends with a path separator
+# character, it is preserved (but converted to $host format)
+# on output.
+#
+# ARG is a pathlist (on $build) that should be converted to
+# the proper representation on $host. The result is stored
+# in $func_to_host_pathlist_result.
+func_to_host_pathlist ()
+{
+  func_to_host_pathlist_result="$1"
+  if test -n "$1" ; then
+    case $host in
+      *mingw* )
+        lt_sed_naive_backslashify='s|\\\\*|\\|g;s|/|\\|g;s|\\|\\\\|g'
+        # Remove leading and trailing path separator characters from
+        # ARG. msys behavior is inconsistent here, cygpath turns them
+        # into '.;' and ';.', and winepath ignores them completely.
+        func_to_host_pathlist_tmp2="$1"
+        # Once set for this call, this variable should not be
+        # reassigned. It is used in tha fallback case.
+        func_to_host_pathlist_tmp1=`echo "$func_to_host_pathlist_tmp2" |\
+          $SED -e 's|^:*||' -e 's|:*$||'`
+        case $build in
+          *mingw* ) # Actually, msys.
+            # Awkward: cmd appends spaces to result.
+            lt_sed_strip_trailing_spaces="s/[ ]*\$//"
+            func_to_host_pathlist_tmp2=`( cmd //c echo "$func_to_host_pathlist_tmp1" |\
+              $SED -e "$lt_sed_strip_trailing_spaces" ) 2>/dev/null || echo ""`
+            func_to_host_pathlist_result=`echo "$func_to_host_pathlist_tmp2" |\
+              $SED -e "$lt_sed_naive_backslashify"`
+            ;;
+          *cygwin* )
+            func_to_host_pathlist_tmp2=`cygpath -w -p "$func_to_host_pathlist_tmp1"`
+            func_to_host_pathlist_result=`echo "$func_to_host_pathlist_tmp2" |\
+              $SED -e "$lt_sed_naive_backslashify"`
+            ;;
+          * )
+            # unfortunately, winepath doesn't convert pathlists
+            func_to_host_pathlist_result=""
+            func_to_host_pathlist_oldIFS=$IFS
+            IFS=:
+            for func_to_host_pathlist_f in $func_to_host_pathlist_tmp1 ; do
+              IFS=$func_to_host_pathlist_oldIFS
+              if test -n "$func_to_host_pathlist_f" ; then
+                func_to_host_path "$func_to_host_pathlist_f"
+                if test -n "$func_to_host_path_result" ; then
+                  if test -z "$func_to_host_pathlist_result" ; then
+                    func_to_host_pathlist_result="$func_to_host_path_result"
+                  else
+                    func_to_host_pathlist_result="$func_to_host_pathlist_result;$func_to_host_path_result"
+                  fi
+                fi
+              fi
+              IFS=:
+            done
+            IFS=$func_to_host_pathlist_oldIFS
+            ;;
+        esac
+        if test -z "$func_to_host_pathlist_result" ; then
+          func_error "Could not determine the host path(s) corresponding to"
+          func_error "  '$1'"
+          func_error "Continuing, but uninstalled executables may not work."
+          # Fallback. This may break if $1 contains DOS-style drive
+          # specifications. The fix is not to complicate the expression
+          # below, but for the user to provide a working wine installation
+          # with winepath so that path translation in the cross-to-mingw
+          # case works properly.
+          lt_replace_pathsep_nix_to_dos="s|:|;|g"
+          func_to_host_pathlist_result=`echo "$func_to_host_pathlist_tmp1" |\
+            $SED -e "$lt_replace_pathsep_nix_to_dos"`
+        fi
+        # Now, add the leading and trailing path separators back
+        case "$1" in
+          :* ) func_to_host_pathlist_result=";$func_to_host_pathlist_result"
+            ;;
+        esac
+        case "$1" in
+          *: ) func_to_host_pathlist_result="$func_to_host_pathlist_result;"
+            ;;
+        esac
+        ;;
+    esac
+  fi
+}
+# end: func_to_host_pathlist
+
+# func_emit_cwrapperexe_src
+# emit the source code for a wrapper executable on stdout
+# Must ONLY be called from within func_mode_link because
+# it depends on a number of variable set therein.
+func_emit_cwrapperexe_src ()
+{
+	cat <<EOF
+
+/* $cwrappersource - temporary wrapper executable for $objdir/$outputname
+   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
+
+   The $output program cannot be directly executed until all the libtool
+   libraries that it depends on are installed.
+
+   This wrapper executable should never be moved out of the build directory.
+   If it is, it will not operate correctly.
+
+   Currently, it simply execs the wrapper *script* "$SHELL $output",
+   but could eventually absorb all of the scripts functionality and
+   exec $objdir/$outputname directly.
+*/
+EOF
+	    cat <<"EOF"
+#include <stdio.h>
+#include <stdlib.h>
+#ifdef _MSC_VER
+# include <direct.h>
+# include <process.h>
+# include <io.h>
+# define setmode _setmode
+#else
+# include <unistd.h>
+# include <stdint.h>
+# ifdef __CYGWIN__
+#  include <io.h>
+#  define HAVE_SETENV
+#  ifdef __STRICT_ANSI__
+char *realpath (const char *, char *);
+int putenv (char *);
+int setenv (const char *, const char *, int);
+#  endif
+# endif
+#endif
+#include <malloc.h>
+#include <stdarg.h>
+#include <assert.h>
+#include <string.h>
+#include <ctype.h>
+#include <errno.h>
+#include <fcntl.h>
+#include <sys/stat.h>
+
+#if defined(PATH_MAX)
+# define LT_PATHMAX PATH_MAX
+#elif defined(MAXPATHLEN)
+# define LT_PATHMAX MAXPATHLEN
+#else
+# define LT_PATHMAX 1024
+#endif
+
+#ifndef S_IXOTH
+# define S_IXOTH 0
+#endif
+#ifndef S_IXGRP
+# define S_IXGRP 0
+#endif
+
+#ifdef _MSC_VER
+# define S_IXUSR _S_IEXEC
+# define stat _stat
+# ifndef _INTPTR_T_DEFINED
+#  define intptr_t int
+# endif
+#endif
+
+#ifndef DIR_SEPARATOR
+# define DIR_SEPARATOR '/'
+# define PATH_SEPARATOR ':'
+#endif
+
+#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \
+  defined (__OS2__)
+# define HAVE_DOS_BASED_FILE_SYSTEM
+# define FOPEN_WB "wb"
+# ifndef DIR_SEPARATOR_2
+#  define DIR_SEPARATOR_2 '\\'
+# endif
+# ifndef PATH_SEPARATOR_2
+#  define PATH_SEPARATOR_2 ';'
+# endif
+#endif
+
+#ifndef DIR_SEPARATOR_2
+# define IS_DIR_SEPARATOR(ch) ((ch) == DIR_SEPARATOR)
+#else /* DIR_SEPARATOR_2 */
+# define IS_DIR_SEPARATOR(ch) \
+	(((ch) == DIR_SEPARATOR) || ((ch) == DIR_SEPARATOR_2))
+#endif /* DIR_SEPARATOR_2 */
+
+#ifndef PATH_SEPARATOR_2
+# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR)
+#else /* PATH_SEPARATOR_2 */
+# define IS_PATH_SEPARATOR(ch) ((ch) == PATH_SEPARATOR_2)
+#endif /* PATH_SEPARATOR_2 */
+
+#ifdef __CYGWIN__
+# define FOPEN_WB "wb"
+#endif
+
+#ifndef FOPEN_WB
+# define FOPEN_WB "w"
+#endif
+#ifndef _O_BINARY
+# define _O_BINARY 0
+#endif
+
+#define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))
+#define XFREE(stale) do { \
+  if (stale) { free ((void *) stale); stale = 0; } \
+} while (0)
+
+#undef LTWRAPPER_DEBUGPRINTF
+#if defined DEBUGWRAPPER
+# define LTWRAPPER_DEBUGPRINTF(args) ltwrapper_debugprintf args
+static void
+ltwrapper_debugprintf (const char *fmt, ...)
+{
+    va_list args;
+    va_start (args, fmt);
+    (void) vfprintf (stderr, fmt, args);
+    va_end (args);
+}
+#else
+# define LTWRAPPER_DEBUGPRINTF(args)
+#endif
+
+const char *program_name = NULL;
+
+void *xmalloc (size_t num);
+char *xstrdup (const char *string);
+const char *base_name (const char *name);
+char *find_executable (const char *wrapper);
+char *chase_symlinks (const char *pathspec);
+int make_executable (const char *path);
+int check_executable (const char *path);
+char *strendzap (char *str, const char *pat);
+void lt_fatal (const char *message, ...);
+void lt_setenv (const char *name, const char *value);
+char *lt_extend_str (const char *orig_value, const char *add, int to_end);
+void lt_opt_process_env_set (const char *arg);
+void lt_opt_process_env_prepend (const char *arg);
+void lt_opt_process_env_append (const char *arg);
+int lt_split_name_value (const char *arg, char** name, char** value);
+void lt_update_exe_path (const char *name, const char *value);
+void lt_update_lib_path (const char *name, const char *value);
+
+static const char *script_text_part1 =
+EOF
+
+	    func_emit_wrapper_part1 yes |
+	        $SED -e 's/\([\\"]\)/\\\1/g' \
+	             -e 's/^/  "/' -e 's/$/\\n"/'
+	    echo ";"
+	    cat <<EOF
+
+static const char *script_text_part2 =
+EOF
+	    func_emit_wrapper_part2 yes |
+	        $SED -e 's/\([\\"]\)/\\\1/g' \
+	             -e 's/^/  "/' -e 's/$/\\n"/'
+	    echo ";"
+
+	    cat <<EOF
+const char * MAGIC_EXE = "$magic_exe";
+const char * LIB_PATH_VARNAME = "$shlibpath_var";
+EOF
+
+	    if test "$shlibpath_overrides_runpath" = yes && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
+              func_to_host_pathlist "$temp_rpath"
+	      cat <<EOF
+const char * LIB_PATH_VALUE   = "$func_to_host_pathlist_result";
+EOF
+	    else
+	      cat <<"EOF"
+const char * LIB_PATH_VALUE   = "";
+EOF
+	    fi
+
+	    if test -n "$dllsearchpath"; then
+              func_to_host_pathlist "$dllsearchpath:"
+	      cat <<EOF
+const char * EXE_PATH_VARNAME = "PATH";
+const char * EXE_PATH_VALUE   = "$func_to_host_pathlist_result";
+EOF
+	    else
+	      cat <<"EOF"
+const char * EXE_PATH_VARNAME = "";
+const char * EXE_PATH_VALUE   = "";
+EOF
+	    fi
+
+	    if test "$fast_install" = yes; then
+	      cat <<EOF
+const char * TARGET_PROGRAM_NAME = "lt-$outputname"; /* hopefully, no .exe */
+EOF
+	    else
+	      cat <<EOF
+const char * TARGET_PROGRAM_NAME = "$outputname"; /* hopefully, no .exe */
+EOF
+	    fi
+
+
+	    cat <<"EOF"
+
+#define LTWRAPPER_OPTION_PREFIX         "--lt-"
+#define LTWRAPPER_OPTION_PREFIX_LENGTH  5
+
+static const size_t opt_prefix_len         = LTWRAPPER_OPTION_PREFIX_LENGTH;
+static const char *ltwrapper_option_prefix = LTWRAPPER_OPTION_PREFIX;
+
+static const char *dumpscript_opt       = LTWRAPPER_OPTION_PREFIX "dump-script";
+
+static const size_t env_set_opt_len     = LTWRAPPER_OPTION_PREFIX_LENGTH + 7;
+static const char *env_set_opt          = LTWRAPPER_OPTION_PREFIX "env-set";
+  /* argument is putenv-style "foo=bar", value of foo is set to bar */
+
+static const size_t env_prepend_opt_len = LTWRAPPER_OPTION_PREFIX_LENGTH + 11;
+static const char *env_prepend_opt      = LTWRAPPER_OPTION_PREFIX "env-prepend";
+  /* argument is putenv-style "foo=bar", new value of foo is bar${foo} */
+
+static const size_t env_append_opt_len  = LTWRAPPER_OPTION_PREFIX_LENGTH + 10;
+static const char *env_append_opt       = LTWRAPPER_OPTION_PREFIX "env-append";
+  /* argument is putenv-style "foo=bar", new value of foo is ${foo}bar */
+
+int
+main (int argc, char *argv[])
+{
+  char **newargz;
+  int  newargc;
+  char *tmp_pathspec;
+  char *actual_cwrapper_path;
+  char *actual_cwrapper_name;
+  char *target_name;
+  char *lt_argv_zero;
+  intptr_t rval = 127;
+
+  int i;
+
+  program_name = (char *) xstrdup (base_name (argv[0]));
+  LTWRAPPER_DEBUGPRINTF (("(main) argv[0]      : %s\n", argv[0]));
+  LTWRAPPER_DEBUGPRINTF (("(main) program_name : %s\n", program_name));
+
+  /* very simple arg parsing; don't want to rely on getopt */
+  for (i = 1; i < argc; i++)
+    {
+      if (strcmp (argv[i], dumpscript_opt) == 0)
+	{
+EOF
+	    case "$host" in
+	      *mingw* | *cygwin* )
+		# make stdout use "unix" line endings
+		echo "          setmode(1,_O_BINARY);"
+		;;
+	      esac
+
+	    cat <<"EOF"
+	  printf ("%s", script_text_part1);
+	  printf ("%s", script_text_part2);
+	  return 0;
+	}
+    }
+
+  newargz = XMALLOC (char *, argc + 1);
+  tmp_pathspec = find_executable (argv[0]);
+  if (tmp_pathspec == NULL)
+    lt_fatal ("Couldn't find %s", argv[0]);
+  LTWRAPPER_DEBUGPRINTF (("(main) found exe (before symlink chase) at : %s\n",
+			  tmp_pathspec));
+
+  actual_cwrapper_path = chase_symlinks (tmp_pathspec);
+  LTWRAPPER_DEBUGPRINTF (("(main) found exe (after symlink chase) at : %s\n",
+			  actual_cwrapper_path));
+  XFREE (tmp_pathspec);
+
+  actual_cwrapper_name = xstrdup( base_name (actual_cwrapper_path));
+  strendzap (actual_cwrapper_path, actual_cwrapper_name);
+
+  /* wrapper name transforms */
+  strendzap (actual_cwrapper_name, ".exe");
+  tmp_pathspec = lt_extend_str (actual_cwrapper_name, ".exe", 1);
+  XFREE (actual_cwrapper_name);
+  actual_cwrapper_name = tmp_pathspec;
+  tmp_pathspec = 0;
+
+  /* target_name transforms -- use actual target program name; might have lt- prefix */
+  target_name = xstrdup (base_name (TARGET_PROGRAM_NAME));
+  strendzap (target_name, ".exe");
+  tmp_pathspec = lt_extend_str (target_name, ".exe", 1);
+  XFREE (target_name);
+  target_name = tmp_pathspec;
+  tmp_pathspec = 0;
+
+  LTWRAPPER_DEBUGPRINTF (("(main) libtool target name: %s\n",
+			  target_name));
+EOF
+
+	    cat <<EOF
+  newargz[0] =
+    XMALLOC (char, (strlen (actual_cwrapper_path) +
+		    strlen ("$objdir") + 1 + strlen (actual_cwrapper_name) + 1));
+  strcpy (newargz[0], actual_cwrapper_path);
+  strcat (newargz[0], "$objdir");
+  strcat (newargz[0], "/");
+EOF
+
+	    cat <<"EOF"
+  /* stop here, and copy so we don't have to do this twice */
+  tmp_pathspec = xstrdup (newargz[0]);
+
+  /* do NOT want the lt- prefix here, so use actual_cwrapper_name */
+  strcat (newargz[0], actual_cwrapper_name);
+
+  /* DO want the lt- prefix here if it exists, so use target_name */
+  lt_argv_zero = lt_extend_str (tmp_pathspec, target_name, 1);
+  XFREE (tmp_pathspec);
+  tmp_pathspec = NULL;
+EOF
+
+	    case $host_os in
+	      mingw*)
+	    cat <<"EOF"
+  {
+    char* p;
+    while ((p = strchr (newargz[0], '\\')) != NULL)
+      {
+	*p = '/';
+      }
+    while ((p = strchr (lt_argv_zero, '\\')) != NULL)
+      {
+	*p = '/';
+      }
+  }
+EOF
+	    ;;
+	    esac
+
+	    cat <<"EOF"
+  XFREE (target_name);
+  XFREE (actual_cwrapper_path);
+  XFREE (actual_cwrapper_name);
+
+  lt_setenv ("BIN_SH", "xpg4"); /* for Tru64 */
+  lt_setenv ("DUALCASE", "1");  /* for MSK sh */
+  lt_update_lib_path (LIB_PATH_VARNAME, LIB_PATH_VALUE);
+  lt_update_exe_path (EXE_PATH_VARNAME, EXE_PATH_VALUE);
+
+  newargc=0;
+  for (i = 1; i < argc; i++)
+    {
+      if (strncmp (argv[i], env_set_opt, env_set_opt_len) == 0)
+        {
+          if (argv[i][env_set_opt_len] == '=')
+            {
+              const char *p = argv[i] + env_set_opt_len + 1;
+              lt_opt_process_env_set (p);
+            }
+          else if (argv[i][env_set_opt_len] == '\0' && i + 1 < argc)
+            {
+              lt_opt_process_env_set (argv[++i]); /* don't copy */
+            }
+          else
+            lt_fatal ("%s missing required argument", env_set_opt);
+          continue;
+        }
+      if (strncmp (argv[i], env_prepend_opt, env_prepend_opt_len) == 0)
+        {
+          if (argv[i][env_prepend_opt_len] == '=')
+            {
+              const char *p = argv[i] + env_prepend_opt_len + 1;
+              lt_opt_process_env_prepend (p);
+            }
+          else if (argv[i][env_prepend_opt_len] == '\0' && i + 1 < argc)
+            {
+              lt_opt_process_env_prepend (argv[++i]); /* don't copy */
+            }
+          else
+            lt_fatal ("%s missing required argument", env_prepend_opt);
+          continue;
+        }
+      if (strncmp (argv[i], env_append_opt, env_append_opt_len) == 0)
+        {
+          if (argv[i][env_append_opt_len] == '=')
+            {
+              const char *p = argv[i] + env_append_opt_len + 1;
+              lt_opt_process_env_append (p);
+            }
+          else if (argv[i][env_append_opt_len] == '\0' && i + 1 < argc)
+            {
+              lt_opt_process_env_append (argv[++i]); /* don't copy */
+            }
+          else
+            lt_fatal ("%s missing required argument", env_append_opt);
+          continue;
+        }
+      if (strncmp (argv[i], ltwrapper_option_prefix, opt_prefix_len) == 0)
+        {
+          /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX
+             namespace, but it is not one of the ones we know about and
+             have already dealt with, above (inluding dump-script), then
+             report an error. Otherwise, targets might begin to believe
+             they are allowed to use options in the LTWRAPPER_OPTION_PREFIX
+             namespace. The first time any user complains about this, we'll
+             need to make LTWRAPPER_OPTION_PREFIX a configure-time option
+             or a configure.ac-settable value.
+           */
+          lt_fatal ("Unrecognized option in %s namespace: '%s'",
+                    ltwrapper_option_prefix, argv[i]);
+        }
+      /* otherwise ... */
+      newargz[++newargc] = xstrdup (argv[i]);
+    }
+  newargz[++newargc] = NULL;
+
+  LTWRAPPER_DEBUGPRINTF     (("(main) lt_argv_zero : %s\n", (lt_argv_zero ? lt_argv_zero : "<NULL>")));
+  for (i = 0; i < newargc; i++)
+    {
+      LTWRAPPER_DEBUGPRINTF (("(main) newargz[%d]   : %s\n", i, (newargz[i] ? newargz[i] : "<NULL>")));
+    }
+
+EOF
+
+	    case $host_os in
+	      mingw*)
+		cat <<"EOF"
+  /* execv doesn't actually work on mingw as expected on unix */
+  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);
+  if (rval == -1)
+    {
+      /* failed to start process */
+      LTWRAPPER_DEBUGPRINTF (("(main) failed to launch target \"%s\": errno = %d\n", lt_argv_zero, errno));
+      return 127;
+    }
+  return rval;
+EOF
+		;;
+	      *)
+		cat <<"EOF"
+  execv (lt_argv_zero, newargz);
+  return rval; /* =127, but avoids unused variable warning */
+EOF
+		;;
+	    esac
+
+	    cat <<"EOF"
+}
+
+void *
+xmalloc (size_t num)
+{
+  void *p = (void *) malloc (num);
+  if (!p)
+    lt_fatal ("Memory exhausted");
+
+  return p;
+}
+
+char *
+xstrdup (const char *string)
+{
+  return string ? strcpy ((char *) xmalloc (strlen (string) + 1),
+			  string) : NULL;
+}
+
+const char *
+base_name (const char *name)
+{
+  const char *base;
+
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+  /* Skip over the disk name in MSDOS pathnames. */
+  if (isalpha ((unsigned char) name[0]) && name[1] == ':')
+    name += 2;
+#endif
+
+  for (base = name; *name; name++)
+    if (IS_DIR_SEPARATOR (*name))
+      base = name + 1;
+  return base;
+}
+
+int
+check_executable (const char *path)
+{
+  struct stat st;
+
+  LTWRAPPER_DEBUGPRINTF (("(check_executable)  : %s\n",
+			  path ? (*path ? path : "EMPTY!") : "NULL!"));
+  if ((!path) || (!*path))
+    return 0;
+
+  if ((stat (path, &st) >= 0)
+      && (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)))
+    return 1;
+  else
+    return 0;
+}
+
+int
+make_executable (const char *path)
+{
+  int rval = 0;
+  struct stat st;
+
+  LTWRAPPER_DEBUGPRINTF (("(make_executable)   : %s\n",
+			  path ? (*path ? path : "EMPTY!") : "NULL!"));
+  if ((!path) || (!*path))
+    return 0;
+
+  if (stat (path, &st) >= 0)
+    {
+      rval = chmod (path, st.st_mode | S_IXOTH | S_IXGRP | S_IXUSR);
+    }
+  return rval;
+}
+
+/* Searches for the full path of the wrapper.  Returns
+   newly allocated full path name if found, NULL otherwise
+   Does not chase symlinks, even on platforms that support them.
+*/
+char *
+find_executable (const char *wrapper)
+{
+  int has_slash = 0;
+  const char *p;
+  const char *p_next;
+  /* static buffer for getcwd */
+  char tmp[LT_PATHMAX + 1];
+  int tmp_len;
+  char *concat_name;
+
+  LTWRAPPER_DEBUGPRINTF (("(find_executable)   : %s\n",
+			  wrapper ? (*wrapper ? wrapper : "EMPTY!") : "NULL!"));
+
+  if ((wrapper == NULL) || (*wrapper == '\0'))
+    return NULL;
+
+  /* Absolute path? */
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+  if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')
+    {
+      concat_name = xstrdup (wrapper);
+      if (check_executable (concat_name))
+	return concat_name;
+      XFREE (concat_name);
+    }
+  else
+    {
+#endif
+      if (IS_DIR_SEPARATOR (wrapper[0]))
+	{
+	  concat_name = xstrdup (wrapper);
+	  if (check_executable (concat_name))
+	    return concat_name;
+	  XFREE (concat_name);
+	}
+#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+    }
+#endif
+
+  for (p = wrapper; *p; p++)
+    if (*p == '/')
+      {
+	has_slash = 1;
+	break;
+      }
+  if (!has_slash)
+    {
+      /* no slashes; search PATH */
+      const char *path = getenv ("PATH");
+      if (path != NULL)
+	{
+	  for (p = path; *p; p = p_next)
+	    {
+	      const char *q;
+	      size_t p_len;
+	      for (q = p; *q; q++)
+		if (IS_PATH_SEPARATOR (*q))
+		  break;
+	      p_len = q - p;
+	      p_next = (*q == '\0' ? q : q + 1);
+	      if (p_len == 0)
+		{
+		  /* empty path: current directory */
+		  if (getcwd (tmp, LT_PATHMAX) == NULL)
+		    lt_fatal ("getcwd failed");
+		  tmp_len = strlen (tmp);
+		  concat_name =
+		    XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);
+		  memcpy (concat_name, tmp, tmp_len);
+		  concat_name[tmp_len] = '/';
+		  strcpy (concat_name + tmp_len + 1, wrapper);
+		}
+	      else
+		{
+		  concat_name =
+		    XMALLOC (char, p_len + 1 + strlen (wrapper) + 1);
+		  memcpy (concat_name, p, p_len);
+		  concat_name[p_len] = '/';
+		  strcpy (concat_name + p_len + 1, wrapper);
+		}
+	      if (check_executable (concat_name))
+		return concat_name;
+	      XFREE (concat_name);
+	    }
+	}
+      /* not found in PATH; assume curdir */
+    }
+  /* Relative path | not found in path: prepend cwd */
+  if (getcwd (tmp, LT_PATHMAX) == NULL)
+    lt_fatal ("getcwd failed");
+  tmp_len = strlen (tmp);
+  concat_name = XMALLOC (char, tmp_len + 1 + strlen (wrapper) + 1);
+  memcpy (concat_name, tmp, tmp_len);
+  concat_name[tmp_len] = '/';
+  strcpy (concat_name + tmp_len + 1, wrapper);
+
+  if (check_executable (concat_name))
+    return concat_name;
+  XFREE (concat_name);
+  return NULL;
+}
+
+char *
+chase_symlinks (const char *pathspec)
+{
+#ifndef S_ISLNK
+  return xstrdup (pathspec);
+#else
+  char buf[LT_PATHMAX];
+  struct stat s;
+  char *tmp_pathspec = xstrdup (pathspec);
+  char *p;
+  int has_symlinks = 0;
+  while (strlen (tmp_pathspec) && !has_symlinks)
+    {
+      LTWRAPPER_DEBUGPRINTF (("checking path component for symlinks: %s\n",
+			      tmp_pathspec));
+      if (lstat (tmp_pathspec, &s) == 0)
+	{
+	  if (S_ISLNK (s.st_mode) != 0)
+	    {
+	      has_symlinks = 1;
+	      break;
+	    }
+
+	  /* search backwards for last DIR_SEPARATOR */
+	  p = tmp_pathspec + strlen (tmp_pathspec) - 1;
+	  while ((p > tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))
+	    p--;
+	  if ((p == tmp_pathspec) && (!IS_DIR_SEPARATOR (*p)))
+	    {
+	      /* no more DIR_SEPARATORS left */
+	      break;
+	    }
+	  *p = '\0';
+	}
+      else
+	{
+	  char *errstr = strerror (errno);
+	  lt_fatal ("Error accessing file %s (%s)", tmp_pathspec, errstr);
+	}
+    }
+  XFREE (tmp_pathspec);
+
+  if (!has_symlinks)
+    {
+      return xstrdup (pathspec);
+    }
+
+  tmp_pathspec = realpath (pathspec, buf);
+  if (tmp_pathspec == 0)
+    {
+      lt_fatal ("Could not follow symlinks for %s", pathspec);
+    }
+  return xstrdup (tmp_pathspec);
+#endif
+}
+
+char *
+strendzap (char *str, const char *pat)
+{
+  size_t len, patlen;
+
+  assert (str != NULL);
+  assert (pat != NULL);
+
+  len = strlen (str);
+  patlen = strlen (pat);
+
+  if (patlen <= len)
+    {
+      str += len - patlen;
+      if (strcmp (str, pat) == 0)
+	*str = '\0';
+    }
+  return str;
+}
+
+static void
+lt_error_core (int exit_status, const char *mode,
+	       const char *message, va_list ap)
+{
+  fprintf (stderr, "%s: %s: ", program_name, mode);
+  vfprintf (stderr, message, ap);
+  fprintf (stderr, ".\n");
+
+  if (exit_status >= 0)
+    exit (exit_status);
+}
+
+void
+lt_fatal (const char *message, ...)
+{
+  va_list ap;
+  va_start (ap, message);
+  lt_error_core (EXIT_FAILURE, "FATAL", message, ap);
+  va_end (ap);
+}
+
+void
+lt_setenv (const char *name, const char *value)
+{
+  LTWRAPPER_DEBUGPRINTF (("(lt_setenv) setting '%s' to '%s'\n",
+                          (name ? name : "<NULL>"),
+                          (value ? value : "<NULL>")));
+  {
+#ifdef HAVE_SETENV
+    /* always make a copy, for consistency with !HAVE_SETENV */
+    char *str = xstrdup (value);
+    setenv (name, str, 1);
+#else
+    int len = strlen (name) + 1 + strlen (value) + 1;
+    char *str = XMALLOC (char, len);
+    sprintf (str, "%s=%s", name, value);
+    if (putenv (str) != EXIT_SUCCESS)
+      {
+        XFREE (str);
+      }
+#endif
+  }
+}
+
+char *
+lt_extend_str (const char *orig_value, const char *add, int to_end)
+{
+  char *new_value;
+  if (orig_value && *orig_value)
+    {
+      int orig_value_len = strlen (orig_value);
+      int add_len = strlen (add);
+      new_value = XMALLOC (char, add_len + orig_value_len + 1);
+      if (to_end)
+        {
+          strcpy (new_value, orig_value);
+          strcpy (new_value + orig_value_len, add);
+        }
+      else
+        {
+          strcpy (new_value, add);
+          strcpy (new_value + add_len, orig_value);
+        }
+    }
+  else
+    {
+      new_value = xstrdup (add);
+    }
+  return new_value;
+}
+
+int
+lt_split_name_value (const char *arg, char** name, char** value)
+{
+  const char *p;
+  int len;
+  if (!arg || !*arg)
+    return 1;
+
+  p = strchr (arg, (int)'=');
+
+  if (!p)
+    return 1;
+
+  *value = xstrdup (++p);
+
+  len = strlen (arg) - strlen (*value);
+  *name = XMALLOC (char, len);
+  strncpy (*name, arg, len-1);
+  (*name)[len - 1] = '\0';
+
+  return 0;
+}
+
+void
+lt_opt_process_env_set (const char *arg)
+{
+  char *name = NULL;
+  char *value = NULL;
+
+  if (lt_split_name_value (arg, &name, &value) != 0)
+    {
+      XFREE (name);
+      XFREE (value);
+      lt_fatal ("bad argument for %s: '%s'", env_set_opt, arg);
+    }
+
+  lt_setenv (name, value);
+  XFREE (name);
+  XFREE (value);
+}
+
+void
+lt_opt_process_env_prepend (const char *arg)
+{
+  char *name = NULL;
+  char *value = NULL;
+  char *new_value = NULL;
+
+  if (lt_split_name_value (arg, &name, &value) != 0)
+    {
+      XFREE (name);
+      XFREE (value);
+      lt_fatal ("bad argument for %s: '%s'", env_prepend_opt, arg);
+    }
+
+  new_value = lt_extend_str (getenv (name), value, 0);
+  lt_setenv (name, new_value);
+  XFREE (new_value);
+  XFREE (name);
+  XFREE (value);
+}
+
+void
+lt_opt_process_env_append (const char *arg)
+{
+  char *name = NULL;
+  char *value = NULL;
+  char *new_value = NULL;
+
+  if (lt_split_name_value (arg, &name, &value) != 0)
+    {
+      XFREE (name);
+      XFREE (value);
+      lt_fatal ("bad argument for %s: '%s'", env_append_opt, arg);
+    }
+
+  new_value = lt_extend_str (getenv (name), value, 1);
+  lt_setenv (name, new_value);
+  XFREE (new_value);
+  XFREE (name);
+  XFREE (value);
+}
+
+void
+lt_update_exe_path (const char *name, const char *value)
+{
+  LTWRAPPER_DEBUGPRINTF (("(lt_update_exe_path) modifying '%s' by prepending '%s'\n",
+                          (name ? name : "<NULL>"),
+                          (value ? value : "<NULL>")));
+
+  if (name && *name && value && *value)
+    {
+      char *new_value = lt_extend_str (getenv (name), value, 0);
+      /* some systems can't cope with a ':'-terminated path #' */
+      int len = strlen (new_value);
+      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))
+        {
+          new_value[len-1] = '\0';
+        }
+      lt_setenv (name, new_value);
+      XFREE (new_value);
+    }
+}
+
+void
+lt_update_lib_path (const char *name, const char *value)
+{
+  LTWRAPPER_DEBUGPRINTF (("(lt_update_lib_path) modifying '%s' by prepending '%s'\n",
+                          (name ? name : "<NULL>"),
+                          (value ? value : "<NULL>")));
+
+  if (name && *name && value && *value)
+    {
+      char *new_value = lt_extend_str (getenv (name), value, 0);
+      lt_setenv (name, new_value);
+      XFREE (new_value);
+    }
+}
+
+
+EOF
+}
+# end: func_emit_cwrapperexe_src
+
+# func_mode_link arg...
+func_mode_link ()
+{
+    $opt_debug
+    case $host in
+    *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)
+      # It is impossible to link a dll without this setting, and
+      # we shouldn't force the makefile maintainer to figure out
+      # which system we are compiling for in order to pass an extra
+      # flag for every libtool invocation.
+      # allow_undefined=no
+
+      # FIXME: Unfortunately, there are problems with the above when trying
+      # to make a dll which has undefined symbols, in which case not
+      # even a static library is built.  For now, we need to specify
+      # -no-undefined on the libtool link line when we can be certain
+      # that all symbols are satisfied, otherwise we get a static library.
+      allow_undefined=yes
+      ;;
+    *)
+      allow_undefined=yes
+      ;;
+    esac
+    libtool_args=$nonopt
+    base_compile="$nonopt $@"
+    compile_command=$nonopt
+    finalize_command=$nonopt
+
+    compile_rpath=
+    finalize_rpath=
+    compile_shlibpath=
+    finalize_shlibpath=
+    convenience=
+    old_convenience=
+    deplibs=
+    old_deplibs=
+    compiler_flags=
+    linker_flags=
+    dllsearchpath=
+    lib_search_path=`pwd`
+    inst_prefix_dir=
+    new_inherited_linker_flags=
+
+    avoid_version=no
+    dlfiles=
+    dlprefiles=
+    dlself=no
+    export_dynamic=no
+    export_symbols=
+    export_symbols_regex=
+    generated=
+    libobjs=
+    ltlibs=
+    module=no
+    no_install=no
+    objs=
+    non_pic_objects=
+    precious_files_regex=
+    prefer_static_libs=no
+    preload=no
+    prev=
+    prevarg=
+    release=
+    rpath=
+    xrpath=
+    perm_rpath=
+    temp_rpath=
+    thread_safe=no
+    vinfo=
+    vinfo_number=no
+    weak_libs=
+    single_module="${wl}-single_module"
+    func_infer_tag $base_compile
+
+    # We need to know -static, to get the right output filenames.
+    for arg
+    do
+      case $arg in
+      -shared)
+	test "$build_libtool_libs" != yes && \
+	  func_fatal_configuration "can not build a shared library"
+	build_old_libs=no
+	break
+	;;
+      -all-static | -static | -static-libtool-libs)
+	case $arg in
+	-all-static)
+	  if test "$build_libtool_libs" = yes && test -z "$link_static_flag"; then
+	    func_warning "complete static linking is impossible in this configuration"
+	  fi
+	  if test -n "$link_static_flag"; then
+	    dlopen_self=$dlopen_self_static
+	  fi
+	  prefer_static_libs=yes
+	  ;;
+	-static)
+	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
+	    dlopen_self=$dlopen_self_static
+	  fi
+	  prefer_static_libs=built
+	  ;;
+	-static-libtool-libs)
+	  if test -z "$pic_flag" && test -n "$link_static_flag"; then
+	    dlopen_self=$dlopen_self_static
+	  fi
+	  prefer_static_libs=yes
+	  ;;
+	esac
+	build_libtool_libs=no
+	build_old_libs=yes
+	break
+	;;
+      esac
+    done
+
+    # See if our shared archives depend on static archives.
+    test -n "$old_archive_from_new_cmds" && build_old_libs=yes
+
+    # Go through the arguments, transforming them on the way.
+    while test "$#" -gt 0; do
+      arg="$1"
+      shift
+      func_quote_for_eval "$arg"
+      qarg=$func_quote_for_eval_unquoted_result
+      func_append libtool_args " $func_quote_for_eval_result"
+
+      # If the previous option needs an argument, assign it.
+      if test -n "$prev"; then
+	case $prev in
+	output)
+	  func_append compile_command " @OUTPUT@"
+	  func_append finalize_command " @OUTPUT@"
+	  ;;
+	esac
+
+	case $prev in
+	dlfiles|dlprefiles)
+	  if test "$preload" = no; then
+	    # Add the symbol object into the linking commands.
+	    func_append compile_command " @SYMFILE@"
+	    func_append finalize_command " @SYMFILE@"
+	    preload=yes
+	  fi
+	  case $arg in
+	  *.la | *.lo) ;;  # We handle these cases below.
+	  force)
+	    if test "$dlself" = no; then
+	      dlself=needless
+	      export_dynamic=yes
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  self)
+	    if test "$prev" = dlprefiles; then
+	      dlself=yes
+	    elif test "$prev" = dlfiles && test "$dlopen_self" != yes; then
+	      dlself=yes
+	    else
+	      dlself=needless
+	      export_dynamic=yes
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  *)
+	    if test "$prev" = dlfiles; then
+	      dlfiles="$dlfiles $arg"
+	    else
+	      dlprefiles="$dlprefiles $arg"
+	    fi
+	    prev=
+	    continue
+	    ;;
+	  esac
+	  ;;
+	expsyms)
+	  export_symbols="$arg"
+	  test -f "$arg" \
+	    || func_fatal_error "symbol file \`$arg' does not exist"
+	  prev=
+	  continue
+	  ;;
+	expsyms_regex)
+	  export_symbols_regex="$arg"
+	  prev=
+	  continue
+	  ;;
+	framework)
+	  case $host in
+	    *-*-darwin*)
+	      case "$deplibs " in
+		*" $qarg.ltframework "*) ;;
+		*) deplibs="$deplibs $qarg.ltframework" # this is fixed later
+		   ;;
+	      esac
+	      ;;
+	  esac
+	  prev=
+	  continue
+	  ;;
+	inst_prefix)
+	  inst_prefix_dir="$arg"
+	  prev=
+	  continue
+	  ;;
+	objectlist)
+	  if test -f "$arg"; then
+	    save_arg=$arg
+	    moreargs=
+	    for fil in `cat "$save_arg"`
+	    do
+#	      moreargs="$moreargs $fil"
+	      arg=$fil
+	      # A libtool-controlled object.
+
+	      # Check to see that this really is a libtool object.
+	      if func_lalib_unsafe_p "$arg"; then
+		pic_object=
+		non_pic_object=
+
+		# Read the .lo file
+		func_source "$arg"
+
+		if test -z "$pic_object" ||
+		   test -z "$non_pic_object" ||
+		   test "$pic_object" = none &&
+		   test "$non_pic_object" = none; then
+		  func_fatal_error "cannot find name of object for \`$arg'"
+		fi
+
+		# Extract subdirectory from the argument.
+		func_dirname "$arg" "/" ""
+		xdir="$func_dirname_result"
+
+		if test "$pic_object" != none; then
+		  # Prepend the subdirectory the object is found in.
+		  pic_object="$xdir$pic_object"
+
+		  if test "$prev" = dlfiles; then
+		    if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
+		      dlfiles="$dlfiles $pic_object"
+		      prev=
+		      continue
+		    else
+		      # If libtool objects are unsupported, then we need to preload.
+		      prev=dlprefiles
+		    fi
+		  fi
+
+		  # CHECK ME:  I think I busted this.  -Ossama
+		  if test "$prev" = dlprefiles; then
+		    # Preload the old-style object.
+		    dlprefiles="$dlprefiles $pic_object"
+		    prev=
+		  fi
+
+		  # A PIC object.
+		  func_append libobjs " $pic_object"
+		  arg="$pic_object"
+		fi
+
+		# Non-PIC object.
+		if test "$non_pic_object" != none; then
+		  # Prepend the subdirectory the object is found in.
+		  non_pic_object="$xdir$non_pic_object"
+
+		  # A standard non-PIC object
+		  func_append non_pic_objects " $non_pic_object"
+		  if test -z "$pic_object" || test "$pic_object" = none ; then
+		    arg="$non_pic_object"
+		  fi
+		else
+		  # If the PIC object exists, use it instead.
+		  # $xdir was prepended to $pic_object above.
+		  non_pic_object="$pic_object"
+		  func_append non_pic_objects " $non_pic_object"
+		fi
+	      else
+		# Only an error if not doing a dry-run.
+		if $opt_dry_run; then
+		  # Extract subdirectory from the argument.
+		  func_dirname "$arg" "/" ""
+		  xdir="$func_dirname_result"
+
+		  func_lo2o "$arg"
+		  pic_object=$xdir$objdir/$func_lo2o_result
+		  non_pic_object=$xdir$func_lo2o_result
+		  func_append libobjs " $pic_object"
+		  func_append non_pic_objects " $non_pic_object"
+	        else
+		  func_fatal_error "\`$arg' is not a valid libtool object"
+		fi
+	      fi
+	    done
+	  else
+	    func_fatal_error "link input file \`$arg' does not exist"
+	  fi
+	  arg=$save_arg
+	  prev=
+	  continue
+	  ;;
+	precious_regex)
+	  precious_files_regex="$arg"
+	  prev=
+	  continue
+	  ;;
+	release)
+	  release="-$arg"
+	  prev=
+	  continue
+	  ;;
+	rpath | xrpath)
+	  # We need an absolute path.
+	  case $arg in
+	  [\\/]* | [A-Za-z]:[\\/]*) ;;
+	  *)
+	    func_fatal_error "only absolute run-paths are allowed"
+	    ;;
+	  esac
+	  if test "$prev" = rpath; then
+	    case "$rpath " in
+	    *" $arg "*) ;;
+	    *) rpath="$rpath $arg" ;;
+	    esac
+	  else
+	    case "$xrpath " in
+	    *" $arg "*) ;;
+	    *) xrpath="$xrpath $arg" ;;
+	    esac
+	  fi
+	  prev=
+	  continue
+	  ;;
+	shrext)
+	  shrext_cmds="$arg"
+	  prev=
+	  continue
+	  ;;
+	weak)
+	  weak_libs="$weak_libs $arg"
+	  prev=
+	  continue
+	  ;;
+	xcclinker)
+	  linker_flags="$linker_flags $qarg"
+	  compiler_flags="$compiler_flags $qarg"
+	  prev=
+	  func_append compile_command " $qarg"
+	  func_append finalize_command " $qarg"
+	  continue
+	  ;;
+	xcompiler)
+	  compiler_flags="$compiler_flags $qarg"
+	  prev=
+	  func_append compile_command " $qarg"
+	  func_append finalize_command " $qarg"
+	  continue
+	  ;;
+	xlinker)
+	  linker_flags="$linker_flags $qarg"
+	  compiler_flags="$compiler_flags $wl$qarg"
+	  prev=
+	  func_append compile_command " $wl$qarg"
+	  func_append finalize_command " $wl$qarg"
+	  continue
+	  ;;
+	*)
+	  eval "$prev=\"\$arg\""
+	  prev=
+	  continue
+	  ;;
+	esac
+      fi # test -n "$prev"
+
+      prevarg="$arg"
+
+      case $arg in
+      -all-static)
+	if test -n "$link_static_flag"; then
+	  # See comment for -static flag below, for more details.
+	  func_append compile_command " $link_static_flag"
+	  func_append finalize_command " $link_static_flag"
+	fi
+	continue
+	;;
+
+      -allow-undefined)
+	# FIXME: remove this flag sometime in the future.
+	func_fatal_error "\`-allow-undefined' must not be used because it is the default"
+	;;
+
+      -avoid-version)
+	avoid_version=yes
+	continue
+	;;
+
+      -dlopen)
+	prev=dlfiles
+	continue
+	;;
+
+      -dlpreopen)
+	prev=dlprefiles
+	continue
+	;;
+
+      -export-dynamic)
+	export_dynamic=yes
+	continue
+	;;
+
+      -export-symbols | -export-symbols-regex)
+	if test -n "$export_symbols" || test -n "$export_symbols_regex"; then
+	  func_fatal_error "more than one -exported-symbols argument is not allowed"
+	fi
+	if test "X$arg" = "X-export-symbols"; then
+	  prev=expsyms
+	else
+	  prev=expsyms_regex
+	fi
+	continue
+	;;
+
+      -framework)
+	prev=framework
+	continue
+	;;
+
+      -inst-prefix-dir)
+	prev=inst_prefix
+	continue
+	;;
+
+      # The native IRIX linker understands -LANG:*, -LIST:* and -LNO:*
+      # so, if we see these flags be careful not to treat them like -L
+      -L[A-Z][A-Z]*:*)
+	case $with_gcc/$host in
+	no/*-*-irix* | /*-*-irix*)
+	  func_append compile_command " $arg"
+	  func_append finalize_command " $arg"
+	  ;;
+	esac
+	continue
+	;;
+
+      -L*)
+	func_stripname '-L' '' "$arg"
+	dir=$func_stripname_result
+	if test -z "$dir"; then
+	  if test "$#" -gt 0; then
+	    func_fatal_error "require no space between \`-L' and \`$1'"
+	  else
+	    func_fatal_error "need path for \`-L' option"
+	  fi
+	fi
+	# We need an absolute path.
+	case $dir in
+	[\\/]* | [A-Za-z]:[\\/]*) ;;
+	*)
+	  absdir=`cd "$dir" && pwd`
+	  test -z "$absdir" && \
+	    func_fatal_error "cannot determine absolute directory name of \`$dir'"
+	  dir="$absdir"
+	  ;;
+	esac
+	case "$deplibs " in
+	*" -L$dir "*) ;;
+	*)
+	  deplibs="$deplibs -L$dir"
+	  lib_search_path="$lib_search_path $dir"
+	  ;;
+	esac
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)
+	  testbindir=`$ECHO "X$dir" | $Xsed -e 's*/lib$*/bin*'`
+	  case :$dllsearchpath: in
+	  *":$dir:"*) ;;
+	  ::) dllsearchpath=$dir;;
+	  *) dllsearchpath="$dllsearchpath:$dir";;
+	  esac
+	  case :$dllsearchpath: in
+	  *":$testbindir:"*) ;;
+	  ::) dllsearchpath=$testbindir;;
+	  *) dllsearchpath="$dllsearchpath:$testbindir";;
+	  esac
+	  ;;
+	esac
+	continue
+	;;
+
+      -l*)
+	if test "X$arg" = "X-lc" || test "X$arg" = "X-lm"; then
+	  case $host in
+	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc*)
+	    # These systems don't actually have a C or math library (as such)
+	    continue
+	    ;;
+	  *-*-os2*)
+	    # These systems don't actually have a C library (as such)
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	    # Do not include libc due to us having libc/libc_r.
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-rhapsody* | *-*-darwin1.[012])
+	    # Rhapsody C and math libraries are in the System framework
+	    deplibs="$deplibs System.ltframework"
+	    continue
+	    ;;
+	  *-*-sco3.2v5* | *-*-sco5v6*)
+	    # Causes problems with __ctype
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)
+	    # Compiler inserts libc in the correct place for threads to work
+	    test "X$arg" = "X-lc" && continue
+	    ;;
+	  esac
+	elif test "X$arg" = "X-lc_r"; then
+	 case $host in
+	 *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	   # Do not include libc_r directly, use -pthread flag.
+	   continue
+	   ;;
+	 esac
+	fi
+	deplibs="$deplibs $arg"
+	continue
+	;;
+
+      -module)
+	module=yes
+	continue
+	;;
+
+      # Tru64 UNIX uses -model [arg] to determine the layout of C++
+      # classes, name mangling, and exception handling.
+      # Darwin uses the -arch flag to determine output architecture.
+      -model|-arch|-isysroot)
+	compiler_flags="$compiler_flags $arg"
+	func_append compile_command " $arg"
+	func_append finalize_command " $arg"
+	prev=xcompiler
+	continue
+	;;
+
+      -mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe|-threads)
+	compiler_flags="$compiler_flags $arg"
+	func_append compile_command " $arg"
+	func_append finalize_command " $arg"
+	case "$new_inherited_linker_flags " in
+	    *" $arg "*) ;;
+	    * ) new_inherited_linker_flags="$new_inherited_linker_flags $arg" ;;
+	esac
+	continue
+	;;
+
+      -multi_module)
+	single_module="${wl}-multi_module"
+	continue
+	;;
+
+      -no-fast-install)
+	fast_install=no
+	continue
+	;;
+
+      -no-install)
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)
+	  # The PATH hackery in wrapper scripts is required on Windows
+	  # and Darwin in order for the loader to find any dlls it needs.
+	  func_warning "\`-no-install' is ignored for $host"
+	  func_warning "assuming \`-no-fast-install' instead"
+	  fast_install=no
+	  ;;
+	*) no_install=yes ;;
+	esac
+	continue
+	;;
+
+      -no-undefined)
+	allow_undefined=no
+	continue
+	;;
+
+      -objectlist)
+	prev=objectlist
+	continue
+	;;
+
+      -o) prev=output ;;
+
+      -precious-files-regex)
+	prev=precious_regex
+	continue
+	;;
+
+      -release)
+	prev=release
+	continue
+	;;
+
+      -rpath)
+	prev=rpath
+	continue
+	;;
+
+      -R)
+	prev=xrpath
+	continue
+	;;
+
+      -R*)
+	func_stripname '-R' '' "$arg"
+	dir=$func_stripname_result
+	# We need an absolute path.
+	case $dir in
+	[\\/]* | [A-Za-z]:[\\/]*) ;;
+	*)
+	  func_fatal_error "only absolute run-paths are allowed"
+	  ;;
+	esac
+	case "$xrpath " in
+	*" $dir "*) ;;
+	*) xrpath="$xrpath $dir" ;;
+	esac
+	continue
+	;;
+
+      -shared)
+	# The effects of -shared are defined in a previous loop.
+	continue
+	;;
+
+      -shrext)
+	prev=shrext
+	continue
+	;;
+
+      -static | -static-libtool-libs)
+	# The effects of -static are defined in a previous loop.
+	# We used to do the same as -all-static on platforms that
+	# didn't have a PIC flag, but the assumption that the effects
+	# would be equivalent was wrong.  It would break on at least
+	# Digital Unix and AIX.
+	continue
+	;;
+
+      -thread-safe)
+	thread_safe=yes
+	continue
+	;;
+
+      -version-info)
+	prev=vinfo
+	continue
+	;;
+
+      -version-number)
+	prev=vinfo
+	vinfo_number=yes
+	continue
+	;;
+
+      -weak)
+        prev=weak
+	continue
+	;;
+
+      -Wc,*)
+	func_stripname '-Wc,' '' "$arg"
+	args=$func_stripname_result
+	arg=
+	save_ifs="$IFS"; IFS=','
+	for flag in $args; do
+	  IFS="$save_ifs"
+          func_quote_for_eval "$flag"
+	  arg="$arg $wl$func_quote_for_eval_result"
+	  compiler_flags="$compiler_flags $func_quote_for_eval_result"
+	done
+	IFS="$save_ifs"
+	func_stripname ' ' '' "$arg"
+	arg=$func_stripname_result
+	;;
+
+      -Wl,*)
+	func_stripname '-Wl,' '' "$arg"
+	args=$func_stripname_result
+	arg=
+	save_ifs="$IFS"; IFS=','
+	for flag in $args; do
+	  IFS="$save_ifs"
+          func_quote_for_eval "$flag"
+	  arg="$arg $wl$func_quote_for_eval_result"
+	  compiler_flags="$compiler_flags $wl$func_quote_for_eval_result"
+	  linker_flags="$linker_flags $func_quote_for_eval_result"
+	done
+	IFS="$save_ifs"
+	func_stripname ' ' '' "$arg"
+	arg=$func_stripname_result
+	;;
+
+      -Xcompiler)
+	prev=xcompiler
+	continue
+	;;
+
+      -Xlinker)
+	prev=xlinker
+	continue
+	;;
+
+      -XCClinker)
+	prev=xcclinker
+	continue
+	;;
+
+      # -msg_* for osf cc
+      -msg_*)
+	func_quote_for_eval "$arg"
+	arg="$func_quote_for_eval_result"
+	;;
+
+      # -64, -mips[0-9] enable 64-bit mode on the SGI compiler
+      # -r[0-9][0-9]* specifies the processor on the SGI compiler
+      # -xarch=*, -xtarget=* enable 64-bit mode on the Sun compiler
+      # +DA*, +DD* enable 64-bit mode on the HP compiler
+      # -q* pass through compiler args for the IBM compiler
+      # -m*, -t[45]*, -txscale* pass through architecture-specific
+      # compiler args for GCC
+      # -F/path gives path to uninstalled frameworks, gcc on darwin
+      # -p, -pg, --coverage, -fprofile-* pass through profiling flag for GCC
+      # @file GCC response files
+      -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \
+      -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*)
+        func_quote_for_eval "$arg"
+	arg="$func_quote_for_eval_result"
+        func_append compile_command " $arg"
+        func_append finalize_command " $arg"
+        compiler_flags="$compiler_flags $arg"
+        continue
+        ;;
+
+      # Some other compiler flag.
+      -* | +*)
+        func_quote_for_eval "$arg"
+	arg="$func_quote_for_eval_result"
+	;;
+
+      *.$objext)
+	# A standard object.
+	objs="$objs $arg"
+	;;
+
+      *.lo)
+	# A libtool-controlled object.
+
+	# Check to see that this really is a libtool object.
+	if func_lalib_unsafe_p "$arg"; then
+	  pic_object=
+	  non_pic_object=
+
+	  # Read the .lo file
+	  func_source "$arg"
+
+	  if test -z "$pic_object" ||
+	     test -z "$non_pic_object" ||
+	     test "$pic_object" = none &&
+	     test "$non_pic_object" = none; then
+	    func_fatal_error "cannot find name of object for \`$arg'"
+	  fi
+
+	  # Extract subdirectory from the argument.
+	  func_dirname "$arg" "/" ""
+	  xdir="$func_dirname_result"
+
+	  if test "$pic_object" != none; then
+	    # Prepend the subdirectory the object is found in.
+	    pic_object="$xdir$pic_object"
+
+	    if test "$prev" = dlfiles; then
+	      if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
+		dlfiles="$dlfiles $pic_object"
+		prev=
+		continue
+	      else
+		# If libtool objects are unsupported, then we need to preload.
+		prev=dlprefiles
+	      fi
+	    fi
+
+	    # CHECK ME:  I think I busted this.  -Ossama
+	    if test "$prev" = dlprefiles; then
+	      # Preload the old-style object.
+	      dlprefiles="$dlprefiles $pic_object"
+	      prev=
+	    fi
+
+	    # A PIC object.
+	    func_append libobjs " $pic_object"
+	    arg="$pic_object"
+	  fi
+
+	  # Non-PIC object.
+	  if test "$non_pic_object" != none; then
+	    # Prepend the subdirectory the object is found in.
+	    non_pic_object="$xdir$non_pic_object"
+
+	    # A standard non-PIC object
+	    func_append non_pic_objects " $non_pic_object"
+	    if test -z "$pic_object" || test "$pic_object" = none ; then
+	      arg="$non_pic_object"
+	    fi
+	  else
+	    # If the PIC object exists, use it instead.
+	    # $xdir was prepended to $pic_object above.
+	    non_pic_object="$pic_object"
+	    func_append non_pic_objects " $non_pic_object"
+	  fi
+	else
+	  # Only an error if not doing a dry-run.
+	  if $opt_dry_run; then
+	    # Extract subdirectory from the argument.
+	    func_dirname "$arg" "/" ""
+	    xdir="$func_dirname_result"
+
+	    func_lo2o "$arg"
+	    pic_object=$xdir$objdir/$func_lo2o_result
+	    non_pic_object=$xdir$func_lo2o_result
+	    func_append libobjs " $pic_object"
+	    func_append non_pic_objects " $non_pic_object"
+	  else
+	    func_fatal_error "\`$arg' is not a valid libtool object"
+	  fi
+	fi
+	;;
+
+      *.$libext)
+	# An archive.
+	deplibs="$deplibs $arg"
+	old_deplibs="$old_deplibs $arg"
+	continue
+	;;
+
+      *.la)
+	# A libtool-controlled library.
+
+	if test "$prev" = dlfiles; then
+	  # This library was specified with -dlopen.
+	  dlfiles="$dlfiles $arg"
+	  prev=
+	elif test "$prev" = dlprefiles; then
+	  # The library was specified with -dlpreopen.
+	  dlprefiles="$dlprefiles $arg"
+	  prev=
+	else
+	  deplibs="$deplibs $arg"
+	fi
+	continue
+	;;
+
+      # Some other compiler argument.
+      *)
+	# Unknown arguments in both finalize_command and compile_command need
+	# to be aesthetically quoted because they are evaled later.
+	func_quote_for_eval "$arg"
+	arg="$func_quote_for_eval_result"
+	;;
+      esac # arg
+
+      # Now actually substitute the argument into the commands.
+      if test -n "$arg"; then
+	func_append compile_command " $arg"
+	func_append finalize_command " $arg"
+      fi
+    done # argument parsing loop
+
+    test -n "$prev" && \
+      func_fatal_help "the \`$prevarg' option requires an argument"
+
+    if test "$export_dynamic" = yes && test -n "$export_dynamic_flag_spec"; then
+      eval arg=\"$export_dynamic_flag_spec\"
+      func_append compile_command " $arg"
+      func_append finalize_command " $arg"
+    fi
+
+    oldlibs=
+    # calculate the name of the file, without its directory
+    func_basename "$output"
+    outputname="$func_basename_result"
+    libobjs_save="$libobjs"
+
+    if test -n "$shlibpath_var"; then
+      # get the directories listed in $shlibpath_var
+      eval shlib_search_path=\`\$ECHO \"X\${$shlibpath_var}\" \| \$Xsed -e \'s/:/ /g\'\`
+    else
+      shlib_search_path=
+    fi
+    eval sys_lib_search_path=\"$sys_lib_search_path_spec\"
+    eval sys_lib_dlsearch_path=\"$sys_lib_dlsearch_path_spec\"
+
+    func_dirname "$output" "/" ""
+    output_objdir="$func_dirname_result$objdir"
+    # Create the object directory.
+    func_mkdir_p "$output_objdir"
+
+    # Determine the type of output
+    case $output in
+    "")
+      func_fatal_help "you must specify an output file"
+      ;;
+    *.$libext) linkmode=oldlib ;;
+    *.lo | *.$objext) linkmode=obj ;;
+    *.la) linkmode=lib ;;
+    *) linkmode=prog ;; # Anything else should be a program.
+    esac
+
+    specialdeplibs=
+
+    libs=
+    # Find all interdependent deplibs by searching for libraries
+    # that are linked more than once (e.g. -la -lb -la)
+    for deplib in $deplibs; do
+      if $opt_duplicate_deps ; then
+	case "$libs " in
+	*" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	esac
+      fi
+      libs="$libs $deplib"
+    done
+
+    if test "$linkmode" = lib; then
+      libs="$predeps $libs $compiler_lib_search_path $postdeps"
+
+      # Compute libraries that are listed more than once in $predeps
+      # $postdeps and mark them as special (i.e., whose duplicates are
+      # not to be eliminated).
+      pre_post_deps=
+      if $opt_duplicate_compiler_generated_deps; then
+	for pre_post_dep in $predeps $postdeps; do
+	  case "$pre_post_deps " in
+	  *" $pre_post_dep "*) specialdeplibs="$specialdeplibs $pre_post_deps" ;;
+	  esac
+	  pre_post_deps="$pre_post_deps $pre_post_dep"
+	done
+      fi
+      pre_post_deps=
+    fi
+
+    deplibs=
+    newdependency_libs=
+    newlib_search_path=
+    need_relink=no # whether we're linking any uninstalled libtool libraries
+    notinst_deplibs= # not-installed libtool libraries
+    notinst_path= # paths that contain not-installed libtool libraries
+
+    case $linkmode in
+    lib)
+	passes="conv dlpreopen link"
+	for file in $dlfiles $dlprefiles; do
+	  case $file in
+	  *.la) ;;
+	  *)
+	    func_fatal_help "libraries can \`-dlopen' only libtool libraries: $file"
+	    ;;
+	  esac
+	done
+	;;
+    prog)
+	compile_deplibs=
+	finalize_deplibs=
+	alldeplibs=no
+	newdlfiles=
+	newdlprefiles=
+	passes="conv scan dlopen dlpreopen link"
+	;;
+    *)  passes="conv"
+	;;
+    esac
+
+    for pass in $passes; do
+      # The preopen pass in lib mode reverses $deplibs; put it back here
+      # so that -L comes before libs that need it for instance...
+      if test "$linkmode,$pass" = "lib,link"; then
+	## FIXME: Find the place where the list is rebuilt in the wrong
+	##        order, and fix it there properly
+        tmp_deplibs=
+	for deplib in $deplibs; do
+	  tmp_deplibs="$deplib $tmp_deplibs"
+	done
+	deplibs="$tmp_deplibs"
+      fi
+
+      if test "$linkmode,$pass" = "lib,link" ||
+	 test "$linkmode,$pass" = "prog,scan"; then
+	libs="$deplibs"
+	deplibs=
+      fi
+      if test "$linkmode" = prog; then
+	case $pass in
+	dlopen) libs="$dlfiles" ;;
+	dlpreopen) libs="$dlprefiles" ;;
+	link)
+	  libs="$deplibs %DEPLIBS%"
+	  test "X$link_all_deplibs" != Xno && libs="$libs $dependency_libs"
+	  ;;
+	esac
+      fi
+      if test "$linkmode,$pass" = "lib,dlpreopen"; then
+	# Collect and forward deplibs of preopened libtool libs
+	for lib in $dlprefiles; do
+	  # Ignore non-libtool-libs
+	  dependency_libs=
+	  case $lib in
+	  *.la)	func_source "$lib" ;;
+	  esac
+
+	  # Collect preopened libtool deplibs, except any this library
+	  # has declared as weak libs
+	  for deplib in $dependency_libs; do
+            deplib_base=`$ECHO "X$deplib" | $Xsed -e "$basename"`
+	    case " $weak_libs " in
+	    *" $deplib_base "*) ;;
+	    *) deplibs="$deplibs $deplib" ;;
+	    esac
+	  done
+	done
+	libs="$dlprefiles"
+      fi
+      if test "$pass" = dlopen; then
+	# Collect dlpreopened libraries
+	save_deplibs="$deplibs"
+	deplibs=
+      fi
+
+      for deplib in $libs; do
+	lib=
+	found=no
+	case $deplib in
+	-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe|-threads)
+	  if test "$linkmode,$pass" = "prog,link"; then
+	    compile_deplibs="$deplib $compile_deplibs"
+	    finalize_deplibs="$deplib $finalize_deplibs"
+	  else
+	    compiler_flags="$compiler_flags $deplib"
+	    if test "$linkmode" = lib ; then
+		case "$new_inherited_linker_flags " in
+		    *" $deplib "*) ;;
+		    * ) new_inherited_linker_flags="$new_inherited_linker_flags $deplib" ;;
+		esac
+	    fi
+	  fi
+	  continue
+	  ;;
+	-l*)
+	  if test "$linkmode" != lib && test "$linkmode" != prog; then
+	    func_warning "\`-l' is ignored for archives/objects"
+	    continue
+	  fi
+	  func_stripname '-l' '' "$deplib"
+	  name=$func_stripname_result
+	  if test "$linkmode" = lib; then
+	    searchdirs="$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path"
+	  else
+	    searchdirs="$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path"
+	  fi
+	  for searchdir in $searchdirs; do
+	    for search_ext in .la $std_shrext .so .a; do
+	      # Search the libtool library
+	      lib="$searchdir/lib${name}${search_ext}"
+	      if test -f "$lib"; then
+		if test "$search_ext" = ".la"; then
+		  found=yes
+		else
+		  found=no
+		fi
+		break 2
+	      fi
+	    done
+	  done
+	  if test "$found" != yes; then
+	    # deplib doesn't seem to be a libtool library
+	    if test "$linkmode,$pass" = "prog,link"; then
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    else
+	      deplibs="$deplib $deplibs"
+	      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
+	    fi
+	    continue
+	  else # deplib is a libtool library
+	    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,
+	    # We need to do some special things here, and not later.
+	    if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	      case " $predeps $postdeps " in
+	      *" $deplib "*)
+		if func_lalib_p "$lib"; then
+		  library_names=
+		  old_library=
+		  func_source "$lib"
+		  for l in $old_library $library_names; do
+		    ll="$l"
+		  done
+		  if test "X$ll" = "X$old_library" ; then # only static version available
+		    found=no
+		    func_dirname "$lib" "" "."
+		    ladir="$func_dirname_result"
+		    lib=$ladir/$old_library
+		    if test "$linkmode,$pass" = "prog,link"; then
+		      compile_deplibs="$deplib $compile_deplibs"
+		      finalize_deplibs="$deplib $finalize_deplibs"
+		    else
+		      deplibs="$deplib $deplibs"
+		      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
+		    fi
+		    continue
+		  fi
+		fi
+		;;
+	      *) ;;
+	      esac
+	    fi
+	  fi
+	  ;; # -l
+	*.ltframework)
+	  if test "$linkmode,$pass" = "prog,link"; then
+	    compile_deplibs="$deplib $compile_deplibs"
+	    finalize_deplibs="$deplib $finalize_deplibs"
+	  else
+	    deplibs="$deplib $deplibs"
+	    if test "$linkmode" = lib ; then
+		case "$new_inherited_linker_flags " in
+		    *" $deplib "*) ;;
+		    * ) new_inherited_linker_flags="$new_inherited_linker_flags $deplib" ;;
+		esac
+	    fi
+	  fi
+	  continue
+	  ;;
+	-L*)
+	  case $linkmode in
+	  lib)
+	    deplibs="$deplib $deplibs"
+	    test "$pass" = conv && continue
+	    newdependency_libs="$deplib $newdependency_libs"
+	    func_stripname '-L' '' "$deplib"
+	    newlib_search_path="$newlib_search_path $func_stripname_result"
+	    ;;
+	  prog)
+	    if test "$pass" = conv; then
+	      deplibs="$deplib $deplibs"
+	      continue
+	    fi
+	    if test "$pass" = scan; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    fi
+	    func_stripname '-L' '' "$deplib"
+	    newlib_search_path="$newlib_search_path $func_stripname_result"
+	    ;;
+	  *)
+	    func_warning "\`-L' is ignored for archives/objects"
+	    ;;
+	  esac # linkmode
+	  continue
+	  ;; # -L
+	-R*)
+	  if test "$pass" = link; then
+	    func_stripname '-R' '' "$deplib"
+	    dir=$func_stripname_result
+	    # Make sure the xrpath contains only unique directories.
+	    case "$xrpath " in
+	    *" $dir "*) ;;
+	    *) xrpath="$xrpath $dir" ;;
+	    esac
+	  fi
+	  deplibs="$deplib $deplibs"
+	  continue
+	  ;;
+	*.la) lib="$deplib" ;;
+	*.$libext)
+	  if test "$pass" = conv; then
+	    deplibs="$deplib $deplibs"
+	    continue
+	  fi
+	  case $linkmode in
+	  lib)
+	    # Linking convenience modules into shared libraries is allowed,
+	    # but linking other static libraries is non-portable.
+	    case " $dlpreconveniencelibs " in
+	    *" $deplib "*) ;;
+	    *)
+	      valid_a_lib=no
+	      case $deplibs_check_method in
+		match_pattern*)
+		  set dummy $deplibs_check_method; shift
+		  match_pattern_regex=`expr "$deplibs_check_method" : "$1 \(.*\)"`
+		  if eval "\$ECHO \"X$deplib\"" 2>/dev/null | $Xsed -e 10q \
+		    | $EGREP "$match_pattern_regex" > /dev/null; then
+		    valid_a_lib=yes
+		  fi
+		;;
+		pass_all)
+		  valid_a_lib=yes
+		;;
+	      esac
+	      if test "$valid_a_lib" != yes; then
+		$ECHO
+		$ECHO "*** Warning: Trying to link with static lib archive $deplib."
+		$ECHO "*** I have the capability to make that library automatically link in when"
+		$ECHO "*** you link to this library.  But I can only do this if you have a"
+		$ECHO "*** shared version of the library, which you do not appear to have"
+		$ECHO "*** because the file extensions .$libext of this argument makes me believe"
+		$ECHO "*** that it is just a static archive that I should not use here."
+	      else
+		$ECHO
+		$ECHO "*** Warning: Linking the shared library $output against the"
+		$ECHO "*** static library $deplib is not portable!"
+		deplibs="$deplib $deplibs"
+	      fi
+	      ;;
+	    esac
+	    continue
+	    ;;
+	  prog)
+	    if test "$pass" != link; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    fi
+	    continue
+	    ;;
+	  esac # linkmode
+	  ;; # *.$libext
+	*.lo | *.$objext)
+	  if test "$pass" = conv; then
+	    deplibs="$deplib $deplibs"
+	  elif test "$linkmode" = prog; then
+	    if test "$pass" = dlpreopen || test "$dlopen_support" != yes || test "$build_libtool_libs" = no; then
+	      # If there is no dlopen support or we're linking statically,
+	      # we need to preload.
+	      newdlprefiles="$newdlprefiles $deplib"
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    else
+	      newdlfiles="$newdlfiles $deplib"
+	    fi
+	  fi
+	  continue
+	  ;;
+	%DEPLIBS%)
+	  alldeplibs=yes
+	  continue
+	  ;;
+	esac # case $deplib
+
+	if test "$found" = yes || test -f "$lib"; then :
+	else
+	  func_fatal_error "cannot find the library \`$lib' or unhandled argument \`$deplib'"
+	fi
+
+	# Check to see that this really is a libtool archive.
+	func_lalib_unsafe_p "$lib" \
+	  || func_fatal_error "\`$lib' is not a valid libtool archive"
+
+	func_dirname "$lib" "" "."
+	ladir="$func_dirname_result"
+
+	dlname=
+	dlopen=
+	dlpreopen=
+	libdir=
+	library_names=
+	old_library=
+	inherited_linker_flags=
+	# If the library was installed with an old release of libtool,
+	# it will not redefine variables installed, or shouldnotlink
+	installed=yes
+	shouldnotlink=no
+	avoidtemprpath=
+
+
+	# Read the .la file
+	func_source "$lib"
+
+	# Convert "-framework foo" to "foo.ltframework"
+	if test -n "$inherited_linker_flags"; then
+	  tmp_inherited_linker_flags=`$ECHO "X$inherited_linker_flags" | $Xsed -e 's/-framework \([^ $]*\)/\1.ltframework/g'`
+	  for tmp_inherited_linker_flag in $tmp_inherited_linker_flags; do
+	    case " $new_inherited_linker_flags " in
+	      *" $tmp_inherited_linker_flag "*) ;;
+	      *) new_inherited_linker_flags="$new_inherited_linker_flags $tmp_inherited_linker_flag";;
+	    esac
+	  done
+	fi
+	dependency_libs=`$ECHO "X $dependency_libs" | $Xsed -e 's% \([^ $]*\).ltframework% -framework \1%g'`
+	if test "$linkmode,$pass" = "lib,link" ||
+	   test "$linkmode,$pass" = "prog,scan" ||
+	   { test "$linkmode" != prog && test "$linkmode" != lib; }; then
+	  test -n "$dlopen" && dlfiles="$dlfiles $dlopen"
+	  test -n "$dlpreopen" && dlprefiles="$dlprefiles $dlpreopen"
+	fi
+
+	if test "$pass" = conv; then
+	  # Only check for convenience libraries
+	  deplibs="$lib $deplibs"
+	  if test -z "$libdir"; then
+	    if test -z "$old_library"; then
+	      func_fatal_error "cannot find name of link library for \`$lib'"
+	    fi
+	    # It is a libtool convenience library, so add in its objects.
+	    convenience="$convenience $ladir/$objdir/$old_library"
+	    old_convenience="$old_convenience $ladir/$objdir/$old_library"
+	    tmp_libs=
+	    for deplib in $dependency_libs; do
+	      deplibs="$deplib $deplibs"
+	      if $opt_duplicate_deps ; then
+		case "$tmp_libs " in
+		*" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+		esac
+	      fi
+	      tmp_libs="$tmp_libs $deplib"
+	    done
+	  elif test "$linkmode" != prog && test "$linkmode" != lib; then
+	    func_fatal_error "\`$lib' is not a convenience library"
+	  fi
+	  continue
+	fi # $pass = conv
+
+
+	# Get the name of the library we link against.
+	linklib=
+	for l in $old_library $library_names; do
+	  linklib="$l"
+	done
+	if test -z "$linklib"; then
+	  func_fatal_error "cannot find name of link library for \`$lib'"
+	fi
+
+	# This library was specified with -dlopen.
+	if test "$pass" = dlopen; then
+	  if test -z "$libdir"; then
+	    func_fatal_error "cannot -dlopen a convenience library: \`$lib'"
+	  fi
+	  if test -z "$dlname" ||
+	     test "$dlopen_support" != yes ||
+	     test "$build_libtool_libs" = no; then
+	    # If there is no dlname, no dlopen support or we're linking
+	    # statically, we need to preload.  We also need to preload any
+	    # dependent libraries so libltdl's deplib preloader doesn't
+	    # bomb out in the load deplibs phase.
+	    dlprefiles="$dlprefiles $lib $dependency_libs"
+	  else
+	    newdlfiles="$newdlfiles $lib"
+	  fi
+	  continue
+	fi # $pass = dlopen
+
+	# We need an absolute path.
+	case $ladir in
+	[\\/]* | [A-Za-z]:[\\/]*) abs_ladir="$ladir" ;;
+	*)
+	  abs_ladir=`cd "$ladir" && pwd`
+	  if test -z "$abs_ladir"; then
+	    func_warning "cannot determine absolute directory name of \`$ladir'"
+	    func_warning "passing it literally to the linker, although it might fail"
+	    abs_ladir="$ladir"
+	  fi
+	  ;;
+	esac
+	func_basename "$lib"
+	laname="$func_basename_result"
+
+	# Find the relevant object directory and library name.
+	if test "X$installed" = Xyes; then
+	  if test ! -f "$libdir/$linklib" && test -f "$abs_ladir/$linklib"; then
+	    func_warning "library \`$lib' was moved."
+	    dir="$ladir"
+	    absdir="$abs_ladir"
+	    libdir="$abs_ladir"
+	  else
+	    dir="$libdir"
+	    absdir="$libdir"
+	  fi
+	  test "X$hardcode_automatic" = Xyes && avoidtemprpath=yes
+	else
+	  if test ! -f "$ladir/$objdir/$linklib" && test -f "$abs_ladir/$linklib"; then
+	    dir="$ladir"
+	    absdir="$abs_ladir"
+	    # Remove this search path later
+	    notinst_path="$notinst_path $abs_ladir"
+	  else
+	    dir="$ladir/$objdir"
+	    absdir="$abs_ladir/$objdir"
+	    # Remove this search path later
+	    notinst_path="$notinst_path $abs_ladir"
+	  fi
+	fi # $installed = yes
+	func_stripname 'lib' '.la' "$laname"
+	name=$func_stripname_result
+
+	# This library was specified with -dlpreopen.
+	if test "$pass" = dlpreopen; then
+	  if test -z "$libdir" && test "$linkmode" = prog; then
+	    func_fatal_error "only libraries may -dlpreopen a convenience library: \`$lib'"
+	  fi
+	  # Prefer using a static library (so that no silly _DYNAMIC symbols
+	  # are required to link).
+	  if test -n "$old_library"; then
+	    newdlprefiles="$newdlprefiles $dir/$old_library"
+	    # Keep a list of preopened convenience libraries to check
+	    # that they are being used correctly in the link pass.
+	    test -z "$libdir" && \
+		dlpreconveniencelibs="$dlpreconveniencelibs $dir/$old_library"
+	  # Otherwise, use the dlname, so that lt_dlopen finds it.
+	  elif test -n "$dlname"; then
+	    newdlprefiles="$newdlprefiles $dir/$dlname"
+	  else
+	    newdlprefiles="$newdlprefiles $dir/$linklib"
+	  fi
+	fi # $pass = dlpreopen
+
+	if test -z "$libdir"; then
+	  # Link the convenience library
+	  if test "$linkmode" = lib; then
+	    deplibs="$dir/$old_library $deplibs"
+	  elif test "$linkmode,$pass" = "prog,link"; then
+	    compile_deplibs="$dir/$old_library $compile_deplibs"
+	    finalize_deplibs="$dir/$old_library $finalize_deplibs"
+	  else
+	    deplibs="$lib $deplibs" # used for prog,scan pass
+	  fi
+	  continue
+	fi
+
+
+	if test "$linkmode" = prog && test "$pass" != link; then
+	  newlib_search_path="$newlib_search_path $ladir"
+	  deplibs="$lib $deplibs"
+
+	  linkalldeplibs=no
+	  if test "$link_all_deplibs" != no || test -z "$library_names" ||
+	     test "$build_libtool_libs" = no; then
+	    linkalldeplibs=yes
+	  fi
+
+	  tmp_libs=
+	  for deplib in $dependency_libs; do
+	    case $deplib in
+	    -L*) func_stripname '-L' '' "$deplib"
+	         newlib_search_path="$newlib_search_path $func_stripname_result"
+		 ;;
+	    esac
+	    # Need to link against all dependency_libs?
+	    if test "$linkalldeplibs" = yes; then
+	      deplibs="$deplib $deplibs"
+	    else
+	      # Need to hardcode shared library paths
+	      # or/and link against static libraries
+	      newdependency_libs="$deplib $newdependency_libs"
+	    fi
+	    if $opt_duplicate_deps ; then
+	      case "$tmp_libs " in
+	      *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	      esac
+	    fi
+	    tmp_libs="$tmp_libs $deplib"
+	  done # for deplib
+	  continue
+	fi # $linkmode = prog...
+
+	if test "$linkmode,$pass" = "prog,link"; then
+	  if test -n "$library_names" &&
+	     { { test "$prefer_static_libs" = no ||
+	         test "$prefer_static_libs,$installed" = "built,yes"; } ||
+	       test -z "$old_library"; }; then
+	    # We need to hardcode the library path
+	    if test -n "$shlibpath_var" && test -z "$avoidtemprpath" ; then
+	      # Make sure the rpath contains only unique directories.
+	      case "$temp_rpath:" in
+	      *"$absdir:"*) ;;
+	      *) temp_rpath="$temp_rpath$absdir:" ;;
+	      esac
+	    fi
+
+	    # Hardcode the library path.
+	    # Skip directories that are in the system default run-time
+	    # search path.
+	    case " $sys_lib_dlsearch_path " in
+	    *" $absdir "*) ;;
+	    *)
+	      case "$compile_rpath " in
+	      *" $absdir "*) ;;
+	      *) compile_rpath="$compile_rpath $absdir"
+	      esac
+	      ;;
+	    esac
+	    case " $sys_lib_dlsearch_path " in
+	    *" $libdir "*) ;;
+	    *)
+	      case "$finalize_rpath " in
+	      *" $libdir "*) ;;
+	      *) finalize_rpath="$finalize_rpath $libdir"
+	      esac
+	      ;;
+	    esac
+	  fi # $linkmode,$pass = prog,link...
+
+	  if test "$alldeplibs" = yes &&
+	     { test "$deplibs_check_method" = pass_all ||
+	       { test "$build_libtool_libs" = yes &&
+		 test -n "$library_names"; }; }; then
+	    # We only need to search for static libraries
+	    continue
+	  fi
+	fi
+
+	link_static=no # Whether the deplib will be linked statically
+	use_static_libs=$prefer_static_libs
+	if test "$use_static_libs" = built && test "$installed" = yes; then
+	  use_static_libs=no
+	fi
+	if test -n "$library_names" &&
+	   { test "$use_static_libs" = no || test -z "$old_library"; }; then
+	  case $host in
+	  *cygwin* | *mingw* | *cegcc*)
+	      # No point in relinking DLLs because paths are not encoded
+	      notinst_deplibs="$notinst_deplibs $lib"
+	      need_relink=no
+	    ;;
+	  *)
+	    if test "$installed" = no; then
+	      notinst_deplibs="$notinst_deplibs $lib"
+	      need_relink=yes
+	    fi
+	    ;;
+	  esac
+	  # This is a shared library
+
+	  # Warn about portability, can't link against -module's on some
+	  # systems (darwin).  Don't bleat about dlopened modules though!
+	  dlopenmodule=""
+	  for dlpremoduletest in $dlprefiles; do
+	    if test "X$dlpremoduletest" = "X$lib"; then
+	      dlopenmodule="$dlpremoduletest"
+	      break
+	    fi
+	  done
+	  if test -z "$dlopenmodule" && test "$shouldnotlink" = yes && test "$pass" = link; then
+	    $ECHO
+	    if test "$linkmode" = prog; then
+	      $ECHO "*** Warning: Linking the executable $output against the loadable module"
+	    else
+	      $ECHO "*** Warning: Linking the shared library $output against the loadable module"
+	    fi
+	    $ECHO "*** $linklib is not portable!"
+	  fi
+	  if test "$linkmode" = lib &&
+	     test "$hardcode_into_libs" = yes; then
+	    # Hardcode the library path.
+	    # Skip directories that are in the system default run-time
+	    # search path.
+	    case " $sys_lib_dlsearch_path " in
+	    *" $absdir "*) ;;
+	    *)
+	      case "$compile_rpath " in
+	      *" $absdir "*) ;;
+	      *) compile_rpath="$compile_rpath $absdir"
+	      esac
+	      ;;
+	    esac
+	    case " $sys_lib_dlsearch_path " in
+	    *" $libdir "*) ;;
+	    *)
+	      case "$finalize_rpath " in
+	      *" $libdir "*) ;;
+	      *) finalize_rpath="$finalize_rpath $libdir"
+	      esac
+	      ;;
+	    esac
+	  fi
+
+	  if test -n "$old_archive_from_expsyms_cmds"; then
+	    # figure out the soname
+	    set dummy $library_names
+	    shift
+	    realname="$1"
+	    shift
+	    libname=`eval "\\$ECHO \"$libname_spec\""`
+	    # use dlname if we got it. it's perfectly good, no?
+	    if test -n "$dlname"; then
+	      soname="$dlname"
+	    elif test -n "$soname_spec"; then
+	      # bleh windows
+	      case $host in
+	      *cygwin* | mingw* | *cegcc*)
+	        func_arith $current - $age
+		major=$func_arith_result
+		versuffix="-$major"
+		;;
+	      esac
+	      eval soname=\"$soname_spec\"
+	    else
+	      soname="$realname"
+	    fi
+
+	    # Make a new name for the extract_expsyms_cmds to use
+	    soroot="$soname"
+	    func_basename "$soroot"
+	    soname="$func_basename_result"
+	    func_stripname 'lib' '.dll' "$soname"
+	    newlib=libimp-$func_stripname_result.a
+
+	    # If the library has no export list, then create one now
+	    if test -f "$output_objdir/$soname-def"; then :
+	    else
+	      func_verbose "extracting exported symbol list from \`$soname'"
+	      func_execute_cmds "$extract_expsyms_cmds" 'exit $?'
+	    fi
+
+	    # Create $newlib
+	    if test -f "$output_objdir/$newlib"; then :; else
+	      func_verbose "generating import library for \`$soname'"
+	      func_execute_cmds "$old_archive_from_expsyms_cmds" 'exit $?'
+	    fi
+	    # make sure the library variables are pointing to the new library
+	    dir=$output_objdir
+	    linklib=$newlib
+	  fi # test -n "$old_archive_from_expsyms_cmds"
+
+	  if test "$linkmode" = prog || test "$mode" != relink; then
+	    add_shlibpath=
+	    add_dir=
+	    add=
+	    lib_linked=yes
+	    case $hardcode_action in
+	    immediate | unsupported)
+	      if test "$hardcode_direct" = no; then
+		add="$dir/$linklib"
+		case $host in
+		  *-*-sco3.2v5.0.[024]*) add_dir="-L$dir" ;;
+		  *-*-sysv4*uw2*) add_dir="-L$dir" ;;
+		  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \
+		    *-*-unixware7*) add_dir="-L$dir" ;;
+		  *-*-darwin* )
+		    # if the lib is a (non-dlopened) module then we can not
+		    # link against it, someone is ignoring the earlier warnings
+		    if /usr/bin/file -L $add 2> /dev/null |
+			 $GREP ": [^:]* bundle" >/dev/null ; then
+		      if test "X$dlopenmodule" != "X$lib"; then
+			$ECHO "*** Warning: lib $linklib is a module, not a shared library"
+			if test -z "$old_library" ; then
+			  $ECHO
+			  $ECHO "*** And there doesn't seem to be a static archive available"
+			  $ECHO "*** The link will probably fail, sorry"
+			else
+			  add="$dir/$old_library"
+			fi
+		      elif test -n "$old_library"; then
+			add="$dir/$old_library"
+		      fi
+		    fi
+		esac
+	      elif test "$hardcode_minus_L" = no; then
+		case $host in
+		*-*-sunos*) add_shlibpath="$dir" ;;
+		esac
+		add_dir="-L$dir"
+		add="-l$name"
+	      elif test "$hardcode_shlibpath_var" = no; then
+		add_shlibpath="$dir"
+		add="-l$name"
+	      else
+		lib_linked=no
+	      fi
+	      ;;
+	    relink)
+	      if test "$hardcode_direct" = yes &&
+	         test "$hardcode_direct_absolute" = no; then
+		add="$dir/$linklib"
+	      elif test "$hardcode_minus_L" = yes; then
+		add_dir="-L$dir"
+		# Try looking first in the location we're being installed to.
+		if test -n "$inst_prefix_dir"; then
+		  case $libdir in
+		    [\\/]*)
+		      add_dir="$add_dir -L$inst_prefix_dir$libdir"
+		      ;;
+		  esac
+		fi
+		add="-l$name"
+	      elif test "$hardcode_shlibpath_var" = yes; then
+		add_shlibpath="$dir"
+		add="-l$name"
+	      else
+		lib_linked=no
+	      fi
+	      ;;
+	    *) lib_linked=no ;;
+	    esac
+
+	    if test "$lib_linked" != yes; then
+	      func_fatal_configuration "unsupported hardcode properties"
+	    fi
+
+	    if test -n "$add_shlibpath"; then
+	      case :$compile_shlibpath: in
+	      *":$add_shlibpath:"*) ;;
+	      *) compile_shlibpath="$compile_shlibpath$add_shlibpath:" ;;
+	      esac
+	    fi
+	    if test "$linkmode" = prog; then
+	      test -n "$add_dir" && compile_deplibs="$add_dir $compile_deplibs"
+	      test -n "$add" && compile_deplibs="$add $compile_deplibs"
+	    else
+	      test -n "$add_dir" && deplibs="$add_dir $deplibs"
+	      test -n "$add" && deplibs="$add $deplibs"
+	      if test "$hardcode_direct" != yes &&
+		 test "$hardcode_minus_L" != yes &&
+		 test "$hardcode_shlibpath_var" = yes; then
+		case :$finalize_shlibpath: in
+		*":$libdir:"*) ;;
+		*) finalize_shlibpath="$finalize_shlibpath$libdir:" ;;
+		esac
+	      fi
+	    fi
+	  fi
+
+	  if test "$linkmode" = prog || test "$mode" = relink; then
+	    add_shlibpath=
+	    add_dir=
+	    add=
+	    # Finalize command for both is simple: just hardcode it.
+	    if test "$hardcode_direct" = yes &&
+	       test "$hardcode_direct_absolute" = no; then
+	      add="$libdir/$linklib"
+	    elif test "$hardcode_minus_L" = yes; then
+	      add_dir="-L$libdir"
+	      add="-l$name"
+	    elif test "$hardcode_shlibpath_var" = yes; then
+	      case :$finalize_shlibpath: in
+	      *":$libdir:"*) ;;
+	      *) finalize_shlibpath="$finalize_shlibpath$libdir:" ;;
+	      esac
+	      add="-l$name"
+	    elif test "$hardcode_automatic" = yes; then
+	      if test -n "$inst_prefix_dir" &&
+		 test -f "$inst_prefix_dir$libdir/$linklib" ; then
+		add="$inst_prefix_dir$libdir/$linklib"
+	      else
+		add="$libdir/$linklib"
+	      fi
+	    else
+	      # We cannot seem to hardcode it, guess we'll fake it.
+	      add_dir="-L$libdir"
+	      # Try looking first in the location we're being installed to.
+	      if test -n "$inst_prefix_dir"; then
+		case $libdir in
+		  [\\/]*)
+		    add_dir="$add_dir -L$inst_prefix_dir$libdir"
+		    ;;
+		esac
+	      fi
+	      add="-l$name"
+	    fi
+
+	    if test "$linkmode" = prog; then
+	      test -n "$add_dir" && finalize_deplibs="$add_dir $finalize_deplibs"
+	      test -n "$add" && finalize_deplibs="$add $finalize_deplibs"
+	    else
+	      test -n "$add_dir" && deplibs="$add_dir $deplibs"
+	      test -n "$add" && deplibs="$add $deplibs"
+	    fi
+	  fi
+	elif test "$linkmode" = prog; then
+	  # Here we assume that one of hardcode_direct or hardcode_minus_L
+	  # is not unsupported.  This is valid on all known static and
+	  # shared platforms.
+	  if test "$hardcode_direct" != unsupported; then
+	    test -n "$old_library" && linklib="$old_library"
+	    compile_deplibs="$dir/$linklib $compile_deplibs"
+	    finalize_deplibs="$dir/$linklib $finalize_deplibs"
+	  else
+	    compile_deplibs="-l$name -L$dir $compile_deplibs"
+	    finalize_deplibs="-l$name -L$dir $finalize_deplibs"
+	  fi
+	elif test "$build_libtool_libs" = yes; then
+	  # Not a shared library
+	  if test "$deplibs_check_method" != pass_all; then
+	    # We're trying link a shared library against a static one
+	    # but the system doesn't support it.
+
+	    # Just print a warning and add the library to dependency_libs so
+	    # that the program can be linked against the static library.
+	    $ECHO
+	    $ECHO "*** Warning: This system can not link to static lib archive $lib."
+	    $ECHO "*** I have the capability to make that library automatically link in when"
+	    $ECHO "*** you link to this library.  But I can only do this if you have a"
+	    $ECHO "*** shared version of the library, which you do not appear to have."
+	    if test "$module" = yes; then
+	      $ECHO "*** But as you try to build a module library, libtool will still create "
+	      $ECHO "*** a static module, that should work as long as the dlopening application"
+	      $ECHO "*** is linked with the -dlopen flag to resolve symbols at runtime."
+	      if test -z "$global_symbol_pipe"; then
+		$ECHO
+		$ECHO "*** However, this would only work if libtool was able to extract symbol"
+		$ECHO "*** lists from a program, using \`nm' or equivalent, but libtool could"
+		$ECHO "*** not find such a program.  So, this module is probably useless."
+		$ECHO "*** \`nm' from GNU binutils and a full rebuild may help."
+	      fi
+	      if test "$build_old_libs" = no; then
+		build_libtool_libs=module
+		build_old_libs=yes
+	      else
+		build_libtool_libs=no
+	      fi
+	    fi
+	  else
+	    deplibs="$dir/$old_library $deplibs"
+	    link_static=yes
+	  fi
+	fi # link shared/static library?
+
+	if test "$linkmode" = lib; then
+	  if test -n "$dependency_libs" &&
+	     { test "$hardcode_into_libs" != yes ||
+	       test "$build_old_libs" = yes ||
+	       test "$link_static" = yes; }; then
+	    # Extract -R from dependency_libs
+	    temp_deplibs=
+	    for libdir in $dependency_libs; do
+	      case $libdir in
+	      -R*) func_stripname '-R' '' "$libdir"
+	           temp_xrpath=$func_stripname_result
+		   case " $xrpath " in
+		   *" $temp_xrpath "*) ;;
+		   *) xrpath="$xrpath $temp_xrpath";;
+		   esac;;
+	      *) temp_deplibs="$temp_deplibs $libdir";;
+	      esac
+	    done
+	    dependency_libs="$temp_deplibs"
+	  fi
+
+	  newlib_search_path="$newlib_search_path $absdir"
+	  # Link against this library
+	  test "$link_static" = no && newdependency_libs="$abs_ladir/$laname $newdependency_libs"
+	  # ... and its dependency_libs
+	  tmp_libs=
+	  for deplib in $dependency_libs; do
+	    newdependency_libs="$deplib $newdependency_libs"
+	    if $opt_duplicate_deps ; then
+	      case "$tmp_libs " in
+	      *" $deplib "*) specialdeplibs="$specialdeplibs $deplib" ;;
+	      esac
+	    fi
+	    tmp_libs="$tmp_libs $deplib"
+	  done
+
+	  if test "$link_all_deplibs" != no; then
+	    # Add the search paths of all dependency libraries
+	    for deplib in $dependency_libs; do
+	      path=
+	      case $deplib in
+	      -L*) path="$deplib" ;;
+	      *.la)
+	        func_dirname "$deplib" "" "."
+		dir="$func_dirname_result"
+		# We need an absolute path.
+		case $dir in
+		[\\/]* | [A-Za-z]:[\\/]*) absdir="$dir" ;;
+		*)
+		  absdir=`cd "$dir" && pwd`
+		  if test -z "$absdir"; then
+		    func_warning "cannot determine absolute directory name of \`$dir'"
+		    absdir="$dir"
+		  fi
+		  ;;
+		esac
+		if $GREP "^installed=no" $deplib > /dev/null; then
+		case $host in
+		*-*-darwin*)
+		  depdepl=
+		  eval deplibrary_names=`${SED} -n -e 's/^library_names=\(.*\)$/\1/p' $deplib`
+		  if test -n "$deplibrary_names" ; then
+		    for tmp in $deplibrary_names ; do
+		      depdepl=$tmp
+		    done
+		    if test -f "$absdir/$objdir/$depdepl" ; then
+		      depdepl="$absdir/$objdir/$depdepl"
+		      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`
+                      if test -z "$darwin_install_name"; then
+                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`
+                      fi
+		      compiler_flags="$compiler_flags ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}"
+		      linker_flags="$linker_flags -dylib_file ${darwin_install_name}:${depdepl}"
+		      path=
+		    fi
+		  fi
+		  ;;
+		*)
+		  path="-L$absdir/$objdir"
+		  ;;
+		esac
+		else
+		  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+		  test -z "$libdir" && \
+		    func_fatal_error "\`$deplib' is not a valid libtool archive"
+		  test "$absdir" != "$libdir" && \
+		    func_warning "\`$deplib' seems to be moved"
+
+		  path="-L$absdir"
+		fi
+		;;
+	      esac
+	      case " $deplibs " in
+	      *" $path "*) ;;
+	      *) deplibs="$path $deplibs" ;;
+	      esac
+	    done
+	  fi # link_all_deplibs != no
+	fi # linkmode = lib
+      done # for deplib in $libs
+      if test "$pass" = link; then
+	if test "$linkmode" = "prog"; then
+	  compile_deplibs="$new_inherited_linker_flags $compile_deplibs"
+	  finalize_deplibs="$new_inherited_linker_flags $finalize_deplibs"
+	else
+	  compiler_flags="$compiler_flags "`$ECHO "X $new_inherited_linker_flags" | $Xsed -e 's% \([^ $]*\).ltframework% -framework \1%g'`
+	fi
+      fi
+      dependency_libs="$newdependency_libs"
+      if test "$pass" = dlpreopen; then
+	# Link the dlpreopened libraries before other libraries
+	for deplib in $save_deplibs; do
+	  deplibs="$deplib $deplibs"
+	done
+      fi
+      if test "$pass" != dlopen; then
+	if test "$pass" != conv; then
+	  # Make sure lib_search_path contains only unique directories.
+	  lib_search_path=
+	  for dir in $newlib_search_path; do
+	    case "$lib_search_path " in
+	    *" $dir "*) ;;
+	    *) lib_search_path="$lib_search_path $dir" ;;
+	    esac
+	  done
+	  newlib_search_path=
+	fi
+
+	if test "$linkmode,$pass" != "prog,link"; then
+	  vars="deplibs"
+	else
+	  vars="compile_deplibs finalize_deplibs"
+	fi
+	for var in $vars dependency_libs; do
+	  # Add libraries to $var in reverse order
+	  eval tmp_libs=\"\$$var\"
+	  new_libs=
+	  for deplib in $tmp_libs; do
+	    # FIXME: Pedantically, this is the right thing to do, so
+	    #        that some nasty dependency loop isn't accidentally
+	    #        broken:
+	    #new_libs="$deplib $new_libs"
+	    # Pragmatically, this seems to cause very few problems in
+	    # practice:
+	    case $deplib in
+	    -L*) new_libs="$deplib $new_libs" ;;
+	    -R*) ;;
+	    *)
+	      # And here is the reason: when a library appears more
+	      # than once as an explicit dependence of a library, or
+	      # is implicitly linked in more than once by the
+	      # compiler, it is considered special, and multiple
+	      # occurrences thereof are not removed.  Compare this
+	      # with having the same library being listed as a
+	      # dependency of multiple other libraries: in this case,
+	      # we know (pedantically, we assume) the library does not
+	      # need to be listed more than once, so we keep only the
+	      # last copy.  This is not always right, but it is rare
+	      # enough that we require users that really mean to play
+	      # such unportable linking tricks to link the library
+	      # using -Wl,-lname, so that libtool does not consider it
+	      # for duplicate removal.
+	      case " $specialdeplibs " in
+	      *" $deplib "*) new_libs="$deplib $new_libs" ;;
+	      *)
+		case " $new_libs " in
+		*" $deplib "*) ;;
+		*) new_libs="$deplib $new_libs" ;;
+		esac
+		;;
+	      esac
+	      ;;
+	    esac
+	  done
+	  tmp_libs=
+	  for deplib in $new_libs; do
+	    case $deplib in
+	    -L*)
+	      case " $tmp_libs " in
+	      *" $deplib "*) ;;
+	      *) tmp_libs="$tmp_libs $deplib" ;;
+	      esac
+	      ;;
+	    *) tmp_libs="$tmp_libs $deplib" ;;
+	    esac
+	  done
+	  eval $var=\"$tmp_libs\"
+	done # for var
+      fi
+      # Last step: remove runtime libs from dependency_libs
+      # (they stay in deplibs)
+      tmp_libs=
+      for i in $dependency_libs ; do
+	case " $predeps $postdeps $compiler_lib_search_path " in
+	*" $i "*)
+	  i=""
+	  ;;
+	esac
+	if test -n "$i" ; then
+	  tmp_libs="$tmp_libs $i"
+	fi
+      done
+      dependency_libs=$tmp_libs
+    done # for pass
+    if test "$linkmode" = prog; then
+      dlfiles="$newdlfiles"
+    fi
+    if test "$linkmode" = prog || test "$linkmode" = lib; then
+      dlprefiles="$newdlprefiles"
+    fi
+
+    case $linkmode in
+    oldlib)
+      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+	func_warning "\`-dlopen' is ignored for archives"
+      fi
+
+      case " $deplibs" in
+      *\ -l* | *\ -L*)
+	func_warning "\`-l' and \`-L' are ignored for archives" ;;
+      esac
+
+      test -n "$rpath" && \
+	func_warning "\`-rpath' is ignored for archives"
+
+      test -n "$xrpath" && \
+	func_warning "\`-R' is ignored for archives"
+
+      test -n "$vinfo" && \
+	func_warning "\`-version-info/-version-number' is ignored for archives"
+
+      test -n "$release" && \
+	func_warning "\`-release' is ignored for archives"
+
+      test -n "$export_symbols$export_symbols_regex" && \
+	func_warning "\`-export-symbols' is ignored for archives"
+
+      # Now set the variables for building old libraries.
+      build_libtool_libs=no
+      oldlibs="$output"
+      objs="$objs$old_deplibs"
+      ;;
+
+    lib)
+      # Make sure we only generate libraries of the form `libNAME.la'.
+      case $outputname in
+      lib*)
+	func_stripname 'lib' '.la' "$outputname"
+	name=$func_stripname_result
+	eval shared_ext=\"$shrext_cmds\"
+	eval libname=\"$libname_spec\"
+	;;
+      *)
+	test "$module" = no && \
+	  func_fatal_help "libtool library \`$output' must begin with \`lib'"
+
+	if test "$need_lib_prefix" != no; then
+	  # Add the "lib" prefix for modules if required
+	  func_stripname '' '.la' "$outputname"
+	  name=$func_stripname_result
+	  eval shared_ext=\"$shrext_cmds\"
+	  eval libname=\"$libname_spec\"
+	else
+	  func_stripname '' '.la' "$outputname"
+	  libname=$func_stripname_result
+	fi
+	;;
+      esac
+
+      if test -n "$objs"; then
+	if test "$deplibs_check_method" != pass_all; then
+	  func_fatal_error "cannot build libtool library \`$output' from non-libtool objects on this host:$objs"
+	else
+	  $ECHO
+	  $ECHO "*** Warning: Linking the shared library $output against the non-libtool"
+	  $ECHO "*** objects $objs is not portable!"
+	  libobjs="$libobjs $objs"
+	fi
+      fi
+
+      test "$dlself" != no && \
+	func_warning "\`-dlopen self' is ignored for libtool libraries"
+
+      set dummy $rpath
+      shift
+      test "$#" -gt 1 && \
+	func_warning "ignoring multiple \`-rpath's for a libtool library"
+
+      install_libdir="$1"
+
+      oldlibs=
+      if test -z "$rpath"; then
+	if test "$build_libtool_libs" = yes; then
+	  # Building a libtool convenience library.
+	  # Some compilers have problems with a `.al' extension so
+	  # convenience libraries should have the same extension an
+	  # archive normally would.
+	  oldlibs="$output_objdir/$libname.$libext $oldlibs"
+	  build_libtool_libs=convenience
+	  build_old_libs=yes
+	fi
+
+	test -n "$vinfo" && \
+	  func_warning "\`-version-info/-version-number' is ignored for convenience libraries"
+
+	test -n "$release" && \
+	  func_warning "\`-release' is ignored for convenience libraries"
+      else
+
+	# Parse the version information argument.
+	save_ifs="$IFS"; IFS=':'
+	set dummy $vinfo 0 0 0
+	shift
+	IFS="$save_ifs"
+
+	test -n "$7" && \
+	  func_fatal_help "too many parameters to \`-version-info'"
+
+	# convert absolute version numbers to libtool ages
+	# this retains compatibility with .la files and attempts
+	# to make the code below a bit more comprehensible
+
+	case $vinfo_number in
+	yes)
+	  number_major="$1"
+	  number_minor="$2"
+	  number_revision="$3"
+	  #
+	  # There are really only two kinds -- those that
+	  # use the current revision as the major version
+	  # and those that subtract age and use age as
+	  # a minor version.  But, then there is irix
+	  # which has an extra 1 added just for fun
+	  #
+	  case $version_type in
+	  darwin|linux|osf|windows|none)
+	    func_arith $number_major + $number_minor
+	    current=$func_arith_result
+	    age="$number_minor"
+	    revision="$number_revision"
+	    ;;
+	  freebsd-aout|freebsd-elf|sunos)
+	    current="$number_major"
+	    revision="$number_minor"
+	    age="0"
+	    ;;
+	  irix|nonstopux)
+	    func_arith $number_major + $number_minor
+	    current=$func_arith_result
+	    age="$number_minor"
+	    revision="$number_minor"
+	    lt_irix_increment=no
+	    ;;
+	  *)
+	    func_fatal_configuration "$modename: unknown library version type \`$version_type'"
+	    ;;
+	  esac
+	  ;;
+	no)
+	  current="$1"
+	  revision="$2"
+	  age="$3"
+	  ;;
+	esac
+
+	# Check that each of the things are valid numbers.
+	case $current in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  func_error "CURRENT \`$current' must be a nonnegative integer"
+	  func_fatal_error "\`$vinfo' is not valid version information"
+	  ;;
+	esac
+
+	case $revision in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  func_error "REVISION \`$revision' must be a nonnegative integer"
+	  func_fatal_error "\`$vinfo' is not valid version information"
+	  ;;
+	esac
+
+	case $age in
+	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
+	*)
+	  func_error "AGE \`$age' must be a nonnegative integer"
+	  func_fatal_error "\`$vinfo' is not valid version information"
+	  ;;
+	esac
+
+	if test "$age" -gt "$current"; then
+	  func_error "AGE \`$age' is greater than the current interface number \`$current'"
+	  func_fatal_error "\`$vinfo' is not valid version information"
+	fi
+
+	# Calculate the version variables.
+	major=
+	versuffix=
+	verstring=
+	case $version_type in
+	none) ;;
+
+	darwin)
+	  # Like Linux, but with the current version available in
+	  # verstring for coding it into the library header
+	  func_arith $current - $age
+	  major=.$func_arith_result
+	  versuffix="$major.$age.$revision"
+	  # Darwin ld doesn't like 0 for these options...
+	  func_arith $current + 1
+	  minor_current=$func_arith_result
+	  xlcverstring="${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision"
+	  verstring="-compatibility_version $minor_current -current_version $minor_current.$revision"
+	  ;;
+
+	freebsd-aout)
+	  major=".$current"
+	  versuffix=".$current.$revision";
+	  ;;
+
+	freebsd-elf)
+	  major=".$current"
+	  versuffix=".$current"
+	  ;;
+
+	irix | nonstopux)
+	  if test "X$lt_irix_increment" = "Xno"; then
+	    func_arith $current - $age
+	  else
+	    func_arith $current - $age + 1
+	  fi
+	  major=$func_arith_result
+
+	  case $version_type in
+	    nonstopux) verstring_prefix=nonstopux ;;
+	    *)         verstring_prefix=sgi ;;
+	  esac
+	  verstring="$verstring_prefix$major.$revision"
+
+	  # Add in all the interfaces that we are compatible with.
+	  loop=$revision
+	  while test "$loop" -ne 0; do
+	    func_arith $revision - $loop
+	    iface=$func_arith_result
+	    func_arith $loop - 1
+	    loop=$func_arith_result
+	    verstring="$verstring_prefix$major.$iface:$verstring"
+	  done
+
+	  # Before this point, $major must not contain `.'.
+	  major=.$major
+	  versuffix="$major.$revision"
+	  ;;
+
+	linux)
+	  func_arith $current - $age
+	  major=.$func_arith_result
+	  versuffix="$major.$age.$revision"
+	  ;;
+
+	osf)
+	  func_arith $current - $age
+	  major=.$func_arith_result
+	  versuffix=".$current.$age.$revision"
+	  verstring="$current.$age.$revision"
+
+	  # Add in all the interfaces that we are compatible with.
+	  loop=$age
+	  while test "$loop" -ne 0; do
+	    func_arith $current - $loop
+	    iface=$func_arith_result
+	    func_arith $loop - 1
+	    loop=$func_arith_result
+	    verstring="$verstring:${iface}.0"
+	  done
+
+	  # Make executables depend on our current version.
+	  verstring="$verstring:${current}.0"
+	  ;;
+
+	qnx)
+	  major=".$current"
+	  versuffix=".$current"
+	  ;;
+
+	sunos)
+	  major=".$current"
+	  versuffix=".$current.$revision"
+	  ;;
+
+	windows)
+	  # Use '-' rather than '.', since we only want one
+	  # extension on DOS 8.3 filesystems.
+	  func_arith $current - $age
+	  major=$func_arith_result
+	  versuffix="-$major"
+	  ;;
+
+	*)
+	  func_fatal_configuration "unknown library version type \`$version_type'"
+	  ;;
+	esac
+
+	# Clear the version info if we defaulted, and they specified a release.
+	if test -z "$vinfo" && test -n "$release"; then
+	  major=
+	  case $version_type in
+	  darwin)
+	    # we can't check for "0.0" in archive_cmds due to quoting
+	    # problems, so we reset it completely
+	    verstring=
+	    ;;
+	  *)
+	    verstring="0.0"
+	    ;;
+	  esac
+	  if test "$need_version" = no; then
+	    versuffix=
+	  else
+	    versuffix=".0.0"
+	  fi
+	fi
+
+	# Remove version info from name if versioning should be avoided
+	if test "$avoid_version" = yes && test "$need_version" = no; then
+	  major=
+	  versuffix=
+	  verstring=""
+	fi
+
+	# Check to see if the archive will have undefined symbols.
+	if test "$allow_undefined" = yes; then
+	  if test "$allow_undefined_flag" = unsupported; then
+	    func_warning "undefined symbols not allowed in $host shared libraries"
+	    build_libtool_libs=no
+	    build_old_libs=yes
+	  fi
+	else
+	  # Don't allow undefined symbols.
+	  allow_undefined_flag="$no_undefined_flag"
+	fi
+
+      fi
+
+      func_generate_dlsyms "$libname" "$libname" "yes"
+      libobjs="$libobjs $symfileobj"
+      test "X$libobjs" = "X " && libobjs=
+
+      if test "$mode" != relink; then
+	# Remove our outputs, but don't remove object files since they
+	# may have been created when compiling PIC objects.
+	removelist=
+	tempremovelist=`$ECHO "$output_objdir/*"`
+	for p in $tempremovelist; do
+	  case $p in
+	    *.$objext | *.gcno)
+	       ;;
+	    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)
+	       if test "X$precious_files_regex" != "X"; then
+		 if $ECHO "$p" | $EGREP -e "$precious_files_regex" >/dev/null 2>&1
+		 then
+		   continue
+		 fi
+	       fi
+	       removelist="$removelist $p"
+	       ;;
+	    *) ;;
+	  esac
+	done
+	test -n "$removelist" && \
+	  func_show_eval "${RM}r \$removelist"
+      fi
+
+      # Now set the variables for building old libraries.
+      if test "$build_old_libs" = yes && test "$build_libtool_libs" != convenience ; then
+	oldlibs="$oldlibs $output_objdir/$libname.$libext"
+
+	# Transform .lo files to .o files.
+	oldobjs="$objs "`$ECHO "X$libobjs" | $SP2NL | $Xsed -e '/\.'${libext}'$/d' -e "$lo2o" | $NL2SP`
+      fi
+
+      # Eliminate all temporary directories.
+      #for path in $notinst_path; do
+      #	lib_search_path=`$ECHO "X$lib_search_path " | $Xsed -e "s% $path % %g"`
+      #	deplibs=`$ECHO "X$deplibs " | $Xsed -e "s% -L$path % %g"`
+      #	dependency_libs=`$ECHO "X$dependency_libs " | $Xsed -e "s% -L$path % %g"`
+      #done
+
+      if test -n "$xrpath"; then
+	# If the user specified any rpath flags, then add them.
+	temp_xrpath=
+	for libdir in $xrpath; do
+	  temp_xrpath="$temp_xrpath -R$libdir"
+	  case "$finalize_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_rpath="$finalize_rpath $libdir" ;;
+	  esac
+	done
+	if test "$hardcode_into_libs" != yes || test "$build_old_libs" = yes; then
+	  dependency_libs="$temp_xrpath $dependency_libs"
+	fi
+      fi
+
+      # Make sure dlfiles contains only unique files that won't be dlpreopened
+      old_dlfiles="$dlfiles"
+      dlfiles=
+      for lib in $old_dlfiles; do
+	case " $dlprefiles $dlfiles " in
+	*" $lib "*) ;;
+	*) dlfiles="$dlfiles $lib" ;;
+	esac
+      done
+
+      # Make sure dlprefiles contains only unique files
+      old_dlprefiles="$dlprefiles"
+      dlprefiles=
+      for lib in $old_dlprefiles; do
+	case "$dlprefiles " in
+	*" $lib "*) ;;
+	*) dlprefiles="$dlprefiles $lib" ;;
+	esac
+      done
+
+      if test "$build_libtool_libs" = yes; then
+	if test -n "$rpath"; then
+	  case $host in
+	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc*)
+	    # these systems don't actually have a c library (as such)!
+	    ;;
+	  *-*-rhapsody* | *-*-darwin1.[012])
+	    # Rhapsody C library is in the System framework
+	    deplibs="$deplibs System.ltframework"
+	    ;;
+	  *-*-netbsd*)
+	    # Don't link with libc until the a.out ld.so is fixed.
+	    ;;
+	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	    # Do not include libc due to us having libc/libc_r.
+	    ;;
+	  *-*-sco3.2v5* | *-*-sco5v6*)
+	    # Causes problems with __ctype
+	    ;;
+	  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)
+	    # Compiler inserts libc in the correct place for threads to work
+	    ;;
+	  *)
+	    # Add libc to deplibs on all other systems if necessary.
+	    if test "$build_libtool_need_lc" = "yes"; then
+	      deplibs="$deplibs -lc"
+	    fi
+	    ;;
+	  esac
+	fi
+
+	# Transform deplibs into only deplibs that can be linked in shared.
+	name_save=$name
+	libname_save=$libname
+	release_save=$release
+	versuffix_save=$versuffix
+	major_save=$major
+	# I'm not sure if I'm treating the release correctly.  I think
+	# release should show up in the -l (ie -lgmp5) so we don't want to
+	# add it in twice.  Is that correct?
+	release=""
+	versuffix=""
+	major=""
+	newdeplibs=
+	droppeddeps=no
+	case $deplibs_check_method in
+	pass_all)
+	  # Don't check for shared/static.  Everything works.
+	  # This might be a little naive.  We might want to check
+	  # whether the library exists or not.  But this is on
+	  # osf3 & osf4 and I'm not really sure... Just
+	  # implementing what was already the behavior.
+	  newdeplibs=$deplibs
+	  ;;
+	test_compile)
+	  # This code stresses the "libraries are programs" paradigm to its
+	  # limits. Maybe even breaks it.  We compile a program, linking it
+	  # against the deplibs as a proxy for the library.  Then we can check
+	  # whether they linked in statically or dynamically with ldd.
+	  $opt_dry_run || $RM conftest.c
+	  cat > conftest.c <<EOF
+	  int main() { return 0; }
+EOF
+	  $opt_dry_run || $RM conftest
+	  if $LTCC $LTCFLAGS -o conftest conftest.c $deplibs; then
+	    ldd_output=`ldd conftest`
+	    for i in $deplibs; do
+	      case $i in
+	      -l*)
+		func_stripname -l '' "$i"
+		name=$func_stripname_result
+		if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		  case " $predeps $postdeps " in
+		  *" $i "*)
+		    newdeplibs="$newdeplibs $i"
+		    i=""
+		    ;;
+		  esac
+		fi
+		if test -n "$i" ; then
+		  libname=`eval "\\$ECHO \"$libname_spec\""`
+		  deplib_matches=`eval "\\$ECHO \"$library_names_spec\""`
+		  set dummy $deplib_matches; shift
+		  deplib_match=$1
+		  if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+		    newdeplibs="$newdeplibs $i"
+		  else
+		    droppeddeps=yes
+		    $ECHO
+		    $ECHO "*** Warning: dynamic linker does not accept needed library $i."
+		    $ECHO "*** I have the capability to make that library automatically link in when"
+		    $ECHO "*** you link to this library.  But I can only do this if you have a"
+		    $ECHO "*** shared version of the library, which I believe you do not have"
+		    $ECHO "*** because a test_compile did reveal that the linker did not use it for"
+		    $ECHO "*** its dynamic dependency list that programs get resolved with at runtime."
+		  fi
+		fi
+		;;
+	      *)
+		newdeplibs="$newdeplibs $i"
+		;;
+	      esac
+	    done
+	  else
+	    # Error occurred in the first compile.  Let's try to salvage
+	    # the situation: Compile a separate program for each library.
+	    for i in $deplibs; do
+	      case $i in
+	      -l*)
+		func_stripname -l '' "$i"
+		name=$func_stripname_result
+		$opt_dry_run || $RM conftest
+		if $LTCC $LTCFLAGS -o conftest conftest.c $i; then
+		  ldd_output=`ldd conftest`
+		  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		    case " $predeps $postdeps " in
+		    *" $i "*)
+		      newdeplibs="$newdeplibs $i"
+		      i=""
+		      ;;
+		    esac
+		  fi
+		  if test -n "$i" ; then
+		    libname=`eval "\\$ECHO \"$libname_spec\""`
+		    deplib_matches=`eval "\\$ECHO \"$library_names_spec\""`
+		    set dummy $deplib_matches; shift
+		    deplib_match=$1
+		    if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+		      newdeplibs="$newdeplibs $i"
+		    else
+		      droppeddeps=yes
+		      $ECHO
+		      $ECHO "*** Warning: dynamic linker does not accept needed library $i."
+		      $ECHO "*** I have the capability to make that library automatically link in when"
+		      $ECHO "*** you link to this library.  But I can only do this if you have a"
+		      $ECHO "*** shared version of the library, which you do not appear to have"
+		      $ECHO "*** because a test_compile did reveal that the linker did not use this one"
+		      $ECHO "*** as a dynamic dependency that programs can get resolved with at runtime."
+		    fi
+		  fi
+		else
+		  droppeddeps=yes
+		  $ECHO
+		  $ECHO "*** Warning!  Library $i is needed by this library but I was not able to"
+		  $ECHO "*** make it link in!  You will probably need to install it or some"
+		  $ECHO "*** library that it depends on before this library will be fully"
+		  $ECHO "*** functional.  Installing it before continuing would be even better."
+		fi
+		;;
+	      *)
+		newdeplibs="$newdeplibs $i"
+		;;
+	      esac
+	    done
+	  fi
+	  ;;
+	file_magic*)
+	  set dummy $deplibs_check_method; shift
+	  file_magic_regex=`expr "$deplibs_check_method" : "$1 \(.*\)"`
+	  for a_deplib in $deplibs; do
+	    case $a_deplib in
+	    -l*)
+	      func_stripname -l '' "$a_deplib"
+	      name=$func_stripname_result
+	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		case " $predeps $postdeps " in
+		*" $a_deplib "*)
+		  newdeplibs="$newdeplibs $a_deplib"
+		  a_deplib=""
+		  ;;
+		esac
+	      fi
+	      if test -n "$a_deplib" ; then
+		libname=`eval "\\$ECHO \"$libname_spec\""`
+		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
+		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		  for potent_lib in $potential_libs; do
+		      # Follow soft links.
+		      if ls -lLd "$potent_lib" 2>/dev/null |
+			 $GREP " -> " >/dev/null; then
+			continue
+		      fi
+		      # The statement above tries to avoid entering an
+		      # endless loop below, in case of cyclic links.
+		      # We might still enter an endless loop, since a link
+		      # loop can be closed while we follow links,
+		      # but so what?
+		      potlib="$potent_lib"
+		      while test -h "$potlib" 2>/dev/null; do
+			potliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`
+			case $potliblink in
+			[\\/]* | [A-Za-z]:[\\/]*) potlib="$potliblink";;
+			*) potlib=`$ECHO "X$potlib" | $Xsed -e 's,[^/]*$,,'`"$potliblink";;
+			esac
+		      done
+		      if eval $file_magic_cmd \"\$potlib\" 2>/dev/null |
+			 $SED -e 10q |
+			 $EGREP "$file_magic_regex" > /dev/null; then
+			newdeplibs="$newdeplibs $a_deplib"
+			a_deplib=""
+			break 2
+		      fi
+		  done
+		done
+	      fi
+	      if test -n "$a_deplib" ; then
+		droppeddeps=yes
+		$ECHO
+		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
+		$ECHO "*** I have the capability to make that library automatically link in when"
+		$ECHO "*** you link to this library.  But I can only do this if you have a"
+		$ECHO "*** shared version of the library, which you do not appear to have"
+		$ECHO "*** because I did check the linker path looking for a file starting"
+		if test -z "$potlib" ; then
+		  $ECHO "*** with $libname but no candidates were found. (...for file magic test)"
+		else
+		  $ECHO "*** with $libname and none of the candidates passed a file format test"
+		  $ECHO "*** using a file magic. Last file checked: $potlib"
+		fi
+	      fi
+	      ;;
+	    *)
+	      # Add a -L argument.
+	      newdeplibs="$newdeplibs $a_deplib"
+	      ;;
+	    esac
+	  done # Gone through all deplibs.
+	  ;;
+	match_pattern*)
+	  set dummy $deplibs_check_method; shift
+	  match_pattern_regex=`expr "$deplibs_check_method" : "$1 \(.*\)"`
+	  for a_deplib in $deplibs; do
+	    case $a_deplib in
+	    -l*)
+	      func_stripname -l '' "$a_deplib"
+	      name=$func_stripname_result
+	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		case " $predeps $postdeps " in
+		*" $a_deplib "*)
+		  newdeplibs="$newdeplibs $a_deplib"
+		  a_deplib=""
+		  ;;
+		esac
+	      fi
+	      if test -n "$a_deplib" ; then
+		libname=`eval "\\$ECHO \"$libname_spec\""`
+		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
+		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
+		  for potent_lib in $potential_libs; do
+		    potlib="$potent_lib" # see symlink-check above in file_magic test
+		    if eval "\$ECHO \"X$potent_lib\"" 2>/dev/null | $Xsed -e 10q | \
+		       $EGREP "$match_pattern_regex" > /dev/null; then
+		      newdeplibs="$newdeplibs $a_deplib"
+		      a_deplib=""
+		      break 2
+		    fi
+		  done
+		done
+	      fi
+	      if test -n "$a_deplib" ; then
+		droppeddeps=yes
+		$ECHO
+		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
+		$ECHO "*** I have the capability to make that library automatically link in when"
+		$ECHO "*** you link to this library.  But I can only do this if you have a"
+		$ECHO "*** shared version of the library, which you do not appear to have"
+		$ECHO "*** because I did check the linker path looking for a file starting"
+		if test -z "$potlib" ; then
+		  $ECHO "*** with $libname but no candidates were found. (...for regex pattern test)"
+		else
+		  $ECHO "*** with $libname and none of the candidates passed a file format test"
+		  $ECHO "*** using a regex pattern. Last file checked: $potlib"
+		fi
+	      fi
+	      ;;
+	    *)
+	      # Add a -L argument.
+	      newdeplibs="$newdeplibs $a_deplib"
+	      ;;
+	    esac
+	  done # Gone through all deplibs.
+	  ;;
+	none | unknown | *)
+	  newdeplibs=""
+	  tmp_deplibs=`$ECHO "X $deplibs" | $Xsed \
+	      -e 's/ -lc$//' -e 's/ -[LR][^ ]*//g'`
+	  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	    for i in $predeps $postdeps ; do
+	      # can't use Xsed below, because $i might contain '/'
+	      tmp_deplibs=`$ECHO "X $tmp_deplibs" | $Xsed -e "s,$i,,"`
+	    done
+	  fi
+	  if $ECHO "X $tmp_deplibs" | $Xsed -e 's/[	 ]//g' |
+	     $GREP . >/dev/null; then
+	    $ECHO
+	    if test "X$deplibs_check_method" = "Xnone"; then
+	      $ECHO "*** Warning: inter-library dependencies are not supported in this platform."
+	    else
+	      $ECHO "*** Warning: inter-library dependencies are not known to be supported."
+	    fi
+	    $ECHO "*** All declared inter-library dependencies are being dropped."
+	    droppeddeps=yes
+	  fi
+	  ;;
+	esac
+	versuffix=$versuffix_save
+	major=$major_save
+	release=$release_save
+	libname=$libname_save
+	name=$name_save
+
+	case $host in
+	*-*-rhapsody* | *-*-darwin1.[012])
+	  # On Rhapsody replace the C library with the System framework
+	  newdeplibs=`$ECHO "X $newdeplibs" | $Xsed -e 's/ -lc / System.ltframework /'`
+	  ;;
+	esac
+
+	if test "$droppeddeps" = yes; then
+	  if test "$module" = yes; then
+	    $ECHO
+	    $ECHO "*** Warning: libtool could not satisfy all declared inter-library"
+	    $ECHO "*** dependencies of module $libname.  Therefore, libtool will create"
+	    $ECHO "*** a static module, that should work as long as the dlopening"
+	    $ECHO "*** application is linked with the -dlopen flag."
+	    if test -z "$global_symbol_pipe"; then
+	      $ECHO
+	      $ECHO "*** However, this would only work if libtool was able to extract symbol"
+	      $ECHO "*** lists from a program, using \`nm' or equivalent, but libtool could"
+	      $ECHO "*** not find such a program.  So, this module is probably useless."
+	      $ECHO "*** \`nm' from GNU binutils and a full rebuild may help."
+	    fi
+	    if test "$build_old_libs" = no; then
+	      oldlibs="$output_objdir/$libname.$libext"
+	      build_libtool_libs=module
+	      build_old_libs=yes
+	    else
+	      build_libtool_libs=no
+	    fi
+	  else
+	    $ECHO "*** The inter-library dependencies that have been dropped here will be"
+	    $ECHO "*** automatically added whenever a program is linked with this library"
+	    $ECHO "*** or is declared to -dlopen it."
+
+	    if test "$allow_undefined" = no; then
+	      $ECHO
+	      $ECHO "*** Since this library must not contain undefined symbols,"
+	      $ECHO "*** because either the platform does not support them or"
+	      $ECHO "*** it was explicitly requested with -no-undefined,"
+	      $ECHO "*** libtool will only create a static version of it."
+	      if test "$build_old_libs" = no; then
+		oldlibs="$output_objdir/$libname.$libext"
+		build_libtool_libs=module
+		build_old_libs=yes
+	      else
+		build_libtool_libs=no
+	      fi
+	    fi
+	  fi
+	fi
+	# Done checking deplibs!
+	deplibs=$newdeplibs
+      fi
+      # Time to change all our "foo.ltframework" stuff back to "-framework foo"
+      case $host in
+	*-*-darwin*)
+	  newdeplibs=`$ECHO "X $newdeplibs" | $Xsed -e 's% \([^ $]*\).ltframework% -framework \1%g'`
+	  new_inherited_linker_flags=`$ECHO "X $new_inherited_linker_flags" | $Xsed -e 's% \([^ $]*\).ltframework% -framework \1%g'`
+	  deplibs=`$ECHO "X $deplibs" | $Xsed -e 's% \([^ $]*\).ltframework% -framework \1%g'`
+	  ;;
+      esac
+
+      # move library search paths that coincide with paths to not yet
+      # installed libraries to the beginning of the library search list
+      new_libs=
+      for path in $notinst_path; do
+	case " $new_libs " in
+	*" -L$path/$objdir "*) ;;
+	*)
+	  case " $deplibs " in
+	  *" -L$path/$objdir "*)
+	    new_libs="$new_libs -L$path/$objdir" ;;
+	  esac
+	  ;;
+	esac
+      done
+      for deplib in $deplibs; do
+	case $deplib in
+	-L*)
+	  case " $new_libs " in
+	  *" $deplib "*) ;;
+	  *) new_libs="$new_libs $deplib" ;;
+	  esac
+	  ;;
+	*) new_libs="$new_libs $deplib" ;;
+	esac
+      done
+      deplibs="$new_libs"
+
+      # All the library-specific variables (install_libdir is set above).
+      library_names=
+      old_library=
+      dlname=
+
+      # Test again, we may have decided not to build it any more
+      if test "$build_libtool_libs" = yes; then
+	if test "$hardcode_into_libs" = yes; then
+	  # Hardcode the library paths
+	  hardcode_libdirs=
+	  dep_rpath=
+	  rpath="$finalize_rpath"
+	  test "$mode" != relink && rpath="$compile_rpath$rpath"
+	  for libdir in $rpath; do
+	    if test -n "$hardcode_libdir_flag_spec"; then
+	      if test -n "$hardcode_libdir_separator"; then
+		if test -z "$hardcode_libdirs"; then
+		  hardcode_libdirs="$libdir"
+		else
+		  # Just accumulate the unique libdirs.
+		  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+		  *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		    ;;
+		  *)
+		    hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		    ;;
+		  esac
+		fi
+	      else
+		eval flag=\"$hardcode_libdir_flag_spec\"
+		dep_rpath="$dep_rpath $flag"
+	      fi
+	    elif test -n "$runpath_var"; then
+	      case "$perm_rpath " in
+	      *" $libdir "*) ;;
+	      *) perm_rpath="$perm_rpath $libdir" ;;
+	      esac
+	    fi
+	  done
+	  # Substitute the hardcoded libdirs into the rpath.
+	  if test -n "$hardcode_libdir_separator" &&
+	     test -n "$hardcode_libdirs"; then
+	    libdir="$hardcode_libdirs"
+	    if test -n "$hardcode_libdir_flag_spec_ld"; then
+	      eval dep_rpath=\"$hardcode_libdir_flag_spec_ld\"
+	    else
+	      eval dep_rpath=\"$hardcode_libdir_flag_spec\"
+	    fi
+	  fi
+	  if test -n "$runpath_var" && test -n "$perm_rpath"; then
+	    # We should set the runpath_var.
+	    rpath=
+	    for dir in $perm_rpath; do
+	      rpath="$rpath$dir:"
+	    done
+	    eval "$runpath_var='$rpath\$$runpath_var'; export $runpath_var"
+	  fi
+	  test -n "$dep_rpath" && deplibs="$dep_rpath $deplibs"
+	fi
+
+	shlibpath="$finalize_shlibpath"
+	test "$mode" != relink && shlibpath="$compile_shlibpath$shlibpath"
+	if test -n "$shlibpath"; then
+	  eval "$shlibpath_var='$shlibpath\$$shlibpath_var'; export $shlibpath_var"
+	fi
+
+	# Get the real and link names of the library.
+	eval shared_ext=\"$shrext_cmds\"
+	eval library_names=\"$library_names_spec\"
+	set dummy $library_names
+	shift
+	realname="$1"
+	shift
+
+	if test -n "$soname_spec"; then
+	  eval soname=\"$soname_spec\"
+	else
+	  soname="$realname"
+	fi
+	if test -z "$dlname"; then
+	  dlname=$soname
+	fi
+
+	lib="$output_objdir/$realname"
+	linknames=
+	for link
+	do
+	  linknames="$linknames $link"
+	done
+
+	# Use standard objects if they are pic
+	test -z "$pic_flag" && libobjs=`$ECHO "X$libobjs" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+	test "X$libobjs" = "X " && libobjs=
+
+	delfiles=
+	if test -n "$export_symbols" && test -n "$include_expsyms"; then
+	  $opt_dry_run || cp "$export_symbols" "$output_objdir/$libname.uexp"
+	  export_symbols="$output_objdir/$libname.uexp"
+	  delfiles="$delfiles $export_symbols"
+	fi
+
+	orig_export_symbols=
+	case $host_os in
+	cygwin* | mingw* | cegcc*)
+	  if test -n "$export_symbols" && test -z "$export_symbols_regex"; then
+	    # exporting using user supplied symfile
+	    if test "x`$SED 1q $export_symbols`" != xEXPORTS; then
+	      # and it's NOT already a .def file. Must figure out
+	      # which of the given symbols are data symbols and tag
+	      # them as such. So, trigger use of export_symbols_cmds.
+	      # export_symbols gets reassigned inside the "prepare
+	      # the list of exported symbols" if statement, so the
+	      # include_expsyms logic still works.
+	      orig_export_symbols="$export_symbols"
+	      export_symbols=
+	      always_export_symbols=yes
+	    fi
+	  fi
+	  ;;
+	esac
+
+	# Prepare the list of exported symbols
+	if test -z "$export_symbols"; then
+	  if test "$always_export_symbols" = yes || test -n "$export_symbols_regex"; then
+	    func_verbose "generating symbol list for \`$libname.la'"
+	    export_symbols="$output_objdir/$libname.exp"
+	    $opt_dry_run || $RM $export_symbols
+	    cmds=$export_symbols_cmds
+	    save_ifs="$IFS"; IFS='~'
+	    for cmd in $cmds; do
+	      IFS="$save_ifs"
+	      eval cmd=\"$cmd\"
+	      func_len " $cmd"
+	      len=$func_len_result
+	      if test "$len" -lt "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+		func_show_eval "$cmd" 'exit $?'
+		skipped_export=false
+	      else
+		# The command line is too long to execute in one step.
+		func_verbose "using reloadable object file for export list..."
+		skipped_export=:
+		# Break out early, otherwise skipped_export may be
+		# set to false by a later but shorter cmd.
+		break
+	      fi
+	    done
+	    IFS="$save_ifs"
+	    if test -n "$export_symbols_regex" && test "X$skipped_export" != "X:"; then
+	      func_show_eval '$EGREP -e "$export_symbols_regex" "$export_symbols" > "${export_symbols}T"'
+	      func_show_eval '$MV "${export_symbols}T" "$export_symbols"'
+	    fi
+	  fi
+	fi
+
+	if test -n "$export_symbols" && test -n "$include_expsyms"; then
+	  tmp_export_symbols="$export_symbols"
+	  test -n "$orig_export_symbols" && tmp_export_symbols="$orig_export_symbols"
+	  $opt_dry_run || eval '$ECHO "X$include_expsyms" | $Xsed | $SP2NL >> "$tmp_export_symbols"'
+	fi
+
+	if test "X$skipped_export" != "X:" && test -n "$orig_export_symbols"; then
+	  # The given exports_symbols file has to be filtered, so filter it.
+	  func_verbose "filter symbol list for \`$libname.la' to tag DATA exports"
+	  # FIXME: $output_objdir/$libname.filter potentially contains lots of
+	  # 's' commands which not all seds can handle. GNU sed should be fine
+	  # though. Also, the filter scales superlinearly with the number of
+	  # global variables. join(1) would be nice here, but unfortunately
+	  # isn't a blessed tool.
+	  $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\(.*\)\([ \,].*\),s|^\1$|\1\2|,' < $export_symbols > $output_objdir/$libname.filter
+	  delfiles="$delfiles $export_symbols $output_objdir/$libname.filter"
+	  export_symbols=$output_objdir/$libname.def
+	  $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols
+	fi
+
+	tmp_deplibs=
+	for test_deplib in $deplibs; do
+	  case " $convenience " in
+	  *" $test_deplib "*) ;;
+	  *)
+	    tmp_deplibs="$tmp_deplibs $test_deplib"
+	    ;;
+	  esac
+	done
+	deplibs="$tmp_deplibs"
+
+	if test -n "$convenience"; then
+	  if test -n "$whole_archive_flag_spec" &&
+	    test "$compiler_needs_object" = yes &&
+	    test -z "$libobjs"; then
+	    # extract the archives, so we have objects to list.
+	    # TODO: could optimize this to just extract one archive.
+	    whole_archive_flag_spec=
+	  fi
+	  if test -n "$whole_archive_flag_spec"; then
+	    save_libobjs=$libobjs
+	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
+	    test "X$libobjs" = "X " && libobjs=
+	  else
+	    gentop="$output_objdir/${outputname}x"
+	    generated="$generated $gentop"
+
+	    func_extract_archives $gentop $convenience
+	    libobjs="$libobjs $func_extract_archives_result"
+	    test "X$libobjs" = "X " && libobjs=
+	  fi
+	fi
+
+	if test "$thread_safe" = yes && test -n "$thread_safe_flag_spec"; then
+	  eval flag=\"$thread_safe_flag_spec\"
+	  linker_flags="$linker_flags $flag"
+	fi
+
+	# Make a backup of the uninstalled library when relinking
+	if test "$mode" = relink; then
+	  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?
+	fi
+
+	# Do each of the archive commands.
+	if test "$module" = yes && test -n "$module_cmds" ; then
+	  if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
+	    eval test_cmds=\"$module_expsym_cmds\"
+	    cmds=$module_expsym_cmds
+	  else
+	    eval test_cmds=\"$module_cmds\"
+	    cmds=$module_cmds
+	  fi
+	else
+	  if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
+	    eval test_cmds=\"$archive_expsym_cmds\"
+	    cmds=$archive_expsym_cmds
+	  else
+	    eval test_cmds=\"$archive_cmds\"
+	    cmds=$archive_cmds
+	  fi
+	fi
+
+	if test "X$skipped_export" != "X:" &&
+	   func_len " $test_cmds" &&
+	   len=$func_len_result &&
+	   test "$len" -lt "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+	  :
+	else
+	  # The command line is too long to link in one step, link piecewise
+	  # or, if using GNU ld and skipped_export is not :, use a linker
+	  # script.
+
+	  # Save the value of $output and $libobjs because we want to
+	  # use them later.  If we have whole_archive_flag_spec, we
+	  # want to use save_libobjs as it was before
+	  # whole_archive_flag_spec was expanded, because we can't
+	  # assume the linker understands whole_archive_flag_spec.
+	  # This may have to be revisited, in case too many
+	  # convenience libraries get linked in and end up exceeding
+	  # the spec.
+	  if test -z "$convenience" || test -z "$whole_archive_flag_spec"; then
+	    save_libobjs=$libobjs
+	  fi
+	  save_output=$output
+	  output_la=`$ECHO "X$output" | $Xsed -e "$basename"`
+
+	  # Clear the reloadable object creation command queue and
+	  # initialize k to one.
+	  test_cmds=
+	  concat_cmds=
+	  objlist=
+	  last_robj=
+	  k=1
+
+	  if test -n "$save_libobjs" && test "X$skipped_export" != "X:" && test "$with_gnu_ld" = yes; then
+	    output=${output_objdir}/${output_la}.lnkscript
+	    func_verbose "creating GNU ld script: $output"
+	    $ECHO 'INPUT (' > $output
+	    for obj in $save_libobjs
+	    do
+	      $ECHO "$obj" >> $output
+	    done
+	    $ECHO ')' >> $output
+	    delfiles="$delfiles $output"
+	  elif test -n "$save_libobjs" && test "X$skipped_export" != "X:" && test "X$file_list_spec" != X; then
+	    output=${output_objdir}/${output_la}.lnk
+	    func_verbose "creating linker input file list: $output"
+	    : > $output
+	    set x $save_libobjs
+	    shift
+	    firstobj=
+	    if test "$compiler_needs_object" = yes; then
+	      firstobj="$1 "
+	      shift
+	    fi
+	    for obj
+	    do
+	      $ECHO "$obj" >> $output
+	    done
+	    delfiles="$delfiles $output"
+	    output=$firstobj\"$file_list_spec$output\"
+	  else
+	    if test -n "$save_libobjs"; then
+	      func_verbose "creating reloadable object files..."
+	      output=$output_objdir/$output_la-${k}.$objext
+	      eval test_cmds=\"$reload_cmds\"
+	      func_len " $test_cmds"
+	      len0=$func_len_result
+	      len=$len0
+
+	      # Loop over the list of objects to be linked.
+	      for obj in $save_libobjs
+	      do
+		func_len " $obj"
+		func_arith $len + $func_len_result
+		len=$func_arith_result
+		if test "X$objlist" = X ||
+		   test "$len" -lt "$max_cmd_len"; then
+		  func_append objlist " $obj"
+		else
+		  # The command $test_cmds is almost too long, add a
+		  # command to the queue.
+		  if test "$k" -eq 1 ; then
+		    # The first file doesn't have a previous command to add.
+		    eval concat_cmds=\"$reload_cmds $objlist $last_robj\"
+		  else
+		    # All subsequent reloadable object files will link in
+		    # the last one created.
+		    eval concat_cmds=\"\$concat_cmds~$reload_cmds $objlist $last_robj~\$RM $last_robj\"
+		  fi
+		  last_robj=$output_objdir/$output_la-${k}.$objext
+		  func_arith $k + 1
+		  k=$func_arith_result
+		  output=$output_objdir/$output_la-${k}.$objext
+		  objlist=$obj
+		  func_len " $last_robj"
+		  func_arith $len0 + $func_len_result
+		  len=$func_arith_result
+		fi
+	      done
+	      # Handle the remaining objects by creating one last
+	      # reloadable object file.  All subsequent reloadable object
+	      # files will link in the last one created.
+	      test -z "$concat_cmds" || concat_cmds=$concat_cmds~
+	      eval concat_cmds=\"\${concat_cmds}$reload_cmds $objlist $last_robj\"
+	      if test -n "$last_robj"; then
+	        eval concat_cmds=\"\${concat_cmds}~\$RM $last_robj\"
+	      fi
+	      delfiles="$delfiles $output"
+
+	    else
+	      output=
+	    fi
+
+	    if ${skipped_export-false}; then
+	      func_verbose "generating symbol list for \`$libname.la'"
+	      export_symbols="$output_objdir/$libname.exp"
+	      $opt_dry_run || $RM $export_symbols
+	      libobjs=$output
+	      # Append the command to create the export file.
+	      test -z "$concat_cmds" || concat_cmds=$concat_cmds~
+	      eval concat_cmds=\"\$concat_cmds$export_symbols_cmds\"
+	      if test -n "$last_robj"; then
+		eval concat_cmds=\"\$concat_cmds~\$RM $last_robj\"
+	      fi
+	    fi
+
+	    test -n "$save_libobjs" &&
+	      func_verbose "creating a temporary reloadable object file: $output"
+
+	    # Loop through the commands generated above and execute them.
+	    save_ifs="$IFS"; IFS='~'
+	    for cmd in $concat_cmds; do
+	      IFS="$save_ifs"
+	      $opt_silent || {
+		  func_quote_for_expand "$cmd"
+		  eval "func_echo $func_quote_for_expand_result"
+	      }
+	      $opt_dry_run || eval "$cmd" || {
+		lt_exit=$?
+
+		# Restore the uninstalled library and exit
+		if test "$mode" = relink; then
+		  ( cd "$output_objdir" && \
+		    $RM "${realname}T" && \
+		    $MV "${realname}U" "$realname" )
+		fi
+
+		exit $lt_exit
+	      }
+	    done
+	    IFS="$save_ifs"
+
+	    if test -n "$export_symbols_regex" && ${skipped_export-false}; then
+	      func_show_eval '$EGREP -e "$export_symbols_regex" "$export_symbols" > "${export_symbols}T"'
+	      func_show_eval '$MV "${export_symbols}T" "$export_symbols"'
+	    fi
+	  fi
+
+          if ${skipped_export-false}; then
+	    if test -n "$export_symbols" && test -n "$include_expsyms"; then
+	      tmp_export_symbols="$export_symbols"
+	      test -n "$orig_export_symbols" && tmp_export_symbols="$orig_export_symbols"
+	      $opt_dry_run || eval '$ECHO "X$include_expsyms" | $Xsed | $SP2NL >> "$tmp_export_symbols"'
+	    fi
+
+	    if test -n "$orig_export_symbols"; then
+	      # The given exports_symbols file has to be filtered, so filter it.
+	      func_verbose "filter symbol list for \`$libname.la' to tag DATA exports"
+	      # FIXME: $output_objdir/$libname.filter potentially contains lots of
+	      # 's' commands which not all seds can handle. GNU sed should be fine
+	      # though. Also, the filter scales superlinearly with the number of
+	      # global variables. join(1) would be nice here, but unfortunately
+	      # isn't a blessed tool.
+	      $opt_dry_run || $SED -e '/[ ,]DATA/!d;s,\(.*\)\([ \,].*\),s|^\1$|\1\2|,' < $export_symbols > $output_objdir/$libname.filter
+	      delfiles="$delfiles $export_symbols $output_objdir/$libname.filter"
+	      export_symbols=$output_objdir/$libname.def
+	      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols
+	    fi
+	  fi
+
+	  libobjs=$output
+	  # Restore the value of output.
+	  output=$save_output
+
+	  if test -n "$convenience" && test -n "$whole_archive_flag_spec"; then
+	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
+	    test "X$libobjs" = "X " && libobjs=
+	  fi
+	  # Expand the library linking commands again to reset the
+	  # value of $libobjs for piecewise linking.
+
+	  # Do each of the archive commands.
+	  if test "$module" = yes && test -n "$module_cmds" ; then
+	    if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
+	      cmds=$module_expsym_cmds
+	    else
+	      cmds=$module_cmds
+	    fi
+	  else
+	    if test -n "$export_symbols" && test -n "$archive_expsym_cmds"; then
+	      cmds=$archive_expsym_cmds
+	    else
+	      cmds=$archive_cmds
+	    fi
+	  fi
+	fi
+
+	if test -n "$delfiles"; then
+	  # Append the command to remove temporary files to $cmds.
+	  eval cmds=\"\$cmds~\$RM $delfiles\"
+	fi
+
+	# Add any objects from preloaded convenience libraries
+	if test -n "$dlprefiles"; then
+	  gentop="$output_objdir/${outputname}x"
+	  generated="$generated $gentop"
+
+	  func_extract_archives $gentop $dlprefiles
+	  libobjs="$libobjs $func_extract_archives_result"
+	  test "X$libobjs" = "X " && libobjs=
+	fi
+
+	save_ifs="$IFS"; IFS='~'
+	for cmd in $cmds; do
+	  IFS="$save_ifs"
+	  eval cmd=\"$cmd\"
+	  $opt_silent || {
+	    func_quote_for_expand "$cmd"
+	    eval "func_echo $func_quote_for_expand_result"
+	  }
+	  $opt_dry_run || eval "$cmd" || {
+	    lt_exit=$?
+
+	    # Restore the uninstalled library and exit
+	    if test "$mode" = relink; then
+	      ( cd "$output_objdir" && \
+	        $RM "${realname}T" && \
+		$MV "${realname}U" "$realname" )
+	    fi
+
+	    exit $lt_exit
+	  }
+	done
+	IFS="$save_ifs"
+
+	# Restore the uninstalled library and exit
+	if test "$mode" = relink; then
+	  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?
+
+	  if test -n "$convenience"; then
+	    if test -z "$whole_archive_flag_spec"; then
+	      func_show_eval '${RM}r "$gentop"'
+	    fi
+	  fi
+
+	  exit $EXIT_SUCCESS
+	fi
+
+	# Create links to the real library.
+	for linkname in $linknames; do
+	  if test "$realname" != "$linkname"; then
+	    func_show_eval '(cd "$output_objdir" && $RM "$linkname" && $LN_S "$realname" "$linkname")' 'exit $?'
+	  fi
+	done
+
+	# If -module or -export-dynamic was specified, set the dlname.
+	if test "$module" = yes || test "$export_dynamic" = yes; then
+	  # On all known operating systems, these are identical.
+	  dlname="$soname"
+	fi
+      fi
+      ;;
+
+    obj)
+      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+	func_warning "\`-dlopen' is ignored for objects"
+      fi
+
+      case " $deplibs" in
+      *\ -l* | *\ -L*)
+	func_warning "\`-l' and \`-L' are ignored for objects" ;;
+      esac
+
+      test -n "$rpath" && \
+	func_warning "\`-rpath' is ignored for objects"
+
+      test -n "$xrpath" && \
+	func_warning "\`-R' is ignored for objects"
+
+      test -n "$vinfo" && \
+	func_warning "\`-version-info' is ignored for objects"
+
+      test -n "$release" && \
+	func_warning "\`-release' is ignored for objects"
+
+      case $output in
+      *.lo)
+	test -n "$objs$old_deplibs" && \
+	  func_fatal_error "cannot build library object \`$output' from non-libtool objects"
+
+	libobj=$output
+	func_lo2o "$libobj"
+	obj=$func_lo2o_result
+	;;
+      *)
+	libobj=
+	obj="$output"
+	;;
+      esac
+
+      # Delete the old objects.
+      $opt_dry_run || $RM $obj $libobj
+
+      # Objects from convenience libraries.  This assumes
+      # single-version convenience libraries.  Whenever we create
+      # different ones for PIC/non-PIC, this we'll have to duplicate
+      # the extraction.
+      reload_conv_objs=
+      gentop=
+      # reload_cmds runs $LD directly, so let us get rid of
+      # -Wl from whole_archive_flag_spec and hope we can get by with
+      # turning comma into space..
+      wl=
+
+      if test -n "$convenience"; then
+	if test -n "$whole_archive_flag_spec"; then
+	  eval tmp_whole_archive_flags=\"$whole_archive_flag_spec\"
+	  reload_conv_objs=$reload_objs\ `$ECHO "X$tmp_whole_archive_flags" | $Xsed -e 's|,| |g'`
+	else
+	  gentop="$output_objdir/${obj}x"
+	  generated="$generated $gentop"
+
+	  func_extract_archives $gentop $convenience
+	  reload_conv_objs="$reload_objs $func_extract_archives_result"
+	fi
+      fi
+
+      # Create the old-style object.
+      reload_objs="$objs$old_deplibs "`$ECHO "X$libobjs" | $SP2NL | $Xsed -e '/\.'${libext}$'/d' -e '/\.lib$/d' -e "$lo2o" | $NL2SP`" $reload_conv_objs" ### testsuite: skip nested quoting test
+
+      output="$obj"
+      func_execute_cmds "$reload_cmds" 'exit $?'
+
+      # Exit if we aren't doing a library object file.
+      if test -z "$libobj"; then
+	if test -n "$gentop"; then
+	  func_show_eval '${RM}r "$gentop"'
+	fi
+
+	exit $EXIT_SUCCESS
+      fi
+
+      if test "$build_libtool_libs" != yes; then
+	if test -n "$gentop"; then
+	  func_show_eval '${RM}r "$gentop"'
+	fi
+
+	# Create an invalid libtool object if no PIC, so that we don't
+	# accidentally link it into a program.
+	# $show "echo timestamp > $libobj"
+	# $opt_dry_run || eval "echo timestamp > $libobj" || exit $?
+	exit $EXIT_SUCCESS
+      fi
+
+      if test -n "$pic_flag" || test "$pic_mode" != default; then
+	# Only do commands if we really have different PIC objects.
+	reload_objs="$libobjs $reload_conv_objs"
+	output="$libobj"
+	func_execute_cmds "$reload_cmds" 'exit $?'
+      fi
+
+      if test -n "$gentop"; then
+	func_show_eval '${RM}r "$gentop"'
+      fi
+
+      exit $EXIT_SUCCESS
+      ;;
+
+    prog)
+      case $host in
+	*cygwin*) func_stripname '' '.exe' "$output"
+	          output=$func_stripname_result.exe;;
+      esac
+      test -n "$vinfo" && \
+	func_warning "\`-version-info' is ignored for programs"
+
+      test -n "$release" && \
+	func_warning "\`-release' is ignored for programs"
+
+      test "$preload" = yes \
+        && test "$dlopen_support" = unknown \
+	&& test "$dlopen_self" = unknown \
+	&& test "$dlopen_self_static" = unknown && \
+	  func_warning "\`LT_INIT([dlopen])' not used. Assuming no dlopen support."
+
+      case $host in
+      *-*-rhapsody* | *-*-darwin1.[012])
+	# On Rhapsody replace the C library is the System framework
+	compile_deplibs=`$ECHO "X $compile_deplibs" | $Xsed -e 's/ -lc / System.ltframework /'`
+	finalize_deplibs=`$ECHO "X $finalize_deplibs" | $Xsed -e 's/ -lc / System.ltframework /'`
+	;;
+      esac
+
+      case $host in
+      *-*-darwin*)
+	# Don't allow lazy linking, it breaks C++ global constructors
+	# But is supposedly fixed on 10.4 or later (yay!).
+	if test "$tagname" = CXX ; then
+	  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in
+	    10.[0123])
+	      compile_command="$compile_command ${wl}-bind_at_load"
+	      finalize_command="$finalize_command ${wl}-bind_at_load"
+	    ;;
+	  esac
+	fi
+	# Time to change all our "foo.ltframework" stuff back to "-framework foo"
+	compile_deplibs=`$ECHO "X $compile_deplibs" | $Xsed -e 's% \([^ $]*\).ltframework% -framework \1%g'`
+	finalize_deplibs=`$ECHO "X $finalize_deplibs" | $Xsed -e 's% \([^ $]*\).ltframework% -framework \1%g'`
+	;;
+      esac
+
+
+      # move library search paths that coincide with paths to not yet
+      # installed libraries to the beginning of the library search list
+      new_libs=
+      for path in $notinst_path; do
+	case " $new_libs " in
+	*" -L$path/$objdir "*) ;;
+	*)
+	  case " $compile_deplibs " in
+	  *" -L$path/$objdir "*)
+	    new_libs="$new_libs -L$path/$objdir" ;;
+	  esac
+	  ;;
+	esac
+      done
+      for deplib in $compile_deplibs; do
+	case $deplib in
+	-L*)
+	  case " $new_libs " in
+	  *" $deplib "*) ;;
+	  *) new_libs="$new_libs $deplib" ;;
+	  esac
+	  ;;
+	*) new_libs="$new_libs $deplib" ;;
+	esac
+      done
+      compile_deplibs="$new_libs"
+
+
+      compile_command="$compile_command $compile_deplibs"
+      finalize_command="$finalize_command $finalize_deplibs"
+
+      if test -n "$rpath$xrpath"; then
+	# If the user specified any rpath flags, then add them.
+	for libdir in $rpath $xrpath; do
+	  # This is the magic to use -rpath.
+	  case "$finalize_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_rpath="$finalize_rpath $libdir" ;;
+	  esac
+	done
+      fi
+
+      # Now hardcode the library paths
+      rpath=
+      hardcode_libdirs=
+      for libdir in $compile_rpath $finalize_rpath; do
+	if test -n "$hardcode_libdir_flag_spec"; then
+	  if test -n "$hardcode_libdir_separator"; then
+	    if test -z "$hardcode_libdirs"; then
+	      hardcode_libdirs="$libdir"
+	    else
+	      # Just accumulate the unique libdirs.
+	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+	      *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		;;
+	      *)
+		hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		;;
+	      esac
+	    fi
+	  else
+	    eval flag=\"$hardcode_libdir_flag_spec\"
+	    rpath="$rpath $flag"
+	  fi
+	elif test -n "$runpath_var"; then
+	  case "$perm_rpath " in
+	  *" $libdir "*) ;;
+	  *) perm_rpath="$perm_rpath $libdir" ;;
+	  esac
+	fi
+	case $host in
+	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)
+	  testbindir=`${ECHO} "$libdir" | ${SED} -e 's*/lib$*/bin*'`
+	  case :$dllsearchpath: in
+	  *":$libdir:"*) ;;
+	  ::) dllsearchpath=$libdir;;
+	  *) dllsearchpath="$dllsearchpath:$libdir";;
+	  esac
+	  case :$dllsearchpath: in
+	  *":$testbindir:"*) ;;
+	  ::) dllsearchpath=$testbindir;;
+	  *) dllsearchpath="$dllsearchpath:$testbindir";;
+	  esac
+	  ;;
+	esac
+      done
+      # Substitute the hardcoded libdirs into the rpath.
+      if test -n "$hardcode_libdir_separator" &&
+	 test -n "$hardcode_libdirs"; then
+	libdir="$hardcode_libdirs"
+	eval rpath=\" $hardcode_libdir_flag_spec\"
+      fi
+      compile_rpath="$rpath"
+
+      rpath=
+      hardcode_libdirs=
+      for libdir in $finalize_rpath; do
+	if test -n "$hardcode_libdir_flag_spec"; then
+	  if test -n "$hardcode_libdir_separator"; then
+	    if test -z "$hardcode_libdirs"; then
+	      hardcode_libdirs="$libdir"
+	    else
+	      # Just accumulate the unique libdirs.
+	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
+	      *"$hardcode_libdir_separator$libdir$hardcode_libdir_separator"*)
+		;;
+	      *)
+		hardcode_libdirs="$hardcode_libdirs$hardcode_libdir_separator$libdir"
+		;;
+	      esac
+	    fi
+	  else
+	    eval flag=\"$hardcode_libdir_flag_spec\"
+	    rpath="$rpath $flag"
+	  fi
+	elif test -n "$runpath_var"; then
+	  case "$finalize_perm_rpath " in
+	  *" $libdir "*) ;;
+	  *) finalize_perm_rpath="$finalize_perm_rpath $libdir" ;;
+	  esac
+	fi
+      done
+      # Substitute the hardcoded libdirs into the rpath.
+      if test -n "$hardcode_libdir_separator" &&
+	 test -n "$hardcode_libdirs"; then
+	libdir="$hardcode_libdirs"
+	eval rpath=\" $hardcode_libdir_flag_spec\"
+      fi
+      finalize_rpath="$rpath"
+
+      if test -n "$libobjs" && test "$build_old_libs" = yes; then
+	# Transform all the library objects into standard objects.
+	compile_command=`$ECHO "X$compile_command" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+	finalize_command=`$ECHO "X$finalize_command" | $SP2NL | $Xsed -e "$lo2o" | $NL2SP`
+      fi
+
+      func_generate_dlsyms "$outputname" "@PROGRAM@" "no"
+
+      # template prelinking step
+      if test -n "$prelink_cmds"; then
+	func_execute_cmds "$prelink_cmds" 'exit $?'
+      fi
+
+      wrappers_required=yes
+      case $host in
+      *cygwin* | *mingw* )
+        if test "$build_libtool_libs" != yes; then
+          wrappers_required=no
+        fi
+        ;;
+      *cegcc)
+        # Disable wrappers for cegcc, we are cross compiling anyway.
+        wrappers_required=no
+        ;;
+      *)
+        if test "$need_relink" = no || test "$build_libtool_libs" != yes; then
+          wrappers_required=no
+        fi
+        ;;
+      esac
+      if test "$wrappers_required" = no; then
+	# Replace the output file specification.
+	compile_command=`$ECHO "X$compile_command" | $Xsed -e 's%@OUTPUT@%'"$output"'%g'`
+	link_command="$compile_command$compile_rpath"
+
+	# We have no uninstalled library dependencies, so finalize right now.
+	exit_status=0
+	func_show_eval "$link_command" 'exit_status=$?'
+
+	# Delete the generated files.
+	if test -f "$output_objdir/${outputname}S.${objext}"; then
+	  func_show_eval '$RM "$output_objdir/${outputname}S.${objext}"'
+	fi
+
+	exit $exit_status
+      fi
+
+      if test -n "$compile_shlibpath$finalize_shlibpath"; then
+	compile_command="$shlibpath_var=\"$compile_shlibpath$finalize_shlibpath\$$shlibpath_var\" $compile_command"
+      fi
+      if test -n "$finalize_shlibpath"; then
+	finalize_command="$shlibpath_var=\"$finalize_shlibpath\$$shlibpath_var\" $finalize_command"
+      fi
+
+      compile_var=
+      finalize_var=
+      if test -n "$runpath_var"; then
+	if test -n "$perm_rpath"; then
+	  # We should set the runpath_var.
+	  rpath=
+	  for dir in $perm_rpath; do
+	    rpath="$rpath$dir:"
+	  done
+	  compile_var="$runpath_var=\"$rpath\$$runpath_var\" "
+	fi
+	if test -n "$finalize_perm_rpath"; then
+	  # We should set the runpath_var.
+	  rpath=
+	  for dir in $finalize_perm_rpath; do
+	    rpath="$rpath$dir:"
+	  done
+	  finalize_var="$runpath_var=\"$rpath\$$runpath_var\" "
+	fi
+      fi
+
+      if test "$no_install" = yes; then
+	# We don't need to create a wrapper script.
+	link_command="$compile_var$compile_command$compile_rpath"
+	# Replace the output file specification.
+	link_command=`$ECHO "X$link_command" | $Xsed -e 's%@OUTPUT@%'"$output"'%g'`
+	# Delete the old output file.
+	$opt_dry_run || $RM $output
+	# Link the executable and exit
+	func_show_eval "$link_command" 'exit $?'
+	exit $EXIT_SUCCESS
+      fi
+
+      if test "$hardcode_action" = relink; then
+	# Fast installation is not supported
+	link_command="$compile_var$compile_command$compile_rpath"
+	relink_command="$finalize_var$finalize_command$finalize_rpath"
+
+	func_warning "this platform does not like uninstalled shared libraries"
+	func_warning "\`$output' will be relinked during installation"
+      else
+	if test "$fast_install" != no; then
+	  link_command="$finalize_var$compile_command$finalize_rpath"
+	  if test "$fast_install" = yes; then
+	    relink_command=`$ECHO "X$compile_var$compile_command$compile_rpath" | $Xsed -e 's%@OUTPUT@%\$progdir/\$file%g'`
+	  else
+	    # fast_install is set to needless
+	    relink_command=
+	  fi
+	else
+	  link_command="$compile_var$compile_command$compile_rpath"
+	  relink_command="$finalize_var$finalize_command$finalize_rpath"
+	fi
+      fi
+
+      # Replace the output file specification.
+      link_command=`$ECHO "X$link_command" | $Xsed -e 's%@OUTPUT@%'"$output_objdir/$outputname"'%g'`
+
+      # Delete the old output files.
+      $opt_dry_run || $RM $output $output_objdir/$outputname $output_objdir/lt-$outputname
+
+      func_show_eval "$link_command" 'exit $?'
+
+      # Now create the wrapper script.
+      func_verbose "creating $output"
+
+      # Quote the relink command for shipping.
+      if test -n "$relink_command"; then
+	# Preserve any variables that may affect compiler behavior
+	for var in $variables_saved_for_relink; do
+	  if eval test -z \"\${$var+set}\"; then
+	    relink_command="{ test -z \"\${$var+set}\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command"
+	  elif eval var_value=\$$var; test -z "$var_value"; then
+	    relink_command="$var=; export $var; $relink_command"
+	  else
+	    func_quote_for_eval "$var_value"
+	    relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
+	  fi
+	done
+	relink_command="(cd `pwd`; $relink_command)"
+	relink_command=`$ECHO "X$relink_command" | $Xsed -e "$sed_quote_subst"`
+      fi
+
+      # Quote $ECHO for shipping.
+      if test "X$ECHO" = "X$SHELL $progpath --fallback-echo"; then
+	case $progpath in
+	[\\/]* | [A-Za-z]:[\\/]*) qecho="$SHELL $progpath --fallback-echo";;
+	*) qecho="$SHELL `pwd`/$progpath --fallback-echo";;
+	esac
+	qecho=`$ECHO "X$qecho" | $Xsed -e "$sed_quote_subst"`
+      else
+	qecho=`$ECHO "X$ECHO" | $Xsed -e "$sed_quote_subst"`
+      fi
+
+      # Only actually do things if not in dry run mode.
+      $opt_dry_run || {
+	# win32 will think the script is a binary if it has
+	# a .exe suffix, so we strip it off here.
+	case $output in
+	  *.exe) func_stripname '' '.exe' "$output"
+	         output=$func_stripname_result ;;
+	esac
+	# test for cygwin because mv fails w/o .exe extensions
+	case $host in
+	  *cygwin*)
+	    exeext=.exe
+	    func_stripname '' '.exe' "$outputname"
+	    outputname=$func_stripname_result ;;
+	  *) exeext= ;;
+	esac
+	case $host in
+	  *cygwin* | *mingw* )
+	    func_dirname_and_basename "$output" "" "."
+	    output_name=$func_basename_result
+	    output_path=$func_dirname_result
+	    cwrappersource="$output_path/$objdir/lt-$output_name.c"
+	    cwrapper="$output_path/$output_name.exe"
+	    $RM $cwrappersource $cwrapper
+	    trap "$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE" 1 2 15
+
+	    func_emit_cwrapperexe_src > $cwrappersource
+
+	    # The wrapper executable is built using the $host compiler,
+	    # because it contains $host paths and files. If cross-
+	    # compiling, it, like the target executable, must be
+	    # executed on the $host or under an emulation environment.
+	    $opt_dry_run || {
+	      $LTCC $LTCFLAGS -o $cwrapper $cwrappersource
+	      $STRIP $cwrapper
+	    }
+
+	    # Now, create the wrapper script for func_source use:
+	    func_ltwrapper_scriptname $cwrapper
+	    $RM $func_ltwrapper_scriptname_result
+	    trap "$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE" 1 2 15
+	    $opt_dry_run || {
+	      # note: this script will not be executed, so do not chmod.
+	      if test "x$build" = "x$host" ; then
+		$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result
+	      else
+		func_emit_wrapper no > $func_ltwrapper_scriptname_result
+	      fi
+	    }
+	  ;;
+	  * )
+	    $RM $output
+	    trap "$RM $output; exit $EXIT_FAILURE" 1 2 15
+
+	    func_emit_wrapper no > $output
+	    chmod +x $output
+	  ;;
+	esac
+      }
+      exit $EXIT_SUCCESS
+      ;;
+    esac
+
+    # See if we need to build an old-fashioned archive.
+    for oldlib in $oldlibs; do
+
+      if test "$build_libtool_libs" = convenience; then
+	oldobjs="$libobjs_save $symfileobj"
+	addlibs="$convenience"
+	build_libtool_libs=no
+      else
+	if test "$build_libtool_libs" = module; then
+	  oldobjs="$libobjs_save"
+	  build_libtool_libs=no
+	else
+	  oldobjs="$old_deplibs $non_pic_objects"
+	  if test "$preload" = yes && test -f "$symfileobj"; then
+	    oldobjs="$oldobjs $symfileobj"
+	  fi
+	fi
+	addlibs="$old_convenience"
+      fi
+
+      if test -n "$addlibs"; then
+	gentop="$output_objdir/${outputname}x"
+	generated="$generated $gentop"
+
+	func_extract_archives $gentop $addlibs
+	oldobjs="$oldobjs $func_extract_archives_result"
+      fi
+
+      # Do each command in the archive commands.
+      if test -n "$old_archive_from_new_cmds" && test "$build_libtool_libs" = yes; then
+	cmds=$old_archive_from_new_cmds
+      else
+
+	# Add any objects from preloaded convenience libraries
+	if test -n "$dlprefiles"; then
+	  gentop="$output_objdir/${outputname}x"
+	  generated="$generated $gentop"
+
+	  func_extract_archives $gentop $dlprefiles
+	  oldobjs="$oldobjs $func_extract_archives_result"
+	fi
+
+	# POSIX demands no paths to be encoded in archives.  We have
+	# to avoid creating archives with duplicate basenames if we
+	# might have to extract them afterwards, e.g., when creating a
+	# static archive out of a convenience library, or when linking
+	# the entirety of a libtool archive into another (currently
+	# not supported by libtool).
+	if (for obj in $oldobjs
+	    do
+	      func_basename "$obj"
+	      $ECHO "$func_basename_result"
+	    done | sort | sort -uc >/dev/null 2>&1); then
+	  :
+	else
+	  $ECHO "copying selected object files to avoid basename conflicts..."
+	  gentop="$output_objdir/${outputname}x"
+	  generated="$generated $gentop"
+	  func_mkdir_p "$gentop"
+	  save_oldobjs=$oldobjs
+	  oldobjs=
+	  counter=1
+	  for obj in $save_oldobjs
+	  do
+	    func_basename "$obj"
+	    objbase="$func_basename_result"
+	    case " $oldobjs " in
+	    " ") oldobjs=$obj ;;
+	    *[\ /]"$objbase "*)
+	      while :; do
+		# Make sure we don't pick an alternate name that also
+		# overlaps.
+		newobj=lt$counter-$objbase
+		func_arith $counter + 1
+		counter=$func_arith_result
+		case " $oldobjs " in
+		*[\ /]"$newobj "*) ;;
+		*) if test ! -f "$gentop/$newobj"; then break; fi ;;
+		esac
+	      done
+	      func_show_eval "ln $obj $gentop/$newobj || cp $obj $gentop/$newobj"
+	      oldobjs="$oldobjs $gentop/$newobj"
+	      ;;
+	    *) oldobjs="$oldobjs $obj" ;;
+	    esac
+	  done
+	fi
+	eval cmds=\"$old_archive_cmds\"
+
+	func_len " $cmds"
+	len=$func_len_result
+	if test "$len" -lt "$max_cmd_len" || test "$max_cmd_len" -le -1; then
+	  cmds=$old_archive_cmds
+	else
+	  # the command line is too long to link in one step, link in parts
+	  func_verbose "using piecewise archive linking..."
+	  save_RANLIB=$RANLIB
+	  RANLIB=:
+	  objlist=
+	  concat_cmds=
+	  save_oldobjs=$oldobjs
+	  oldobjs=
+	  # Is there a better way of finding the last object in the list?
+	  for obj in $save_oldobjs
+	  do
+	    last_oldobj=$obj
+	  done
+	  eval test_cmds=\"$old_archive_cmds\"
+	  func_len " $test_cmds"
+	  len0=$func_len_result
+	  len=$len0
+	  for obj in $save_oldobjs
+	  do
+	    func_len " $obj"
+	    func_arith $len + $func_len_result
+	    len=$func_arith_result
+	    func_append objlist " $obj"
+	    if test "$len" -lt "$max_cmd_len"; then
+	      :
+	    else
+	      # the above command should be used before it gets too long
+	      oldobjs=$objlist
+	      if test "$obj" = "$last_oldobj" ; then
+		RANLIB=$save_RANLIB
+	      fi
+	      test -z "$concat_cmds" || concat_cmds=$concat_cmds~
+	      eval concat_cmds=\"\${concat_cmds}$old_archive_cmds\"
+	      objlist=
+	      len=$len0
+	    fi
+	  done
+	  RANLIB=$save_RANLIB
+	  oldobjs=$objlist
+	  if test "X$oldobjs" = "X" ; then
+	    eval cmds=\"\$concat_cmds\"
+	  else
+	    eval cmds=\"\$concat_cmds~\$old_archive_cmds\"
+	  fi
+	fi
+      fi
+      func_execute_cmds "$cmds" 'exit $?'
+    done
+
+    test -n "$generated" && \
+      func_show_eval "${RM}r$generated"
+
+    # Now create the libtool archive.
+    case $output in
+    *.la)
+      old_library=
+      test "$build_old_libs" = yes && old_library="$libname.$libext"
+      func_verbose "creating $output"
+
+      # Preserve any variables that may affect compiler behavior
+      for var in $variables_saved_for_relink; do
+	if eval test -z \"\${$var+set}\"; then
+	  relink_command="{ test -z \"\${$var+set}\" || $lt_unset $var || { $var=; export $var; }; }; $relink_command"
+	elif eval var_value=\$$var; test -z "$var_value"; then
+	  relink_command="$var=; export $var; $relink_command"
+	else
+	  func_quote_for_eval "$var_value"
+	  relink_command="$var=$func_quote_for_eval_result; export $var; $relink_command"
+	fi
+      done
+      # Quote the link command for shipping.
+      relink_command="(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
+      relink_command=`$ECHO "X$relink_command" | $Xsed -e "$sed_quote_subst"`
+      if test "$hardcode_automatic" = yes ; then
+	relink_command=
+      fi
+
+      # Only create the output if not a dry run.
+      $opt_dry_run || {
+	for installed in no yes; do
+	  if test "$installed" = yes; then
+	    if test -z "$install_libdir"; then
+	      break
+	    fi
+	    output="$output_objdir/$outputname"i
+	    # Replace all uninstalled libtool libraries with the installed ones
+	    newdependency_libs=
+	    for deplib in $dependency_libs; do
+	      case $deplib in
+	      *.la)
+		func_basename "$deplib"
+		name="$func_basename_result"
+		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+		test -z "$libdir" && \
+		  func_fatal_error "\`$deplib' is not a valid libtool archive"
+		newdependency_libs="$newdependency_libs $libdir/$name"
+		;;
+	      *) newdependency_libs="$newdependency_libs $deplib" ;;
+	      esac
+	    done
+	    dependency_libs="$newdependency_libs"
+	    newdlfiles=
+
+	    for lib in $dlfiles; do
+	      case $lib in
+	      *.la)
+	        func_basename "$lib"
+		name="$func_basename_result"
+		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
+		test -z "$libdir" && \
+		  func_fatal_error "\`$lib' is not a valid libtool archive"
+		newdlfiles="$newdlfiles $libdir/$name"
+		;;
+	      *) newdlfiles="$newdlfiles $lib" ;;
+	      esac
+	    done
+	    dlfiles="$newdlfiles"
+	    newdlprefiles=
+	    for lib in $dlprefiles; do
+	      case $lib in
+	      *.la)
+		# Only pass preopened files to the pseudo-archive (for
+		# eventual linking with the app. that links it) if we
+		# didn't already link the preopened objects directly into
+		# the library:
+		func_basename "$lib"
+		name="$func_basename_result"
+		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
+		test -z "$libdir" && \
+		  func_fatal_error "\`$lib' is not a valid libtool archive"
+		newdlprefiles="$newdlprefiles $libdir/$name"
+		;;
+	      esac
+	    done
+	    dlprefiles="$newdlprefiles"
+	  else
+	    newdlfiles=
+	    for lib in $dlfiles; do
+	      case $lib in
+		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
+		*) abs=`pwd`"/$lib" ;;
+	      esac
+	      newdlfiles="$newdlfiles $abs"
+	    done
+	    dlfiles="$newdlfiles"
+	    newdlprefiles=
+	    for lib in $dlprefiles; do
+	      case $lib in
+		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
+		*) abs=`pwd`"/$lib" ;;
+	      esac
+	      newdlprefiles="$newdlprefiles $abs"
+	    done
+	    dlprefiles="$newdlprefiles"
+	  fi
+	  $RM $output
+	  # place dlname in correct position for cygwin
+	  tdlname=$dlname
+	  case $host,$output,$installed,$module,$dlname in
+	    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll) tdlname=../bin/$dlname ;;
+	  esac
+	  $ECHO > $output "\
+# $outputname - a libtool library file
+# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# The name that we can dlopen(3).
+dlname='$tdlname'
+
+# Names of this library.
+library_names='$library_names'
+
+# The name of the static archive.
+old_library='$old_library'
+
+# Linker flags that can not go in dependency_libs.
+inherited_linker_flags='$new_inherited_linker_flags'
+
+# Libraries that this one depends upon.
+dependency_libs='$dependency_libs'
+
+# Names of additional weak libraries provided by this library
+weak_library_names='$weak_libs'
+
+# Version information for $libname.
+current=$current
+age=$age
+revision=$revision
+
+# Is this an already installed library?
+installed=$installed
+
+# Should we warn about portability when linking against -modules?
+shouldnotlink=$module
+
+# Files to dlopen/dlpreopen
+dlopen='$dlfiles'
+dlpreopen='$dlprefiles'
+
+# Directory that this library needs to be installed in:
+libdir='$install_libdir'"
+	  if test "$installed" = no && test "$need_relink" = yes; then
+	    $ECHO >> $output "\
+relink_command=\"$relink_command\""
+	  fi
+	done
+      }
+
+      # Do a symbolic link so that the libtool archive can be found in
+      # LD_LIBRARY_PATH before the program is installed.
+      func_show_eval '( cd "$output_objdir" && $RM "$outputname" && $LN_S "../$outputname" "$outputname" )' 'exit $?'
+      ;;
+    esac
+    exit $EXIT_SUCCESS
+}
+
+{ test "$mode" = link || test "$mode" = relink; } &&
+    func_mode_link ${1+"$@"}
+
+
+# func_mode_uninstall arg...
+func_mode_uninstall ()
+{
+    $opt_debug
+    RM="$nonopt"
+    files=
+    rmforce=
+    exit_status=0
+
+    # This variable tells wrapper scripts just to set variables rather
+    # than running their programs.
+    libtool_install_magic="$magic"
+
+    for arg
+    do
+      case $arg in
+      -f) RM="$RM $arg"; rmforce=yes ;;
+      -*) RM="$RM $arg" ;;
+      *) files="$files $arg" ;;
+      esac
+    done
+
+    test -z "$RM" && \
+      func_fatal_help "you must specify an RM program"
+
+    rmdirs=
+
+    origobjdir="$objdir"
+    for file in $files; do
+      func_dirname "$file" "" "."
+      dir="$func_dirname_result"
+      if test "X$dir" = X.; then
+	objdir="$origobjdir"
+      else
+	objdir="$dir/$origobjdir"
+      fi
+      func_basename "$file"
+      name="$func_basename_result"
+      test "$mode" = uninstall && objdir="$dir"
+
+      # Remember objdir for removal later, being careful to avoid duplicates
+      if test "$mode" = clean; then
+	case " $rmdirs " in
+	  *" $objdir "*) ;;
+	  *) rmdirs="$rmdirs $objdir" ;;
+	esac
+      fi
+
+      # Don't error if the file doesn't exist and rm -f was used.
+      if { test -L "$file"; } >/dev/null 2>&1 ||
+	 { test -h "$file"; } >/dev/null 2>&1 ||
+	 test -f "$file"; then
+	:
+      elif test -d "$file"; then
+	exit_status=1
+	continue
+      elif test "$rmforce" = yes; then
+	continue
+      fi
+
+      rmfiles="$file"
+
+      case $name in
+      *.la)
+	# Possibly a libtool archive, so verify it.
+	if func_lalib_p "$file"; then
+	  func_source $dir/$name
+
+	  # Delete the libtool libraries and symlinks.
+	  for n in $library_names; do
+	    rmfiles="$rmfiles $objdir/$n"
+	  done
+	  test -n "$old_library" && rmfiles="$rmfiles $objdir/$old_library"
+
+	  case "$mode" in
+	  clean)
+	    case "  $library_names " in
+	    # "  " in the beginning catches empty $dlname
+	    *" $dlname "*) ;;
+	    *) rmfiles="$rmfiles $objdir/$dlname" ;;
+	    esac
+	    test -n "$libdir" && rmfiles="$rmfiles $objdir/$name $objdir/${name}i"
+	    ;;
+	  uninstall)
+	    if test -n "$library_names"; then
+	      # Do each command in the postuninstall commands.
+	      func_execute_cmds "$postuninstall_cmds" 'test "$rmforce" = yes || exit_status=1'
+	    fi
+
+	    if test -n "$old_library"; then
+	      # Do each command in the old_postuninstall commands.
+	      func_execute_cmds "$old_postuninstall_cmds" 'test "$rmforce" = yes || exit_status=1'
+	    fi
+	    # FIXME: should reinstall the best remaining shared library.
+	    ;;
+	  esac
+	fi
+	;;
+
+      *.lo)
+	# Possibly a libtool object, so verify it.
+	if func_lalib_p "$file"; then
+
+	  # Read the .lo file
+	  func_source $dir/$name
+
+	  # Add PIC object to the list of files to remove.
+	  if test -n "$pic_object" &&
+	     test "$pic_object" != none; then
+	    rmfiles="$rmfiles $dir/$pic_object"
+	  fi
+
+	  # Add non-PIC object to the list of files to remove.
+	  if test -n "$non_pic_object" &&
+	     test "$non_pic_object" != none; then
+	    rmfiles="$rmfiles $dir/$non_pic_object"
+	  fi
+	fi
+	;;
+
+      *)
+	if test "$mode" = clean ; then
+	  noexename=$name
+	  case $file in
+	  *.exe)
+	    func_stripname '' '.exe' "$file"
+	    file=$func_stripname_result
+	    func_stripname '' '.exe' "$name"
+	    noexename=$func_stripname_result
+	    # $file with .exe has already been added to rmfiles,
+	    # add $file without .exe
+	    rmfiles="$rmfiles $file"
+	    ;;
+	  esac
+	  # Do a test to see if this is a libtool program.
+	  if func_ltwrapper_p "$file"; then
+	    if func_ltwrapper_executable_p "$file"; then
+	      func_ltwrapper_scriptname "$file"
+	      relink_command=
+	      func_source $func_ltwrapper_scriptname_result
+	      rmfiles="$rmfiles $func_ltwrapper_scriptname_result"
+	    else
+	      relink_command=
+	      func_source $dir/$noexename
+	    fi
+
+	    # note $name still contains .exe if it was in $file originally
+	    # as does the version of $file that was added into $rmfiles
+	    rmfiles="$rmfiles $objdir/$name $objdir/${name}S.${objext}"
+	    if test "$fast_install" = yes && test -n "$relink_command"; then
+	      rmfiles="$rmfiles $objdir/lt-$name"
+	    fi
+	    if test "X$noexename" != "X$name" ; then
+	      rmfiles="$rmfiles $objdir/lt-${noexename}.c"
+	    fi
+	  fi
+	fi
+	;;
+      esac
+      func_show_eval "$RM $rmfiles" 'exit_status=1'
+    done
+    objdir="$origobjdir"
+
+    # Try to remove the ${objdir}s in the directories where we deleted files
+    for dir in $rmdirs; do
+      if test -d "$dir"; then
+	func_show_eval "rmdir $dir >/dev/null 2>&1"
+      fi
+    done
+
+    exit $exit_status
+}
+
+{ test "$mode" = uninstall || test "$mode" = clean; } &&
+    func_mode_uninstall ${1+"$@"}
+
+test -z "$mode" && {
+  help="$generic_help"
+  func_fatal_help "you must specify a MODE"
+}
+
+test -z "$exec_cmd" && \
+  func_fatal_help "invalid operation mode \`$mode'"
+
+if test -n "$exec_cmd"; then
+  eval exec "$exec_cmd"
+  exit $EXIT_FAILURE
+fi
+
+exit $exit_status
+
+
+# The TAGs below are defined such that we never get into a situation
+# in which we disable both kinds of libraries.  Given conflicting
+# choices, we go for a static library, that is the most portable,
+# since we can't tell whether shared libraries were disabled because
+# the user asked for that or because the platform doesn't support
+# them.  This is particularly important on AIX, because we don't
+# support having both static and shared libraries enabled at the same
+# time on that platform, so we default to a shared-only configuration.
+# If a disable-shared tag is given, we'll fallback to a static-only
+# configuration.  But we'll never go from static-only to shared-only.
+
+# ### BEGIN LIBTOOL TAG CONFIG: disable-shared
+build_libtool_libs=no
+build_old_libs=yes
+# ### END LIBTOOL TAG CONFIG: disable-shared
+
+# ### BEGIN LIBTOOL TAG CONFIG: disable-static
+build_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`
+# ### END LIBTOOL TAG CONFIG: disable-static
+
+# Local Variables:
+# mode:shell-script
+# sh-indentation:2
+# End:
+# vi:sw=2
+
diff --git a/mpc/m4/ax_c_check_flag.m4 b/mpc/m4/ax_c_check_flag.m4
new file mode 100644
index 0000000..68daeb3
--- /dev/null
+++ b/mpc/m4/ax_c_check_flag.m4
@@ -0,0 +1,92 @@
+##### http://autoconf-archive.cryp.to/ax_c_check_flag.html
+#
+# SYNOPSIS
+#
+#
+AX_C_CHECK_FLAG(FLAG-TO-CHECK,[PROLOGUE],[BODY],[ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])
+#
+# DESCRIPTION
+#
+#   This macro tests if the C compiler supports the flag FLAG-TO-CHECK.
+#   If successfull execute ACTION-IF-SUCCESS otherwise
+#   ACTION-IF-FAILURE. PROLOGUE and BODY are optional and should be
+#   used as in AC_LANG_PROGRAM macro.
+#
+#   This code is inspired from KDE_CHECK_COMPILER_FLAG macro. Thanks to
+#   Bogdan Drozdowski <bogdandr@op.pl> for testing and bug fixes.
+#
+# LAST MODIFICATION
+#
+#   2007-11-26
+#
+# COPYLEFT
+#
+#   Copyright (c) 2007 Francesco Salvestrini <salvestrini@users.sourceforge.net>
+#
+#   This program is free software; you can redistribute it and/or
+#   modify it under the terms of the GNU General Public License as
+#   published by the Free Software Foundation; either version 2 of the
+#   License, or (at your option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+#   General Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License
+#   along with this program; if not, write to the Free Software
+#   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+#   02111-1307, USA.
+#
+#   As a special exception, the respective Autoconf Macro's copyright
+#   owner gives unlimited permission to copy, distribute and modify the
+#   configure scripts that are the output of Autoconf when processing
+#   the Macro. You need not follow the terms of the GNU General Public
+#   License when using or distributing such scripts, even though
+#   portions of the text of the Macro appear in them. The GNU General
+#   Public License (GPL) does govern all other use of the material that
+#   constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the
+#   Autoconf Macro released by the Autoconf Macro Archive. When you
+#   make and distribute a modified version of the Autoconf Macro, you
+#   may extend this special exception to the GPL to apply to your
+#   modified version as well.
+
+AC_DEFUN([AX_C_CHECK_FLAG],[
+  AC_PREREQ([2.61])
+  AC_REQUIRE([AC_PROG_CC])
+  AC_REQUIRE([AC_PROG_SED])
+
+  flag=`echo "$1" | $SED 'y% .=/+-(){}<>:*,%_______________%'`
+
+  AC_CACHE_CHECK([whether the C compiler accepts the $1 flag],
+    [ax_cv_c_check_flag_$flag],[
+
+    AC_LANG_PUSH([C])
+
+    save_CFLAGS="$CFLAGS"
+    CFLAGS="$CFLAGS $1"
+
+    AC_LINK_IFELSE([
+      AC_LANG_PROGRAM([$2],[$3])
+    ],[
+      eval "ax_cv_c_check_flag_$flag=yes"
+    ],[
+      eval "ax_cv_c_check_flag_$flag=no"
+    ])
+
+    CFLAGS="$save_CFLAGS"
+
+    AC_LANG_POP
+
+  ])
+
+  AS_IF([eval "test \"`echo '$ax_cv_c_check_flag_'$flag`\" = yes"],[
+   :
+    $4
+  ],[
+   :
+    $5
+  ])
+])
diff --git a/mpc/m4/libtool.m4 b/mpc/m4/libtool.m4
new file mode 100644
index 0000000..a3fee53
--- /dev/null
+++ b/mpc/m4/libtool.m4
@@ -0,0 +1,7377 @@
+# libtool.m4 - Configure libtool for the host system. -*-Autoconf-*-
+#
+#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
+#                 2006, 2007, 2008 Free Software Foundation, Inc.
+#   Written by Gordon Matzigkeit, 1996
+#
+# This file is free software; the Free Software Foundation gives
+# unlimited permission to copy and/or distribute it, with or without
+# modifications, as long as this notice is preserved.
+
+m4_define([_LT_COPYING], [dnl
+#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
+#                 2006, 2007, 2008 Free Software Foundation, Inc.
+#   Written by Gordon Matzigkeit, 1996
+#
+#   This file is part of GNU Libtool.
+#
+# GNU Libtool is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# As a special exception to the GNU General Public License,
+# if you distribute this file as part of a program or library that
+# is built using GNU Libtool, you may include this file under the
+# same distribution terms that you use for the rest of that program.
+#
+# GNU Libtool is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with GNU Libtool; see the file COPYING.  If not, a copy
+# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
+# obtained by writing to the Free Software Foundation, Inc.,
+# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+])
+
+# serial 56 LT_INIT
+
+
+# LT_PREREQ(VERSION)
+# ------------------
+# Complain and exit if this libtool version is less that VERSION.
+m4_defun([LT_PREREQ],
+[m4_if(m4_version_compare(m4_defn([LT_PACKAGE_VERSION]), [$1]), -1,
+       [m4_default([$3],
+		   [m4_fatal([Libtool version $1 or higher is required],
+		             63)])],
+       [$2])])
+
+
+# _LT_CHECK_BUILDDIR
+# ------------------
+# Complain if the absolute build directory name contains unusual characters
+m4_defun([_LT_CHECK_BUILDDIR],
+[case `pwd` in
+  *\ * | *\	*)
+    AC_MSG_WARN([Libtool does not cope well with whitespace in `pwd`]) ;;
+esac
+])
+
+
+# LT_INIT([OPTIONS])
+# ------------------
+AC_DEFUN([LT_INIT],
+[AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT
+AC_BEFORE([$0], [LT_LANG])dnl
+AC_BEFORE([$0], [LT_OUTPUT])dnl
+AC_BEFORE([$0], [LTDL_INIT])dnl
+m4_require([_LT_CHECK_BUILDDIR])dnl
+
+dnl Autoconf doesn't catch unexpanded LT_ macros by default:
+m4_pattern_forbid([^_?LT_[A-Z_]+$])dnl
+m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl
+dnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4
+dnl unless we require an AC_DEFUNed macro:
+AC_REQUIRE([LTOPTIONS_VERSION])dnl
+AC_REQUIRE([LTSUGAR_VERSION])dnl
+AC_REQUIRE([LTVERSION_VERSION])dnl
+AC_REQUIRE([LTOBSOLETE_VERSION])dnl
+m4_require([_LT_PROG_LTMAIN])dnl
+
+dnl Parse OPTIONS
+_LT_SET_OPTIONS([$0], [$1])
+
+# This can be used to rebuild libtool when needed
+LIBTOOL_DEPS="$ltmain"
+
+# Always use our own libtool.
+LIBTOOL='$(SHELL) $(top_builddir)/libtool'
+AC_SUBST(LIBTOOL)dnl
+
+_LT_SETUP
+
+# Only expand once:
+m4_define([LT_INIT])
+])# LT_INIT
+
+# Old names:
+AU_ALIAS([AC_PROG_LIBTOOL], [LT_INIT])
+AU_ALIAS([AM_PROG_LIBTOOL], [LT_INIT])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_PROG_LIBTOOL], [])
+dnl AC_DEFUN([AM_PROG_LIBTOOL], [])
+
+
+# _LT_CC_BASENAME(CC)
+# -------------------
+# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
+m4_defun([_LT_CC_BASENAME],
+[for cc_temp in $1""; do
+  case $cc_temp in
+    compile | *[[\\/]]compile | ccache | *[[\\/]]ccache ) ;;
+    distcc | *[[\\/]]distcc | purify | *[[\\/]]purify ) ;;
+    \-*) ;;
+    *) break;;
+  esac
+done
+cc_basename=`$ECHO "X$cc_temp" | $Xsed -e 's%.*/%%' -e "s%^$host_alias-%%"`
+])
+
+
+# _LT_FILEUTILS_DEFAULTS
+# ----------------------
+# It is okay to use these file commands and assume they have been set
+# sensibly after `m4_require([_LT_FILEUTILS_DEFAULTS])'.
+m4_defun([_LT_FILEUTILS_DEFAULTS],
+[: ${CP="cp -f"}
+: ${MV="mv -f"}
+: ${RM="rm -f"}
+])# _LT_FILEUTILS_DEFAULTS
+
+
+# _LT_SETUP
+# ---------
+m4_defun([_LT_SETUP],
+[AC_REQUIRE([AC_CANONICAL_HOST])dnl
+AC_REQUIRE([AC_CANONICAL_BUILD])dnl
+_LT_DECL([], [host_alias], [0], [The host system])dnl
+_LT_DECL([], [host], [0])dnl
+_LT_DECL([], [host_os], [0])dnl
+dnl
+_LT_DECL([], [build_alias], [0], [The build system])dnl
+_LT_DECL([], [build], [0])dnl
+_LT_DECL([], [build_os], [0])dnl
+dnl
+AC_REQUIRE([AC_PROG_CC])dnl
+AC_REQUIRE([LT_PATH_LD])dnl
+AC_REQUIRE([LT_PATH_NM])dnl
+dnl
+AC_REQUIRE([AC_PROG_LN_S])dnl
+test -z "$LN_S" && LN_S="ln -s"
+_LT_DECL([], [LN_S], [1], [Whether we need soft or hard links])dnl
+dnl
+AC_REQUIRE([LT_CMD_MAX_LEN])dnl
+_LT_DECL([objext], [ac_objext], [0], [Object file suffix (normally "o")])dnl
+_LT_DECL([], [exeext], [0], [Executable file suffix (normally "")])dnl
+dnl
+m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+m4_require([_LT_CHECK_SHELL_FEATURES])dnl
+m4_require([_LT_CMD_RELOAD])dnl
+m4_require([_LT_CHECK_MAGIC_METHOD])dnl
+m4_require([_LT_CMD_OLD_ARCHIVE])dnl
+m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
+
+_LT_CONFIG_LIBTOOL_INIT([
+# See if we are running on zsh, and set the options which allow our
+# commands through without removal of \ escapes INIT.
+if test -n "\${ZSH_VERSION+set}" ; then
+   setopt NO_GLOB_SUBST
+fi
+])
+if test -n "${ZSH_VERSION+set}" ; then
+   setopt NO_GLOB_SUBST
+fi
+
+_LT_CHECK_OBJDIR
+
+m4_require([_LT_TAG_COMPILER])dnl
+_LT_PROG_ECHO_BACKSLASH
+
+case $host_os in
+aix3*)
+  # AIX sometimes has problems with the GCC collect2 program.  For some
+  # reason, if we set the COLLECT_NAMES environment variable, the problems
+  # vanish in a puff of smoke.
+  if test "X${COLLECT_NAMES+set}" != Xset; then
+    COLLECT_NAMES=
+    export COLLECT_NAMES
+  fi
+  ;;
+esac
+
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+sed_quote_subst='s/\([["`$\\]]\)/\\\1/g'
+
+# Same as above, but do not quote variable references.
+double_quote_subst='s/\([["`\\]]\)/\\\1/g'
+
+# Sed substitution to delay expansion of an escaped shell variable in a
+# double_quote_subst'ed string.
+delay_variable_subst='s/\\\\\\\\\\\$/\\\\\\$/g'
+
+# Sed substitution to delay expansion of an escaped single quote.
+delay_single_quote_subst='s/'\''/'\'\\\\\\\'\''/g'
+
+# Sed substitution to avoid accidental globbing in evaled expressions
+no_glob_subst='s/\*/\\\*/g'
+
+# Global variables:
+ofile=libtool
+can_build_shared=yes
+
+# All known linkers require a `.a' archive for static linking (except MSVC,
+# which needs '.lib').
+libext=a
+
+with_gnu_ld="$lt_cv_prog_gnu_ld"
+
+old_CC="$CC"
+old_CFLAGS="$CFLAGS"
+
+# Set sane defaults for various variables
+test -z "$CC" && CC=cc
+test -z "$LTCC" && LTCC=$CC
+test -z "$LTCFLAGS" && LTCFLAGS=$CFLAGS
+test -z "$LD" && LD=ld
+test -z "$ac_objext" && ac_objext=o
+
+_LT_CC_BASENAME([$compiler])
+
+# Only perform the check for file, if the check method requires it
+test -z "$MAGIC_CMD" && MAGIC_CMD=file
+case $deplibs_check_method in
+file_magic*)
+  if test "$file_magic_cmd" = '$MAGIC_CMD'; then
+    _LT_PATH_MAGIC
+  fi
+  ;;
+esac
+
+# Use C for the default configuration in the libtool script
+LT_SUPPORTED_TAG([CC])
+_LT_LANG_C_CONFIG
+_LT_LANG_DEFAULT_CONFIG
+_LT_CONFIG_COMMANDS
+])# _LT_SETUP
+
+
+# _LT_PROG_LTMAIN
+# ---------------
+# Note that this code is called both from `configure', and `config.status'
+# now that we use AC_CONFIG_COMMANDS to generate libtool.  Notably,
+# `config.status' has no value for ac_aux_dir unless we are using Automake,
+# so we pass a copy along to make sure it has a sensible value anyway.
+m4_defun([_LT_PROG_LTMAIN],
+[m4_ifdef([AC_REQUIRE_AUX_FILE], [AC_REQUIRE_AUX_FILE([ltmain.sh])])dnl
+_LT_CONFIG_LIBTOOL_INIT([ac_aux_dir='$ac_aux_dir'])
+ltmain="$ac_aux_dir/ltmain.sh"
+])# _LT_PROG_LTMAIN
+
+
+## ------------------------------------- ##
+## Accumulate code for creating libtool. ##
+## ------------------------------------- ##
+
+# So that we can recreate a full libtool script including additional
+# tags, we accumulate the chunks of code to send to AC_CONFIG_COMMANDS
+# in macros and then make a single call at the end using the `libtool'
+# label.
+
+
+# _LT_CONFIG_LIBTOOL_INIT([INIT-COMMANDS])
+# ----------------------------------------
+# Register INIT-COMMANDS to be passed to AC_CONFIG_COMMANDS later.
+m4_define([_LT_CONFIG_LIBTOOL_INIT],
+[m4_ifval([$1],
+          [m4_append([_LT_OUTPUT_LIBTOOL_INIT],
+                     [$1
+])])])
+
+# Initialize.
+m4_define([_LT_OUTPUT_LIBTOOL_INIT])
+
+
+# _LT_CONFIG_LIBTOOL([COMMANDS])
+# ------------------------------
+# Register COMMANDS to be passed to AC_CONFIG_COMMANDS later.
+m4_define([_LT_CONFIG_LIBTOOL],
+[m4_ifval([$1],
+          [m4_append([_LT_OUTPUT_LIBTOOL_COMMANDS],
+                     [$1
+])])])
+
+# Initialize.
+m4_define([_LT_OUTPUT_LIBTOOL_COMMANDS])
+
+
+# _LT_CONFIG_SAVE_COMMANDS([COMMANDS], [INIT_COMMANDS])
+# -----------------------------------------------------
+m4_defun([_LT_CONFIG_SAVE_COMMANDS],
+[_LT_CONFIG_LIBTOOL([$1])
+_LT_CONFIG_LIBTOOL_INIT([$2])
+])
+
+
+# _LT_FORMAT_COMMENT([COMMENT])
+# -----------------------------
+# Add leading comment marks to the start of each line, and a trailing
+# full-stop to the whole comment if one is not present already.
+m4_define([_LT_FORMAT_COMMENT],
+[m4_ifval([$1], [
+m4_bpatsubst([m4_bpatsubst([$1], [^ *], [# ])],
+              [['`$\]], [\\\&])]m4_bmatch([$1], [[!?.]$], [], [.])
+)])
+
+
+
+## ------------------------ ##
+## FIXME: Eliminate VARNAME ##
+## ------------------------ ##
+
+
+# _LT_DECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION], [IS-TAGGED?])
+# -------------------------------------------------------------------
+# CONFIGNAME is the name given to the value in the libtool script.
+# VARNAME is the (base) name used in the configure script.
+# VALUE may be 0, 1 or 2 for a computed quote escaped value based on
+# VARNAME.  Any other value will be used directly.
+m4_define([_LT_DECL],
+[lt_if_append_uniq([lt_decl_varnames], [$2], [, ],
+    [lt_dict_add_subkey([lt_decl_dict], [$2], [libtool_name],
+	[m4_ifval([$1], [$1], [$2])])
+    lt_dict_add_subkey([lt_decl_dict], [$2], [value], [$3])
+    m4_ifval([$4],
+	[lt_dict_add_subkey([lt_decl_dict], [$2], [description], [$4])])
+    lt_dict_add_subkey([lt_decl_dict], [$2],
+	[tagged?], [m4_ifval([$5], [yes], [no])])])
+])
+
+
+# _LT_TAGDECL([CONFIGNAME], VARNAME, VALUE, [DESCRIPTION])
+# --------------------------------------------------------
+m4_define([_LT_TAGDECL], [_LT_DECL([$1], [$2], [$3], [$4], [yes])])
+
+
+# lt_decl_tag_varnames([SEPARATOR], [VARNAME1...])
+# ------------------------------------------------
+m4_define([lt_decl_tag_varnames],
+[_lt_decl_filter([tagged?], [yes], $@)])
+
+
+# _lt_decl_filter(SUBKEY, VALUE, [SEPARATOR], [VARNAME1..])
+# ---------------------------------------------------------
+m4_define([_lt_decl_filter],
+[m4_case([$#],
+  [0], [m4_fatal([$0: too few arguments: $#])],
+  [1], [m4_fatal([$0: too few arguments: $#: $1])],
+  [2], [lt_dict_filter([lt_decl_dict], [$1], [$2], [], lt_decl_varnames)],
+  [3], [lt_dict_filter([lt_decl_dict], [$1], [$2], [$3], lt_decl_varnames)],
+  [lt_dict_filter([lt_decl_dict], $@)])[]dnl
+])
+
+
+# lt_decl_quote_varnames([SEPARATOR], [VARNAME1...])
+# --------------------------------------------------
+m4_define([lt_decl_quote_varnames],
+[_lt_decl_filter([value], [1], $@)])
+
+
+# lt_decl_dquote_varnames([SEPARATOR], [VARNAME1...])
+# ---------------------------------------------------
+m4_define([lt_decl_dquote_varnames],
+[_lt_decl_filter([value], [2], $@)])
+
+
+# lt_decl_varnames_tagged([SEPARATOR], [VARNAME1...])
+# ---------------------------------------------------
+m4_define([lt_decl_varnames_tagged],
+[m4_assert([$# <= 2])dnl
+_$0(m4_quote(m4_default([$1], [[, ]])),
+    m4_ifval([$2], [[$2]], [m4_dquote(lt_decl_tag_varnames)]),
+    m4_split(m4_normalize(m4_quote(_LT_TAGS)), [ ]))])
+m4_define([_lt_decl_varnames_tagged],
+[m4_ifval([$3], [lt_combine([$1], [$2], [_], $3)])])
+
+
+# lt_decl_all_varnames([SEPARATOR], [VARNAME1...])
+# ------------------------------------------------
+m4_define([lt_decl_all_varnames],
+[_$0(m4_quote(m4_default([$1], [[, ]])),
+     m4_if([$2], [],
+	   m4_quote(lt_decl_varnames),
+	m4_quote(m4_shift($@))))[]dnl
+])
+m4_define([_lt_decl_all_varnames],
+[lt_join($@, lt_decl_varnames_tagged([$1],
+			lt_decl_tag_varnames([[, ]], m4_shift($@))))dnl
+])
+
+
+# _LT_CONFIG_STATUS_DECLARE([VARNAME])
+# ------------------------------------
+# Quote a variable value, and forward it to `config.status' so that its
+# declaration there will have the same value as in `configure'.  VARNAME
+# must have a single quote delimited value for this to work.
+m4_define([_LT_CONFIG_STATUS_DECLARE],
+[$1='`$ECHO "X$][$1" | $Xsed -e "$delay_single_quote_subst"`'])
+
+
+# _LT_CONFIG_STATUS_DECLARATIONS
+# ------------------------------
+# We delimit libtool config variables with single quotes, so when
+# we write them to config.status, we have to be sure to quote all
+# embedded single quotes properly.  In configure, this macro expands
+# each variable declared with _LT_DECL (and _LT_TAGDECL) into:
+#
+#    <var>='`$ECHO "X$<var>" | $Xsed -e "$delay_single_quote_subst"`'
+m4_defun([_LT_CONFIG_STATUS_DECLARATIONS],
+[m4_foreach([_lt_var], m4_quote(lt_decl_all_varnames),
+    [m4_n([_LT_CONFIG_STATUS_DECLARE(_lt_var)])])])
+
+
+# _LT_LIBTOOL_TAGS
+# ----------------
+# Output comment and list of tags supported by the script
+m4_defun([_LT_LIBTOOL_TAGS],
+[_LT_FORMAT_COMMENT([The names of the tagged configurations supported by this script])dnl
+available_tags="_LT_TAGS"dnl
+])
+
+
+# _LT_LIBTOOL_DECLARE(VARNAME, [TAG])
+# -----------------------------------
+# Extract the dictionary values for VARNAME (optionally with TAG) and
+# expand to a commented shell variable setting:
+#
+#    # Some comment about what VAR is for.
+#    visible_name=$lt_internal_name
+m4_define([_LT_LIBTOOL_DECLARE],
+[_LT_FORMAT_COMMENT(m4_quote(lt_dict_fetch([lt_decl_dict], [$1],
+					   [description])))[]dnl
+m4_pushdef([_libtool_name],
+    m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [libtool_name])))[]dnl
+m4_case(m4_quote(lt_dict_fetch([lt_decl_dict], [$1], [value])),
+    [0], [_libtool_name=[$]$1],
+    [1], [_libtool_name=$lt_[]$1],
+    [2], [_libtool_name=$lt_[]$1],
+    [_libtool_name=lt_dict_fetch([lt_decl_dict], [$1], [value])])[]dnl
+m4_ifval([$2], [_$2])[]m4_popdef([_libtool_name])[]dnl
+])
+
+
+# _LT_LIBTOOL_CONFIG_VARS
+# -----------------------
+# Produce commented declarations of non-tagged libtool config variables
+# suitable for insertion in the LIBTOOL CONFIG section of the `libtool'
+# script.  Tagged libtool config variables (even for the LIBTOOL CONFIG
+# section) are produced by _LT_LIBTOOL_TAG_VARS.
+m4_defun([_LT_LIBTOOL_CONFIG_VARS],
+[m4_foreach([_lt_var],
+    m4_quote(_lt_decl_filter([tagged?], [no], [], lt_decl_varnames)),
+    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var)])])])
+
+
+# _LT_LIBTOOL_TAG_VARS(TAG)
+# -------------------------
+m4_define([_LT_LIBTOOL_TAG_VARS],
+[m4_foreach([_lt_var], m4_quote(lt_decl_tag_varnames),
+    [m4_n([_LT_LIBTOOL_DECLARE(_lt_var, [$1])])])])
+
+
+# _LT_TAGVAR(VARNAME, [TAGNAME])
+# ------------------------------
+m4_define([_LT_TAGVAR], [m4_ifval([$2], [$1_$2], [$1])])
+
+
+# _LT_CONFIG_COMMANDS
+# -------------------
+# Send accumulated output to $CONFIG_STATUS.  Thanks to the lists of
+# variables for single and double quote escaping we saved from calls
+# to _LT_DECL, we can put quote escaped variables declarations
+# into `config.status', and then the shell code to quote escape them in
+# for loops in `config.status'.  Finally, any additional code accumulated
+# from calls to _LT_CONFIG_LIBTOOL_INIT is expanded.
+m4_defun([_LT_CONFIG_COMMANDS],
+[AC_PROVIDE_IFELSE([LT_OUTPUT],
+	dnl If the libtool generation code has been placed in $CONFIG_LT,
+	dnl instead of duplicating it all over again into config.status,
+	dnl then we will have config.status run $CONFIG_LT later, so it
+	dnl needs to know what name is stored there:
+        [AC_CONFIG_COMMANDS([libtool],
+            [$SHELL $CONFIG_LT || AS_EXIT(1)], [CONFIG_LT='$CONFIG_LT'])],
+    dnl If the libtool generation code is destined for config.status,
+    dnl expand the accumulated commands and init code now:
+    [AC_CONFIG_COMMANDS([libtool],
+        [_LT_OUTPUT_LIBTOOL_COMMANDS], [_LT_OUTPUT_LIBTOOL_COMMANDS_INIT])])
+])#_LT_CONFIG_COMMANDS
+
+
+# Initialize.
+m4_define([_LT_OUTPUT_LIBTOOL_COMMANDS_INIT],
+[
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+sed_quote_subst='$sed_quote_subst'
+double_quote_subst='$double_quote_subst'
+delay_variable_subst='$delay_variable_subst'
+_LT_CONFIG_STATUS_DECLARATIONS
+LTCC='$LTCC'
+LTCFLAGS='$LTCFLAGS'
+compiler='$compiler_DEFAULT'
+
+# Quote evaled strings.
+for var in lt_decl_all_varnames([[ \
+]], lt_decl_quote_varnames); do
+    case \`eval \\\\\$ECHO "X\\\\\$\$var"\` in
+    *[[\\\\\\\`\\"\\\$]]*)
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"X\\\$\$var\\" | \\\$Xsed -e \\"\\\$sed_quote_subst\\"\\\`\\\\\\""
+      ;;
+    *)
+      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
+      ;;
+    esac
+done
+
+# Double-quote double-evaled strings.
+for var in lt_decl_all_varnames([[ \
+]], lt_decl_dquote_varnames); do
+    case \`eval \\\\\$ECHO "X\\\\\$\$var"\` in
+    *[[\\\\\\\`\\"\\\$]]*)
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"X\\\$\$var\\" | \\\$Xsed -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\""
+      ;;
+    *)
+      eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
+      ;;
+    esac
+done
+
+# Fix-up fallback echo if it was mangled by the above quoting rules.
+case \$lt_ECHO in
+*'\\\[$]0 --fallback-echo"')dnl "
+  lt_ECHO=\`\$ECHO "X\$lt_ECHO" | \$Xsed -e 's/\\\\\\\\\\\\\\\[$]0 --fallback-echo"\[$]/\[$]0 --fallback-echo"/'\`
+  ;;
+esac
+
+_LT_OUTPUT_LIBTOOL_INIT
+])
+
+
+# LT_OUTPUT
+# ---------
+# This macro allows early generation of the libtool script (before
+# AC_OUTPUT is called), incase it is used in configure for compilation
+# tests.
+AC_DEFUN([LT_OUTPUT],
+[: ${CONFIG_LT=./config.lt}
+AC_MSG_NOTICE([creating $CONFIG_LT])
+cat >"$CONFIG_LT" <<_LTEOF
+#! $SHELL
+# Generated by $as_me.
+# Run this file to recreate a libtool stub with the current configuration.
+
+lt_cl_silent=false
+SHELL=\${CONFIG_SHELL-$SHELL}
+_LTEOF
+
+cat >>"$CONFIG_LT" <<\_LTEOF
+AS_SHELL_SANITIZE
+_AS_PREPARE
+
+exec AS_MESSAGE_FD>&1
+exec AS_MESSAGE_LOG_FD>>config.log
+{
+  echo
+  AS_BOX([Running $as_me.])
+} >&AS_MESSAGE_LOG_FD
+
+lt_cl_help="\
+\`$as_me' creates a local libtool stub from the current configuration,
+for use in further configure time tests before the real libtool is
+generated.
+
+Usage: $[0] [[OPTIONS]]
+
+  -h, --help      print this help, then exit
+  -V, --version   print version number, then exit
+  -q, --quiet     do not print progress messages
+  -d, --debug     don't remove temporary files
+
+Report bugs to <bug-libtool@gnu.org>."
+
+lt_cl_version="\
+m4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl
+m4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])
+configured by $[0], generated by m4_PACKAGE_STRING.
+
+Copyright (C) 2008 Free Software Foundation, Inc.
+This config.lt script is free software; the Free Software Foundation
+gives unlimited permision to copy, distribute and modify it."
+
+while test $[#] != 0
+do
+  case $[1] in
+    --version | --v* | -V )
+      echo "$lt_cl_version"; exit 0 ;;
+    --help | --h* | -h )
+      echo "$lt_cl_help"; exit 0 ;;
+    --debug | --d* | -d )
+      debug=: ;;
+    --quiet | --q* | --silent | --s* | -q )
+      lt_cl_silent=: ;;
+
+    -*) AC_MSG_ERROR([unrecognized option: $[1]
+Try \`$[0] --help' for more information.]) ;;
+
+    *) AC_MSG_ERROR([unrecognized argument: $[1]
+Try \`$[0] --help' for more information.]) ;;
+  esac
+  shift
+done
+
+if $lt_cl_silent; then
+  exec AS_MESSAGE_FD>/dev/null
+fi
+_LTEOF
+
+cat >>"$CONFIG_LT" <<_LTEOF
+_LT_OUTPUT_LIBTOOL_COMMANDS_INIT
+_LTEOF
+
+cat >>"$CONFIG_LT" <<\_LTEOF
+AC_MSG_NOTICE([creating $ofile])
+_LT_OUTPUT_LIBTOOL_COMMANDS
+AS_EXIT(0)
+_LTEOF
+chmod +x "$CONFIG_LT"
+
+# configure is writing to config.log, but config.lt does its own redirection,
+# appending to config.log, which fails on DOS, as config.log is still kept
+# open by configure.  Here we exec the FD to /dev/null, effectively closing
+# config.log, so it can be properly (re)opened and appended to by config.lt.
+if test "$no_create" != yes; then
+  lt_cl_success=:
+  test "$silent" = yes &&
+    lt_config_lt_args="$lt_config_lt_args --quiet"
+  exec AS_MESSAGE_LOG_FD>/dev/null
+  $SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
+  exec AS_MESSAGE_LOG_FD>>config.log
+  $lt_cl_success || AS_EXIT(1)
+fi
+])# LT_OUTPUT
+
+
+# _LT_CONFIG(TAG)
+# ---------------
+# If TAG is the built-in tag, create an initial libtool script with a
+# default configuration from the untagged config vars.  Otherwise add code
+# to config.status for appending the configuration named by TAG from the
+# matching tagged config vars.
+m4_defun([_LT_CONFIG],
+[m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+_LT_CONFIG_SAVE_COMMANDS([
+  m4_define([_LT_TAG], m4_if([$1], [], [C], [$1]))dnl
+  m4_if(_LT_TAG, [C], [
+    # See if we are running on zsh, and set the options which allow our
+    # commands through without removal of \ escapes.
+    if test -n "${ZSH_VERSION+set}" ; then
+      setopt NO_GLOB_SUBST
+    fi
+
+    cfgfile="${ofile}T"
+    trap "$RM \"$cfgfile\"; exit 1" 1 2 15
+    $RM "$cfgfile"
+
+    cat <<_LT_EOF >> "$cfgfile"
+#! $SHELL
+
+# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
+# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
+# Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
+# NOTE: Changes made to this file will be lost: look at ltmain.sh.
+#
+_LT_COPYING
+_LT_LIBTOOL_TAGS
+
+# ### BEGIN LIBTOOL CONFIG
+_LT_LIBTOOL_CONFIG_VARS
+_LT_LIBTOOL_TAG_VARS
+# ### END LIBTOOL CONFIG
+
+_LT_EOF
+
+  case $host_os in
+  aix3*)
+    cat <<\_LT_EOF >> "$cfgfile"
+# AIX sometimes has problems with the GCC collect2 program.  For some
+# reason, if we set the COLLECT_NAMES environment variable, the problems
+# vanish in a puff of smoke.
+if test "X${COLLECT_NAMES+set}" != Xset; then
+  COLLECT_NAMES=
+  export COLLECT_NAMES
+fi
+_LT_EOF
+    ;;
+  esac
+
+  _LT_PROG_LTMAIN
+
+  # We use sed instead of cat because bash on DJGPP gets confused if
+  # if finds mixed CR/LF and LF-only lines.  Since sed operates in
+  # text mode, it properly converts lines to CR/LF.  This bash problem
+  # is reportedly fixed, but why not run on old versions too?
+  sed '/^# Generated shell functions inserted here/q' "$ltmain" >> "$cfgfile" \
+    || (rm -f "$cfgfile"; exit 1)
+
+  _LT_PROG_XSI_SHELLFNS
+
+  sed -n '/^# Generated shell functions inserted here/,$p' "$ltmain" >> "$cfgfile" \
+    || (rm -f "$cfgfile"; exit 1)
+
+  mv -f "$cfgfile" "$ofile" ||
+    (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
+  chmod +x "$ofile"
+],
+[cat <<_LT_EOF >> "$ofile"
+
+dnl Unfortunately we have to use $1 here, since _LT_TAG is not expanded
+dnl in a comment (ie after a #).
+# ### BEGIN LIBTOOL TAG CONFIG: $1
+_LT_LIBTOOL_TAG_VARS(_LT_TAG)
+# ### END LIBTOOL TAG CONFIG: $1
+_LT_EOF
+])dnl /m4_if
+],
+[m4_if([$1], [], [
+    PACKAGE='$PACKAGE'
+    VERSION='$VERSION'
+    TIMESTAMP='$TIMESTAMP'
+    RM='$RM'
+    ofile='$ofile'], [])
+])dnl /_LT_CONFIG_SAVE_COMMANDS
+])# _LT_CONFIG
+
+
+# LT_SUPPORTED_TAG(TAG)
+# ---------------------
+# Trace this macro to discover what tags are supported by the libtool
+# --tag option, using:
+#    autoconf --trace 'LT_SUPPORTED_TAG:$1'
+AC_DEFUN([LT_SUPPORTED_TAG], [])
+
+
+# C support is built-in for now
+m4_define([_LT_LANG_C_enabled], [])
+m4_define([_LT_TAGS], [])
+
+
+# LT_LANG(LANG)
+# -------------
+# Enable libtool support for the given language if not already enabled.
+AC_DEFUN([LT_LANG],
+[AC_BEFORE([$0], [LT_OUTPUT])dnl
+m4_case([$1],
+  [C],			[_LT_LANG(C)],
+  [C++],		[_LT_LANG(CXX)],
+  [Java],		[_LT_LANG(GCJ)],
+  [Fortran 77],		[_LT_LANG(F77)],
+  [Fortran],		[_LT_LANG(FC)],
+  [Windows Resource],	[_LT_LANG(RC)],
+  [m4_ifdef([_LT_LANG_]$1[_CONFIG],
+    [_LT_LANG($1)],
+    [m4_fatal([$0: unsupported language: "$1"])])])dnl
+])# LT_LANG
+
+
+# _LT_LANG(LANGNAME)
+# ------------------
+m4_defun([_LT_LANG],
+[m4_ifdef([_LT_LANG_]$1[_enabled], [],
+  [LT_SUPPORTED_TAG([$1])dnl
+  m4_append([_LT_TAGS], [$1 ])dnl
+  m4_define([_LT_LANG_]$1[_enabled], [])dnl
+  _LT_LANG_$1_CONFIG($1)])dnl
+])# _LT_LANG
+
+
+# _LT_LANG_DEFAULT_CONFIG
+# -----------------------
+m4_defun([_LT_LANG_DEFAULT_CONFIG],
+[AC_PROVIDE_IFELSE([AC_PROG_CXX],
+  [LT_LANG(CXX)],
+  [m4_define([AC_PROG_CXX], defn([AC_PROG_CXX])[LT_LANG(CXX)])])
+
+AC_PROVIDE_IFELSE([AC_PROG_F77],
+  [LT_LANG(F77)],
+  [m4_define([AC_PROG_F77], defn([AC_PROG_F77])[LT_LANG(F77)])])
+
+AC_PROVIDE_IFELSE([AC_PROG_FC],
+  [LT_LANG(FC)],
+  [m4_define([AC_PROG_FC], defn([AC_PROG_FC])[LT_LANG(FC)])])
+
+dnl The call to [A][M_PROG_GCJ] is quoted like that to stop aclocal
+dnl pulling things in needlessly.
+AC_PROVIDE_IFELSE([AC_PROG_GCJ],
+  [LT_LANG(GCJ)],
+  [AC_PROVIDE_IFELSE([A][M_PROG_GCJ],
+    [LT_LANG(GCJ)],
+    [AC_PROVIDE_IFELSE([LT_PROG_GCJ],
+      [LT_LANG(GCJ)],
+      [m4_ifdef([AC_PROG_GCJ],
+	[m4_define([AC_PROG_GCJ], defn([AC_PROG_GCJ])[LT_LANG(GCJ)])])
+       m4_ifdef([A][M_PROG_GCJ],
+	[m4_define([A][M_PROG_GCJ], defn([A][M_PROG_GCJ])[LT_LANG(GCJ)])])
+       m4_ifdef([LT_PROG_GCJ],
+	[m4_define([LT_PROG_GCJ], defn([LT_PROG_GCJ])[LT_LANG(GCJ)])])])])])
+
+AC_PROVIDE_IFELSE([LT_PROG_RC],
+  [LT_LANG(RC)],
+  [m4_define([LT_PROG_RC], defn([LT_PROG_RC])[LT_LANG(RC)])])
+])# _LT_LANG_DEFAULT_CONFIG
+
+# Obsolete macros:
+AU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])
+AU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])
+AU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])
+AU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_LIBTOOL_CXX], [])
+dnl AC_DEFUN([AC_LIBTOOL_F77], [])
+dnl AC_DEFUN([AC_LIBTOOL_FC], [])
+dnl AC_DEFUN([AC_LIBTOOL_GCJ], [])
+
+
+# _LT_TAG_COMPILER
+# ----------------
+m4_defun([_LT_TAG_COMPILER],
+[AC_REQUIRE([AC_PROG_CC])dnl
+
+_LT_DECL([LTCC], [CC], [1], [A C compiler])dnl
+_LT_DECL([LTCFLAGS], [CFLAGS], [1], [LTCC compiler flags])dnl
+_LT_TAGDECL([CC], [compiler], [1], [A language specific compiler])dnl
+_LT_TAGDECL([with_gcc], [GCC], [0], [Is the compiler the GNU compiler?])dnl
+
+# If no C compiler was specified, use CC.
+LTCC=${LTCC-"$CC"}
+
+# If no C compiler flags were specified, use CFLAGS.
+LTCFLAGS=${LTCFLAGS-"$CFLAGS"}
+
+# Allow CC to be a program name with arguments.
+compiler=$CC
+])# _LT_TAG_COMPILER
+
+
+# _LT_COMPILER_BOILERPLATE
+# ------------------------
+# Check for compiler boilerplate output or warnings with
+# the simple compiler test code.
+m4_defun([_LT_COMPILER_BOILERPLATE],
+[m4_require([_LT_DECL_SED])dnl
+ac_outfile=conftest.$ac_objext
+echo "$lt_simple_compile_test_code" >conftest.$ac_ext
+eval "$ac_compile" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_compiler_boilerplate=`cat conftest.err`
+$RM conftest*
+])# _LT_COMPILER_BOILERPLATE
+
+
+# _LT_LINKER_BOILERPLATE
+# ----------------------
+# Check for linker boilerplate output or warnings with
+# the simple link test code.
+m4_defun([_LT_LINKER_BOILERPLATE],
+[m4_require([_LT_DECL_SED])dnl
+ac_outfile=conftest.$ac_objext
+echo "$lt_simple_link_test_code" >conftest.$ac_ext
+eval "$ac_link" 2>&1 >/dev/null | $SED '/^$/d; /^ *+/d' >conftest.err
+_lt_linker_boilerplate=`cat conftest.err`
+$RM -r conftest*
+])# _LT_LINKER_BOILERPLATE
+
+# _LT_REQUIRED_DARWIN_CHECKS
+# -------------------------
+m4_defun_once([_LT_REQUIRED_DARWIN_CHECKS],[
+  case $host_os in
+    rhapsody* | darwin*)
+    AC_CHECK_TOOL([DSYMUTIL], [dsymutil], [:])
+    AC_CHECK_TOOL([NMEDIT], [nmedit], [:])
+    AC_CHECK_TOOL([LIPO], [lipo], [:])
+    AC_CHECK_TOOL([OTOOL], [otool], [:])
+    AC_CHECK_TOOL([OTOOL64], [otool64], [:])
+    _LT_DECL([], [DSYMUTIL], [1],
+      [Tool to manipulate archived DWARF debug symbol files on Mac OS X])
+    _LT_DECL([], [NMEDIT], [1],
+      [Tool to change global to local symbols on Mac OS X])
+    _LT_DECL([], [LIPO], [1],
+      [Tool to manipulate fat objects and archives on Mac OS X])
+    _LT_DECL([], [OTOOL], [1],
+      [ldd/readelf like tool for Mach-O binaries on Mac OS X])
+    _LT_DECL([], [OTOOL64], [1],
+      [ldd/readelf like tool for 64 bit Mach-O binaries on Mac OS X 10.4])
+
+    AC_CACHE_CHECK([for -single_module linker flag],[lt_cv_apple_cc_single_mod],
+      [lt_cv_apple_cc_single_mod=no
+      if test -z "${LT_MULTI_MODULE}"; then
+	# By default we will add the -single_module flag. You can override
+	# by either setting the environment variable LT_MULTI_MODULE
+	# non-empty at configure time, or by adding -multi_module to the
+	# link flags.
+	rm -rf libconftest.dylib*
+	echo "int foo(void){return 1;}" > conftest.c
+	echo "$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
+-dynamiclib -Wl,-single_module conftest.c" >&AS_MESSAGE_LOG_FD
+	$LTCC $LTCFLAGS $LDFLAGS -o libconftest.dylib \
+	  -dynamiclib -Wl,-single_module conftest.c 2>conftest.err
+        _lt_result=$?
+	if test -f libconftest.dylib && test ! -s conftest.err && test $_lt_result = 0; then
+	  lt_cv_apple_cc_single_mod=yes
+	else
+	  cat conftest.err >&AS_MESSAGE_LOG_FD
+	fi
+	rm -rf libconftest.dylib*
+	rm -f conftest.*
+      fi])
+    AC_CACHE_CHECK([for -exported_symbols_list linker flag],
+      [lt_cv_ld_exported_symbols_list],
+      [lt_cv_ld_exported_symbols_list=no
+      save_LDFLAGS=$LDFLAGS
+      echo "_main" > conftest.sym
+      LDFLAGS="$LDFLAGS -Wl,-exported_symbols_list,conftest.sym"
+      AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],
+	[lt_cv_ld_exported_symbols_list=yes],
+	[lt_cv_ld_exported_symbols_list=no])
+	LDFLAGS="$save_LDFLAGS"
+    ])
+    case $host_os in
+    rhapsody* | darwin1.[[012]])
+      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;
+    darwin1.*)
+      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+    darwin*) # darwin 5.x on
+      # if running on 10.5 or later, the deployment target defaults
+      # to the OS version, if on x86, and 10.4, the deployment
+      # target defaults to 10.4. Don't you love it?
+      case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in
+	10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)
+	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+	10.[[012]]*)
+	  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+	10.*)
+	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+      esac
+    ;;
+  esac
+    if test "$lt_cv_apple_cc_single_mod" = "yes"; then
+      _lt_dar_single_mod='$single_module'
+    fi
+    if test "$lt_cv_ld_exported_symbols_list" = "yes"; then
+      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
+    else
+      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'
+    fi
+    if test "$DSYMUTIL" != ":"; then
+      _lt_dsymutil='~$DSYMUTIL $lib || :'
+    else
+      _lt_dsymutil=
+    fi
+    ;;
+  esac
+])
+
+
+# _LT_DARWIN_LINKER_FEATURES
+# --------------------------
+# Checks for linker and compiler features on darwin
+m4_defun([_LT_DARWIN_LINKER_FEATURES],
+[
+  m4_require([_LT_REQUIRED_DARWIN_CHECKS])
+  _LT_TAGVAR(archive_cmds_need_lc, $1)=no
+  _LT_TAGVAR(hardcode_direct, $1)=no
+  _LT_TAGVAR(hardcode_automatic, $1)=yes
+  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported
+  _LT_TAGVAR(whole_archive_flag_spec, $1)=''
+  _LT_TAGVAR(link_all_deplibs, $1)=yes
+  _LT_TAGVAR(allow_undefined_flag, $1)="$_lt_dar_allow_undefined"
+  case $cc_basename in
+     ifort*) _lt_dar_can_shared=yes ;;
+     *) _lt_dar_can_shared=$GCC ;;
+  esac
+  if test "$_lt_dar_can_shared" = "yes"; then
+    output_verbose_link_cmd=echo
+    _LT_TAGVAR(archive_cmds, $1)="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod${_lt_dsymutil}"
+    _LT_TAGVAR(module_cmds, $1)="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dsymutil}"
+    _LT_TAGVAR(archive_expsym_cmds, $1)="sed 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}"
+    _LT_TAGVAR(module_expsym_cmds, $1)="sed -e 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}"
+    m4_if([$1], [CXX],
+[   if test "$lt_cv_apple_cc_single_mod" != "yes"; then
+      _LT_TAGVAR(archive_cmds, $1)="\$CC -r -keep_private_externs -nostdlib -o \${lib}-master.o \$libobjs~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \${lib}-master.o \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring${_lt_dsymutil}"
+      _LT_TAGVAR(archive_expsym_cmds, $1)="sed 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC -r -keep_private_externs -nostdlib -o \${lib}-master.o \$libobjs~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \${lib}-master.o \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring${_lt_dar_export_syms}${_lt_dsymutil}"
+    fi
+],[])
+  else
+  _LT_TAGVAR(ld_shlibs, $1)=no
+  fi
+])
+
+# _LT_SYS_MODULE_PATH_AIX
+# -----------------------
+# Links a minimal program and checks the executable
+# for the system default hardcoded library path. In most cases,
+# this is /usr/lib:/lib, but when the MPI compilers are used
+# the location of the communication and MPI libs are included too.
+# If we don't find anything, use the default library path according
+# to the aix ld manual.
+m4_defun([_LT_SYS_MODULE_PATH_AIX],
+[m4_require([_LT_DECL_SED])dnl
+AC_LINK_IFELSE(AC_LANG_PROGRAM,[
+lt_aix_libpath_sed='
+    /Import File Strings/,/^$/ {
+	/^0/ {
+	    s/^0  *\(.*\)$/\1/
+	    p
+	}
+    }'
+aix_libpath=`dump -H conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+# Check for a 64-bit object if we didn't find anything.
+if test -z "$aix_libpath"; then
+  aix_libpath=`dump -HX64 conftest$ac_exeext 2>/dev/null | $SED -n -e "$lt_aix_libpath_sed"`
+fi],[])
+if test -z "$aix_libpath"; then aix_libpath="/usr/lib:/lib"; fi
+])# _LT_SYS_MODULE_PATH_AIX
+
+
+# _LT_SHELL_INIT(ARG)
+# -------------------
+m4_define([_LT_SHELL_INIT],
+[ifdef([AC_DIVERSION_NOTICE],
+	     [AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)],
+	 [AC_DIVERT_PUSH(NOTICE)])
+$1
+AC_DIVERT_POP
+])# _LT_SHELL_INIT
+
+
+# _LT_PROG_ECHO_BACKSLASH
+# -----------------------
+# Add some code to the start of the generated configure script which
+# will find an echo command which doesn't interpret backslashes.
+m4_defun([_LT_PROG_ECHO_BACKSLASH],
+[_LT_SHELL_INIT([
+# Check that we are running under the correct shell.
+SHELL=${CONFIG_SHELL-/bin/sh}
+
+case X$lt_ECHO in
+X*--fallback-echo)
+  # Remove one level of quotation (which was required for Make).
+  ECHO=`echo "$lt_ECHO" | sed 's,\\\\\[$]\\[$]0,'[$]0','`
+  ;;
+esac
+
+ECHO=${lt_ECHO-echo}
+if test "X[$]1" = X--no-reexec; then
+  # Discard the --no-reexec flag, and continue.
+  shift
+elif test "X[$]1" = X--fallback-echo; then
+  # Avoid inline document here, it may be left over
+  :
+elif test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' ; then
+  # Yippee, $ECHO works!
+  :
+else
+  # Restart under the correct shell.
+  exec $SHELL "[$]0" --no-reexec ${1+"[$]@"}
+fi
+
+if test "X[$]1" = X--fallback-echo; then
+  # used as fallback echo
+  shift
+  cat <<_LT_EOF
+[$]*
+_LT_EOF
+  exit 0
+fi
+
+# The HP-UX ksh and POSIX shell print the target directory to stdout
+# if CDPATH is set.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
+
+if test -z "$lt_ECHO"; then
+  if test "X${echo_test_string+set}" != Xset; then
+    # find a string as large as possible, as long as the shell can cope with it
+    for cmd in 'sed 50q "[$]0"' 'sed 20q "[$]0"' 'sed 10q "[$]0"' 'sed 2q "[$]0"' 'echo test'; do
+      # expected sizes: less than 2Kb, 1Kb, 512 bytes, 16 bytes, ...
+      if { echo_test_string=`eval $cmd`; } 2>/dev/null &&
+	 { test "X$echo_test_string" = "X$echo_test_string"; } 2>/dev/null
+      then
+        break
+      fi
+    done
+  fi
+
+  if test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' &&
+     echo_testing_string=`{ $ECHO "$echo_test_string"; } 2>/dev/null` &&
+     test "X$echo_testing_string" = "X$echo_test_string"; then
+    :
+  else
+    # The Solaris, AIX, and Digital Unix default echo programs unquote
+    # backslashes.  This makes it impossible to quote backslashes using
+    #   echo "$something" | sed 's/\\/\\\\/g'
+    #
+    # So, first we look for a working echo in the user's PATH.
+
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for dir in $PATH /usr/ucb; do
+      IFS="$lt_save_ifs"
+      if (test -f $dir/echo || test -f $dir/echo$ac_exeext) &&
+         test "X`($dir/echo '\t') 2>/dev/null`" = 'X\t' &&
+         echo_testing_string=`($dir/echo "$echo_test_string") 2>/dev/null` &&
+         test "X$echo_testing_string" = "X$echo_test_string"; then
+        ECHO="$dir/echo"
+        break
+      fi
+    done
+    IFS="$lt_save_ifs"
+
+    if test "X$ECHO" = Xecho; then
+      # We didn't find a better echo, so look for alternatives.
+      if test "X`{ print -r '\t'; } 2>/dev/null`" = 'X\t' &&
+         echo_testing_string=`{ print -r "$echo_test_string"; } 2>/dev/null` &&
+         test "X$echo_testing_string" = "X$echo_test_string"; then
+        # This shell has a builtin print -r that does the trick.
+        ECHO='print -r'
+      elif { test -f /bin/ksh || test -f /bin/ksh$ac_exeext; } &&
+	   test "X$CONFIG_SHELL" != X/bin/ksh; then
+        # If we have ksh, try running configure again with it.
+        ORIGINAL_CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
+        export ORIGINAL_CONFIG_SHELL
+        CONFIG_SHELL=/bin/ksh
+        export CONFIG_SHELL
+        exec $CONFIG_SHELL "[$]0" --no-reexec ${1+"[$]@"}
+      else
+        # Try using printf.
+        ECHO='printf %s\n'
+        if test "X`{ $ECHO '\t'; } 2>/dev/null`" = 'X\t' &&
+	   echo_testing_string=`{ $ECHO "$echo_test_string"; } 2>/dev/null` &&
+	   test "X$echo_testing_string" = "X$echo_test_string"; then
+	  # Cool, printf works
+	  :
+        elif echo_testing_string=`($ORIGINAL_CONFIG_SHELL "[$]0" --fallback-echo '\t') 2>/dev/null` &&
+	     test "X$echo_testing_string" = 'X\t' &&
+	     echo_testing_string=`($ORIGINAL_CONFIG_SHELL "[$]0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	     test "X$echo_testing_string" = "X$echo_test_string"; then
+	  CONFIG_SHELL=$ORIGINAL_CONFIG_SHELL
+	  export CONFIG_SHELL
+	  SHELL="$CONFIG_SHELL"
+	  export SHELL
+	  ECHO="$CONFIG_SHELL [$]0 --fallback-echo"
+        elif echo_testing_string=`($CONFIG_SHELL "[$]0" --fallback-echo '\t') 2>/dev/null` &&
+	     test "X$echo_testing_string" = 'X\t' &&
+	     echo_testing_string=`($CONFIG_SHELL "[$]0" --fallback-echo "$echo_test_string") 2>/dev/null` &&
+	     test "X$echo_testing_string" = "X$echo_test_string"; then
+	  ECHO="$CONFIG_SHELL [$]0 --fallback-echo"
+        else
+	  # maybe with a smaller string...
+	  prev=:
+
+	  for cmd in 'echo test' 'sed 2q "[$]0"' 'sed 10q "[$]0"' 'sed 20q "[$]0"' 'sed 50q "[$]0"'; do
+	    if { test "X$echo_test_string" = "X`eval $cmd`"; } 2>/dev/null
+	    then
+	      break
+	    fi
+	    prev="$cmd"
+	  done
+
+	  if test "$prev" != 'sed 50q "[$]0"'; then
+	    echo_test_string=`eval $prev`
+	    export echo_test_string
+	    exec ${ORIGINAL_CONFIG_SHELL-${CONFIG_SHELL-/bin/sh}} "[$]0" ${1+"[$]@"}
+	  else
+	    # Oops.  We lost completely, so just stick with echo.
+	    ECHO=echo
+	  fi
+        fi
+      fi
+    fi
+  fi
+fi
+
+# Copy echo and quote the copy suitably for passing to libtool from
+# the Makefile, instead of quoting the original, which is used later.
+lt_ECHO=$ECHO
+if test "X$lt_ECHO" = "X$CONFIG_SHELL [$]0 --fallback-echo"; then
+   lt_ECHO="$CONFIG_SHELL \\\$\[$]0 --fallback-echo"
+fi
+
+AC_SUBST(lt_ECHO)
+])
+_LT_DECL([], [SHELL], [1], [Shell to use when invoking shell scripts])
+_LT_DECL([], [ECHO], [1],
+    [An echo program that does not interpret backslashes])
+])# _LT_PROG_ECHO_BACKSLASH
+
+
+# _LT_ENABLE_LOCK
+# ---------------
+m4_defun([_LT_ENABLE_LOCK],
+[AC_ARG_ENABLE([libtool-lock],
+  [AS_HELP_STRING([--disable-libtool-lock],
+    [avoid locking (might break parallel builds)])])
+test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+
+# Some flags need to be propagated to the compiler or linker for good
+# libtool support.
+case $host in
+ia64-*-hpux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.$ac_objext` in
+      *ELF-32*)
+	HPUX_IA64_MODE="32"
+	;;
+      *ELF-64*)
+	HPUX_IA64_MODE="64"
+	;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+*-*-irix6*)
+  # Find out which ABI we are using.
+  echo '[#]line __oline__ "configure"' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+    if test "$lt_cv_prog_gnu_ld" = yes; then
+      case `/usr/bin/file conftest.$ac_objext` in
+	*32-bit*)
+	  LD="${LD-ld} -melf32bsmip"
+	  ;;
+	*N32*)
+	  LD="${LD-ld} -melf32bmipn32"
+	  ;;
+	*64-bit*)
+	  LD="${LD-ld} -melf64bmip"
+	;;
+      esac
+    else
+      case `/usr/bin/file conftest.$ac_objext` in
+	*32-bit*)
+	  LD="${LD-ld} -32"
+	  ;;
+	*N32*)
+	  LD="${LD-ld} -n32"
+	  ;;
+	*64-bit*)
+	  LD="${LD-ld} -64"
+	  ;;
+      esac
+    fi
+  fi
+  rm -rf conftest*
+  ;;
+
+x86_64-*kfreebsd*-gnu|x86_64-*linux*|ppc*-*linux*|powerpc*-*linux*| \
+s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.o` in
+      *32-bit*)
+	case $host in
+	  x86_64-*kfreebsd*-gnu)
+	    LD="${LD-ld} -m elf_i386_fbsd"
+	    ;;
+	  x86_64-*linux*)
+	    LD="${LD-ld} -m elf_i386"
+	    ;;
+	  ppc64-*linux*|powerpc64-*linux*)
+	    LD="${LD-ld} -m elf32ppclinux"
+	    ;;
+	  s390x-*linux*)
+	    LD="${LD-ld} -m elf_s390"
+	    ;;
+	  sparc64-*linux*)
+	    LD="${LD-ld} -m elf32_sparc"
+	    ;;
+	esac
+	;;
+      *64-bit*)
+	case $host in
+	  x86_64-*kfreebsd*-gnu)
+	    LD="${LD-ld} -m elf_x86_64_fbsd"
+	    ;;
+	  x86_64-*linux*)
+	    LD="${LD-ld} -m elf_x86_64"
+	    ;;
+	  ppc*-*linux*|powerpc*-*linux*)
+	    LD="${LD-ld} -m elf64ppc"
+	    ;;
+	  s390*-*linux*|s390*-*tpf*)
+	    LD="${LD-ld} -m elf64_s390"
+	    ;;
+	  sparc*-*linux*)
+	    LD="${LD-ld} -m elf64_sparc"
+	    ;;
+	esac
+	;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+
+*-*-sco3.2v5*)
+  # On SCO OpenServer 5, we need -belf to get full-featured binaries.
+  SAVE_CFLAGS="$CFLAGS"
+  CFLAGS="$CFLAGS -belf"
+  AC_CACHE_CHECK([whether the C compiler needs -belf], lt_cv_cc_needs_belf,
+    [AC_LANG_PUSH(C)
+     AC_LINK_IFELSE([AC_LANG_PROGRAM([[]],[[]])],[lt_cv_cc_needs_belf=yes],[lt_cv_cc_needs_belf=no])
+     AC_LANG_POP])
+  if test x"$lt_cv_cc_needs_belf" != x"yes"; then
+    # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
+    CFLAGS="$SAVE_CFLAGS"
+  fi
+  ;;
+sparc*-*solaris*)
+  # Find out which ABI we are using.
+  echo 'int i;' > conftest.$ac_ext
+  if AC_TRY_EVAL(ac_compile); then
+    case `/usr/bin/file conftest.o` in
+    *64-bit*)
+      case $lt_cv_prog_gnu_ld in
+      yes*) LD="${LD-ld} -m elf64_sparc" ;;
+      *)
+	if ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then
+	  LD="${LD-ld} -64"
+	fi
+	;;
+      esac
+      ;;
+    esac
+  fi
+  rm -rf conftest*
+  ;;
+esac
+
+need_locks="$enable_libtool_lock"
+])# _LT_ENABLE_LOCK
+
+
+# _LT_CMD_OLD_ARCHIVE
+# -------------------
+m4_defun([_LT_CMD_OLD_ARCHIVE],
+[AC_CHECK_TOOL(AR, ar, false)
+test -z "$AR" && AR=ar
+test -z "$AR_FLAGS" && AR_FLAGS=cru
+_LT_DECL([], [AR], [1], [The archiver])
+_LT_DECL([], [AR_FLAGS], [1])
+
+AC_CHECK_TOOL(STRIP, strip, :)
+test -z "$STRIP" && STRIP=:
+_LT_DECL([], [STRIP], [1], [A symbol stripping program])
+
+AC_CHECK_TOOL(RANLIB, ranlib, :)
+test -z "$RANLIB" && RANLIB=:
+_LT_DECL([], [RANLIB], [1],
+    [Commands used to install an old-style archive])
+
+# Determine commands to create old-style static archives.
+old_archive_cmds='$AR $AR_FLAGS $oldlib$oldobjs'
+old_postinstall_cmds='chmod 644 $oldlib'
+old_postuninstall_cmds=
+
+if test -n "$RANLIB"; then
+  case $host_os in
+  openbsd*)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$oldlib"
+    ;;
+  *)
+    old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB \$oldlib"
+    ;;
+  esac
+  old_archive_cmds="$old_archive_cmds~\$RANLIB \$oldlib"
+fi
+_LT_DECL([], [old_postinstall_cmds], [2])
+_LT_DECL([], [old_postuninstall_cmds], [2])
+_LT_TAGDECL([], [old_archive_cmds], [2],
+    [Commands used to build an old-style archive])
+])# _LT_CMD_OLD_ARCHIVE
+
+
+# _LT_COMPILER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,
+#		[OUTPUT-FILE], [ACTION-SUCCESS], [ACTION-FAILURE])
+# ----------------------------------------------------------------
+# Check whether the given compiler option works
+AC_DEFUN([_LT_COMPILER_OPTION],
+[m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+m4_require([_LT_DECL_SED])dnl
+AC_CACHE_CHECK([$1], [$2],
+  [$2=no
+   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+   lt_compiler_flag="$3"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   # The option is referenced via a variable to avoid confusing sed.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
+   (eval "$lt_compile" 2>conftest.err)
+   ac_status=$?
+   cat conftest.err >&AS_MESSAGE_LOG_FD
+   echo "$as_me:__oline__: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
+   if (exit $ac_status) && test -s "$ac_outfile"; then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings other than the usual output.
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
+     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
+       $2=yes
+     fi
+   fi
+   $RM conftest*
+])
+
+if test x"[$]$2" = xyes; then
+    m4_if([$5], , :, [$5])
+else
+    m4_if([$6], , :, [$6])
+fi
+])# _LT_COMPILER_OPTION
+
+# Old name:
+AU_ALIAS([AC_LIBTOOL_COMPILER_OPTION], [_LT_COMPILER_OPTION])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [])
+
+
+# _LT_LINKER_OPTION(MESSAGE, VARIABLE-NAME, FLAGS,
+#                  [ACTION-SUCCESS], [ACTION-FAILURE])
+# ----------------------------------------------------
+# Check whether the given linker option works
+AC_DEFUN([_LT_LINKER_OPTION],
+[m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+m4_require([_LT_DECL_SED])dnl
+AC_CACHE_CHECK([$1], [$2],
+  [$2=no
+   save_LDFLAGS="$LDFLAGS"
+   LDFLAGS="$LDFLAGS $3"
+   echo "$lt_simple_link_test_code" > conftest.$ac_ext
+   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
+     # The linker can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     if test -s conftest.err; then
+       # Append any errors to the config.log.
+       cat conftest.err 1>&AS_MESSAGE_LOG_FD
+       $ECHO "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
+       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
+       if diff conftest.exp conftest.er2 >/dev/null; then
+         $2=yes
+       fi
+     else
+       $2=yes
+     fi
+   fi
+   $RM -r conftest*
+   LDFLAGS="$save_LDFLAGS"
+])
+
+if test x"[$]$2" = xyes; then
+    m4_if([$4], , :, [$4])
+else
+    m4_if([$5], , :, [$5])
+fi
+])# _LT_LINKER_OPTION
+
+# Old name:
+AU_ALIAS([AC_LIBTOOL_LINKER_OPTION], [_LT_LINKER_OPTION])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [])
+
+
+# LT_CMD_MAX_LEN
+#---------------
+AC_DEFUN([LT_CMD_MAX_LEN],
+[AC_REQUIRE([AC_CANONICAL_HOST])dnl
+# find the maximum length of command line arguments
+AC_MSG_CHECKING([the maximum length of command line arguments])
+AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
+  i=0
+  teststring="ABCD"
+
+  case $build_os in
+  msdosdjgpp*)
+    # On DJGPP, this test can blow up pretty badly due to problems in libc
+    # (any single argument exceeding 2000 bytes causes a buffer overrun
+    # during glob expansion).  Even if it were fixed, the result of this
+    # check would be larger than it should be.
+    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
+    ;;
+
+  gnu*)
+    # Under GNU Hurd, this test is not required because there is
+    # no limit to the length of command line arguments.
+    # Libtool will interpret -1 as no limit whatsoever
+    lt_cv_sys_max_cmd_len=-1;
+    ;;
+
+  cygwin* | mingw* | cegcc*)
+    # On Win9x/ME, this test blows up -- it succeeds, but takes
+    # about 5 minutes as the teststring grows exponentially.
+    # Worse, since 9x/ME are not pre-emptively multitasking,
+    # you end up with a "frozen" computer, even though with patience
+    # the test eventually succeeds (with a max line length of 256k).
+    # Instead, let's just punt: use the minimum linelength reported by
+    # all of the supported platforms: 8192 (on NT/2K/XP).
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  amigaos*)
+    # On AmigaOS with pdksh, this test takes hours, literally.
+    # So we just punt and use a minimum line length of 8192.
+    lt_cv_sys_max_cmd_len=8192;
+    ;;
+
+  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+    # This has been around since 386BSD, at least.  Likely further.
+    if test -x /sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
+    elif test -x /usr/sbin/sysctl; then
+      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
+    else
+      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
+    fi
+    # And add a safety zone
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    ;;
+
+  interix*)
+    # We know the value 262144 and hardcode it with a safety zone (like BSD)
+    lt_cv_sys_max_cmd_len=196608
+    ;;
+
+  osf*)
+    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
+    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
+    # nice to cause kernel panics so lets avoid the loop below.
+    # First set a reasonable default.
+    lt_cv_sys_max_cmd_len=16384
+    #
+    if test -x /sbin/sysconfig; then
+      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
+        *1*) lt_cv_sys_max_cmd_len=-1 ;;
+      esac
+    fi
+    ;;
+  sco3.2v5*)
+    lt_cv_sys_max_cmd_len=102400
+    ;;
+  sysv5* | sco5v6* | sysv4.2uw2*)
+    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
+    if test -n "$kargmax"; then
+      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[	 ]]//'`
+    else
+      lt_cv_sys_max_cmd_len=32768
+    fi
+    ;;
+  *)
+    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
+    if test -n "$lt_cv_sys_max_cmd_len"; then
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
+    else
+      # Make teststring a little bigger before we do anything with it.
+      # a 1K string should be a reasonable start.
+      for i in 1 2 3 4 5 6 7 8 ; do
+        teststring=$teststring$teststring
+      done
+      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
+      # If test is not a shell built-in, we'll probably end up computing a
+      # maximum length that is only half of the actual maximum length, but
+      # we can't tell.
+      while { test "X"`$SHELL [$]0 --fallback-echo "X$teststring$teststring" 2>/dev/null` \
+	         = "XX$teststring$teststring"; } >/dev/null 2>&1 &&
+	      test $i != 17 # 1/2 MB should be enough
+      do
+        i=`expr $i + 1`
+        teststring=$teststring$teststring
+      done
+      # Only check the string length outside the loop.
+      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
+      teststring=
+      # Add a significant safety factor because C++ compilers can tack on
+      # massive amounts of additional arguments before passing them to the
+      # linker.  It appears as though 1/2 is a usable value.
+      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
+    fi
+    ;;
+  esac
+])
+if test -n $lt_cv_sys_max_cmd_len ; then
+  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
+else
+  AC_MSG_RESULT(none)
+fi
+max_cmd_len=$lt_cv_sys_max_cmd_len
+_LT_DECL([], [max_cmd_len], [0],
+    [What is the maximum length of a command?])
+])# LT_CMD_MAX_LEN
+
+# Old name:
+AU_ALIAS([AC_LIBTOOL_SYS_MAX_CMD_LEN], [LT_CMD_MAX_LEN])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [])
+
+
+# _LT_HEADER_DLFCN
+# ----------------
+m4_defun([_LT_HEADER_DLFCN],
+[AC_CHECK_HEADERS([dlfcn.h], [], [], [AC_INCLUDES_DEFAULT])dnl
+])# _LT_HEADER_DLFCN
+
+
+# _LT_TRY_DLOPEN_SELF (ACTION-IF-TRUE, ACTION-IF-TRUE-W-USCORE,
+#                      ACTION-IF-FALSE, ACTION-IF-CROSS-COMPILING)
+# ----------------------------------------------------------------
+m4_defun([_LT_TRY_DLOPEN_SELF],
+[m4_require([_LT_HEADER_DLFCN])dnl
+if test "$cross_compiling" = yes; then :
+  [$4]
+else
+  lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
+  lt_status=$lt_dlunknown
+  cat > conftest.$ac_ext <<_LT_EOF
+[#line __oline__ "configure"
+#include "confdefs.h"
+
+#if HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+#include <stdio.h>
+
+#ifdef RTLD_GLOBAL
+#  define LT_DLGLOBAL		RTLD_GLOBAL
+#else
+#  ifdef DL_GLOBAL
+#    define LT_DLGLOBAL		DL_GLOBAL
+#  else
+#    define LT_DLGLOBAL		0
+#  endif
+#endif
+
+/* We may have to define LT_DLLAZY_OR_NOW in the command line if we
+   find out it does not work in some platform. */
+#ifndef LT_DLLAZY_OR_NOW
+#  ifdef RTLD_LAZY
+#    define LT_DLLAZY_OR_NOW		RTLD_LAZY
+#  else
+#    ifdef DL_LAZY
+#      define LT_DLLAZY_OR_NOW		DL_LAZY
+#    else
+#      ifdef RTLD_NOW
+#        define LT_DLLAZY_OR_NOW	RTLD_NOW
+#      else
+#        ifdef DL_NOW
+#          define LT_DLLAZY_OR_NOW	DL_NOW
+#        else
+#          define LT_DLLAZY_OR_NOW	0
+#        endif
+#      endif
+#    endif
+#  endif
+#endif
+
+void fnord() { int i=42;}
+int main ()
+{
+  void *self = dlopen (0, LT_DLGLOBAL|LT_DLLAZY_OR_NOW);
+  int status = $lt_dlunknown;
+
+  if (self)
+    {
+      if (dlsym (self,"fnord"))       status = $lt_dlno_uscore;
+      else if (dlsym( self,"_fnord")) status = $lt_dlneed_uscore;
+      /* dlclose (self); */
+    }
+  else
+    puts (dlerror ());
+
+  return status;
+}]
+_LT_EOF
+  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext} 2>/dev/null; then
+    (./conftest; exit; ) >&AS_MESSAGE_LOG_FD 2>/dev/null
+    lt_status=$?
+    case x$lt_status in
+      x$lt_dlno_uscore) $1 ;;
+      x$lt_dlneed_uscore) $2 ;;
+      x$lt_dlunknown|x*) $3 ;;
+    esac
+  else :
+    # compilation failed
+    $3
+  fi
+fi
+rm -fr conftest*
+])# _LT_TRY_DLOPEN_SELF
+
+
+# LT_SYS_DLOPEN_SELF
+# ------------------
+AC_DEFUN([LT_SYS_DLOPEN_SELF],
+[m4_require([_LT_HEADER_DLFCN])dnl
+if test "x$enable_dlopen" != xyes; then
+  enable_dlopen=unknown
+  enable_dlopen_self=unknown
+  enable_dlopen_self_static=unknown
+else
+  lt_cv_dlopen=no
+  lt_cv_dlopen_libs=
+
+  case $host_os in
+  beos*)
+    lt_cv_dlopen="load_add_on"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    ;;
+
+  mingw* | pw32* | cegcc*)
+    lt_cv_dlopen="LoadLibrary"
+    lt_cv_dlopen_libs=
+    ;;
+
+  cygwin*)
+    lt_cv_dlopen="dlopen"
+    lt_cv_dlopen_libs=
+    ;;
+
+  darwin*)
+  # if libdl is installed we need to link against it
+    AC_CHECK_LIB([dl], [dlopen],
+		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],[
+    lt_cv_dlopen="dyld"
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=yes
+    ])
+    ;;
+
+  *)
+    AC_CHECK_FUNC([shl_load],
+	  [lt_cv_dlopen="shl_load"],
+      [AC_CHECK_LIB([dld], [shl_load],
+	    [lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"],
+	[AC_CHECK_FUNC([dlopen],
+	      [lt_cv_dlopen="dlopen"],
+	  [AC_CHECK_LIB([dl], [dlopen],
+		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],
+	    [AC_CHECK_LIB([svld], [dlopen],
+		  [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"],
+	      [AC_CHECK_LIB([dld], [dld_link],
+		    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"])
+	      ])
+	    ])
+	  ])
+	])
+      ])
+    ;;
+  esac
+
+  if test "x$lt_cv_dlopen" != xno; then
+    enable_dlopen=yes
+  else
+    enable_dlopen=no
+  fi
+
+  case $lt_cv_dlopen in
+  dlopen)
+    save_CPPFLAGS="$CPPFLAGS"
+    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
+
+    save_LDFLAGS="$LDFLAGS"
+    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
+
+    save_LIBS="$LIBS"
+    LIBS="$lt_cv_dlopen_libs $LIBS"
+
+    AC_CACHE_CHECK([whether a program can dlopen itself],
+	  lt_cv_dlopen_self, [dnl
+	  _LT_TRY_DLOPEN_SELF(
+	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
+	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
+    ])
+
+    if test "x$lt_cv_dlopen_self" = xyes; then
+      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
+      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
+	  lt_cv_dlopen_self_static, [dnl
+	  _LT_TRY_DLOPEN_SELF(
+	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
+	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
+      ])
+    fi
+
+    CPPFLAGS="$save_CPPFLAGS"
+    LDFLAGS="$save_LDFLAGS"
+    LIBS="$save_LIBS"
+    ;;
+  esac
+
+  case $lt_cv_dlopen_self in
+  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
+  *) enable_dlopen_self=unknown ;;
+  esac
+
+  case $lt_cv_dlopen_self_static in
+  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
+  *) enable_dlopen_self_static=unknown ;;
+  esac
+fi
+_LT_DECL([dlopen_support], [enable_dlopen], [0],
+	 [Whether dlopen is supported])
+_LT_DECL([dlopen_self], [enable_dlopen_self], [0],
+	 [Whether dlopen of programs is supported])
+_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],
+	 [Whether dlopen of statically linked programs is supported])
+])# LT_SYS_DLOPEN_SELF
+
+# Old name:
+AU_ALIAS([AC_LIBTOOL_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [])
+
+
+# _LT_COMPILER_C_O([TAGNAME])
+# ---------------------------
+# Check to see if options -c and -o are simultaneously supported by compiler.
+# This macro does not hard code the compiler like AC_PROG_CC_C_O.
+m4_defun([_LT_COMPILER_C_O],
+[m4_require([_LT_DECL_SED])dnl
+m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+m4_require([_LT_TAG_COMPILER])dnl
+AC_CACHE_CHECK([if $compiler supports -c -o file.$ac_objext],
+  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)],
+  [_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=no
+   $RM -r conftest 2>/dev/null
+   mkdir conftest
+   cd conftest
+   mkdir out
+   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+   lt_compiler_flag="-o out/conftest2.$ac_objext"
+   # Insert the option either (1) after the last *FLAGS variable, or
+   # (2) before a word containing "conftest.", or (3) at the end.
+   # Note that $ac_compile itself does not contain backslashes and begins
+   # with a dollar sign (not a hyphen), so the echo should work correctly.
+   lt_compile=`echo "$ac_compile" | $SED \
+   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
+   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
+   -e 's:$: $lt_compiler_flag:'`
+   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
+   (eval "$lt_compile" 2>out/conftest.err)
+   ac_status=$?
+   cat out/conftest.err >&AS_MESSAGE_LOG_FD
+   echo "$as_me:__oline__: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
+   if (exit $ac_status) && test -s out/conftest2.$ac_objext
+   then
+     # The compiler can only warn and ignore the option if not recognized
+     # So say no if there are warnings
+     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' > out/conftest.exp
+     $SED '/^$/d; /^ *+/d' out/conftest.err >out/conftest.er2
+     if test ! -s out/conftest.er2 || diff out/conftest.exp out/conftest.er2 >/dev/null; then
+       _LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes
+     fi
+   fi
+   chmod u+w . 2>&AS_MESSAGE_LOG_FD
+   $RM conftest*
+   # SGI C++ compiler will create directory out/ii_files/ for
+   # template instantiation
+   test -d out/ii_files && $RM out/ii_files/* && rmdir out/ii_files
+   $RM out/* && rmdir out
+   cd ..
+   $RM -r conftest
+   $RM conftest*
+])
+_LT_TAGDECL([compiler_c_o], [lt_cv_prog_compiler_c_o], [1],
+	[Does compiler simultaneously support -c and -o options?])
+])# _LT_COMPILER_C_O
+
+
+# _LT_COMPILER_FILE_LOCKS([TAGNAME])
+# ----------------------------------
+# Check to see if we can do hard links to lock some files if needed
+m4_defun([_LT_COMPILER_FILE_LOCKS],
+[m4_require([_LT_ENABLE_LOCK])dnl
+m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+_LT_COMPILER_C_O([$1])
+
+hard_links="nottested"
+if test "$_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)" = no && test "$need_locks" != no; then
+  # do not overwrite the value of need_locks provided by the user
+  AC_MSG_CHECKING([if we can lock with hard links])
+  hard_links=yes
+  $RM conftest*
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  touch conftest.a
+  ln conftest.a conftest.b 2>&5 || hard_links=no
+  ln conftest.a conftest.b 2>/dev/null && hard_links=no
+  AC_MSG_RESULT([$hard_links])
+  if test "$hard_links" = no; then
+    AC_MSG_WARN([`$CC' does not support `-c -o', so `make -j' may be unsafe])
+    need_locks=warn
+  fi
+else
+  need_locks=no
+fi
+_LT_DECL([], [need_locks], [1], [Must we lock files when doing compilation?])
+])# _LT_COMPILER_FILE_LOCKS
+
+
+# _LT_CHECK_OBJDIR
+# ----------------
+m4_defun([_LT_CHECK_OBJDIR],
+[AC_CACHE_CHECK([for objdir], [lt_cv_objdir],
+[rm -f .libs 2>/dev/null
+mkdir .libs 2>/dev/null
+if test -d .libs; then
+  lt_cv_objdir=.libs
+else
+  # MS-DOS does not allow filenames that begin with a dot.
+  lt_cv_objdir=_libs
+fi
+rmdir .libs 2>/dev/null])
+objdir=$lt_cv_objdir
+_LT_DECL([], [objdir], [0],
+         [The name of the directory that contains temporary libtool files])dnl
+m4_pattern_allow([LT_OBJDIR])dnl
+AC_DEFINE_UNQUOTED(LT_OBJDIR, "$lt_cv_objdir/",
+  [Define to the sub-directory in which libtool stores uninstalled libraries.])
+])# _LT_CHECK_OBJDIR
+
+
+# _LT_LINKER_HARDCODE_LIBPATH([TAGNAME])
+# --------------------------------------
+# Check hardcoding attributes.
+m4_defun([_LT_LINKER_HARDCODE_LIBPATH],
+[AC_MSG_CHECKING([how to hardcode library paths into programs])
+_LT_TAGVAR(hardcode_action, $1)=
+if test -n "$_LT_TAGVAR(hardcode_libdir_flag_spec, $1)" ||
+   test -n "$_LT_TAGVAR(runpath_var, $1)" ||
+   test "X$_LT_TAGVAR(hardcode_automatic, $1)" = "Xyes" ; then
+
+  # We can hardcode non-existent directories.
+  if test "$_LT_TAGVAR(hardcode_direct, $1)" != no &&
+     # If the only mechanism to avoid hardcoding is shlibpath_var, we
+     # have to relink, otherwise we might link with an installed library
+     # when we should be linking with a yet-to-be-installed one
+     ## test "$_LT_TAGVAR(hardcode_shlibpath_var, $1)" != no &&
+     test "$_LT_TAGVAR(hardcode_minus_L, $1)" != no; then
+    # Linking always hardcodes the temporary library directory.
+    _LT_TAGVAR(hardcode_action, $1)=relink
+  else
+    # We can link without hardcoding, and we can hardcode nonexisting dirs.
+    _LT_TAGVAR(hardcode_action, $1)=immediate
+  fi
+else
+  # We cannot hardcode anything, or else we can only hardcode existing
+  # directories.
+  _LT_TAGVAR(hardcode_action, $1)=unsupported
+fi
+AC_MSG_RESULT([$_LT_TAGVAR(hardcode_action, $1)])
+
+if test "$_LT_TAGVAR(hardcode_action, $1)" = relink ||
+   test "$_LT_TAGVAR(inherit_rpath, $1)" = yes; then
+  # Fast installation is not supported
+  enable_fast_install=no
+elif test "$shlibpath_overrides_runpath" = yes ||
+     test "$enable_shared" = no; then
+  # Fast installation is not necessary
+  enable_fast_install=needless
+fi
+_LT_TAGDECL([], [hardcode_action], [0],
+    [How to hardcode a shared library path into an executable])
+])# _LT_LINKER_HARDCODE_LIBPATH
+
+
+# _LT_CMD_STRIPLIB
+# ----------------
+m4_defun([_LT_CMD_STRIPLIB],
+[m4_require([_LT_DECL_EGREP])
+striplib=
+old_striplib=
+AC_MSG_CHECKING([whether stripping libraries is possible])
+if test -n "$STRIP" && $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
+  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
+  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+  AC_MSG_RESULT([yes])
+else
+# FIXME - insert some real tests, host_os isn't really good enough
+  case $host_os in
+  darwin*)
+    if test -n "$STRIP" ; then
+      striplib="$STRIP -x"
+      old_striplib="$STRIP -S"
+      AC_MSG_RESULT([yes])
+    else
+      AC_MSG_RESULT([no])
+    fi
+    ;;
+  *)
+    AC_MSG_RESULT([no])
+    ;;
+  esac
+fi
+_LT_DECL([], [old_striplib], [1], [Commands to strip libraries])
+_LT_DECL([], [striplib], [1])
+])# _LT_CMD_STRIPLIB
+
+
+# _LT_SYS_DYNAMIC_LINKER([TAG])
+# -----------------------------
+# PORTME Fill in your ld.so characteristics
+m4_defun([_LT_SYS_DYNAMIC_LINKER],
+[AC_REQUIRE([AC_CANONICAL_HOST])dnl
+m4_require([_LT_DECL_EGREP])dnl
+m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+m4_require([_LT_DECL_OBJDUMP])dnl
+m4_require([_LT_DECL_SED])dnl
+AC_MSG_CHECKING([dynamic linker characteristics])
+m4_if([$1],
+	[], [
+if test "$GCC" = yes; then
+  case $host_os in
+    darwin*) lt_awk_arg="/^libraries:/,/LR/" ;;
+    *) lt_awk_arg="/^libraries:/" ;;
+  esac
+  lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+  if $ECHO "$lt_search_path_spec" | $GREP ';' >/dev/null ; then
+    # if the path contains ";" then we assume it to be the separator
+    # otherwise default to the standard path separator (i.e. ":") - it is
+    # assumed that no part of a normal pathname contains ";" but that should
+    # okay in the real world where ";" in dirpaths is itself problematic.
+    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED -e 's/;/ /g'`
+  else
+    lt_search_path_spec=`$ECHO "$lt_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+  fi
+  # Ok, now we have the path, separated by spaces, we can step through it
+  # and add multilib dir if necessary.
+  lt_tmp_lt_search_path_spec=
+  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
+  for lt_sys_path in $lt_search_path_spec; do
+    if test -d "$lt_sys_path/$lt_multi_os_dir"; then
+      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir"
+    else
+      test -d "$lt_sys_path" && \
+	lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path"
+    fi
+  done
+  lt_search_path_spec=`$ECHO $lt_tmp_lt_search_path_spec | awk '
+BEGIN {RS=" "; FS="/|\n";} {
+  lt_foo="";
+  lt_count=0;
+  for (lt_i = NF; lt_i > 0; lt_i--) {
+    if ($lt_i != "" && $lt_i != ".") {
+      if ($lt_i == "..") {
+        lt_count++;
+      } else {
+        if (lt_count == 0) {
+          lt_foo="/" $lt_i lt_foo;
+        } else {
+          lt_count--;
+        }
+      }
+    }
+  }
+  if (lt_foo != "") { lt_freq[[lt_foo]]++; }
+  if (lt_freq[[lt_foo]] == 1) { print lt_foo; }
+}'`
+  sys_lib_search_path_spec=`$ECHO $lt_search_path_spec`
+else
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+fi])
+library_names_spec=
+libname_spec='lib$name'
+soname_spec=
+shrext_cmds=".so"
+postinstall_cmds=
+postuninstall_cmds=
+finish_cmds=
+finish_eval=
+shlibpath_var=
+shlibpath_overrides_runpath=unknown
+version_type=none
+dynamic_linker="$host_os ld.so"
+sys_lib_dlsearch_path_spec="/lib /usr/lib"
+need_lib_prefix=unknown
+hardcode_into_libs=no
+
+# when you set need_version to no, make sure it does not cause -set_version
+# flags to be left without arguments
+need_version=unknown
+
+case $host_os in
+aix3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  shlibpath_var=LIBPATH
+
+  # AIX 3 has no versioning support, so we append a major version to the name.
+  soname_spec='${libname}${release}${shared_ext}$major'
+  ;;
+
+aix[[4-9]]*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  hardcode_into_libs=yes
+  if test "$host_cpu" = ia64; then
+    # AIX 5 supports IA64
+    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    shlibpath_var=LD_LIBRARY_PATH
+  else
+    # With GCC up to 2.95.x, collect2 would create an import file
+    # for dependence libraries.  The import file would start with
+    # the line `#! .'.  This would cause the generated library to
+    # depend on `.', always an invalid library.  This was fixed in
+    # development snapshots of GCC prior to 3.0.
+    case $host_os in
+      aix4 | aix4.[[01]] | aix4.[[01]].*)
+      if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
+	   echo ' yes '
+	   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then
+	:
+      else
+	can_build_shared=no
+      fi
+      ;;
+    esac
+    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # soname into executable. Probably we can add versioning support to
+    # collect2, so additional links can be useful in future.
+    if test "$aix_use_runtimelinking" = yes; then
+      # If using run time linking (on AIX 4.2 or later) use lib<name>.so
+      # instead of lib<name>.a to let people know that these are not
+      # typical AIX shared libraries.
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    else
+      # We preserve .a as extension for shared libraries through AIX4.2
+      # and later when we are not doing run time linking.
+      library_names_spec='${libname}${release}.a $libname.a'
+      soname_spec='${libname}${release}${shared_ext}$major'
+    fi
+    shlibpath_var=LIBPATH
+  fi
+  ;;
+
+amigaos*)
+  case $host_cpu in
+  powerpc)
+    # Since July 2007 AmigaOS4 officially supports .so libraries.
+    # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    ;;
+  m68k)
+    library_names_spec='$libname.ixlibrary $libname.a'
+    # Create ${libname}_ixlibrary.a entries in /sys/libs.
+    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`$ECHO "X$lib" | $Xsed -e '\''s%^.*/\([[^/]]*\)\.ixlibrary$%\1%'\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+    ;;
+  esac
+  ;;
+
+beos*)
+  library_names_spec='${libname}${shared_ext}'
+  dynamic_linker="$host_os ld.so"
+  shlibpath_var=LIBRARY_PATH
+  ;;
+
+bsdi[[45]]*)
+  version_type=linux
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec="/shlib /usr/lib /usr/local/lib"
+  # the default ld.so.conf also contains /usr/contrib/lib and
+  # /usr/X11R6/lib (/usr/X11 is a link to /usr/X11R6), but let us allow
+  # libtool to hard-code these into programs
+  ;;
+
+cygwin* | mingw* | pw32* | cegcc*)
+  version_type=windows
+  shrext_cmds=".dll"
+  need_version=no
+  need_lib_prefix=no
+
+  case $GCC,$host_os in
+  yes,cygwin* | yes,mingw* | yes,pw32* | yes,cegcc*)
+    library_names_spec='$libname.dll.a'
+    # DLL is installed to $(libdir)/../bin by postinstall_cmds
+    postinstall_cmds='base_file=`basename \${file}`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i; echo \$dlname'\''`~
+      dldir=$destdir/`dirname \$dlpath`~
+      test -d \$dldir || mkdir -p \$dldir~
+      $install_prog $dir/$dlname \$dldir/$dlname~
+      chmod a+x \$dldir/$dlname~
+      if test -n '\''$stripme'\'' && test -n '\''$striplib'\''; then
+        eval '\''$striplib \$dldir/$dlname'\'' || exit \$?;
+      fi'
+    postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; echo \$dlname'\''`~
+      dlpath=$dir/\$dldll~
+       $RM \$dlpath'
+    shlibpath_overrides_runpath=yes
+
+    case $host_os in
+    cygwin*)
+      # Cygwin DLLs use 'cyg' prefix rather than 'lib'
+      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec="/usr/lib /lib/w32api /lib /usr/local/lib"
+      ;;
+    mingw* | cegcc*)
+      # MinGW DLLs use traditional 'lib' prefix
+      soname_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      sys_lib_search_path_spec=`$CC -print-search-dirs | $GREP "^libraries:" | $SED -e "s/^libraries://" -e "s,=/,/,g"`
+      if $ECHO "$sys_lib_search_path_spec" | [$GREP ';[c-zC-Z]:/' >/dev/null]; then
+        # It is most probably a Windows format PATH printed by
+        # mingw gcc, but we are running on Cygwin. Gcc prints its search
+        # path with ; separators, and with drive letters. We can handle the
+        # drive letters (cygwin fileutils understands them), so leave them,
+        # especially as we might pass files found there to a mingw objdump,
+        # which wouldn't understand a cygwinified path. Ahh.
+        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
+      else
+        sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED  -e "s/$PATH_SEPARATOR/ /g"`
+      fi
+      ;;
+    pw32*)
+      # pw32 DLLs use 'pw' prefix rather than 'lib'
+      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext}'
+      ;;
+    esac
+    ;;
+
+  *)
+    library_names_spec='${libname}`echo ${release} | $SED -e 's/[[.]]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    ;;
+  esac
+  dynamic_linker='Win32 ld.exe'
+  # FIXME: first we should search . and the directory the executable is in
+  shlibpath_var=PATH
+  ;;
+
+darwin* | rhapsody*)
+  dynamic_linker="$host_os dyld"
+  version_type=darwin
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'
+  soname_spec='${libname}${release}${major}$shared_ext'
+  shlibpath_overrides_runpath=yes
+  shlibpath_var=DYLD_LIBRARY_PATH
+  shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
+m4_if([$1], [],[
+  sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/local/lib"])
+  sys_lib_dlsearch_path_spec='/usr/local/lib /lib /usr/lib'
+  ;;
+
+dgux*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+freebsd1*)
+  dynamic_linker=no
+  ;;
+
+freebsd* | dragonfly*)
+  # DragonFly does not have aout.  When/if they implement a new
+  # versioning mechanism, adjust this.
+  if test -x /usr/bin/objformat; then
+    objformat=`/usr/bin/objformat`
+  else
+    case $host_os in
+    freebsd[[123]]*) objformat=aout ;;
+    *) objformat=elf ;;
+    esac
+  fi
+  version_type=freebsd-$objformat
+  case $version_type in
+    freebsd-elf*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      need_version=no
+      need_lib_prefix=no
+      ;;
+    freebsd-*)
+      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      need_version=yes
+      ;;
+  esac
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_os in
+  freebsd2*)
+    shlibpath_overrides_runpath=yes
+    ;;
+  freebsd3.[[01]]* | freebsdelf3.[[01]]*)
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  freebsd3.[[2-9]]* | freebsdelf3.[[2-9]]* | \
+  freebsd4.[[0-5]] | freebsdelf4.[[0-5]] | freebsd4.1.1 | freebsdelf4.1.1)
+    shlibpath_overrides_runpath=no
+    hardcode_into_libs=yes
+    ;;
+  *) # from 4.6 on, and DragonFly
+    shlibpath_overrides_runpath=yes
+    hardcode_into_libs=yes
+    ;;
+  esac
+  ;;
+
+gnu*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
+hpux9* | hpux10* | hpux11*)
+  # Give a soname corresponding to the major version so that dld.sl refuses to
+  # link against other versions.
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  case $host_cpu in
+  ia64*)
+    shrext_cmds='.so'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.so"
+    shlibpath_var=LD_LIBRARY_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    if test "X$HPUX_IA64_MODE" = X32; then
+      sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+    else
+      sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+    fi
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+  hppa*64*)
+    shrext_cmds='.sl'
+    hardcode_into_libs=yes
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
+    shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
+    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+    ;;
+  *)
+    shrext_cmds='.sl'
+    dynamic_linker="$host_os dld.sl"
+    shlibpath_var=SHLIB_PATH
+    shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    ;;
+  esac
+  # HP-UX runs *really* slowly unless shared libraries are mode 555.
+  postinstall_cmds='chmod 555 $lib'
+  ;;
+
+interix[[3-9]]*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $host_os in
+    nonstopux*) version_type=nonstopux ;;
+    *)
+	if test "$lt_cv_prog_gnu_ld" = yes; then
+		version_type=linux
+	else
+		version_type=irix
+	fi ;;
+  esac
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  case $host_os in
+  irix5* | nonstopux*)
+    libsuff= shlibsuff=
+    ;;
+  *)
+    case $LD in # libtool.m4 will add one of these switches to LD
+    *-32|*"-32 "|*-melf32bsmip|*"-melf32bsmip ")
+      libsuff= shlibsuff= libmagic=32-bit;;
+    *-n32|*"-n32 "|*-melf32bmipn32|*"-melf32bmipn32 ")
+      libsuff=32 shlibsuff=N32 libmagic=N32;;
+    *-64|*"-64 "|*-melf64bmip|*"-melf64bmip ")
+      libsuff=64 shlibsuff=64 libmagic=64-bit;;
+    *) libsuff= shlibsuff= libmagic=never-match;;
+    esac
+    ;;
+  esac
+  shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
+  shlibpath_overrides_runpath=no
+  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
+  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  hardcode_into_libs=yes
+  ;;
+
+# No shared lib support for Linux oldld, aout, or coff.
+linux*oldld* | linux*aout* | linux*coff*)
+  dynamic_linker=no
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  # Some binutils ld are patched to set DT_RUNPATH
+  save_LDFLAGS=$LDFLAGS
+  save_libdir=$libdir
+  eval "libdir=/foo; wl=\"$_LT_TAGVAR(lt_prog_compiler_wl, $1)\"; \
+       LDFLAGS=\"\$LDFLAGS $_LT_TAGVAR(hardcode_libdir_flag_spec, $1)\""
+  AC_LINK_IFELSE([AC_LANG_PROGRAM([],[])],
+    [AS_IF([ ($OBJDUMP -p conftest$ac_exeext) 2>/dev/null | grep "RUNPATH.*$libdir" >/dev/null],
+       [shlibpath_overrides_runpath=yes])])
+  LDFLAGS=$save_LDFLAGS
+  libdir=$save_libdir
+
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  # Append ld.so.conf contents to the search path
+  if test -f /etc/ld.so.conf; then
+    lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s 2>/dev/null", \[$]2)); skip = 1; } { if (!skip) print \[$]0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[	 ]*hwcap[	 ]/d;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;/^$/d' | tr '\n' ' '`
+    sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
+  fi
+
+  # We used to test for /lib/ld.so.1 and disable shared libraries on
+  # powerpc, because MkLinux only supported shared libraries with the
+  # GNU dynamic linker.  Since this was broken with cross compilers,
+  # most powerpc-linux boxes support dynamic linking these days and
+  # people can always --disable-shared, the test was removed, and we
+  # assume the GNU/Linux dynamic linker is in use.
+  dynamic_linker='GNU/Linux ld.so'
+  ;;
+
+netbsdelf*-gnu)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='NetBSD ld.elf_so'
+  ;;
+
+netbsd*)
+  version_type=sunos
+  need_lib_prefix=no
+  need_version=no
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+    dynamic_linker='NetBSD (a.out) ld.so'
+  else
+    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
+    soname_spec='${libname}${release}${shared_ext}$major'
+    dynamic_linker='NetBSD ld.elf_so'
+  fi
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  ;;
+
+newsos6)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  ;;
+
+*nto* | *qnx*)
+  version_type=qnx
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  dynamic_linker='ldqnx.so'
+  ;;
+
+openbsd*)
+  version_type=sunos
+  sys_lib_dlsearch_path_spec="/usr/lib"
+  need_lib_prefix=no
+  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
+  case $host_os in
+    openbsd3.3 | openbsd3.3.*)	need_version=yes ;;
+    *)				need_version=no  ;;
+  esac
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    case $host_os in
+      openbsd2.[[89]] | openbsd2.[[89]].*)
+	shlibpath_overrides_runpath=no
+	;;
+      *)
+	shlibpath_overrides_runpath=yes
+	;;
+      esac
+  else
+    shlibpath_overrides_runpath=yes
+  fi
+  ;;
+
+os2*)
+  libname_spec='$name'
+  shrext_cmds=".dll"
+  need_lib_prefix=no
+  library_names_spec='$libname${shared_ext} $libname.a'
+  dynamic_linker='OS/2 ld.exe'
+  shlibpath_var=LIBPATH
+  ;;
+
+osf3* | osf4* | osf5*)
+  version_type=osf
+  need_lib_prefix=no
+  need_version=no
+  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
+  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  ;;
+
+rdos*)
+  dynamic_linker=no
+  ;;
+
+solaris*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  # ldd complains unless libraries are executable
+  postinstall_cmds='chmod +x $lib'
+  ;;
+
+sunos4*)
+  version_type=sunos
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  if test "$with_gnu_ld" = yes; then
+    need_lib_prefix=no
+  fi
+  need_version=yes
+  ;;
+
+sysv4 | sysv4.3*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  case $host_vendor in
+    sni)
+      shlibpath_overrides_runpath=no
+      need_lib_prefix=no
+      runpath_var=LD_RUN_PATH
+      ;;
+    siemens)
+      need_lib_prefix=no
+      ;;
+    motorola)
+      need_lib_prefix=no
+      need_version=no
+      shlibpath_overrides_runpath=no
+      sys_lib_search_path_spec='/lib /usr/lib /usr/ccs/lib'
+      ;;
+  esac
+  ;;
+
+sysv4*MP*)
+  if test -d /usr/nec ;then
+    version_type=linux
+    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
+    soname_spec='$libname${shared_ext}.$major'
+    shlibpath_var=LD_LIBRARY_PATH
+  fi
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  version_type=freebsd-elf
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+  hardcode_into_libs=yes
+  if test "$with_gnu_ld" = yes; then
+    sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
+  else
+    sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
+    case $host_os in
+      sco3.2v5*)
+        sys_lib_search_path_spec="$sys_lib_search_path_spec /lib"
+	;;
+    esac
+  fi
+  sys_lib_dlsearch_path_spec='/usr/lib'
+  ;;
+
+tpf*)
+  # TPF is a cross-target only.  Preferred cross-host = GNU/Linux.
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=no
+  hardcode_into_libs=yes
+  ;;
+
+uts4*)
+  version_type=linux
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  ;;
+
+*)
+  dynamic_linker=no
+  ;;
+esac
+AC_MSG_RESULT([$dynamic_linker])
+test "$dynamic_linker" = no && can_build_shared=no
+
+variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
+if test "$GCC" = yes; then
+  variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
+fi
+
+if test "${lt_cv_sys_lib_search_path_spec+set}" = set; then
+  sys_lib_search_path_spec="$lt_cv_sys_lib_search_path_spec"
+fi
+if test "${lt_cv_sys_lib_dlsearch_path_spec+set}" = set; then
+  sys_lib_dlsearch_path_spec="$lt_cv_sys_lib_dlsearch_path_spec"
+fi
+
+_LT_DECL([], [variables_saved_for_relink], [1],
+    [Variables whose values should be saved in libtool wrapper scripts and
+    restored at link time])
+_LT_DECL([], [need_lib_prefix], [0],
+    [Do we need the "lib" prefix for modules?])
+_LT_DECL([], [need_version], [0], [Do we need a version for libraries?])
+_LT_DECL([], [version_type], [0], [Library versioning type])
+_LT_DECL([], [runpath_var], [0],  [Shared library runtime path variable])
+_LT_DECL([], [shlibpath_var], [0],[Shared library path variable])
+_LT_DECL([], [shlibpath_overrides_runpath], [0],
+    [Is shlibpath searched before the hard-coded library search path?])
+_LT_DECL([], [libname_spec], [1], [Format of library name prefix])
+_LT_DECL([], [library_names_spec], [1],
+    [[List of archive names.  First name is the real one, the rest are links.
+    The last name is the one that the linker finds with -lNAME]])
+_LT_DECL([], [soname_spec], [1],
+    [[The coded name of the library, if different from the real name]])
+_LT_DECL([], [postinstall_cmds], [2],
+    [Command to use after installation of a shared archive])
+_LT_DECL([], [postuninstall_cmds], [2],
+    [Command to use after uninstallation of a shared archive])
+_LT_DECL([], [finish_cmds], [2],
+    [Commands used to finish a libtool library installation in a directory])
+_LT_DECL([], [finish_eval], [1],
+    [[As "finish_cmds", except a single script fragment to be evaled but
+    not shown]])
+_LT_DECL([], [hardcode_into_libs], [0],
+    [Whether we should hardcode library paths into libraries])
+_LT_DECL([], [sys_lib_search_path_spec], [2],
+    [Compile-time system search path for libraries])
+_LT_DECL([], [sys_lib_dlsearch_path_spec], [2],
+    [Run-time system search path for libraries])
+])# _LT_SYS_DYNAMIC_LINKER
+
+
+# _LT_PATH_TOOL_PREFIX(TOOL)
+# --------------------------
+# find a file program which can recognize shared library
+AC_DEFUN([_LT_PATH_TOOL_PREFIX],
+[m4_require([_LT_DECL_EGREP])dnl
+AC_MSG_CHECKING([for $1])
+AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
+[case $MAGIC_CMD in
+[[\\/*] |  ?:[\\/]*])
+  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  ;;
+*)
+  lt_save_MAGIC_CMD="$MAGIC_CMD"
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+dnl $ac_dummy forces splitting on constant user-supplied paths.
+dnl POSIX.2 word splitting is done only on the output of word expansions,
+dnl not every word.  This closes a longstanding sh security hole.
+  ac_dummy="m4_if([$2], , $PATH, [$2])"
+  for ac_dir in $ac_dummy; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f $ac_dir/$1; then
+      lt_cv_path_MAGIC_CMD="$ac_dir/$1"
+      if test -n "$file_magic_test_file"; then
+	case $deplibs_check_method in
+	"file_magic "*)
+	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
+	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
+	    $EGREP "$file_magic_regex" > /dev/null; then
+	    :
+	  else
+	    cat <<_LT_EOF 1>&2
+
+*** Warning: the command libtool uses to detect shared libraries,
+*** $file_magic_cmd, produces output that libtool cannot recognize.
+*** The result is that libtool may fail to recognize shared libraries
+*** as such.  This will affect the creation of libtool libraries that
+*** depend on shared libraries, but programs linked with such libtool
+*** libraries will work regardless of this problem.  Nevertheless, you
+*** may want to report the problem to your system manager and/or to
+*** bug-libtool@gnu.org
+
+_LT_EOF
+	  fi ;;
+	esac
+      fi
+      break
+    fi
+  done
+  IFS="$lt_save_ifs"
+  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  ;;
+esac])
+MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+if test -n "$MAGIC_CMD"; then
+  AC_MSG_RESULT($MAGIC_CMD)
+else
+  AC_MSG_RESULT(no)
+fi
+_LT_DECL([], [MAGIC_CMD], [0],
+	 [Used to examine libraries when file_magic_cmd begins with "file"])dnl
+])# _LT_PATH_TOOL_PREFIX
+
+# Old name:
+AU_ALIAS([AC_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_PATH_TOOL_PREFIX], [])
+
+
+# _LT_PATH_MAGIC
+# --------------
+# find a file program which can recognize a shared library
+m4_defun([_LT_PATH_MAGIC],
+[_LT_PATH_TOOL_PREFIX(${ac_tool_prefix}file, /usr/bin$PATH_SEPARATOR$PATH)
+if test -z "$lt_cv_path_MAGIC_CMD"; then
+  if test -n "$ac_tool_prefix"; then
+    _LT_PATH_TOOL_PREFIX(file, /usr/bin$PATH_SEPARATOR$PATH)
+  else
+    MAGIC_CMD=:
+  fi
+fi
+])# _LT_PATH_MAGIC
+
+
+# LT_PATH_LD
+# ----------
+# find the pathname to the GNU or non-GNU linker
+AC_DEFUN([LT_PATH_LD],
+[AC_REQUIRE([AC_PROG_CC])dnl
+AC_REQUIRE([AC_CANONICAL_HOST])dnl
+AC_REQUIRE([AC_CANONICAL_BUILD])dnl
+m4_require([_LT_DECL_SED])dnl
+m4_require([_LT_DECL_EGREP])dnl
+
+AC_ARG_WITH([gnu-ld],
+    [AS_HELP_STRING([--with-gnu-ld],
+	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
+    [test "$withval" = no || with_gnu_ld=yes],
+    [with_gnu_ld=no])dnl
+
+ac_prog=ld
+if test "$GCC" = yes; then
+  # Check if gcc -print-prog-name=ld gives a path.
+  AC_MSG_CHECKING([for ld used by $CC])
+  case $host in
+  *-*-mingw*)
+    # gcc leaves a trailing carriage return which upsets mingw
+    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
+  *)
+    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
+  esac
+  case $ac_prog in
+    # Accept absolute paths.
+    [[\\/]]* | ?:[[\\/]]*)
+      re_direlt='/[[^/]][[^/]]*/\.\./'
+      # Canonicalize the pathname of ld
+      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
+      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
+	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
+      done
+      test -z "$LD" && LD="$ac_prog"
+      ;;
+  "")
+    # If it fails, then pretend we aren't using GCC.
+    ac_prog=ld
+    ;;
+  *)
+    # If it is relative, then search for the first ld in PATH.
+    with_gnu_ld=unknown
+    ;;
+  esac
+elif test "$with_gnu_ld" = yes; then
+  AC_MSG_CHECKING([for GNU ld])
+else
+  AC_MSG_CHECKING([for non-GNU ld])
+fi
+AC_CACHE_VAL(lt_cv_path_LD,
+[if test -z "$LD"; then
+  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  for ac_dir in $PATH; do
+    IFS="$lt_save_ifs"
+    test -z "$ac_dir" && ac_dir=.
+    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
+      lt_cv_path_LD="$ac_dir/$ac_prog"
+      # Check to see if the program is GNU ld.  I'd rather use --version,
+      # but apparently some variants of GNU ld only accept -v.
+      # Break only if it was the GNU/non-GNU ld that we prefer.
+      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
+      *GNU* | *'with BFD'*)
+	test "$with_gnu_ld" != no && break
+	;;
+      *)
+	test "$with_gnu_ld" != yes && break
+	;;
+      esac
+    fi
+  done
+  IFS="$lt_save_ifs"
+else
+  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+fi])
+LD="$lt_cv_path_LD"
+if test -n "$LD"; then
+  AC_MSG_RESULT($LD)
+else
+  AC_MSG_RESULT(no)
+fi
+test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
+_LT_PATH_LD_GNU
+AC_SUBST([LD])
+
+_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
+])# LT_PATH_LD
+
+# Old names:
+AU_ALIAS([AM_PROG_LD], [LT_PATH_LD])
+AU_ALIAS([AC_PROG_LD], [LT_PATH_LD])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AM_PROG_LD], [])
+dnl AC_DEFUN([AC_PROG_LD], [])
+
+
+# _LT_PATH_LD_GNU
+#- --------------
+m4_defun([_LT_PATH_LD_GNU],
+[AC_CACHE_CHECK([if the linker ($LD) is GNU ld], lt_cv_prog_gnu_ld,
+[# I'd rather use --version here, but apparently some GNU lds only accept -v.
+case `$LD -v 2>&1 </dev/null` in
+*GNU* | *'with BFD'*)
+  lt_cv_prog_gnu_ld=yes
+  ;;
+*)
+  lt_cv_prog_gnu_ld=no
+  ;;
+esac])
+with_gnu_ld=$lt_cv_prog_gnu_ld
+])# _LT_PATH_LD_GNU
+
+
+# _LT_CMD_RELOAD
+# --------------
+# find reload flag for linker
+#   -- PORTME Some linkers may need a different reload flag.
+m4_defun([_LT_CMD_RELOAD],
+[AC_CACHE_CHECK([for $LD option to reload object files],
+  lt_cv_ld_reload_flag,
+  [lt_cv_ld_reload_flag='-r'])
+reload_flag=$lt_cv_ld_reload_flag
+case $reload_flag in
+"" | " "*) ;;
+*) reload_flag=" $reload_flag" ;;
+esac
+reload_cmds='$LD$reload_flag -o $output$reload_objs'
+case $host_os in
+  darwin*)
+    if test "$GCC" = yes; then
+      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
+    else
+      reload_cmds='$LD$reload_flag -o $output$reload_objs'
+    fi
+    ;;
+esac
+_LT_DECL([], [reload_flag], [1], [How to create reloadable object files])dnl
+_LT_DECL([], [reload_cmds], [2])dnl
+])# _LT_CMD_RELOAD
+
+
+# _LT_CHECK_MAGIC_METHOD
+# ----------------------
+# how to check for library dependencies
+#  -- PORTME fill in with the dynamic library characteristics
+m4_defun([_LT_CHECK_MAGIC_METHOD],
+[m4_require([_LT_DECL_EGREP])
+m4_require([_LT_DECL_OBJDUMP])
+AC_CACHE_CHECK([how to recognize dependent libraries],
+lt_cv_deplibs_check_method,
+[lt_cv_file_magic_cmd='$MAGIC_CMD'
+lt_cv_file_magic_test_file=
+lt_cv_deplibs_check_method='unknown'
+# Need to set the preceding variable on all platforms that support
+# interlibrary dependencies.
+# 'none' -- dependencies not supported.
+# `unknown' -- same as none, but documents that we really don't know.
+# 'pass_all' -- all dependencies passed with no checks.
+# 'test_compile' -- check by making test program.
+# 'file_magic [[regex]]' -- check by looking for files in library path
+# which responds to the $file_magic_cmd with a given extended regex.
+# If you have `file' or equivalent on your system and you're not sure
+# whether `pass_all' will *always* work, you probably want this one.
+
+case $host_os in
+aix[[4-9]]*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+beos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+bsdi[[45]]*)
+  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib)'
+  lt_cv_file_magic_cmd='/usr/bin/file -L'
+  lt_cv_file_magic_test_file=/shlib/libc.so
+  ;;
+
+cygwin*)
+  # func_win32_libid is a shell function defined in ltmain.sh
+  lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+  lt_cv_file_magic_cmd='func_win32_libid'
+  ;;
+
+mingw* | pw32*)
+  # Base MSYS/MinGW do not provide the 'file' command needed by
+  # func_win32_libid shell function, so use a weaker test based on 'objdump',
+  # unless we find 'file', for example because we are cross-compiling.
+  if ( file / ) >/dev/null 2>&1; then
+    lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
+    lt_cv_file_magic_cmd='func_win32_libid'
+  else
+    lt_cv_deplibs_check_method='file_magic file format pei*-i386(.*architecture: i386)?'
+    lt_cv_file_magic_cmd='$OBJDUMP -f'
+  fi
+  ;;
+
+cegcc)
+  # use the weaker test based on 'objdump'. See mingw*.
+  lt_cv_deplibs_check_method='file_magic file format pe-arm-.*little(.*architecture: arm)?'
+  lt_cv_file_magic_cmd='$OBJDUMP -f'
+  ;;
+
+darwin* | rhapsody*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+freebsd* | dragonfly*)
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
+    case $host_cpu in
+    i*86 )
+      # Not sure whether the presence of OpenBSD here was a mistake.
+      # Let's accept both of them until this is cleared up.
+      lt_cv_deplibs_check_method='file_magic (FreeBSD|OpenBSD|DragonFly)/i[[3-9]]86 (compact )?demand paged shared library'
+      lt_cv_file_magic_cmd=/usr/bin/file
+      lt_cv_file_magic_test_file=`echo /usr/lib/libc.so.*`
+      ;;
+    esac
+  else
+    lt_cv_deplibs_check_method=pass_all
+  fi
+  ;;
+
+gnu*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+hpux10.20* | hpux11*)
+  lt_cv_file_magic_cmd=/usr/bin/file
+  case $host_cpu in
+  ia64*)
+    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|ELF-[[0-9]][[0-9]]) shared object file - IA64'
+    lt_cv_file_magic_test_file=/usr/lib/hpux32/libc.so
+    ;;
+  hppa*64*)
+    [lt_cv_deplibs_check_method='file_magic (s[0-9][0-9][0-9]|ELF-[0-9][0-9]) shared object file - PA-RISC [0-9].[0-9]']
+    lt_cv_file_magic_test_file=/usr/lib/pa20_64/libc.sl
+    ;;
+  *)
+    lt_cv_deplibs_check_method='file_magic (s[[0-9]][[0-9]][[0-9]]|PA-RISC[[0-9]].[[0-9]]) shared library'
+    lt_cv_file_magic_test_file=/usr/lib/libc.sl
+    ;;
+  esac
+  ;;
+
+interix[[3-9]]*)
+  # PIC code is broken on Interix 3.x, that's why |\.a not |_pic\.a here
+  lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so|\.a)$'
+  ;;
+
+irix5* | irix6* | nonstopux*)
+  case $LD in
+  *-32|*"-32 ") libmagic=32-bit;;
+  *-n32|*"-n32 ") libmagic=N32;;
+  *-64|*"-64 ") libmagic=64-bit;;
+  *) libmagic=never-match;;
+  esac
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+# This must be Linux ELF.
+linux* | k*bsd*-gnu | kopensolaris*-gnu)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+netbsd* | netbsdelf*-gnu)
+  if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so|_pic\.a)$'
+  fi
+  ;;
+
+newos6*)
+  lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (executable|dynamic lib)'
+  lt_cv_file_magic_cmd=/usr/bin/file
+  lt_cv_file_magic_test_file=/usr/lib/libnls.so
+  ;;
+
+*nto* | *qnx*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+openbsd*)
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|\.so|_pic\.a)$'
+  else
+    lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
+  fi
+  ;;
+
+osf3* | osf4* | osf5*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+rdos*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+solaris*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
+sysv4 | sysv4.3*)
+  case $host_vendor in
+  motorola)
+    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[ML]]SB (shared object|dynamic lib) M[[0-9]][[0-9]]* Version [[0-9]]'
+    lt_cv_file_magic_test_file=`echo /usr/lib/libc.so*`
+    ;;
+  ncr)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  sequent)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method='file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB (shared object|dynamic lib )'
+    ;;
+  sni)
+    lt_cv_file_magic_cmd='/bin/file'
+    lt_cv_deplibs_check_method="file_magic ELF [[0-9]][[0-9]]*-bit [[LM]]SB dynamic lib"
+    lt_cv_file_magic_test_file=/lib/libc.so
+    ;;
+  siemens)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  pc)
+    lt_cv_deplibs_check_method=pass_all
+    ;;
+  esac
+  ;;
+
+tpf*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+esac
+])
+file_magic_cmd=$lt_cv_file_magic_cmd
+deplibs_check_method=$lt_cv_deplibs_check_method
+test -z "$deplibs_check_method" && deplibs_check_method=unknown
+
+_LT_DECL([], [deplibs_check_method], [1],
+    [Method to check whether dependent libraries are shared objects])
+_LT_DECL([], [file_magic_cmd], [1],
+    [Command to use when deplibs_check_method == "file_magic"])
+])# _LT_CHECK_MAGIC_METHOD
+
+
+# LT_PATH_NM
+# ----------
+# find the pathname to a BSD- or MS-compatible name lister
+AC_DEFUN([LT_PATH_NM],
+[AC_REQUIRE([AC_PROG_CC])dnl
+AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
+[if test -n "$NM"; then
+  # Let the user override the test.
+  lt_cv_path_NM="$NM"
+else
+  lt_nm_to_check="${ac_tool_prefix}nm"
+  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
+    lt_nm_to_check="$lt_nm_to_check nm"
+  fi
+  for lt_tmp_nm in $lt_nm_to_check; do
+    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
+      IFS="$lt_save_ifs"
+      test -z "$ac_dir" && ac_dir=.
+      tmp_nm="$ac_dir/$lt_tmp_nm"
+      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
+	# Check to see if the nm accepts a BSD-compat flag.
+	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
+	#   nm: unknown option "B" ignored
+	# Tru64's nm complains that /dev/null is an invalid object file
+	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
+	*/dev/null* | *'Invalid file or object type'*)
+	  lt_cv_path_NM="$tmp_nm -B"
+	  break
+	  ;;
+	*)
+	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
+	  */dev/null*)
+	    lt_cv_path_NM="$tmp_nm -p"
+	    break
+	    ;;
+	  *)
+	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
+	    continue # so that we can try to find one that supports BSD flags
+	    ;;
+	  esac
+	  ;;
+	esac
+      fi
+    done
+    IFS="$lt_save_ifs"
+  done
+  : ${lt_cv_path_NM=no}
+fi])
+if test "$lt_cv_path_NM" != "no"; then
+  NM="$lt_cv_path_NM"
+else
+  # Didn't find any BSD compatible name lister, look for dumpbin.
+  AC_CHECK_TOOLS(DUMPBIN, ["dumpbin -symbols" "link -dump -symbols"], :)
+  AC_SUBST([DUMPBIN])
+  if test "$DUMPBIN" != ":"; then
+    NM="$DUMPBIN"
+  fi
+fi
+test -z "$NM" && NM=nm
+AC_SUBST([NM])
+_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl
+
+AC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],
+  [lt_cv_nm_interface="BSD nm"
+  echo "int some_variable = 0;" > conftest.$ac_ext
+  (eval echo "\"\$as_me:__oline__: $ac_compile\"" >&AS_MESSAGE_LOG_FD)
+  (eval "$ac_compile" 2>conftest.err)
+  cat conftest.err >&AS_MESSAGE_LOG_FD
+  (eval echo "\"\$as_me:__oline__: $NM \\\"conftest.$ac_objext\\\"\"" >&AS_MESSAGE_LOG_FD)
+  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
+  cat conftest.err >&AS_MESSAGE_LOG_FD
+  (eval echo "\"\$as_me:__oline__: output\"" >&AS_MESSAGE_LOG_FD)
+  cat conftest.out >&AS_MESSAGE_LOG_FD
+  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
+    lt_cv_nm_interface="MS dumpbin"
+  fi
+  rm -f conftest*])
+])# LT_PATH_NM
+
+# Old names:
+AU_ALIAS([AM_PROG_NM], [LT_PATH_NM])
+AU_ALIAS([AC_PROG_NM], [LT_PATH_NM])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AM_PROG_NM], [])
+dnl AC_DEFUN([AC_PROG_NM], [])
+
+
+# LT_LIB_M
+# --------
+# check for math library
+AC_DEFUN([LT_LIB_M],
+[AC_REQUIRE([AC_CANONICAL_HOST])dnl
+LIBM=
+case $host in
+*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)
+  # These system don't have libm, or don't need it
+  ;;
+*-ncr-sysv4.3*)
+  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM="-lmw")
+  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
+  ;;
+*)
+  AC_CHECK_LIB(m, cos, LIBM="-lm")
+  ;;
+esac
+AC_SUBST([LIBM])
+])# LT_LIB_M
+
+# Old name:
+AU_ALIAS([AC_CHECK_LIBM], [LT_LIB_M])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_CHECK_LIBM], [])
+
+
+# _LT_COMPILER_NO_RTTI([TAGNAME])
+# -------------------------------
+m4_defun([_LT_COMPILER_NO_RTTI],
+[m4_require([_LT_TAG_COMPILER])dnl
+
+_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=
+
+if test "$GCC" = yes; then
+  _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'
+
+  _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions],
+    lt_cv_prog_compiler_rtti_exceptions,
+    [-fno-rtti -fno-exceptions], [],
+    [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)="$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1) -fno-rtti -fno-exceptions"])
+fi
+_LT_TAGDECL([no_builtin_flag], [lt_prog_compiler_no_builtin_flag], [1],
+	[Compiler flag to turn off builtin functions])
+])# _LT_COMPILER_NO_RTTI
+
+
+# _LT_CMD_GLOBAL_SYMBOLS
+# ----------------------
+m4_defun([_LT_CMD_GLOBAL_SYMBOLS],
+[AC_REQUIRE([AC_CANONICAL_HOST])dnl
+AC_REQUIRE([AC_PROG_CC])dnl
+AC_REQUIRE([LT_PATH_NM])dnl
+AC_REQUIRE([LT_PATH_LD])dnl
+m4_require([_LT_DECL_SED])dnl
+m4_require([_LT_DECL_EGREP])dnl
+m4_require([_LT_TAG_COMPILER])dnl
+
+# Check for command to grab the raw symbol name followed by C symbol from nm.
+AC_MSG_CHECKING([command to parse $NM output from $compiler object])
+AC_CACHE_VAL([lt_cv_sys_global_symbol_pipe],
+[
+# These are sane defaults that work on at least a few old systems.
+# [They come from Ultrix.  What could be older than Ultrix?!! ;)]
+
+# Character class describing NM global symbol codes.
+symcode='[[BCDEGRST]]'
+
+# Regexp to match symbols that can be accessed directly from C.
+sympat='\([[_A-Za-z]][[_A-Za-z0-9]]*\)'
+
+# Define system-specific variables.
+case $host_os in
+aix*)
+  symcode='[[BCDT]]'
+  ;;
+cygwin* | mingw* | pw32* | cegcc*)
+  symcode='[[ABCDGISTW]]'
+  ;;
+hpux*)
+  if test "$host_cpu" = ia64; then
+    symcode='[[ABCDEGRST]]'
+  fi
+  ;;
+irix* | nonstopux*)
+  symcode='[[BCDEGRST]]'
+  ;;
+osf*)
+  symcode='[[BCDEGQRST]]'
+  ;;
+solaris*)
+  symcode='[[BDRT]]'
+  ;;
+sco3.2v5*)
+  symcode='[[DT]]'
+  ;;
+sysv4.2uw2*)
+  symcode='[[DT]]'
+  ;;
+sysv5* | sco5v6* | unixware* | OpenUNIX*)
+  symcode='[[ABDT]]'
+  ;;
+sysv4)
+  symcode='[[DFNSTU]]'
+  ;;
+esac
+
+# If we're using GNU nm, then use its standard symbol codes.
+case `$NM -V 2>&1` in
+*GNU* | *'with BFD'*)
+  symcode='[[ABCDGIRSTW]]' ;;
+esac
+
+# Transform an extracted symbol line into a proper C declaration.
+# Some systems (esp. on ia64) link data and code symbols differently,
+# so use this general approach.
+lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+
+# Transform an extracted symbol line into symbol name and symbol address
+lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([[^ ]]*\) $/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([[^ ]]*\) \([[^ ]]*\)$/  {\"\2\", (void *) \&\2},/p'"
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="sed -n -e 's/^: \([[^ ]]*\) $/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([[^ ]]*\) \(lib[[^ ]]*\)$/  {\"\2\", (void *) \&\2},/p' -e 's/^$symcode* \([[^ ]]*\) \([[^ ]]*\)$/  {\"lib\2\", (void *) \&\2},/p'"
+
+# Handle CRLF in mingw tool chain
+opt_cr=
+case $build_os in
+mingw*)
+  opt_cr=`$ECHO 'x\{0,1\}' | tr x '\015'` # option cr in regexp
+  ;;
+esac
+
+# Try without a prefix underscore, then with it.
+for ac_symprfx in "" "_"; do
+
+  # Transform symcode, sympat, and symprfx into a raw symbol and a C symbol.
+  symxfrm="\\1 $ac_symprfx\\2 \\2"
+
+  # Write the raw and C identifiers.
+  if test "$lt_cv_nm_interface" = "MS dumpbin"; then
+    # Fake it for dumpbin and say T for any non-static function
+    # and D for any global variable.
+    # Also find C++ and __fastcall symbols from MSVC++,
+    # which start with @ or ?.
+    lt_cv_sys_global_symbol_pipe="$AWK ['"\
+"     {last_section=section; section=\$ 3};"\
+"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};"\
+"     \$ 0!~/External *\|/{next};"\
+"     / 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};"\
+"     {if(hide[section]) next};"\
+"     {f=0}; \$ 0~/\(\).*\|/{f=1}; {printf f ? \"T \" : \"D \"};"\
+"     {split(\$ 0, a, /\||\r/); split(a[2], s)};"\
+"     s[1]~/^[@?]/{print s[1], s[1]; next};"\
+"     s[1]~prfx {split(s[1],t,\"@\"); print t[1], substr(t[1],length(prfx))}"\
+"     ' prfx=^$ac_symprfx]"
+  else
+    lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[[	 ]]\($symcode$symcode*\)[[	 ]][[	 ]]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
+  fi
+
+  # Check to see that the pipe works correctly.
+  pipe_works=no
+
+  rm -f conftest*
+  cat > conftest.$ac_ext <<_LT_EOF
+#ifdef __cplusplus
+extern "C" {
+#endif
+char nm_test_var;
+void nm_test_func(void);
+void nm_test_func(void){}
+#ifdef __cplusplus
+}
+#endif
+int main(){nm_test_var='a';nm_test_func();return(0);}
+_LT_EOF
+
+  if AC_TRY_EVAL(ac_compile); then
+    # Now try to grab the symbols.
+    nlist=conftest.nm
+    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $nlist) && test -s "$nlist"; then
+      # Try sorting and uniquifying the output.
+      if sort "$nlist" | uniq > "$nlist"T; then
+	mv -f "$nlist"T "$nlist"
+      else
+	rm -f "$nlist"T
+      fi
+
+      # Make sure that we snagged all the symbols we need.
+      if $GREP ' nm_test_var$' "$nlist" >/dev/null; then
+	if $GREP ' nm_test_func$' "$nlist" >/dev/null; then
+	  cat <<_LT_EOF > conftest.$ac_ext
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+_LT_EOF
+	  # Now generate the symbol file.
+	  eval "$lt_cv_sys_global_symbol_to_cdecl"' < "$nlist" | $GREP -v main >> conftest.$ac_ext'
+
+	  cat <<_LT_EOF >> conftest.$ac_ext
+
+/* The mapping between symbol names and symbols.  */
+const struct {
+  const char *name;
+  void       *address;
+}
+lt__PROGRAM__LTX_preloaded_symbols[[]] =
+{
+  { "@PROGRAM@", (void *) 0 },
+_LT_EOF
+	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (void *) \&\2},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
+	  cat <<\_LT_EOF >> conftest.$ac_ext
+  {0, (void *) 0}
+};
+
+/* This works around a problem in FreeBSD linker */
+#ifdef FREEBSD_WORKAROUND
+static const void *lt_preloaded_setup() {
+  return lt__PROGRAM__LTX_preloaded_symbols;
+}
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+_LT_EOF
+	  # Now try linking the two files.
+	  mv conftest.$ac_objext conftstm.$ac_objext
+	  lt_save_LIBS="$LIBS"
+	  lt_save_CFLAGS="$CFLAGS"
+	  LIBS="conftstm.$ac_objext"
+	  CFLAGS="$CFLAGS$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)"
+	  if AC_TRY_EVAL(ac_link) && test -s conftest${ac_exeext}; then
+	    pipe_works=yes
+	  fi
+	  LIBS="$lt_save_LIBS"
+	  CFLAGS="$lt_save_CFLAGS"
+	else
+	  echo "cannot find nm_test_func in $nlist" >&AS_MESSAGE_LOG_FD
+	fi
+      else
+	echo "cannot find nm_test_var in $nlist" >&AS_MESSAGE_LOG_FD
+      fi
+    else
+      echo "cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
+    fi
+  else
+    echo "$progname: failed program was:" >&AS_MESSAGE_LOG_FD
+    cat conftest.$ac_ext >&5
+  fi
+  rm -rf conftest* conftst*
+
+  # Do not use the global_symbol_pipe unless it works.
+  if test "$pipe_works" = yes; then
+    break
+  else
+    lt_cv_sys_global_symbol_pipe=
+  fi
+done
+])
+if test -z "$lt_cv_sys_global_symbol_pipe"; then
+  lt_cv_sys_global_symbol_to_cdecl=
+fi
+if test -z "$lt_cv_sys_global_symbol_pipe$lt_cv_sys_global_symbol_to_cdecl"; then
+  AC_MSG_RESULT(failed)
+else
+  AC_MSG_RESULT(ok)
+fi
+
+_LT_DECL([global_symbol_pipe], [lt_cv_sys_global_symbol_pipe], [1],
+    [Take the output of nm and produce a listing of raw symbols and C names])
+_LT_DECL([global_symbol_to_cdecl], [lt_cv_sys_global_symbol_to_cdecl], [1],
+    [Transform the output of nm in a proper C declaration])
+_LT_DECL([global_symbol_to_c_name_address],
+    [lt_cv_sys_global_symbol_to_c_name_address], [1],
+    [Transform the output of nm in a C name address pair])
+_LT_DECL([global_symbol_to_c_name_address_lib_prefix],
+    [lt_cv_sys_global_symbol_to_c_name_address_lib_prefix], [1],
+    [Transform the output of nm in a C name address pair when lib prefix is needed])
+]) # _LT_CMD_GLOBAL_SYMBOLS
+
+
+# _LT_COMPILER_PIC([TAGNAME])
+# ---------------------------
+m4_defun([_LT_COMPILER_PIC],
+[m4_require([_LT_TAG_COMPILER])dnl
+_LT_TAGVAR(lt_prog_compiler_wl, $1)=
+_LT_TAGVAR(lt_prog_compiler_pic, $1)=
+_LT_TAGVAR(lt_prog_compiler_static, $1)=
+
+AC_MSG_CHECKING([for $compiler option to produce PIC])
+m4_if([$1], [CXX], [
+  # C++ specific cases for pic, static, wl, etc.
+  if test "$GXX" = yes; then
+    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
+
+    case $host_os in
+    aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+        ;;
+      m68k)
+            # FIXME: we need at least 68020 code to build shared libraries, but
+            # adding the `-m68020' flag to GCC prevents building anything better,
+            # like `-m68040'.
+            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'
+        ;;
+      esac
+      ;;
+
+    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+    mingw* | cygwin* | os2* | pw32* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      # Although the cygwin gcc ignores -fPIC, still need this for old-style
+      # (--disable-auto-import) libraries
+      m4_if([$1], [GCJ], [],
+	[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])
+      ;;
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'
+      ;;
+    *djgpp*)
+      # DJGPP does not support shared libraries at all
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)=
+      ;;
+    interix[[3-9]]*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic
+      fi
+      ;;
+    hpux*)
+      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit
+      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag
+      # sets the default TLS model and affects inlining.
+      case $host_cpu in
+      hppa*64*)
+	;;
+      *)
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	;;
+      esac
+      ;;
+    *qnx* | *nto*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'
+      ;;
+    *)
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+      ;;
+    esac
+  else
+    case $host_os in
+      aix[[4-9]]*)
+	# All AIX code is PIC.
+	if test "$host_cpu" = ia64; then
+	  # AIX 5 now supports IA64 processor
+	  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	else
+	  _LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'
+	fi
+	;;
+      chorus*)
+	case $cc_basename in
+	cxch68*)
+	  # Green Hills C++ Compiler
+	  # _LT_TAGVAR(lt_prog_compiler_static, $1)="--no_auto_instantiation -u __main -u __premain -u _abort -r $COOL_DIR/lib/libOrb.a $MVME_DIR/lib/CC/libC.a $MVME_DIR/lib/classix/libcx.s.a"
+	  ;;
+	esac
+	;;
+      dgux*)
+	case $cc_basename in
+	  ec++*)
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    ;;
+	  ghcx*)
+	    # Green Hills C++ Compiler
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      freebsd* | dragonfly*)
+	# FreeBSD uses GNU C++
+	;;
+      hpux9* | hpux10* | hpux11*)
+	case $cc_basename in
+	  CC*)
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
+	    if test "$host_cpu" != ia64; then
+	      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'
+	    fi
+	    ;;
+	  aCC*)
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
+	    case $host_cpu in
+	    hppa*64*|ia64*)
+	      # +Z the default
+	      ;;
+	    *)
+	      _LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'
+	      ;;
+	    esac
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      interix*)
+	# This is c89, which is MS Visual C++ (no shared libs)
+	# Anyone wants to do a port?
+	;;
+      irix5* | irix6* | nonstopux*)
+	case $cc_basename in
+	  CC*)
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+	    # CC pic flag -KPIC is the default.
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      linux* | k*bsd*-gnu | kopensolaris*-gnu)
+	case $cc_basename in
+	  KCC*)
+	    # KAI C++ Compiler
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	    ;;
+	  ecpc* )
+	    # old Intel C++ for x86_64 which still supported -KPIC.
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
+	    ;;
+	  icpc* )
+	    # Intel C++, used to be incompatible with GCC.
+	    # ICC 10 doesn't accept -KPIC any more.
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
+	    ;;
+	  pgCC* | pgcpp*)
+	    # Portland Group C++ compiler
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	    ;;
+	  cxx*)
+	    # Compaq C++
+	    # Make sure the PIC flag is empty.  It appears that all Alpha
+	    # Linux and Compaq Tru64 Unix objects are PIC.
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)=
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+	    ;;
+	  xlc* | xlC*)
+	    # IBM XL 8.0 on PPC
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'
+	    ;;
+	  *)
+	    case `$CC -V 2>&1 | sed 5q` in
+	    *Sun\ C*)
+	      # Sun C++ 5.9
+	      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '
+	      ;;
+	    esac
+	    ;;
+	esac
+	;;
+      lynxos*)
+	;;
+      m88k*)
+	;;
+      mvs*)
+	case $cc_basename in
+	  cxx*)
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-W c,exportall'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      netbsd* | netbsdelf*-gnu)
+	;;
+      *qnx* | *nto*)
+        # QNX uses GNU C++, but need to define -shared option too, otherwise
+        # it will coredump.
+        _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'
+        ;;
+      osf3* | osf4* | osf5*)
+	case $cc_basename in
+	  KCC*)
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='--backend -Wl,'
+	    ;;
+	  RCC*)
+	    # Rational C++ 2.4.1
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+	    ;;
+	  cxx*)
+	    # Digital/Compaq C++
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    # Make sure the PIC flag is empty.  It appears that all Alpha
+	    # Linux and Compaq Tru64 Unix objects are PIC.
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)=
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      psos*)
+	;;
+      solaris*)
+	case $cc_basename in
+	  CC*)
+	    # Sun C++ 4.2, 5.x and Centerline C++
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '
+	    ;;
+	  gcx*)
+	    # Green Hills C++ Compiler
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      sunos4*)
+	case $cc_basename in
+	  CC*)
+	    # Sun C++ 4.x
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	    ;;
+	  lcc*)
+	    # Lucid
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+	case $cc_basename in
+	  CC*)
+	    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	    ;;
+	esac
+	;;
+      tandem*)
+	case $cc_basename in
+	  NCC*)
+	    # NonStop-UX NCC 3.20
+	    _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	    ;;
+	  *)
+	    ;;
+	esac
+	;;
+      vxworks*)
+	;;
+      *)
+	_LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no
+	;;
+    esac
+  fi
+],
+[
+  if test "$GCC" = yes; then
+    _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+    _LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
+
+    case $host_os in
+      aix*)
+      # All AIX code is PIC.
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+        ;;
+      m68k)
+            # FIXME: we need at least 68020 code to build shared libraries, but
+            # adding the `-m68020' flag to GCC prevents building anything better,
+            # like `-m68040'.
+            _LT_TAGVAR(lt_prog_compiler_pic, $1)='-m68020 -resident32 -malways-restore-a4'
+        ;;
+      esac
+      ;;
+
+    beos* | irix5* | irix6* | nonstopux* | osf3* | osf4* | osf5*)
+      # PIC is the default for these OSes.
+      ;;
+
+    mingw* | cygwin* | pw32* | os2* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      # Although the cygwin gcc ignores -fPIC, still need this for old-style
+      # (--disable-auto-import) libraries
+      m4_if([$1], [GCJ], [],
+	[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])
+      ;;
+
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fno-common'
+      ;;
+
+    hpux*)
+      # PIC is the default for 64-bit PA HP-UX, but not for 32-bit
+      # PA HP-UX.  On IA64 HP-UX, PIC is the default but the pic flag
+      # sets the default TLS model and affects inlining.
+      case $host_cpu in
+      hppa*64*)
+	# +Z the default
+	;;
+      *)
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	;;
+      esac
+      ;;
+
+    interix[[3-9]]*)
+      # Interix 3.x gcc -fpic/-fPIC options generate broken code.
+      # Instead, we relocate shared libraries at runtime.
+      ;;
+
+    msdosdjgpp*)
+      # Just because we use GCC doesn't mean we suddenly get shared libraries
+      # on systems that don't support them.
+      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no
+      enable_shared=no
+      ;;
+
+    *nto* | *qnx*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)=-Kconform_pic
+      fi
+      ;;
+
+    *)
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+      ;;
+    esac
+  else
+    # PORTME Check for flag to pass linker flags through the system compiler.
+    case $host_os in
+    aix*)
+      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      if test "$host_cpu" = ia64; then
+	# AIX 5 now supports IA64 processor
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      else
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-bnso -bI:/lib/syscalls.exp'
+      fi
+      ;;
+
+    mingw* | cygwin* | pw32* | os2* | cegcc*)
+      # This hack is so that the source file can tell whether it is being
+      # built for inclusion in a dll (and should export symbols for example).
+      m4_if([$1], [GCJ], [],
+	[_LT_TAGVAR(lt_prog_compiler_pic, $1)='-DDLL_EXPORT'])
+      ;;
+
+    hpux9* | hpux10* | hpux11*)
+      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      # PIC is the default for IA64 HP-UX and 64-bit HP-UX, but
+      # not for PA HP-UX.
+      case $host_cpu in
+      hppa*64*|ia64*)
+	# +Z the default
+	;;
+      *)
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='+Z'
+	;;
+      esac
+      # Is there a better lt_prog_compiler_static that works with the bundled CC?
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='${wl}-a ${wl}archive'
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      # PIC (with -KPIC) is the default.
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+      ;;
+
+    linux* | k*bsd*-gnu | kopensolaris*-gnu)
+      case $cc_basename in
+      # old Intel for x86_64 which still supported -KPIC.
+      ecc*)
+	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
+        ;;
+      # icc used to be incompatible with GCC.
+      # ICC 10 doesn't accept -KPIC any more.
+      icc* | ifort*)
+	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-static'
+        ;;
+      # Lahey Fortran 8.1.
+      lf95*)
+	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='--shared'
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='--static'
+	;;
+      pgcc* | pgf77* | pgf90* | pgf95*)
+        # Portland Group compilers (*not* the Pentium gcc compiler,
+	# which looks to be a dead project)
+	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-fpic'
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+        ;;
+      ccc*)
+        _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+        # All Alpha code is PIC.
+        _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+        ;;
+      xl*)
+	# IBM XL C 8.0/Fortran 10.1 on PPC
+	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-qpic'
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-qstaticlink'
+	;;
+      *)
+	case `$CC -V 2>&1 | sed 5q` in
+	*Sun\ C*)
+	  # Sun C 5.9
+	  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	  _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+	  ;;
+	*Sun\ F*)
+	  # Sun Fortran 8.3 passes all unrecognized flags to the linker
+	  _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+	  _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+	  _LT_TAGVAR(lt_prog_compiler_wl, $1)=''
+	  ;;
+	esac
+	;;
+      esac
+      ;;
+
+    newsos6)
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    *nto* | *qnx*)
+      # QNX uses GNU C++, but need to define -shared option too, otherwise
+      # it will coredump.
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC -shared'
+      ;;
+
+    osf3* | osf4* | osf5*)
+      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      # All OSF/1 code is PIC.
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+      ;;
+
+    rdos*)
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-non_shared'
+      ;;
+
+    solaris*)
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      case $cc_basename in
+      f77* | f90* | f95*)
+	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld ';;
+      *)
+	_LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,';;
+      esac
+      ;;
+
+    sunos4*)
+      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Qoption ld '
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-PIC'
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    sysv4 | sysv4.2uw2* | sysv4.3*)
+      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec ;then
+	_LT_TAGVAR(lt_prog_compiler_pic, $1)='-Kconform_pic'
+	_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      fi
+      ;;
+
+    sysv5* | unixware* | sco3.2v5* | sco5v6* | OpenUNIX*)
+      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-KPIC'
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    unicos*)
+      _LT_TAGVAR(lt_prog_compiler_wl, $1)='-Wl,'
+      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no
+      ;;
+
+    uts4*)
+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-pic'
+      _LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'
+      ;;
+
+    *)
+      _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no
+      ;;
+    esac
+  fi
+])
+case $host_os in
+  # For platforms which do not support PIC, -DPIC is meaningless:
+  *djgpp*)
+    _LT_TAGVAR(lt_prog_compiler_pic, $1)=
+    ;;
+  *)
+    _LT_TAGVAR(lt_prog_compiler_pic, $1)="$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])"
+    ;;
+esac
+AC_MSG_RESULT([$_LT_TAGVAR(lt_prog_compiler_pic, $1)])
+_LT_TAGDECL([wl], [lt_prog_compiler_wl], [1],
+	[How to pass a linker flag through the compiler])
+
+#
+# Check to make sure the PIC flag actually works.
+#
+if test -n "$_LT_TAGVAR(lt_prog_compiler_pic, $1)"; then
+  _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, $1) works],
+    [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, $1)],
+    [$_LT_TAGVAR(lt_prog_compiler_pic, $1)@&t@m4_if([$1],[],[ -DPIC],[m4_if([$1],[CXX],[ -DPIC],[])])], [],
+    [case $_LT_TAGVAR(lt_prog_compiler_pic, $1) in
+     "" | " "*) ;;
+     *) _LT_TAGVAR(lt_prog_compiler_pic, $1)=" $_LT_TAGVAR(lt_prog_compiler_pic, $1)" ;;
+     esac],
+    [_LT_TAGVAR(lt_prog_compiler_pic, $1)=
+     _LT_TAGVAR(lt_prog_compiler_can_build_shared, $1)=no])
+fi
+_LT_TAGDECL([pic_flag], [lt_prog_compiler_pic], [1],
+	[Additional compiler flags for building library objects])
+
+#
+# Check to make sure the static flag actually works.
+#
+wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1) eval lt_tmp_static_flag=\"$_LT_TAGVAR(lt_prog_compiler_static, $1)\"
+_LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works],
+  _LT_TAGVAR(lt_cv_prog_compiler_static_works, $1),
+  $lt_tmp_static_flag,
+  [],
+  [_LT_TAGVAR(lt_prog_compiler_static, $1)=])
+_LT_TAGDECL([link_static_flag], [lt_prog_compiler_static], [1],
+	[Compiler flag to prevent dynamic linking])
+])# _LT_COMPILER_PIC
+
+
+# _LT_LINKER_SHLIBS([TAGNAME])
+# ----------------------------
+# See if the linker supports building shared libraries.
+m4_defun([_LT_LINKER_SHLIBS],
+[AC_REQUIRE([LT_PATH_LD])dnl
+AC_REQUIRE([LT_PATH_NM])dnl
+m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+m4_require([_LT_DECL_EGREP])dnl
+m4_require([_LT_DECL_SED])dnl
+m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
+m4_require([_LT_TAG_COMPILER])dnl
+AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])
+m4_if([$1], [CXX], [
+  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  case $host_os in
+  aix[[4-9]]*)
+    # If we're using GNU nm, then we don't want the "-C" option.
+    # -C means demangle to AIX nm, but means don't demangle with GNU nm
+    if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
+      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && ([substr](\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+    else
+      _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && ([substr](\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+    fi
+    ;;
+  pw32*)
+    _LT_TAGVAR(export_symbols_cmds, $1)="$ltdll_cmds"
+  ;;
+  cygwin* | mingw* | cegcc*)
+    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\([[^ ]]*\)/\1 DATA/;/^.*[[ ]]__nm__/s/^.*[[ ]]__nm__\([[^ ]]*\)[[ ]][[^ ]]*/\1 DATA/;/^I[[ ]]/d;/^[[AITW]][[ ]]/s/.* //'\'' | sort | uniq > $export_symbols'
+  ;;
+  linux* | k*bsd*-gnu)
+    _LT_TAGVAR(link_all_deplibs, $1)=no
+  ;;
+  *)
+    _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  ;;
+  esac
+  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']
+], [
+  runpath_var=
+  _LT_TAGVAR(allow_undefined_flag, $1)=
+  _LT_TAGVAR(always_export_symbols, $1)=no
+  _LT_TAGVAR(archive_cmds, $1)=
+  _LT_TAGVAR(archive_expsym_cmds, $1)=
+  _LT_TAGVAR(compiler_needs_object, $1)=no
+  _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no
+  _LT_TAGVAR(export_dynamic_flag_spec, $1)=
+  _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED '\''s/.* //'\'' | sort | uniq > $export_symbols'
+  _LT_TAGVAR(hardcode_automatic, $1)=no
+  _LT_TAGVAR(hardcode_direct, $1)=no
+  _LT_TAGVAR(hardcode_direct_absolute, $1)=no
+  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=
+  _LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=
+  _LT_TAGVAR(hardcode_libdir_separator, $1)=
+  _LT_TAGVAR(hardcode_minus_L, $1)=no
+  _LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported
+  _LT_TAGVAR(inherit_rpath, $1)=no
+  _LT_TAGVAR(link_all_deplibs, $1)=unknown
+  _LT_TAGVAR(module_cmds, $1)=
+  _LT_TAGVAR(module_expsym_cmds, $1)=
+  _LT_TAGVAR(old_archive_from_new_cmds, $1)=
+  _LT_TAGVAR(old_archive_from_expsyms_cmds, $1)=
+  _LT_TAGVAR(thread_safe_flag_spec, $1)=
+  _LT_TAGVAR(whole_archive_flag_spec, $1)=
+  # include_expsyms should be a list of space-separated symbols to be *always*
+  # included in the symbol list
+  _LT_TAGVAR(include_expsyms, $1)=
+  # exclude_expsyms can be an extended regexp of symbols to exclude
+  # it will be wrapped by ` (' and `)$', so one must not match beginning or
+  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
+  # as well as any symbol that contains `d'.
+  _LT_TAGVAR(exclude_expsyms, $1)=['_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*']
+  # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
+  # platforms (ab)use it in PIC code, but their linkers get confused if
+  # the symbol is explicitly referenced.  Since portable code cannot
+  # rely on this symbol name, it's probably fine to never include it in
+  # preloaded symbol tables.
+  # Exclude shared library initialization/finalization symbols.
+dnl Note also adjust exclude_expsyms for C++ above.
+  extract_expsyms_cmds=
+
+  case $host_os in
+  cygwin* | mingw* | pw32* | cegcc*)
+    # FIXME: the MSVC++ port hasn't been tested in a loooong time
+    # When not using gcc, we currently assume that we are using
+    # Microsoft Visual C++.
+    if test "$GCC" != yes; then
+      with_gnu_ld=no
+    fi
+    ;;
+  interix*)
+    # we just hope/assume this is gcc and not c89 (= MSVC++)
+    with_gnu_ld=yes
+    ;;
+  openbsd*)
+    with_gnu_ld=no
+    ;;
+  linux* | k*bsd*-gnu)
+    _LT_TAGVAR(link_all_deplibs, $1)=no
+    ;;
+  esac
+
+  _LT_TAGVAR(ld_shlibs, $1)=yes
+  if test "$with_gnu_ld" = yes; then
+    # If archive_cmds runs LD, not CC, wlarc should be empty
+    wlarc='${wl}'
+
+    # Set some defaults for GNU ld with shared library support. These
+    # are reset later if shared libraries are not supported. Putting them
+    # here allows them to be overridden if necessary.
+    runpath_var=LD_RUN_PATH
+    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+    # ancient GNU ld didn't support --whole-archive et. al.
+    if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
+      _LT_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+    else
+      _LT_TAGVAR(whole_archive_flag_spec, $1)=
+    fi
+    supports_anon_versioning=no
+    case `$LD -v 2>&1` in
+      *GNU\ gold*) supports_anon_versioning=yes ;;
+      *\ [[01]].* | *\ 2.[[0-9]].* | *\ 2.10.*) ;; # catch versions < 2.11
+      *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
+      *\ 2.11.92.0.12\ *) supports_anon_versioning=yes ;; # Mandrake 8.2 ...
+      *\ 2.11.*) ;; # other 2.11 versions
+      *) supports_anon_versioning=yes ;;
+    esac
+
+    # See if GNU ld supports shared libraries.
+    case $host_os in
+    aix[[3-9]]*)
+      # On AIX/PPC, the GNU linker is very broken
+      if test "$host_cpu" != ia64; then
+	_LT_TAGVAR(ld_shlibs, $1)=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: the GNU linker, at least up to release 2.9.1, is reported
+*** to be unable to reliably create shared libraries on AIX.
+*** Therefore, libtool is disabling shared libraries support.  If you
+*** really care for shared libraries, you may want to modify your PATH
+*** so that a non-GNU linker is found, and then restart.
+
+_LT_EOF
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            _LT_TAGVAR(archive_expsym_cmds, $1)=''
+        ;;
+      m68k)
+            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+            _LT_TAGVAR(hardcode_minus_L, $1)=yes
+        ;;
+      esac
+      ;;
+
+    beos*)
+      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	_LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	# support --undefined.  This deserves some investigation.  FIXME
+	_LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      else
+	_LT_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    cygwin* | mingw* | pw32* | cegcc*)
+      # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
+      # as there is no search path for DLLs.
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+      _LT_TAGVAR(always_export_symbols, $1)=no
+      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+      _LT_TAGVAR(export_symbols_cmds, $1)='$NM $libobjs $convenience | $global_symbol_pipe | $SED -e '\''/^[[BCDGRS]][[ ]]/s/.*[[ ]]\([[^ ]]*\)/\1 DATA/'\'' | $SED -e '\''/^[[AITW]][[ ]]/s/.*[[ ]]//'\'' | sort | uniq > $export_symbols'
+
+      if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
+        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file (1st line
+	# is EXPORTS), use it as is; otherwise, prepend...
+	_LT_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	  cp $export_symbols $output_objdir/$soname.def;
+	else
+	  echo EXPORTS > $output_objdir/$soname.def;
+	  cat $export_symbols >> $output_objdir/$soname.def;
+	fi~
+	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+      else
+	_LT_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    interix[[3-9]]*)
+      _LT_TAGVAR(hardcode_direct, $1)=no
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+      # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+      # Instead, shared libraries are loaded at an image base (0x10000000 by
+      # default) and relocated if they conflict, which is a slow very memory
+      # consuming and fragmenting process.  To avoid this, we pick a random,
+      # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+      # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      _LT_TAGVAR(archive_expsym_cmds, $1)='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      ;;
+
+    gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
+      tmp_diet=no
+      if test "$host_os" = linux-dietlibc; then
+	case $cc_basename in
+	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
+	esac
+      fi
+      if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \
+	 && test "$tmp_diet" = no
+      then
+	tmp_addflag=
+	tmp_sharedflag='-shared'
+	case $cc_basename,$host_cpu in
+        pgcc*)				# Portland Group C compiler
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag'
+	  ;;
+	pgf77* | pgf90* | pgf95*)	# Portland Group f77 and f90 compilers
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  tmp_addflag=' $pic_flag -Mnomain' ;;
+	ecc*,ia64* | icc*,ia64*)	# Intel C compiler on ia64
+	  tmp_addflag=' -i_dynamic' ;;
+	efc*,ia64* | ifort*,ia64*)	# Intel Fortran compiler on ia64
+	  tmp_addflag=' -i_dynamic -nofor_main' ;;
+	ifc* | ifort*)			# Intel Fortran compiler
+	  tmp_addflag=' -nofor_main' ;;
+	lf95*)				# Lahey Fortran 8.1
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)=
+	  tmp_sharedflag='--shared' ;;
+	xl[[cC]]*)			# IBM XL C 8.0 on PPC (deal with xlf below)
+	  tmp_sharedflag='-qmkshrobj'
+	  tmp_addflag= ;;
+	esac
+	case `$CC -V 2>&1 | sed 5q` in
+	*Sun\ C*)			# Sun C 5.9
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	  _LT_TAGVAR(compiler_needs_object, $1)=yes
+	  tmp_sharedflag='-G' ;;
+	*Sun\ F*)			# Sun Fortran 8.3
+	  tmp_sharedflag='-G' ;;
+	esac
+	_LT_TAGVAR(archive_cmds, $1)='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+
+        if test "x$supports_anon_versioning" = xyes; then
+          _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $output_objdir/$libname.ver~
+	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+	    echo "local: *; };" >> $output_objdir/$libname.ver~
+	    $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+        fi
+
+	case $cc_basename in
+	xlf*)
+	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='--whole-archive$convenience --no-whole-archive'
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=
+	  _LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='-rpath $libdir'
+	  _LT_TAGVAR(archive_cmds, $1)='$LD -shared $libobjs $deplibs $compiler_flags -soname $soname -o $lib'
+	  if test "x$supports_anon_versioning" = xyes; then
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $output_objdir/$libname.ver~
+	      cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+	      echo "local: *; };" >> $output_objdir/$libname.ver~
+	      $LD -shared $libobjs $deplibs $compiler_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
+	  fi
+	  ;;
+	esac
+      else
+        _LT_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
+	wlarc=
+      else
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      fi
+      ;;
+
+    solaris*)
+      if $LD -v 2>&1 | $GREP 'BFD 2\.8' > /dev/null; then
+	_LT_TAGVAR(ld_shlibs, $1)=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: The releases 2.8.* of the GNU linker cannot reliably
+*** create shared libraries on Solaris systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.9.1 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+      elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	_LT_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX*)
+      case `$LD -v 2>&1` in
+        *\ [[01]].* | *\ 2.[[0-9]].* | *\ 2.1[[0-5]].*)
+	_LT_TAGVAR(ld_shlibs, $1)=no
+	cat <<_LT_EOF 1>&2
+
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** reliably create shared libraries on SCO systems.  Therefore, libtool
+*** is disabling shared libraries support.  We urge you to upgrade GNU
+*** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
+*** your PATH or compiler configuration so that the native linker is
+*** used, and then restart.
+
+_LT_EOF
+	;;
+	*)
+	  # For security reasons, it is highly recommended that you always
+	  # use absolute paths for naming shared libraries, and exclude the
+	  # DT_RUNPATH tag from executables and libraries.  But doing so
+	  # requires that you compile everything twice, which is a pain.
+	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	  else
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	  fi
+	;;
+      esac
+      ;;
+
+    sunos4*)
+      _LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      wlarc=
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    *)
+      if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+      else
+	_LT_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+    esac
+
+    if test "$_LT_TAGVAR(ld_shlibs, $1)" = no; then
+      runpath_var=
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)=
+      _LT_TAGVAR(whole_archive_flag_spec, $1)=
+    fi
+  else
+    # PORTME fill in a description of your system's linker (not GNU ld)
+    case $host_os in
+    aix3*)
+      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+      _LT_TAGVAR(always_export_symbols, $1)=yes
+      _LT_TAGVAR(archive_expsym_cmds, $1)='$LD -o $output_objdir/$soname $libobjs $deplibs $linker_flags -bE:$export_symbols -T512 -H512 -bM:SRE~$AR $AR_FLAGS $lib $output_objdir/$soname'
+      # Note: this linker hardcodes the directories in LIBPATH if there
+      # are no directories specified by -L.
+      _LT_TAGVAR(hardcode_minus_L, $1)=yes
+      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+	# Neither direct hardcoding nor static linking is supported with a
+	# broken collect2.
+	_LT_TAGVAR(hardcode_direct, $1)=unsupported
+      fi
+      ;;
+
+    aix[[4-9]]*)
+      if test "$host_cpu" = ia64; then
+	# On IA64, the linker does run time linking by default, so we don't
+	# have to do anything special.
+	aix_use_runtimelinking=no
+	exp_sym_flag='-Bexport'
+	no_entry_flag=""
+      else
+	# If we're using GNU nm, then we don't want the "-C" option.
+	# -C means demangle to AIX nm, but means don't demangle with GNU nm
+	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
+	  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && ([substr](\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	else
+	  _LT_TAGVAR(export_symbols_cmds, $1)='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && ([substr](\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	fi
+	aix_use_runtimelinking=no
+
+	# Test if we are trying to use run time linking or normal
+	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
+	# need to do runtime linking.
+	case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)
+	  for ld_flag in $LDFLAGS; do
+	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+	    aix_use_runtimelinking=yes
+	    break
+	  fi
+	  done
+	  ;;
+	esac
+
+	exp_sym_flag='-bexport'
+	no_entry_flag='-bnoentry'
+      fi
+
+      # When large executables or shared objects are built, AIX ld can
+      # have problems creating the table of contents.  If linking a library
+      # or program results in "error TOC overflow" add -mminimal-toc to
+      # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+      # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+      _LT_TAGVAR(archive_cmds, $1)=''
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+      _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
+      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'
+      _LT_TAGVAR(link_all_deplibs, $1)=yes
+      _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'
+
+      if test "$GCC" = yes; then
+	case $host_os in aix4.[[012]]|aix4.[[012]].*)
+	# We only want to do this on AIX 4.2 and lower, the check
+	# below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" &&
+	   strings "$collect2name" | $GREP resolve_lib_name >/dev/null
+	  then
+	  # We have reworked collect2
+	  :
+	  else
+	  # We have old collect2
+	  _LT_TAGVAR(hardcode_direct, $1)=unsupported
+	  # It fails to find uninstalled libraries when the uninstalled
+	  # path is not listed in the libpath.  Setting hardcode_minus_L
+	  # to unsupported forces relinking
+	  _LT_TAGVAR(hardcode_minus_L, $1)=yes
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+	  _LT_TAGVAR(hardcode_libdir_separator, $1)=
+	  fi
+	  ;;
+	esac
+	shared_flag='-shared'
+	if test "$aix_use_runtimelinking" = yes; then
+	  shared_flag="$shared_flag "'${wl}-G'
+	fi
+	_LT_TAGVAR(link_all_deplibs, $1)=no
+      else
+	# not using gcc
+	if test "$host_cpu" = ia64; then
+	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+	# chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+	else
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag='${wl}-G'
+	  else
+	    shared_flag='${wl}-bM:SRE'
+	  fi
+	fi
+      fi
+
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'
+      # It seems that -bexpall does not export symbols beginning with
+      # underscore (_), so it is better to generate a list of symbols to export.
+      _LT_TAGVAR(always_export_symbols, $1)=yes
+      if test "$aix_use_runtimelinking" = yes; then
+	# Warning - without using the other runtime loading flags (-brtl),
+	# -berok will link without error, but may produce a broken library.
+	_LT_TAGVAR(allow_undefined_flag, $1)='-berok'
+        # Determine the default libpath from the value encoded in an
+        # empty executable.
+        _LT_SYS_MODULE_PATH_AIX
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then $ECHO "X${wl}${allow_undefined_flag}" | $Xsed; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+      else
+	if test "$host_cpu" = ia64; then
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'
+	  _LT_TAGVAR(allow_undefined_flag, $1)="-z nodefs"
+	  _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	else
+	 # Determine the default libpath from the value encoded in an
+	 # empty executable.
+	 _LT_SYS_MODULE_PATH_AIX
+	 _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+	  # Warning - without using the other run time loading flags,
+	  # -berok will link without error, but may produce a broken library.
+	  _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'
+	  _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'
+	  # Exported symbols can be pulled into shared objects from archives
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'
+	  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes
+	  # This is similar to how AIX traditionally builds its shared libraries.
+	  _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	fi
+      fi
+      ;;
+
+    amigaos*)
+      case $host_cpu in
+      powerpc)
+            # see comment about AmigaOS4 .so support
+            _LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            _LT_TAGVAR(archive_expsym_cmds, $1)=''
+        ;;
+      m68k)
+            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/a2ixlibrary.data~$ECHO "#define NAME $libname" > $output_objdir/a2ixlibrary.data~$ECHO "#define LIBRARY_ID 1" >> $output_objdir/a2ixlibrary.data~$ECHO "#define VERSION $major" >> $output_objdir/a2ixlibrary.data~$ECHO "#define REVISION $revision" >> $output_objdir/a2ixlibrary.data~$AR $AR_FLAGS $lib $libobjs~$RANLIB $lib~(cd $output_objdir && a2ixlibrary -32)'
+            _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+            _LT_TAGVAR(hardcode_minus_L, $1)=yes
+        ;;
+      esac
+      ;;
+
+    bsdi[[45]]*)
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)=-rdynamic
+      ;;
+
+    cygwin* | mingw* | pw32* | cegcc*)
+      # When not using gcc, we currently assume that we are using
+      # Microsoft Visual C++.
+      # hardcode_libdir_flag_spec is actually meaningless, as there is
+      # no search path for DLLs.
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)=' '
+      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+      # Tell ltmain to make .lib files, not .a files.
+      libext=lib
+      # Tell ltmain to make .dll files, not .so files.
+      shrext_cmds=".dll"
+      # FIXME: Setting linknames here is a bad hack.
+      _LT_TAGVAR(archive_cmds, $1)='$CC -o $lib $libobjs $compiler_flags `$ECHO "X$deplibs" | $Xsed -e '\''s/ -lc$//'\''` -link -dll~linknames='
+      # The linker will automatically build a .lib file if we build a DLL.
+      _LT_TAGVAR(old_archive_from_new_cmds, $1)='true'
+      # FIXME: Should let the user specify the lib program.
+      _LT_TAGVAR(old_archive_cmds, $1)='lib -OUT:$oldlib$oldobjs$old_deplibs'
+      _LT_TAGVAR(fix_srcfile_path, $1)='`cygpath -w "$srcfile"`'
+      _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+      ;;
+
+    darwin* | rhapsody*)
+      _LT_DARWIN_LINKER_FEATURES($1)
+      ;;
+
+    dgux*)
+      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    freebsd1*)
+      _LT_TAGVAR(ld_shlibs, $1)=no
+      ;;
+
+    # FreeBSD 2.2.[012] allows us to include c++rt0.o to get C++ constructor
+    # support.  Future versions do this automatically, but an explicit c++rt0.o
+    # does not break anything, and helps significantly (at the cost of a little
+    # extra space).
+    freebsd2.2*)
+      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags /usr/lib/c++rt0.o'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    # Unfortunately, older versions of FreeBSD 2 do not have this feature.
+    freebsd2*)
+      _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+      _LT_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    # FreeBSD 3 and greater uses gcc -shared to do shared libraries.
+    freebsd* | dragonfly*)
+      _LT_TAGVAR(archive_cmds, $1)='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    hpux9*)
+      if test "$GCC" = yes; then
+	_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      else
+	_LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      fi
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+      _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+
+      # hardcode_minus_L: Not really in the search PATH,
+      # but as the default location of the library.
+      _LT_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+      ;;
+
+    hpux10*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	_LT_TAGVAR(archive_cmds, $1)='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      if test "$with_gnu_ld" = no; then
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+	_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)='+b $libdir'
+	_LT_TAGVAR(hardcode_libdir_separator, $1)=:
+	_LT_TAGVAR(hardcode_direct, $1)=yes
+	_LT_TAGVAR(hardcode_direct_absolute, $1)=yes
+	_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	# hardcode_minus_L: Not really in the search PATH,
+	# but as the default location of the library.
+	_LT_TAGVAR(hardcode_minus_L, $1)=yes
+      fi
+      ;;
+
+    hpux11*)
+      if test "$GCC" = yes -a "$with_gnu_ld" = no; then
+	case $host_cpu in
+	hppa*64*)
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      else
+	case $host_cpu in
+	hppa*64*)
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	ia64*)
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	esac
+      fi
+      if test "$with_gnu_ld" = no; then
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+	_LT_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	case $host_cpu in
+	hppa*64*|ia64*)
+	  _LT_TAGVAR(hardcode_direct, $1)=no
+	  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+	  ;;
+	*)
+	  _LT_TAGVAR(hardcode_direct, $1)=yes
+	  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
+	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+
+	  # hardcode_minus_L: Not really in the search PATH,
+	  # but as the default location of the library.
+	  _LT_TAGVAR(hardcode_minus_L, $1)=yes
+	  ;;
+	esac
+      fi
+      ;;
+
+    irix5* | irix6* | nonstopux*)
+      if test "$GCC" = yes; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	# Try to use the -exported_symbol ld option, if it does not
+	# work, assume that -exports_file does not work either and
+	# implicitly export all symbols.
+        save_LDFLAGS="$LDFLAGS"
+        LDFLAGS="$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null"
+        AC_LINK_IFELSE(int foo(void) {},
+          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'
+        )
+        LDFLAGS="$save_LDFLAGS"
+      else
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'
+      fi
+      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+      _LT_TAGVAR(inherit_rpath, $1)=yes
+      _LT_TAGVAR(link_all_deplibs, $1)=yes
+      ;;
+
+    netbsd* | netbsdelf*-gnu)
+      if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	_LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
+      else
+	_LT_TAGVAR(archive_cmds, $1)='$LD -shared -o $lib $libobjs $deplibs $linker_flags'      # ELF
+      fi
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    newsos6)
+      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    *nto* | *qnx*)
+      ;;
+
+    openbsd*)
+      if test -f /usr/libexec/ld.so; then
+	_LT_TAGVAR(hardcode_direct, $1)=yes
+	_LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+	_LT_TAGVAR(hardcode_direct_absolute, $1)=yes
+	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	  _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	else
+	  case $host_os in
+	   openbsd[[01]].* | openbsd2.[[0-7]] | openbsd2.[[0-7]].*)
+	     _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
+	     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+	     ;;
+	   *)
+	     _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	     _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	     ;;
+	  esac
+	fi
+      else
+	_LT_TAGVAR(ld_shlibs, $1)=no
+      fi
+      ;;
+
+    os2*)
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+      _LT_TAGVAR(archive_cmds, $1)='$ECHO "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~$ECHO DATA >> $output_objdir/$libname.def~$ECHO " SINGLE NONSHARED" >> $output_objdir/$libname.def~$ECHO EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
+      _LT_TAGVAR(old_archive_from_new_cmds, $1)='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      ;;
+
+    osf3*)
+      if test "$GCC" = yes; then
+	_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      else
+	_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+      fi
+      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+      ;;
+
+    osf4* | osf5*)	# as osf3* with the addition of -msym flag
+      if test "$GCC" = yes; then
+	_LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+      else
+	_LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; printf "%s\\n" "-hidden">> $lib.exp~
+	$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'
+
+	# Both c and cxx compiler support -rpath directly
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
+      fi
+      _LT_TAGVAR(archive_cmds_need_lc, $1)='no'
+      _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+      ;;
+
+    solaris*)
+      _LT_TAGVAR(no_undefined_flag, $1)=' -z defs'
+      if test "$GCC" = yes; then
+	wlarc='${wl}'
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $CC -shared ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+      else
+	case `$CC -V 2>&1` in
+	*"Compilers 5.0"*)
+	  wlarc=''
+	  _LT_TAGVAR(archive_cmds, $1)='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
+	  ;;
+	*)
+	  wlarc='${wl}'
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+	  ;;
+	esac
+      fi
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      case $host_os in
+      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;
+      *)
+	# The compiler driver will combine and reorder linker options,
+	# but understands `-z linker_flag'.  GCC discards it without `$wl',
+	# but is careful enough not to reorder.
+	# Supported since Solaris 2.6 (maybe 2.5.1?)
+	if test "$GCC" = yes; then
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'
+	else
+	  _LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'
+	fi
+	;;
+      esac
+      _LT_TAGVAR(link_all_deplibs, $1)=yes
+      ;;
+
+    sunos4*)
+      if test "x$host_vendor" = xsequent; then
+	# Use $CC to link under sequent, because it throws in some extra .o
+	# files that make .init and .fini sections work.
+	_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	_LT_TAGVAR(archive_cmds, $1)='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
+      fi
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_TAGVAR(hardcode_direct, $1)=yes
+      _LT_TAGVAR(hardcode_minus_L, $1)=yes
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    sysv4)
+      case $host_vendor in
+	sni)
+	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  _LT_TAGVAR(hardcode_direct, $1)=yes # is this really true???
+	;;
+	siemens)
+	  ## LD is ld it makes a PLAMLIB
+	  ## CC just makes a GrossModule.
+	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -o $lib $libobjs $deplibs $linker_flags'
+	  _LT_TAGVAR(reload_cmds, $1)='$CC -r -o $output$reload_objs'
+	  _LT_TAGVAR(hardcode_direct, $1)=no
+        ;;
+	motorola)
+	  _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  _LT_TAGVAR(hardcode_direct, $1)=no #Motorola manual says yes, but my tests say they lie
+	;;
+      esac
+      runpath_var='LD_RUN_PATH'
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    sysv4.3*)
+      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='-Bexport'
+      ;;
+
+    sysv4*MP*)
+      if test -d /usr/nec; then
+	_LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	_LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+	runpath_var=LD_RUN_PATH
+	hardcode_runpath_var=yes
+	_LT_TAGVAR(ld_shlibs, $1)=yes
+      fi
+      ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)
+      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+      _LT_TAGVAR(archive_cmds_need_lc, $1)=no
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    sysv5* | sco3.2v5* | sco5v6*)
+      # Note: We can NOT use -z defs as we might desire, because we do not
+      # link with -lc, and that would cause any symbols used from libc to
+      # always be unresolved, which means just about no library would
+      # ever link correctly.  If we're not using GNU ld we use -z text
+      # though, which does catch some bad symbols but isn't as heavy-handed
+      # as -z defs.
+      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+      _LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'
+      _LT_TAGVAR(archive_cmds_need_lc, $1)=no
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'
+      _LT_TAGVAR(hardcode_libdir_separator, $1)=':'
+      _LT_TAGVAR(link_all_deplibs, $1)=yes
+      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'
+      runpath_var='LD_RUN_PATH'
+
+      if test "$GCC" = yes; then
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      else
+	_LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      fi
+      ;;
+
+    uts4*)
+      _LT_TAGVAR(archive_cmds, $1)='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
+      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      ;;
+
+    *)
+      _LT_TAGVAR(ld_shlibs, $1)=no
+      ;;
+    esac
+
+    if test x$host_vendor = xsni; then
+      case $host in
+      sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)
+	_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Blargedynsym'
+	;;
+      esac
+    fi
+  fi
+])
+AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])
+test "$_LT_TAGVAR(ld_shlibs, $1)" = no && can_build_shared=no
+
+_LT_TAGVAR(with_gnu_ld, $1)=$with_gnu_ld
+
+_LT_DECL([], [libext], [0], [Old archive suffix (normally "a")])dnl
+_LT_DECL([], [shrext_cmds], [1], [Shared library suffix (normally ".so")])dnl
+_LT_DECL([], [extract_expsyms_cmds], [2],
+    [The commands to extract the exported symbol list from a shared archive])
+
+#
+# Do we need to explicitly link libc?
+#
+case "x$_LT_TAGVAR(archive_cmds_need_lc, $1)" in
+x|xyes)
+  # Assume -lc should be added
+  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes
+
+  if test "$enable_shared" = yes && test "$GCC" = yes; then
+    case $_LT_TAGVAR(archive_cmds, $1) in
+    *'~'*)
+      # FIXME: we may have to deal with multi-command sequences.
+      ;;
+    '$CC '*)
+      # Test whether the compiler implicitly links with -lc since on some
+      # systems, -lgcc has to come before -lc. If gcc already passes -lc
+      # to ld, don't add -lc before -lgcc.
+      AC_MSG_CHECKING([whether -lc should be explicitly linked in])
+      $RM conftest*
+      echo "$lt_simple_compile_test_code" > conftest.$ac_ext
+
+      if AC_TRY_EVAL(ac_compile) 2>conftest.err; then
+        soname=conftest
+        lib=conftest
+        libobjs=conftest.$ac_objext
+        deplibs=
+        wl=$_LT_TAGVAR(lt_prog_compiler_wl, $1)
+	pic_flag=$_LT_TAGVAR(lt_prog_compiler_pic, $1)
+        compiler_flags=-v
+        linker_flags=-v
+        verstring=
+        output_objdir=.
+        libname=conftest
+        lt_save_allow_undefined_flag=$_LT_TAGVAR(allow_undefined_flag, $1)
+        _LT_TAGVAR(allow_undefined_flag, $1)=
+        if AC_TRY_EVAL(_LT_TAGVAR(archive_cmds, $1) 2\>\&1 \| $GREP \" -lc \" \>/dev/null 2\>\&1)
+        then
+	  _LT_TAGVAR(archive_cmds_need_lc, $1)=no
+        else
+	  _LT_TAGVAR(archive_cmds_need_lc, $1)=yes
+        fi
+        _LT_TAGVAR(allow_undefined_flag, $1)=$lt_save_allow_undefined_flag
+      else
+        cat conftest.err 1>&5
+      fi
+      $RM conftest*
+      AC_MSG_RESULT([$_LT_TAGVAR(archive_cmds_need_lc, $1)])
+      ;;
+    esac
+  fi
+  ;;
+esac
+
+_LT_TAGDECL([build_libtool_need_lc], [archive_cmds_need_lc], [0],
+    [Whether or not to add -lc for building shared libraries])
+_LT_TAGDECL([allow_libtool_libs_with_static_runtimes],
+    [enable_shared_with_static_runtimes], [0],
+    [Whether or not to disallow shared libs when runtime libs are static])
+_LT_TAGDECL([], [export_dynamic_flag_spec], [1],
+    [Compiler flag to allow reflexive dlopens])
+_LT_TAGDECL([], [whole_archive_flag_spec], [1],
+    [Compiler flag to generate shared objects directly from archives])
+_LT_TAGDECL([], [compiler_needs_object], [1],
+    [Whether the compiler copes with passing no objects directly])
+_LT_TAGDECL([], [old_archive_from_new_cmds], [2],
+    [Create an old-style archive from a shared archive])
+_LT_TAGDECL([], [old_archive_from_expsyms_cmds], [2],
+    [Create a temporary old-style archive to link instead of a shared archive])
+_LT_TAGDECL([], [archive_cmds], [2], [Commands used to build a shared archive])
+_LT_TAGDECL([], [archive_expsym_cmds], [2])
+_LT_TAGDECL([], [module_cmds], [2],
+    [Commands used to build a loadable module if different from building
+    a shared archive.])
+_LT_TAGDECL([], [module_expsym_cmds], [2])
+_LT_TAGDECL([], [with_gnu_ld], [1],
+    [Whether we are building with GNU ld or not])
+_LT_TAGDECL([], [allow_undefined_flag], [1],
+    [Flag that allows shared libraries with undefined symbols to be built])
+_LT_TAGDECL([], [no_undefined_flag], [1],
+    [Flag that enforces no undefined symbols])
+_LT_TAGDECL([], [hardcode_libdir_flag_spec], [1],
+    [Flag to hardcode $libdir into a binary during linking.
+    This must work even if $libdir does not exist])
+_LT_TAGDECL([], [hardcode_libdir_flag_spec_ld], [1],
+    [[If ld is used when linking, flag to hardcode $libdir into a binary
+    during linking.  This must work even if $libdir does not exist]])
+_LT_TAGDECL([], [hardcode_libdir_separator], [1],
+    [Whether we need a single "-rpath" flag with a separated argument])
+_LT_TAGDECL([], [hardcode_direct], [0],
+    [Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
+    DIR into the resulting binary])
+_LT_TAGDECL([], [hardcode_direct_absolute], [0],
+    [Set to "yes" if using DIR/libNAME${shared_ext} during linking hardcodes
+    DIR into the resulting binary and the resulting library dependency is
+    "absolute", i.e impossible to change by setting ${shlibpath_var} if the
+    library is relocated])
+_LT_TAGDECL([], [hardcode_minus_L], [0],
+    [Set to "yes" if using the -LDIR flag during linking hardcodes DIR
+    into the resulting binary])
+_LT_TAGDECL([], [hardcode_shlibpath_var], [0],
+    [Set to "yes" if using SHLIBPATH_VAR=DIR during linking hardcodes DIR
+    into the resulting binary])
+_LT_TAGDECL([], [hardcode_automatic], [0],
+    [Set to "yes" if building a shared library automatically hardcodes DIR
+    into the library and all subsequent libraries and executables linked
+    against it])
+_LT_TAGDECL([], [inherit_rpath], [0],
+    [Set to yes if linker adds runtime paths of dependent libraries
+    to runtime path list])
+_LT_TAGDECL([], [link_all_deplibs], [0],
+    [Whether libtool must link a program against all its dependency libraries])
+_LT_TAGDECL([], [fix_srcfile_path], [1],
+    [Fix the shell variable $srcfile for the compiler])
+_LT_TAGDECL([], [always_export_symbols], [0],
+    [Set to "yes" if exported symbols are required])
+_LT_TAGDECL([], [export_symbols_cmds], [2],
+    [The commands to list exported symbols])
+_LT_TAGDECL([], [exclude_expsyms], [1],
+    [Symbols that should not be listed in the preloaded symbols])
+_LT_TAGDECL([], [include_expsyms], [1],
+    [Symbols that must always be exported])
+_LT_TAGDECL([], [prelink_cmds], [2],
+    [Commands necessary for linking programs (against libraries) with templates])
+_LT_TAGDECL([], [file_list_spec], [1],
+    [Specify filename containing input files])
+dnl FIXME: Not yet implemented
+dnl _LT_TAGDECL([], [thread_safe_flag_spec], [1],
+dnl    [Compiler flag to generate thread safe objects])
+])# _LT_LINKER_SHLIBS
+
+
+# _LT_LANG_C_CONFIG([TAG])
+# ------------------------
+# Ensure that the configuration variables for a C compiler are suitably
+# defined.  These variables are subsequently used by _LT_CONFIG to write
+# the compiler configuration to `libtool'.
+m4_defun([_LT_LANG_C_CONFIG],
+[m4_require([_LT_DECL_EGREP])dnl
+lt_save_CC="$CC"
+AC_LANG_PUSH(C)
+
+# Source file extension for C test sources.
+ac_ext=c
+
+# Object file extension for compiled C test sources.
+objext=o
+_LT_TAGVAR(objext, $1)=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="int some_variable = 0;"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='int main(){return(0);}'
+
+_LT_TAG_COMPILER
+# Save the default compiler, since it gets overwritten when the other
+# tags are being tested, and _LT_TAGVAR(compiler, []) is a NOP.
+compiler_DEFAULT=$CC
+
+# save warnings/boilerplate of simple test code
+_LT_COMPILER_BOILERPLATE
+_LT_LINKER_BOILERPLATE
+
+## CAVEAT EMPTOR:
+## There is no encapsulation within the following macros, do not change
+## the running order or otherwise move them around unless you know exactly
+## what you are doing...
+if test -n "$compiler"; then
+  _LT_COMPILER_NO_RTTI($1)
+  _LT_COMPILER_PIC($1)
+  _LT_COMPILER_C_O($1)
+  _LT_COMPILER_FILE_LOCKS($1)
+  _LT_LINKER_SHLIBS($1)
+  _LT_SYS_DYNAMIC_LINKER($1)
+  _LT_LINKER_HARDCODE_LIBPATH($1)
+  LT_SYS_DLOPEN_SELF
+  _LT_CMD_STRIPLIB
+
+  # Report which library types will actually be built
+  AC_MSG_CHECKING([if libtool supports shared libraries])
+  AC_MSG_RESULT([$can_build_shared])
+
+  AC_MSG_CHECKING([whether to build shared libraries])
+  test "$can_build_shared" = "no" && enable_shared=no
+
+  # On AIX, shared libraries and static libraries use the same namespace, and
+  # are all built from PIC.
+  case $host_os in
+  aix3*)
+    test "$enable_shared" = yes && enable_static=no
+    if test -n "$RANLIB"; then
+      archive_cmds="$archive_cmds~\$RANLIB \$lib"
+      postinstall_cmds='$RANLIB $lib'
+    fi
+    ;;
+
+  aix[[4-9]]*)
+    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+      test "$enable_shared" = yes && enable_static=no
+    fi
+    ;;
+  esac
+  AC_MSG_RESULT([$enable_shared])
+
+  AC_MSG_CHECKING([whether to build static libraries])
+  # Make sure either enable_shared or enable_static is yes.
+  test "$enable_shared" = yes || enable_static=yes
+  AC_MSG_RESULT([$enable_static])
+
+  _LT_CONFIG($1)
+fi
+AC_LANG_POP
+CC="$lt_save_CC"
+])# _LT_LANG_C_CONFIG
+
+
+# _LT_PROG_CXX
+# ------------
+# Since AC_PROG_CXX is broken, in that it returns g++ if there is no c++
+# compiler, we have our own version here.
+m4_defun([_LT_PROG_CXX],
+[
+pushdef([AC_MSG_ERROR], [_lt_caught_CXX_error=yes])
+AC_PROG_CXX
+if test -n "$CXX" && ( test "X$CXX" != "Xno" &&
+    ( (test "X$CXX" = "Xg++" && `g++ -v >/dev/null 2>&1` ) ||
+    (test "X$CXX" != "Xg++"))) ; then
+  AC_PROG_CXXCPP
+else
+  _lt_caught_CXX_error=yes
+fi
+popdef([AC_MSG_ERROR])
+])# _LT_PROG_CXX
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([_LT_PROG_CXX], [])
+
+
+# _LT_LANG_CXX_CONFIG([TAG])
+# --------------------------
+# Ensure that the configuration variables for a C++ compiler are suitably
+# defined.  These variables are subsequently used by _LT_CONFIG to write
+# the compiler configuration to `libtool'.
+m4_defun([_LT_LANG_CXX_CONFIG],
+[AC_REQUIRE([_LT_PROG_CXX])dnl
+m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+m4_require([_LT_DECL_EGREP])dnl
+
+AC_LANG_PUSH(C++)
+_LT_TAGVAR(archive_cmds_need_lc, $1)=no
+_LT_TAGVAR(allow_undefined_flag, $1)=
+_LT_TAGVAR(always_export_symbols, $1)=no
+_LT_TAGVAR(archive_expsym_cmds, $1)=
+_LT_TAGVAR(compiler_needs_object, $1)=no
+_LT_TAGVAR(export_dynamic_flag_spec, $1)=
+_LT_TAGVAR(hardcode_direct, $1)=no
+_LT_TAGVAR(hardcode_direct_absolute, $1)=no
+_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=
+_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=
+_LT_TAGVAR(hardcode_libdir_separator, $1)=
+_LT_TAGVAR(hardcode_minus_L, $1)=no
+_LT_TAGVAR(hardcode_shlibpath_var, $1)=unsupported
+_LT_TAGVAR(hardcode_automatic, $1)=no
+_LT_TAGVAR(inherit_rpath, $1)=no
+_LT_TAGVAR(module_cmds, $1)=
+_LT_TAGVAR(module_expsym_cmds, $1)=
+_LT_TAGVAR(link_all_deplibs, $1)=unknown
+_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds
+_LT_TAGVAR(no_undefined_flag, $1)=
+_LT_TAGVAR(whole_archive_flag_spec, $1)=
+_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no
+
+# Source file extension for C++ test sources.
+ac_ext=cpp
+
+# Object file extension for compiled C++ test sources.
+objext=o
+_LT_TAGVAR(objext, $1)=$objext
+
+# No sense in running all these tests if we already determined that
+# the CXX compiler isn't working.  Some variables (like enable_shared)
+# are currently assumed to apply to all compilers on this platform,
+# and will be corrupted by setting them based on a non-working compiler.
+if test "$_lt_caught_CXX_error" != yes; then
+  # Code to be used in simple compile tests
+  lt_simple_compile_test_code="int some_variable = 0;"
+
+  # Code to be used in simple link tests
+  lt_simple_link_test_code='int main(int, char *[[]]) { return(0); }'
+
+  # ltmain only uses $CC for tagged configurations so make sure $CC is set.
+  _LT_TAG_COMPILER
+
+  # save warnings/boilerplate of simple test code
+  _LT_COMPILER_BOILERPLATE
+  _LT_LINKER_BOILERPLATE
+
+  # Allow CC to be a program name with arguments.
+  lt_save_CC=$CC
+  lt_save_LD=$LD
+  lt_save_GCC=$GCC
+  GCC=$GXX
+  lt_save_with_gnu_ld=$with_gnu_ld
+  lt_save_path_LD=$lt_cv_path_LD
+  if test -n "${lt_cv_prog_gnu_ldcxx+set}"; then
+    lt_cv_prog_gnu_ld=$lt_cv_prog_gnu_ldcxx
+  else
+    $as_unset lt_cv_prog_gnu_ld
+  fi
+  if test -n "${lt_cv_path_LDCXX+set}"; then
+    lt_cv_path_LD=$lt_cv_path_LDCXX
+  else
+    $as_unset lt_cv_path_LD
+  fi
+  test -z "${LDCXX+set}" || LD=$LDCXX
+  CC=${CXX-"c++"}
+  compiler=$CC
+  _LT_TAGVAR(compiler, $1)=$CC
+  _LT_CC_BASENAME([$compiler])
+
+  if test -n "$compiler"; then
+    # We don't want -fno-exception when compiling C++ code, so set the
+    # no_builtin_flag separately
+    if test "$GXX" = yes; then
+      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=' -fno-builtin'
+    else
+      _LT_TAGVAR(lt_prog_compiler_no_builtin_flag, $1)=
+    fi
+
+    if test "$GXX" = yes; then
+      # Set up default GNU C++ configuration
+
+      LT_PATH_LD
+
+      # Check if GNU C++ uses GNU ld as the underlying linker, since the
+      # archiving commands below assume that GNU ld is being used.
+      if test "$with_gnu_ld" = yes; then
+        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+        _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+
+        # If archive_cmds runs LD, not CC, wlarc should be empty
+        # XXX I think wlarc can be eliminated in ltcf-cxx, but I need to
+        #     investigate it a little bit more. (MM)
+        wlarc='${wl}'
+
+        # ancient GNU ld didn't support --whole-archive et. al.
+        if eval "`$CC -print-prog-name=ld` --help 2>&1" |
+	  $GREP 'no-whole-archive' > /dev/null; then
+          _LT_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+        else
+          _LT_TAGVAR(whole_archive_flag_spec, $1)=
+        fi
+      else
+        with_gnu_ld=no
+        wlarc=
+
+        # A generic and very simple default shared library creation
+        # command for GNU C++ for the case where it uses the native
+        # linker, instead of GNU ld.  If possible, this setting should
+        # overridden to take advantage of the native linker features on
+        # the platform it is being used on.
+        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
+      fi
+
+      # Commands to make compiler produce verbose output that lists
+      # what "hidden" libraries, object files and flags are used when
+      # linking a shared library.
+      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "\-L"'
+
+    else
+      GXX=no
+      with_gnu_ld=no
+      wlarc=
+    fi
+
+    # PORTME: fill in a description of your system's C++ link characteristics
+    AC_MSG_CHECKING([whether the $compiler linker ($LD) supports shared libraries])
+    _LT_TAGVAR(ld_shlibs, $1)=yes
+    case $host_os in
+      aix3*)
+        # FIXME: insert proper C++ library support
+        _LT_TAGVAR(ld_shlibs, $1)=no
+        ;;
+      aix[[4-9]]*)
+        if test "$host_cpu" = ia64; then
+          # On IA64, the linker does run time linking by default, so we don't
+          # have to do anything special.
+          aix_use_runtimelinking=no
+          exp_sym_flag='-Bexport'
+          no_entry_flag=""
+        else
+          aix_use_runtimelinking=no
+
+          # Test if we are trying to use run time linking or normal
+          # AIX style linking. If -brtl is somewhere in LDFLAGS, we
+          # need to do runtime linking.
+          case $host_os in aix4.[[23]]|aix4.[[23]].*|aix[[5-9]]*)
+	    for ld_flag in $LDFLAGS; do
+	      case $ld_flag in
+	      *-brtl*)
+	        aix_use_runtimelinking=yes
+	        break
+	        ;;
+	      esac
+	    done
+	    ;;
+          esac
+
+          exp_sym_flag='-bexport'
+          no_entry_flag='-bnoentry'
+        fi
+
+        # When large executables or shared objects are built, AIX ld can
+        # have problems creating the table of contents.  If linking a library
+        # or program results in "error TOC overflow" add -mminimal-toc to
+        # CXXFLAGS/CFLAGS for g++/gcc.  In the cases where that is not
+        # enough to fix the problem, add -Wl,-bbigtoc to LDFLAGS.
+
+        _LT_TAGVAR(archive_cmds, $1)=''
+        _LT_TAGVAR(hardcode_direct, $1)=yes
+        _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
+        _LT_TAGVAR(hardcode_libdir_separator, $1)=':'
+        _LT_TAGVAR(link_all_deplibs, $1)=yes
+        _LT_TAGVAR(file_list_spec, $1)='${wl}-f,'
+
+        if test "$GXX" = yes; then
+          case $host_os in aix4.[[012]]|aix4.[[012]].*)
+          # We only want to do this on AIX 4.2 and lower, the check
+          # below for broken collect2 doesn't work under 4.3+
+	  collect2name=`${CC} -print-prog-name=collect2`
+	  if test -f "$collect2name" &&
+	     strings "$collect2name" | $GREP resolve_lib_name >/dev/null
+	  then
+	    # We have reworked collect2
+	    :
+	  else
+	    # We have old collect2
+	    _LT_TAGVAR(hardcode_direct, $1)=unsupported
+	    # It fails to find uninstalled libraries when the uninstalled
+	    # path is not listed in the libpath.  Setting hardcode_minus_L
+	    # to unsupported forces relinking
+	    _LT_TAGVAR(hardcode_minus_L, $1)=yes
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+	    _LT_TAGVAR(hardcode_libdir_separator, $1)=
+	  fi
+          esac
+          shared_flag='-shared'
+	  if test "$aix_use_runtimelinking" = yes; then
+	    shared_flag="$shared_flag "'${wl}-G'
+	  fi
+        else
+          # not using gcc
+          if test "$host_cpu" = ia64; then
+	  # VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
+	  # chokes on -Wl,-G. The following line is correct:
+	  shared_flag='-G'
+          else
+	    if test "$aix_use_runtimelinking" = yes; then
+	      shared_flag='${wl}-G'
+	    else
+	      shared_flag='${wl}-bM:SRE'
+	    fi
+          fi
+        fi
+
+        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-bexpall'
+        # It seems that -bexpall does not export symbols beginning with
+        # underscore (_), so it is better to generate a list of symbols to
+	# export.
+        _LT_TAGVAR(always_export_symbols, $1)=yes
+        if test "$aix_use_runtimelinking" = yes; then
+          # Warning - without using the other runtime loading flags (-brtl),
+          # -berok will link without error, but may produce a broken library.
+          _LT_TAGVAR(allow_undefined_flag, $1)='-berok'
+          # Determine the default libpath from the value encoded in an empty
+          # executable.
+          _LT_SYS_MODULE_PATH_AIX
+          _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+
+          _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then $ECHO "X${wl}${allow_undefined_flag}" | $Xsed; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+        else
+          if test "$host_cpu" = ia64; then
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $libdir:/usr/lib:/lib'
+	    _LT_TAGVAR(allow_undefined_flag, $1)="-z nodefs"
+	    _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+          else
+	    # Determine the default libpath from the value encoded in an
+	    # empty executable.
+	    _LT_SYS_MODULE_PATH_AIX
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-blibpath:$libdir:'"$aix_libpath"
+	    # Warning - without using the other run time loading flags,
+	    # -berok will link without error, but may produce a broken library.
+	    _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-bernotok'
+	    _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-berok'
+	    # Exported symbols can be pulled into shared objects from archives
+	    _LT_TAGVAR(whole_archive_flag_spec, $1)='$convenience'
+	    _LT_TAGVAR(archive_cmds_need_lc, $1)=yes
+	    # This is similar to how AIX traditionally builds its shared
+	    # libraries.
+	    _LT_TAGVAR(archive_expsym_cmds, $1)="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+          fi
+        fi
+        ;;
+
+      beos*)
+	if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
+	  _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+	  # Joseph Beckenbach <jrb3@best.com> says some releases of gcc
+	  # support --undefined.  This deserves some investigation.  FIXME
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	else
+	  _LT_TAGVAR(ld_shlibs, $1)=no
+	fi
+	;;
+
+      chorus*)
+        case $cc_basename in
+          *)
+	  # FIXME: insert proper C++ library support
+	  _LT_TAGVAR(ld_shlibs, $1)=no
+	  ;;
+        esac
+        ;;
+
+      cygwin* | mingw* | pw32* | cegcc*)
+        # _LT_TAGVAR(hardcode_libdir_flag_spec, $1) is actually meaningless,
+        # as there is no search path for DLLs.
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-L$libdir'
+        _LT_TAGVAR(allow_undefined_flag, $1)=unsupported
+        _LT_TAGVAR(always_export_symbols, $1)=no
+        _LT_TAGVAR(enable_shared_with_static_runtimes, $1)=yes
+
+        if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
+          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+          # If the export-symbols file already is a .def file (1st line
+          # is EXPORTS), use it as is; otherwise, prepend...
+          _LT_TAGVAR(archive_expsym_cmds, $1)='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
+	    cp $export_symbols $output_objdir/$soname.def;
+          else
+	    echo EXPORTS > $output_objdir/$soname.def;
+	    cat $export_symbols >> $output_objdir/$soname.def;
+          fi~
+          $CC -shared -nostdlib $output_objdir/$soname.def $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+        else
+          _LT_TAGVAR(ld_shlibs, $1)=no
+        fi
+        ;;
+      darwin* | rhapsody*)
+        _LT_DARWIN_LINKER_FEATURES($1)
+	;;
+
+      dgux*)
+        case $cc_basename in
+          ec++*)
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+          ghcx*)
+	    # Green Hills C++ Compiler
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+          *)
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+        esac
+        ;;
+
+      freebsd[[12]]*)
+        # C++ shared libraries reported to be fairly broken before
+	# switch to ELF
+        _LT_TAGVAR(ld_shlibs, $1)=no
+        ;;
+
+      freebsd-elf*)
+        _LT_TAGVAR(archive_cmds_need_lc, $1)=no
+        ;;
+
+      freebsd* | dragonfly*)
+        # FreeBSD 3 and later use GNU C++ and GNU ld with standard ELF
+        # conventions
+        _LT_TAGVAR(ld_shlibs, $1)=yes
+        ;;
+
+      gnu*)
+        ;;
+
+      hpux9*)
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+        _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+        _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+        _LT_TAGVAR(hardcode_direct, $1)=yes
+        _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,
+				             # but as the default
+				             # location of the library.
+
+        case $cc_basename in
+          CC*)
+            # FIXME: insert proper C++ library support
+            _LT_TAGVAR(ld_shlibs, $1)=no
+            ;;
+          aCC*)
+            _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -b ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+            # Commands to make compiler produce verbose output that lists
+            # what "hidden" libraries, object files and flags are used when
+            # linking a shared library.
+            #
+            # There doesn't appear to be a way to prevent this compiler from
+            # explicitly linking system object files so we need to strip them
+            # from the output so that they don't get included in the library
+            # dependencies.
+            output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $EGREP "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; $ECHO "X$list" | $Xsed'
+            ;;
+          *)
+            if test "$GXX" = yes; then
+              _LT_TAGVAR(archive_cmds, $1)='$RM $output_objdir/$soname~$CC -shared -nostdlib -fPIC ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+            else
+              # FIXME: insert proper C++ library support
+              _LT_TAGVAR(ld_shlibs, $1)=no
+            fi
+            ;;
+        esac
+        ;;
+
+      hpux10*|hpux11*)
+        if test $with_gnu_ld = no; then
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}+b ${wl}$libdir'
+	  _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+
+          case $host_cpu in
+            hppa*64*|ia64*)
+              ;;
+            *)
+	      _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+              ;;
+          esac
+        fi
+        case $host_cpu in
+          hppa*64*|ia64*)
+            _LT_TAGVAR(hardcode_direct, $1)=no
+            _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+            ;;
+          *)
+            _LT_TAGVAR(hardcode_direct, $1)=yes
+            _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
+            _LT_TAGVAR(hardcode_minus_L, $1)=yes # Not in the search PATH,
+					         # but as the default
+					         # location of the library.
+            ;;
+        esac
+
+        case $cc_basename in
+          CC*)
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+          aCC*)
+	    case $host_cpu in
+	      hppa*64*)
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	        ;;
+	      ia64*)
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	        ;;
+	      *)
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	        ;;
+	    esac
+	    # Commands to make compiler produce verbose output that lists
+	    # what "hidden" libraries, object files and flags are used when
+	    # linking a shared library.
+	    #
+	    # There doesn't appear to be a way to prevent this compiler from
+	    # explicitly linking system object files so we need to strip them
+	    # from the output so that they don't get included in the library
+	    # dependencies.
+	    output_verbose_link_cmd='templist=`($CC -b $CFLAGS -v conftest.$objext 2>&1) | $GREP "\-L"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; $ECHO "X$list" | $Xsed'
+	    ;;
+          *)
+	    if test "$GXX" = yes; then
+	      if test $with_gnu_ld = no; then
+	        case $host_cpu in
+	          hppa*64*)
+	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	            ;;
+	          ia64*)
+	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	            ;;
+	          *)
+	            _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib -fPIC ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	            ;;
+	        esac
+	      fi
+	    else
+	      # FIXME: insert proper C++ library support
+	      _LT_TAGVAR(ld_shlibs, $1)=no
+	    fi
+	    ;;
+        esac
+        ;;
+
+      interix[[3-9]]*)
+	_LT_TAGVAR(hardcode_direct, $1)=no
+	_LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	# Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
+	# Instead, shared libraries are loaded at an image base (0x10000000 by
+	# default) and relocated if they conflict, which is a slow very memory
+	# consuming and fragmenting process.  To avoid this, we pick a random,
+	# 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
+	# time.  Moving up from 0x10000000 also allows more sbrk(2) space.
+	_LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+	_LT_TAGVAR(archive_expsym_cmds, $1)='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+	;;
+      irix5* | irix6*)
+        case $cc_basename in
+          CC*)
+	    # SGI C++
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared -all -multigot $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+
+	    # Archives containing C++ object files must be created using
+	    # "CC -ar", where "CC" is the IRIX C++ compiler.  This is
+	    # necessary to make sure instantiated templates are included
+	    # in the archive.
+	    _LT_TAGVAR(old_archive_cmds, $1)='$CC -ar -WR,-u -o $oldlib $oldobjs'
+	    ;;
+          *)
+	    if test "$GXX" = yes; then
+	      if test "$with_gnu_ld" = no; then
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+	      else
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` -o $lib'
+	      fi
+	    fi
+	    _LT_TAGVAR(link_all_deplibs, $1)=yes
+	    ;;
+        esac
+        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+        _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+        _LT_TAGVAR(inherit_rpath, $1)=yes
+        ;;
+
+      linux* | k*bsd*-gnu | kopensolaris*-gnu)
+        case $cc_basename in
+          KCC*)
+	    # Kuck and Associates, Inc. (KAI) C++ Compiler
+
+	    # KCC will only create a shared library if the output file
+	    # ends with ".so" (or ".sl" for HP-UX), so rename the library
+	    # to its proper name (with version) after linking.
+	    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo $lib | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib ${wl}-retain-symbols-file,$export_symbols; mv \$templib $lib'
+	    # Commands to make compiler produce verbose output that lists
+	    # what "hidden" libraries, object files and flags are used when
+	    # linking a shared library.
+	    #
+	    # There doesn't appear to be a way to prevent this compiler from
+	    # explicitly linking system object files so we need to strip them
+	    # from the output so that they don't get included in the library
+	    # dependencies.
+	    output_verbose_link_cmd='templist=`$CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1 | $GREP "ld"`; rm -f libconftest$shared_ext; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; $ECHO "X$list" | $Xsed'
+
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+
+	    # Archives containing C++ object files must be created using
+	    # "CC -Bstatic", where "CC" is the KAI C++ compiler.
+	    _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs'
+	    ;;
+	  icpc* | ecpc* )
+	    # Intel C++
+	    with_gnu_ld=yes
+	    # version 8.0 and above of icpc choke on multiply defined symbols
+	    # if we add $predep_objects and $postdep_objects, however 7.1 and
+	    # earlier do not add the objects themselves.
+	    case `$CC -V 2>&1` in
+	      *"Version 7."*)
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+		_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+		;;
+	      *)  # Version 8.0 or newer
+	        tmp_idyn=
+	        case $host_cpu in
+		  ia64*) tmp_idyn=' -i_dynamic';;
+		esac
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+		_LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared'"$tmp_idyn"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+		;;
+	    esac
+	    _LT_TAGVAR(archive_cmds_need_lc, $1)=no
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+	    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
+	    ;;
+          pgCC* | pgcpp*)
+            # Portland Group C++ compiler
+	    case `$CC -V` in
+	    *pgCC\ [[1-5]]* | *pgcpp\ [[1-5]]*)
+	      _LT_TAGVAR(prelink_cmds, $1)='tpldir=Template.dir~
+		rm -rf $tpldir~
+		$CC --prelink_objects --instantiation_dir $tpldir $objs $libobjs $compile_deplibs~
+		compile_command="$compile_command `find $tpldir -name \*.o | $NL2SP`"'
+	      _LT_TAGVAR(old_archive_cmds, $1)='tpldir=Template.dir~
+		rm -rf $tpldir~
+		$CC --prelink_objects --instantiation_dir $tpldir $oldobjs$old_deplibs~
+		$AR $AR_FLAGS $oldlib$oldobjs$old_deplibs `find $tpldir -name \*.o | $NL2SP`~
+		$RANLIB $oldlib'
+	      _LT_TAGVAR(archive_cmds, $1)='tpldir=Template.dir~
+		rm -rf $tpldir~
+		$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
+		$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'
+	      _LT_TAGVAR(archive_expsym_cmds, $1)='tpldir=Template.dir~
+		rm -rf $tpldir~
+		$CC --prelink_objects --instantiation_dir $tpldir $predep_objects $libobjs $deplibs $convenience $postdep_objects~
+		$CC -shared $pic_flag $predep_objects $libobjs $deplibs `find $tpldir -name \*.o | $NL2SP` $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'
+	      ;;
+	    *) # Version 6 will use weak symbols
+	      _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname -o $lib'
+	      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname ${wl}-retain-symbols-file ${wl}$export_symbols -o $lib'
+	      ;;
+	    esac
+
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}--rpath ${wl}$libdir'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+	    _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+            ;;
+	  cxx*)
+	    # Compaq C++
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname  -o $lib ${wl}-retain-symbols-file $wl$export_symbols'
+
+	    runpath_var=LD_RUN_PATH
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
+	    _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	    # Commands to make compiler produce verbose output that lists
+	    # what "hidden" libraries, object files and flags are used when
+	    # linking a shared library.
+	    #
+	    # There doesn't appear to be a way to prevent this compiler from
+	    # explicitly linking system object files so we need to strip them
+	    # from the output so that they don't get included in the library
+	    # dependencies.
+	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld"`; templist=`$ECHO "X$templist" | $Xsed -e "s/\(^.*ld.*\)\( .*ld .*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; $ECHO "X$list" | $Xsed'
+	    ;;
+	  xl*)
+	    # IBM XL 8.0 on PPC, with GNU ld
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}--export-dynamic'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	    if test "x$supports_anon_versioning" = xyes; then
+	      _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $output_objdir/$libname.ver~
+		cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+		echo "local: *; };" >> $output_objdir/$libname.ver~
+		$CC -qmkshrobj $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+	    fi
+	    ;;
+	  *)
+	    case `$CC -V 2>&1 | sed 5q` in
+	    *Sun\ C*)
+	      # Sun C++ 5.9
+	      _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'
+	      _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	      _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G${allow_undefined_flag} -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file ${wl}$export_symbols'
+	      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+	      _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; $ECHO \"$new_convenience\"` ${wl}--no-whole-archive'
+	      _LT_TAGVAR(compiler_needs_object, $1)=yes
+
+	      # Not sure whether something based on
+	      # $CC $CFLAGS -v conftest.$objext -o libconftest$shared_ext 2>&1
+	      # would be better.
+	      output_verbose_link_cmd='echo'
+
+	      # Archives containing C++ object files must be created using
+	      # "CC -xar", where "CC" is the Sun C++ compiler.  This is
+	      # necessary to make sure instantiated templates are included
+	      # in the archive.
+	      _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'
+	      ;;
+	    esac
+	    ;;
+	esac
+	;;
+
+      lynxos*)
+        # FIXME: insert proper C++ library support
+	_LT_TAGVAR(ld_shlibs, $1)=no
+	;;
+
+      m88k*)
+        # FIXME: insert proper C++ library support
+        _LT_TAGVAR(ld_shlibs, $1)=no
+	;;
+
+      mvs*)
+        case $cc_basename in
+          cxx*)
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+	  *)
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+	esac
+	;;
+
+      netbsd*)
+        if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
+	  _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable  -o $lib $predep_objects $libobjs $deplibs $postdep_objects $linker_flags'
+	  wlarc=
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+	  _LT_TAGVAR(hardcode_direct, $1)=yes
+	  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+	fi
+	# Workaround some broken pre-1.5 toolchains
+	output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP conftest.$objext | $SED -e "s:-lgcc -lc -lgcc::"'
+	;;
+
+      *nto* | *qnx*)
+        _LT_TAGVAR(ld_shlibs, $1)=yes
+	;;
+
+      openbsd2*)
+        # C++ shared libraries are fairly broken
+	_LT_TAGVAR(ld_shlibs, $1)=no
+	;;
+
+      openbsd*)
+	if test -f /usr/libexec/ld.so; then
+	  _LT_TAGVAR(hardcode_direct, $1)=yes
+	  _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+	  _LT_TAGVAR(hardcode_direct_absolute, $1)=yes
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -o $lib'
+	  _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	  if test -z "`echo __ELF__ | $CC -E - | grep __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared $pic_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-retain-symbols-file,$export_symbols -o $lib'
+	    _LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-E'
+	    _LT_TAGVAR(whole_archive_flag_spec, $1)="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+	  fi
+	  output_verbose_link_cmd=echo
+	else
+	  _LT_TAGVAR(ld_shlibs, $1)=no
+	fi
+	;;
+
+      osf3* | osf4* | osf5*)
+        case $cc_basename in
+          KCC*)
+	    # Kuck and Associates, Inc. (KAI) C++ Compiler
+
+	    # KCC will only create a shared library if the output file
+	    # ends with ".so" (or ".sl" for HP-UX), so rename the library
+	    # to its proper name (with version) after linking.
+	    _LT_TAGVAR(archive_cmds, $1)='tempext=`echo $shared_ext | $SED -e '\''s/\([[^()0-9A-Za-z{}]]\)/\\\\\1/g'\''`; templib=`echo "$lib" | $SED -e "s/\${tempext}\..*/.so/"`; $CC $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags --soname $soname -o \$templib; mv \$templib $lib'
+
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath,$libdir'
+	    _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	    # Archives containing C++ object files must be created using
+	    # the KAI C++ compiler.
+	    case $host in
+	      osf3*) _LT_TAGVAR(old_archive_cmds, $1)='$CC -Bstatic -o $oldlib $oldobjs' ;;
+	      *) _LT_TAGVAR(old_archive_cmds, $1)='$CC -o $oldlib $oldobjs' ;;
+	    esac
+	    ;;
+          RCC*)
+	    # Rational C++ 2.4.1
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+          cxx*)
+	    case $host in
+	      osf3*)
+	        _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $soname `test -n "$verstring" && $ECHO "X${wl}-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+		;;
+	      *)
+	        _LT_TAGVAR(allow_undefined_flag, $1)=' -expect_unresolved \*'
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib'
+	        _LT_TAGVAR(archive_expsym_cmds, $1)='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done~
+	          echo "-hidden">> $lib.exp~
+	          $CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags -msym -soname $soname ${wl}-input ${wl}$lib.exp  `test -n "$verstring" && $ECHO "X-set_version $verstring" | $Xsed` -update_registry ${output_objdir}/so_locations -o $lib~
+	          $RM $lib.exp'
+	        _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-rpath $libdir'
+		;;
+	    esac
+
+	    _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	    # Commands to make compiler produce verbose output that lists
+	    # what "hidden" libraries, object files and flags are used when
+	    # linking a shared library.
+	    #
+	    # There doesn't appear to be a way to prevent this compiler from
+	    # explicitly linking system object files so we need to strip them
+	    # from the output so that they don't get included in the library
+	    # dependencies.
+	    output_verbose_link_cmd='templist=`$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "ld" | $GREP -v "ld:"`; templist=`$ECHO "X$templist" | $Xsed -e "s/\(^.*ld.*\)\( .*ld.*$\)/\1/"`; list=""; for z in $templist; do case $z in conftest.$objext) list="$list $z";; *.$objext);; *) list="$list $z";;esac; done; $ECHO "X$list" | $Xsed'
+	    ;;
+	  *)
+	    if test "$GXX" = yes && test "$with_gnu_ld" = no; then
+	      _LT_TAGVAR(allow_undefined_flag, $1)=' ${wl}-expect_unresolved ${wl}\*'
+	      case $host in
+	        osf3*)
+	          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "X${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+		  ;;
+	        *)
+	          _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib ${allow_undefined_flag} $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && $ECHO "${wl}-set_version ${wl}$verstring" | $Xsed` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+		  ;;
+	      esac
+
+	      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-rpath ${wl}$libdir'
+	      _LT_TAGVAR(hardcode_libdir_separator, $1)=:
+
+	      # Commands to make compiler produce verbose output that lists
+	      # what "hidden" libraries, object files and flags are used when
+	      # linking a shared library.
+	      output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "\-L"'
+
+	    else
+	      # FIXME: insert proper C++ library support
+	      _LT_TAGVAR(ld_shlibs, $1)=no
+	    fi
+	    ;;
+        esac
+        ;;
+
+      psos*)
+        # FIXME: insert proper C++ library support
+        _LT_TAGVAR(ld_shlibs, $1)=no
+        ;;
+
+      sunos4*)
+        case $cc_basename in
+          CC*)
+	    # Sun C++ 4.x
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+          lcc*)
+	    # Lucid
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+          *)
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+        esac
+        ;;
+
+      solaris*)
+        case $cc_basename in
+          CC*)
+	    # Sun C++ 4.2, 5.x and Centerline C++
+            _LT_TAGVAR(archive_cmds_need_lc,$1)=yes
+	    _LT_TAGVAR(no_undefined_flag, $1)=' -zdefs'
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -G${allow_undefined_flag}  -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+	      $CC -G${allow_undefined_flag} ${wl}-M ${wl}$lib.exp -h$soname -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
+
+	    _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='-R$libdir'
+	    _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+	    case $host_os in
+	      solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;
+	      *)
+		# The compiler driver will combine and reorder linker options,
+		# but understands `-z linker_flag'.
+	        # Supported since Solaris 2.6 (maybe 2.5.1?)
+		_LT_TAGVAR(whole_archive_flag_spec, $1)='-z allextract$convenience -z defaultextract'
+	        ;;
+	    esac
+	    _LT_TAGVAR(link_all_deplibs, $1)=yes
+
+	    output_verbose_link_cmd='echo'
+
+	    # Archives containing C++ object files must be created using
+	    # "CC -xar", where "CC" is the Sun C++ compiler.  This is
+	    # necessary to make sure instantiated templates are included
+	    # in the archive.
+	    _LT_TAGVAR(old_archive_cmds, $1)='$CC -xar -o $oldlib $oldobjs'
+	    ;;
+          gcx*)
+	    # Green Hills C++ Compiler
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+
+	    # The C++ compiler must be used to create the archive.
+	    _LT_TAGVAR(old_archive_cmds, $1)='$CC $LDFLAGS -archive -o $oldlib $oldobjs'
+	    ;;
+          *)
+	    # GNU C++ compiler with Solaris linker
+	    if test "$GXX" = yes && test "$with_gnu_ld" = no; then
+	      _LT_TAGVAR(no_undefined_flag, $1)=' ${wl}-z ${wl}defs'
+	      if $CC --version | $GREP -v '^2\.7' > /dev/null; then
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -shared -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	        _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+		  $CC -shared -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
+
+	        # Commands to make compiler produce verbose output that lists
+	        # what "hidden" libraries, object files and flags are used when
+	        # linking a shared library.
+	        output_verbose_link_cmd='$CC -shared $CFLAGS -v conftest.$objext 2>&1 | $GREP "\-L"'
+	      else
+	        # g++ 2.7 appears to require `-G' NOT `-shared' on this
+	        # platform.
+	        _LT_TAGVAR(archive_cmds, $1)='$CC -G -nostdlib $LDFLAGS $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-h $wl$soname -o $lib'
+	        _LT_TAGVAR(archive_expsym_cmds, $1)='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
+		  $CC -G -nostdlib ${wl}-M $wl$lib.exp -o $lib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags~$RM $lib.exp'
+
+	        # Commands to make compiler produce verbose output that lists
+	        # what "hidden" libraries, object files and flags are used when
+	        # linking a shared library.
+	        output_verbose_link_cmd='$CC -G $CFLAGS -v conftest.$objext 2>&1 | $GREP "\-L"'
+	      fi
+
+	      _LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R $wl$libdir'
+	      case $host_os in
+		solaris2.[[0-5]] | solaris2.[[0-5]].*) ;;
+		*)
+		  _LT_TAGVAR(whole_archive_flag_spec, $1)='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'
+		  ;;
+	      esac
+	    fi
+	    ;;
+        esac
+        ;;
+
+    sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[[01]].[[10]]* | unixware7* | sco3.2v5.0.[[024]]*)
+      _LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+      _LT_TAGVAR(archive_cmds_need_lc, $1)=no
+      _LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+      runpath_var='LD_RUN_PATH'
+
+      case $cc_basename in
+        CC*)
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+	*)
+	  _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  ;;
+      esac
+      ;;
+
+      sysv5* | sco3.2v5* | sco5v6*)
+	# Note: We can NOT use -z defs as we might desire, because we do not
+	# link with -lc, and that would cause any symbols used from libc to
+	# always be unresolved, which means just about no library would
+	# ever link correctly.  If we're not using GNU ld we use -z text
+	# though, which does catch some bad symbols but isn't as heavy-handed
+	# as -z defs.
+	_LT_TAGVAR(no_undefined_flag, $1)='${wl}-z,text'
+	_LT_TAGVAR(allow_undefined_flag, $1)='${wl}-z,nodefs'
+	_LT_TAGVAR(archive_cmds_need_lc, $1)=no
+	_LT_TAGVAR(hardcode_shlibpath_var, $1)=no
+	_LT_TAGVAR(hardcode_libdir_flag_spec, $1)='${wl}-R,$libdir'
+	_LT_TAGVAR(hardcode_libdir_separator, $1)=':'
+	_LT_TAGVAR(link_all_deplibs, $1)=yes
+	_LT_TAGVAR(export_dynamic_flag_spec, $1)='${wl}-Bexport'
+	runpath_var='LD_RUN_PATH'
+
+	case $cc_basename in
+          CC*)
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	    ;;
+	  *)
+	    _LT_TAGVAR(archive_cmds, $1)='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	    _LT_TAGVAR(archive_expsym_cmds, $1)='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	    ;;
+	esac
+      ;;
+
+      tandem*)
+        case $cc_basename in
+          NCC*)
+	    # NonStop-UX NCC 3.20
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+          *)
+	    # FIXME: insert proper C++ library support
+	    _LT_TAGVAR(ld_shlibs, $1)=no
+	    ;;
+        esac
+        ;;
+
+      vxworks*)
+        # FIXME: insert proper C++ library support
+        _LT_TAGVAR(ld_shlibs, $1)=no
+        ;;
+
+      *)
+        # FIXME: insert proper C++ library support
+        _LT_TAGVAR(ld_shlibs, $1)=no
+        ;;
+    esac
+
+    AC_MSG_RESULT([$_LT_TAGVAR(ld_shlibs, $1)])
+    test "$_LT_TAGVAR(ld_shlibs, $1)" = no && can_build_shared=no
+
+    _LT_TAGVAR(GCC, $1)="$GXX"
+    _LT_TAGVAR(LD, $1)="$LD"
+
+    ## CAVEAT EMPTOR:
+    ## There is no encapsulation within the following macros, do not change
+    ## the running order or otherwise move them around unless you know exactly
+    ## what you are doing...
+    _LT_SYS_HIDDEN_LIBDEPS($1)
+    _LT_COMPILER_PIC($1)
+    _LT_COMPILER_C_O($1)
+    _LT_COMPILER_FILE_LOCKS($1)
+    _LT_LINKER_SHLIBS($1)
+    _LT_SYS_DYNAMIC_LINKER($1)
+    _LT_LINKER_HARDCODE_LIBPATH($1)
+
+    _LT_CONFIG($1)
+  fi # test -n "$compiler"
+
+  CC=$lt_save_CC
+  LDCXX=$LD
+  LD=$lt_save_LD
+  GCC=$lt_save_GCC
+  with_gnu_ld=$lt_save_with_gnu_ld
+  lt_cv_path_LDCXX=$lt_cv_path_LD
+  lt_cv_path_LD=$lt_save_path_LD
+  lt_cv_prog_gnu_ldcxx=$lt_cv_prog_gnu_ld
+  lt_cv_prog_gnu_ld=$lt_save_with_gnu_ld
+fi # test "$_lt_caught_CXX_error" != yes
+
+AC_LANG_POP
+])# _LT_LANG_CXX_CONFIG
+
+
+# _LT_SYS_HIDDEN_LIBDEPS([TAGNAME])
+# ---------------------------------
+# Figure out "hidden" library dependencies from verbose
+# compiler output when linking a shared library.
+# Parse the compiler output and extract the necessary
+# objects, libraries and library flags.
+m4_defun([_LT_SYS_HIDDEN_LIBDEPS],
+[m4_require([_LT_FILEUTILS_DEFAULTS])dnl
+# Dependencies to place before and after the object being linked:
+_LT_TAGVAR(predep_objects, $1)=
+_LT_TAGVAR(postdep_objects, $1)=
+_LT_TAGVAR(predeps, $1)=
+_LT_TAGVAR(postdeps, $1)=
+_LT_TAGVAR(compiler_lib_search_path, $1)=
+
+dnl we can't use the lt_simple_compile_test_code here,
+dnl because it contains code intended for an executable,
+dnl not a library.  It's possible we should let each
+dnl tag define a new lt_????_link_test_code variable,
+dnl but it's only used here...
+m4_if([$1], [], [cat > conftest.$ac_ext <<_LT_EOF
+int a;
+void foo (void) { a = 0; }
+_LT_EOF
+], [$1], [CXX], [cat > conftest.$ac_ext <<_LT_EOF
+class Foo
+{
+public:
+  Foo (void) { a = 0; }
+private:
+  int a;
+};
+_LT_EOF
+], [$1], [F77], [cat > conftest.$ac_ext <<_LT_EOF
+      subroutine foo
+      implicit none
+      integer*4 a
+      a=0
+      return
+      end
+_LT_EOF
+], [$1], [FC], [cat > conftest.$ac_ext <<_LT_EOF
+      subroutine foo
+      implicit none
+      integer a
+      a=0
+      return
+      end
+_LT_EOF
+], [$1], [GCJ], [cat > conftest.$ac_ext <<_LT_EOF
+public class foo {
+  private int a;
+  public void bar (void) {
+    a = 0;
+  }
+};
+_LT_EOF
+])
+dnl Parse the compiler output and extract the necessary
+dnl objects, libraries and library flags.
+if AC_TRY_EVAL(ac_compile); then
+  # Parse the compiler output and extract the necessary
+  # objects, libraries and library flags.
+
+  # Sentinel used to keep track of whether or not we are before
+  # the conftest object file.
+  pre_test_object_deps_done=no
+
+  for p in `eval "$output_verbose_link_cmd"`; do
+    case $p in
+
+    -L* | -R* | -l*)
+       # Some compilers place space between "-{L,R}" and the path.
+       # Remove the space.
+       if test $p = "-L" ||
+          test $p = "-R"; then
+	 prev=$p
+	 continue
+       else
+	 prev=
+       fi
+
+       if test "$pre_test_object_deps_done" = no; then
+	 case $p in
+	 -L* | -R*)
+	   # Internal compiler library paths should come after those
+	   # provided the user.  The postdeps already come after the
+	   # user supplied libs so there is no need to process them.
+	   if test -z "$_LT_TAGVAR(compiler_lib_search_path, $1)"; then
+	     _LT_TAGVAR(compiler_lib_search_path, $1)="${prev}${p}"
+	   else
+	     _LT_TAGVAR(compiler_lib_search_path, $1)="${_LT_TAGVAR(compiler_lib_search_path, $1)} ${prev}${p}"
+	   fi
+	   ;;
+	 # The "-l" case would never come before the object being
+	 # linked, so don't bother handling this case.
+	 esac
+       else
+	 if test -z "$_LT_TAGVAR(postdeps, $1)"; then
+	   _LT_TAGVAR(postdeps, $1)="${prev}${p}"
+	 else
+	   _LT_TAGVAR(postdeps, $1)="${_LT_TAGVAR(postdeps, $1)} ${prev}${p}"
+	 fi
+       fi
+       ;;
+
+    *.$objext)
+       # This assumes that the test object file only shows up
+       # once in the compiler output.
+       if test "$p" = "conftest.$objext"; then
+	 pre_test_object_deps_done=yes
+	 continue
+       fi
+
+       if test "$pre_test_object_deps_done" = no; then
+	 if test -z "$_LT_TAGVAR(predep_objects, $1)"; then
+	   _LT_TAGVAR(predep_objects, $1)="$p"
+	 else
+	   _LT_TAGVAR(predep_objects, $1)="$_LT_TAGVAR(predep_objects, $1) $p"
+	 fi
+       else
+	 if test -z "$_LT_TAGVAR(postdep_objects, $1)"; then
+	   _LT_TAGVAR(postdep_objects, $1)="$p"
+	 else
+	   _LT_TAGVAR(postdep_objects, $1)="$_LT_TAGVAR(postdep_objects, $1) $p"
+	 fi
+       fi
+       ;;
+
+    *) ;; # Ignore the rest.
+
+    esac
+  done
+
+  # Clean up.
+  rm -f a.out a.exe
+else
+  echo "libtool.m4: error: problem compiling $1 test program"
+fi
+
+$RM -f confest.$objext
+
+# PORTME: override above test on systems where it is broken
+m4_if([$1], [CXX],
+[case $host_os in
+interix[[3-9]]*)
+  # Interix 3.5 installs completely hosed .la files for C++, so rather than
+  # hack all around it, let's just trust "g++" to DTRT.
+  _LT_TAGVAR(predep_objects,$1)=
+  _LT_TAGVAR(postdep_objects,$1)=
+  _LT_TAGVAR(postdeps,$1)=
+  ;;
+
+linux*)
+  case `$CC -V 2>&1 | sed 5q` in
+  *Sun\ C*)
+    # Sun C++ 5.9
+
+    # The more standards-conforming stlport4 library is
+    # incompatible with the Cstd library. Avoid specifying
+    # it if it's in CXXFLAGS. Ignore libCrun as
+    # -library=stlport4 depends on it.
+    case " $CXX $CXXFLAGS " in
+    *" -library=stlport4 "*)
+      solaris_use_stlport4=yes
+      ;;
+    esac
+
+    if test "$solaris_use_stlport4" != yes; then
+      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'
+    fi
+    ;;
+  esac
+  ;;
+
+solaris*)
+  case $cc_basename in
+  CC*)
+    # The more standards-conforming stlport4 library is
+    # incompatible with the Cstd library. Avoid specifying
+    # it if it's in CXXFLAGS. Ignore libCrun as
+    # -library=stlport4 depends on it.
+    case " $CXX $CXXFLAGS " in
+    *" -library=stlport4 "*)
+      solaris_use_stlport4=yes
+      ;;
+    esac
+
+    # Adding this requires a known-good setup of shared libraries for
+    # Sun compiler versions before 5.6, else PIC objects from an old
+    # archive will be linked into the output, leading to subtle bugs.
+    if test "$solaris_use_stlport4" != yes; then
+      _LT_TAGVAR(postdeps,$1)='-library=Cstd -library=Crun'
+    fi
+    ;;
+  esac
+  ;;
+esac
+])
+
+case " $_LT_TAGVAR(postdeps, $1) " in
+*" -lc "*) _LT_TAGVAR(archive_cmds_need_lc, $1)=no ;;
+esac
+ _LT_TAGVAR(compiler_lib_search_dirs, $1)=
+if test -n "${_LT_TAGVAR(compiler_lib_search_path, $1)}"; then
+ _LT_TAGVAR(compiler_lib_search_dirs, $1)=`echo " ${_LT_TAGVAR(compiler_lib_search_path, $1)}" | ${SED} -e 's! -L! !g' -e 's!^ !!'`
+fi
+_LT_TAGDECL([], [compiler_lib_search_dirs], [1],
+    [The directories searched by this compiler when creating a shared library])
+_LT_TAGDECL([], [predep_objects], [1],
+    [Dependencies to place before and after the objects being linked to
+    create a shared library])
+_LT_TAGDECL([], [postdep_objects], [1])
+_LT_TAGDECL([], [predeps], [1])
+_LT_TAGDECL([], [postdeps], [1])
+_LT_TAGDECL([], [compiler_lib_search_path], [1],
+    [The library search path used internally by the compiler when linking
+    a shared library])
+])# _LT_SYS_HIDDEN_LIBDEPS
+
+
+# _LT_PROG_F77
+# ------------
+# Since AC_PROG_F77 is broken, in that it returns the empty string
+# if there is no fortran compiler, we have our own version here.
+m4_defun([_LT_PROG_F77],
+[
+pushdef([AC_MSG_ERROR], [_lt_disable_F77=yes])
+AC_PROG_F77
+if test -z "$F77" || test "X$F77" = "Xno"; then
+  _lt_disable_F77=yes
+fi
+popdef([AC_MSG_ERROR])
+])# _LT_PROG_F77
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([_LT_PROG_F77], [])
+
+
+# _LT_LANG_F77_CONFIG([TAG])
+# --------------------------
+# Ensure that the configuration variables for a Fortran 77 compiler are
+# suitably defined.  These variables are subsequently used by _LT_CONFIG
+# to write the compiler configuration to `libtool'.
+m4_defun([_LT_LANG_F77_CONFIG],
+[AC_REQUIRE([_LT_PROG_F77])dnl
+AC_LANG_PUSH(Fortran 77)
+
+_LT_TAGVAR(archive_cmds_need_lc, $1)=no
+_LT_TAGVAR(allow_undefined_flag, $1)=
+_LT_TAGVAR(always_export_symbols, $1)=no
+_LT_TAGVAR(archive_expsym_cmds, $1)=
+_LT_TAGVAR(export_dynamic_flag_spec, $1)=
+_LT_TAGVAR(hardcode_direct, $1)=no
+_LT_TAGVAR(hardcode_direct_absolute, $1)=no
+_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=
+_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=
+_LT_TAGVAR(hardcode_libdir_separator, $1)=
+_LT_TAGVAR(hardcode_minus_L, $1)=no
+_LT_TAGVAR(hardcode_automatic, $1)=no
+_LT_TAGVAR(inherit_rpath, $1)=no
+_LT_TAGVAR(module_cmds, $1)=
+_LT_TAGVAR(module_expsym_cmds, $1)=
+_LT_TAGVAR(link_all_deplibs, $1)=unknown
+_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds
+_LT_TAGVAR(no_undefined_flag, $1)=
+_LT_TAGVAR(whole_archive_flag_spec, $1)=
+_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no
+
+# Source file extension for f77 test sources.
+ac_ext=f
+
+# Object file extension for compiled f77 test sources.
+objext=o
+_LT_TAGVAR(objext, $1)=$objext
+
+# No sense in running all these tests if we already determined that
+# the F77 compiler isn't working.  Some variables (like enable_shared)
+# are currently assumed to apply to all compilers on this platform,
+# and will be corrupted by setting them based on a non-working compiler.
+if test "$_lt_disable_F77" != yes; then
+  # Code to be used in simple compile tests
+  lt_simple_compile_test_code="\
+      subroutine t
+      return
+      end
+"
+
+  # Code to be used in simple link tests
+  lt_simple_link_test_code="\
+      program t
+      end
+"
+
+  # ltmain only uses $CC for tagged configurations so make sure $CC is set.
+  _LT_TAG_COMPILER
+
+  # save warnings/boilerplate of simple test code
+  _LT_COMPILER_BOILERPLATE
+  _LT_LINKER_BOILERPLATE
+
+  # Allow CC to be a program name with arguments.
+  lt_save_CC="$CC"
+  lt_save_GCC=$GCC
+  CC=${F77-"f77"}
+  compiler=$CC
+  _LT_TAGVAR(compiler, $1)=$CC
+  _LT_CC_BASENAME([$compiler])
+  GCC=$G77
+  if test -n "$compiler"; then
+    AC_MSG_CHECKING([if libtool supports shared libraries])
+    AC_MSG_RESULT([$can_build_shared])
+
+    AC_MSG_CHECKING([whether to build shared libraries])
+    test "$can_build_shared" = "no" && enable_shared=no
+
+    # On AIX, shared libraries and static libraries use the same namespace, and
+    # are all built from PIC.
+    case $host_os in
+      aix3*)
+        test "$enable_shared" = yes && enable_static=no
+        if test -n "$RANLIB"; then
+          archive_cmds="$archive_cmds~\$RANLIB \$lib"
+          postinstall_cmds='$RANLIB $lib'
+        fi
+        ;;
+      aix[[4-9]]*)
+	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+	  test "$enable_shared" = yes && enable_static=no
+	fi
+        ;;
+    esac
+    AC_MSG_RESULT([$enable_shared])
+
+    AC_MSG_CHECKING([whether to build static libraries])
+    # Make sure either enable_shared or enable_static is yes.
+    test "$enable_shared" = yes || enable_static=yes
+    AC_MSG_RESULT([$enable_static])
+
+    _LT_TAGVAR(GCC, $1)="$G77"
+    _LT_TAGVAR(LD, $1)="$LD"
+
+    ## CAVEAT EMPTOR:
+    ## There is no encapsulation within the following macros, do not change
+    ## the running order or otherwise move them around unless you know exactly
+    ## what you are doing...
+    _LT_COMPILER_PIC($1)
+    _LT_COMPILER_C_O($1)
+    _LT_COMPILER_FILE_LOCKS($1)
+    _LT_LINKER_SHLIBS($1)
+    _LT_SYS_DYNAMIC_LINKER($1)
+    _LT_LINKER_HARDCODE_LIBPATH($1)
+
+    _LT_CONFIG($1)
+  fi # test -n "$compiler"
+
+  GCC=$lt_save_GCC
+  CC="$lt_save_CC"
+fi # test "$_lt_disable_F77" != yes
+
+AC_LANG_POP
+])# _LT_LANG_F77_CONFIG
+
+
+# _LT_PROG_FC
+# -----------
+# Since AC_PROG_FC is broken, in that it returns the empty string
+# if there is no fortran compiler, we have our own version here.
+m4_defun([_LT_PROG_FC],
+[
+pushdef([AC_MSG_ERROR], [_lt_disable_FC=yes])
+AC_PROG_FC
+if test -z "$FC" || test "X$FC" = "Xno"; then
+  _lt_disable_FC=yes
+fi
+popdef([AC_MSG_ERROR])
+])# _LT_PROG_FC
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([_LT_PROG_FC], [])
+
+
+# _LT_LANG_FC_CONFIG([TAG])
+# -------------------------
+# Ensure that the configuration variables for a Fortran compiler are
+# suitably defined.  These variables are subsequently used by _LT_CONFIG
+# to write the compiler configuration to `libtool'.
+m4_defun([_LT_LANG_FC_CONFIG],
+[AC_REQUIRE([_LT_PROG_FC])dnl
+AC_LANG_PUSH(Fortran)
+
+_LT_TAGVAR(archive_cmds_need_lc, $1)=no
+_LT_TAGVAR(allow_undefined_flag, $1)=
+_LT_TAGVAR(always_export_symbols, $1)=no
+_LT_TAGVAR(archive_expsym_cmds, $1)=
+_LT_TAGVAR(export_dynamic_flag_spec, $1)=
+_LT_TAGVAR(hardcode_direct, $1)=no
+_LT_TAGVAR(hardcode_direct_absolute, $1)=no
+_LT_TAGVAR(hardcode_libdir_flag_spec, $1)=
+_LT_TAGVAR(hardcode_libdir_flag_spec_ld, $1)=
+_LT_TAGVAR(hardcode_libdir_separator, $1)=
+_LT_TAGVAR(hardcode_minus_L, $1)=no
+_LT_TAGVAR(hardcode_automatic, $1)=no
+_LT_TAGVAR(inherit_rpath, $1)=no
+_LT_TAGVAR(module_cmds, $1)=
+_LT_TAGVAR(module_expsym_cmds, $1)=
+_LT_TAGVAR(link_all_deplibs, $1)=unknown
+_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds
+_LT_TAGVAR(no_undefined_flag, $1)=
+_LT_TAGVAR(whole_archive_flag_spec, $1)=
+_LT_TAGVAR(enable_shared_with_static_runtimes, $1)=no
+
+# Source file extension for fc test sources.
+ac_ext=${ac_fc_srcext-f}
+
+# Object file extension for compiled fc test sources.
+objext=o
+_LT_TAGVAR(objext, $1)=$objext
+
+# No sense in running all these tests if we already determined that
+# the FC compiler isn't working.  Some variables (like enable_shared)
+# are currently assumed to apply to all compilers on this platform,
+# and will be corrupted by setting them based on a non-working compiler.
+if test "$_lt_disable_FC" != yes; then
+  # Code to be used in simple compile tests
+  lt_simple_compile_test_code="\
+      subroutine t
+      return
+      end
+"
+
+  # Code to be used in simple link tests
+  lt_simple_link_test_code="\
+      program t
+      end
+"
+
+  # ltmain only uses $CC for tagged configurations so make sure $CC is set.
+  _LT_TAG_COMPILER
+
+  # save warnings/boilerplate of simple test code
+  _LT_COMPILER_BOILERPLATE
+  _LT_LINKER_BOILERPLATE
+
+  # Allow CC to be a program name with arguments.
+  lt_save_CC="$CC"
+  lt_save_GCC=$GCC
+  CC=${FC-"f95"}
+  compiler=$CC
+  GCC=$ac_cv_fc_compiler_gnu
+
+  _LT_TAGVAR(compiler, $1)=$CC
+  _LT_CC_BASENAME([$compiler])
+
+  if test -n "$compiler"; then
+    AC_MSG_CHECKING([if libtool supports shared libraries])
+    AC_MSG_RESULT([$can_build_shared])
+
+    AC_MSG_CHECKING([whether to build shared libraries])
+    test "$can_build_shared" = "no" && enable_shared=no
+
+    # On AIX, shared libraries and static libraries use the same namespace, and
+    # are all built from PIC.
+    case $host_os in
+      aix3*)
+        test "$enable_shared" = yes && enable_static=no
+        if test -n "$RANLIB"; then
+          archive_cmds="$archive_cmds~\$RANLIB \$lib"
+          postinstall_cmds='$RANLIB $lib'
+        fi
+        ;;
+      aix[[4-9]]*)
+	if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
+	  test "$enable_shared" = yes && enable_static=no
+	fi
+        ;;
+    esac
+    AC_MSG_RESULT([$enable_shared])
+
+    AC_MSG_CHECKING([whether to build static libraries])
+    # Make sure either enable_shared or enable_static is yes.
+    test "$enable_shared" = yes || enable_static=yes
+    AC_MSG_RESULT([$enable_static])
+
+    _LT_TAGVAR(GCC, $1)="$ac_cv_fc_compiler_gnu"
+    _LT_TAGVAR(LD, $1)="$LD"
+
+    ## CAVEAT EMPTOR:
+    ## There is no encapsulation within the following macros, do not change
+    ## the running order or otherwise move them around unless you know exactly
+    ## what you are doing...
+    _LT_SYS_HIDDEN_LIBDEPS($1)
+    _LT_COMPILER_PIC($1)
+    _LT_COMPILER_C_O($1)
+    _LT_COMPILER_FILE_LOCKS($1)
+    _LT_LINKER_SHLIBS($1)
+    _LT_SYS_DYNAMIC_LINKER($1)
+    _LT_LINKER_HARDCODE_LIBPATH($1)
+
+    _LT_CONFIG($1)
+  fi # test -n "$compiler"
+
+  GCC=$lt_save_GCC
+  CC="$lt_save_CC"
+fi # test "$_lt_disable_FC" != yes
+
+AC_LANG_POP
+])# _LT_LANG_FC_CONFIG
+
+
+# _LT_LANG_GCJ_CONFIG([TAG])
+# --------------------------
+# Ensure that the configuration variables for the GNU Java Compiler compiler
+# are suitably defined.  These variables are subsequently used by _LT_CONFIG
+# to write the compiler configuration to `libtool'.
+m4_defun([_LT_LANG_GCJ_CONFIG],
+[AC_REQUIRE([LT_PROG_GCJ])dnl
+AC_LANG_SAVE
+
+# Source file extension for Java test sources.
+ac_ext=java
+
+# Object file extension for compiled Java test sources.
+objext=o
+_LT_TAGVAR(objext, $1)=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code="class foo {}"
+
+# Code to be used in simple link tests
+lt_simple_link_test_code='public class conftest { public static void main(String[[]] argv) {}; }'
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+_LT_TAG_COMPILER
+
+# save warnings/boilerplate of simple test code
+_LT_COMPILER_BOILERPLATE
+_LT_LINKER_BOILERPLATE
+
+# Allow CC to be a program name with arguments.
+lt_save_CC="$CC"
+lt_save_GCC=$GCC
+GCC=yes
+CC=${GCJ-"gcj"}
+compiler=$CC
+_LT_TAGVAR(compiler, $1)=$CC
+_LT_TAGVAR(LD, $1)="$LD"
+_LT_CC_BASENAME([$compiler])
+
+# GCJ did not exist at the time GCC didn't implicitly link libc in.
+_LT_TAGVAR(archive_cmds_need_lc, $1)=no
+
+_LT_TAGVAR(old_archive_cmds, $1)=$old_archive_cmds
+
+## CAVEAT EMPTOR:
+## There is no encapsulation within the following macros, do not change
+## the running order or otherwise move them around unless you know exactly
+## what you are doing...
+if test -n "$compiler"; then
+  _LT_COMPILER_NO_RTTI($1)
+  _LT_COMPILER_PIC($1)
+  _LT_COMPILER_C_O($1)
+  _LT_COMPILER_FILE_LOCKS($1)
+  _LT_LINKER_SHLIBS($1)
+  _LT_LINKER_HARDCODE_LIBPATH($1)
+
+  _LT_CONFIG($1)
+fi
+
+AC_LANG_RESTORE
+
+GCC=$lt_save_GCC
+CC="$lt_save_CC"
+])# _LT_LANG_GCJ_CONFIG
+
+
+# _LT_LANG_RC_CONFIG([TAG])
+# -------------------------
+# Ensure that the configuration variables for the Windows resource compiler
+# are suitably defined.  These variables are subsequently used by _LT_CONFIG
+# to write the compiler configuration to `libtool'.
+m4_defun([_LT_LANG_RC_CONFIG],
+[AC_REQUIRE([LT_PROG_RC])dnl
+AC_LANG_SAVE
+
+# Source file extension for RC test sources.
+ac_ext=rc
+
+# Object file extension for compiled RC test sources.
+objext=o
+_LT_TAGVAR(objext, $1)=$objext
+
+# Code to be used in simple compile tests
+lt_simple_compile_test_code='sample MENU { MENUITEM "&Soup", 100, CHECKED }'
+
+# Code to be used in simple link tests
+lt_simple_link_test_code="$lt_simple_compile_test_code"
+
+# ltmain only uses $CC for tagged configurations so make sure $CC is set.
+_LT_TAG_COMPILER
+
+# save warnings/boilerplate of simple test code
+_LT_COMPILER_BOILERPLATE
+_LT_LINKER_BOILERPLATE
+
+# Allow CC to be a program name with arguments.
+lt_save_CC="$CC"
+lt_save_GCC=$GCC
+GCC=
+CC=${RC-"windres"}
+compiler=$CC
+_LT_TAGVAR(compiler, $1)=$CC
+_LT_CC_BASENAME([$compiler])
+_LT_TAGVAR(lt_cv_prog_compiler_c_o, $1)=yes
+
+if test -n "$compiler"; then
+  :
+  _LT_CONFIG($1)
+fi
+
+GCC=$lt_save_GCC
+AC_LANG_RESTORE
+CC="$lt_save_CC"
+])# _LT_LANG_RC_CONFIG
+
+
+# LT_PROG_GCJ
+# -----------
+AC_DEFUN([LT_PROG_GCJ],
+[m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
+  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
+    [AC_CHECK_TOOL(GCJ, gcj,)
+      test "x${GCJFLAGS+set}" = xset || GCJFLAGS="-g -O2"
+      AC_SUBST(GCJFLAGS)])])[]dnl
+])
+
+# Old name:
+AU_ALIAS([LT_AC_PROG_GCJ], [LT_PROG_GCJ])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([LT_AC_PROG_GCJ], [])
+
+
+# LT_PROG_RC
+# ----------
+AC_DEFUN([LT_PROG_RC],
+[AC_CHECK_TOOL(RC, windres,)
+])
+
+# Old name:
+AU_ALIAS([LT_AC_PROG_RC], [LT_PROG_RC])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([LT_AC_PROG_RC], [])
+
+
+# _LT_DECL_EGREP
+# --------------
+# If we don't have a new enough Autoconf to choose the best grep
+# available, choose the one first in the user's PATH.
+m4_defun([_LT_DECL_EGREP],
+[AC_REQUIRE([AC_PROG_EGREP])dnl
+AC_REQUIRE([AC_PROG_FGREP])dnl
+test -z "$GREP" && GREP=grep
+_LT_DECL([], [GREP], [1], [A grep program that handles long lines])
+_LT_DECL([], [EGREP], [1], [An ERE matcher])
+_LT_DECL([], [FGREP], [1], [A literal string matcher])
+dnl Non-bleeding-edge autoconf doesn't subst GREP, so do it here too
+AC_SUBST([GREP])
+])
+
+
+# _LT_DECL_OBJDUMP
+# --------------
+# If we don't have a new enough Autoconf to choose the best objdump
+# available, choose the one first in the user's PATH.
+m4_defun([_LT_DECL_OBJDUMP],
+[AC_CHECK_TOOL(OBJDUMP, objdump, false)
+test -z "$OBJDUMP" && OBJDUMP=objdump
+_LT_DECL([], [OBJDUMP], [1], [An object symbol dumper])
+AC_SUBST([OBJDUMP])
+])
+
+
+# _LT_DECL_SED
+# ------------
+# Check for a fully-functional sed program, that truncates
+# as few characters as possible.  Prefer GNU sed if found.
+m4_defun([_LT_DECL_SED],
+[AC_PROG_SED
+test -z "$SED" && SED=sed
+Xsed="$SED -e 1s/^X//"
+_LT_DECL([], [SED], [1], [A sed program that does not truncate output])
+_LT_DECL([], [Xsed], ["\$SED -e 1s/^X//"],
+    [Sed that helps us avoid accidentally triggering echo(1) options like -n])
+])# _LT_DECL_SED
+
+m4_ifndef([AC_PROG_SED], [
+############################################################
+# NOTE: This macro has been submitted for inclusion into   #
+#  GNU Autoconf as AC_PROG_SED.  When it is available in   #
+#  a released version of Autoconf we should remove this    #
+#  macro and use it instead.                               #
+############################################################
+
+m4_defun([AC_PROG_SED],
+[AC_MSG_CHECKING([for a sed that does not truncate output])
+AC_CACHE_VAL(lt_cv_path_SED,
+[# Loop through the user's path and test for sed and gsed.
+# Then use that list of sed's as ones to test for truncation.
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for lt_ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      if $as_executable_p "$as_dir/$lt_ac_prog$ac_exec_ext"; then
+        lt_ac_sed_list="$lt_ac_sed_list $as_dir/$lt_ac_prog$ac_exec_ext"
+      fi
+    done
+  done
+done
+IFS=$as_save_IFS
+lt_ac_max=0
+lt_ac_count=0
+# Add /usr/xpg4/bin/sed as it is typically found on Solaris
+# along with /bin/sed that truncates output.
+for lt_ac_sed in $lt_ac_sed_list /usr/xpg4/bin/sed; do
+  test ! -f $lt_ac_sed && continue
+  cat /dev/null > conftest.in
+  lt_ac_count=0
+  echo $ECHO_N "0123456789$ECHO_C" >conftest.in
+  # Check for GNU sed and select it if it is found.
+  if "$lt_ac_sed" --version 2>&1 < /dev/null | grep 'GNU' > /dev/null; then
+    lt_cv_path_SED=$lt_ac_sed
+    break
+  fi
+  while true; do
+    cat conftest.in conftest.in >conftest.tmp
+    mv conftest.tmp conftest.in
+    cp conftest.in conftest.nl
+    echo >>conftest.nl
+    $lt_ac_sed -e 's/a$//' < conftest.nl >conftest.out || break
+    cmp -s conftest.out conftest.nl || break
+    # 10000 chars as input seems more than enough
+    test $lt_ac_count -gt 10 && break
+    lt_ac_count=`expr $lt_ac_count + 1`
+    if test $lt_ac_count -gt $lt_ac_max; then
+      lt_ac_max=$lt_ac_count
+      lt_cv_path_SED=$lt_ac_sed
+    fi
+  done
+done
+])
+SED=$lt_cv_path_SED
+AC_SUBST([SED])
+AC_MSG_RESULT([$SED])
+])#AC_PROG_SED
+])#m4_ifndef
+
+# Old name:
+AU_ALIAS([LT_AC_PROG_SED], [AC_PROG_SED])
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([LT_AC_PROG_SED], [])
+
+
+# _LT_CHECK_SHELL_FEATURES
+# ------------------------
+# Find out whether the shell is Bourne or XSI compatible,
+# or has some other useful features.
+m4_defun([_LT_CHECK_SHELL_FEATURES],
+[AC_MSG_CHECKING([whether the shell understands some XSI constructs])
+# Try some XSI features
+xsi_shell=no
+( _lt_dummy="a/b/c"
+  test "${_lt_dummy##*/},${_lt_dummy%/*},"${_lt_dummy%"$_lt_dummy"}, \
+      = c,a/b,, \
+    && eval 'test $(( 1 + 1 )) -eq 2 \
+    && test "${#_lt_dummy}" -eq 5' ) >/dev/null 2>&1 \
+  && xsi_shell=yes
+AC_MSG_RESULT([$xsi_shell])
+_LT_CONFIG_LIBTOOL_INIT([xsi_shell='$xsi_shell'])
+
+AC_MSG_CHECKING([whether the shell understands "+="])
+lt_shell_append=no
+( foo=bar; set foo baz; eval "$[1]+=\$[2]" && test "$foo" = barbaz ) \
+    >/dev/null 2>&1 \
+  && lt_shell_append=yes
+AC_MSG_RESULT([$lt_shell_append])
+_LT_CONFIG_LIBTOOL_INIT([lt_shell_append='$lt_shell_append'])
+
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  lt_unset=unset
+else
+  lt_unset=false
+fi
+_LT_DECL([], [lt_unset], [0], [whether the shell understands "unset"])dnl
+
+# test EBCDIC or ASCII
+case `echo X|tr X '\101'` in
+ A) # ASCII based system
+    # \n is not interpreted correctly by Solaris 8 /usr/ucb/tr
+  lt_SP2NL='tr \040 \012'
+  lt_NL2SP='tr \015\012 \040\040'
+  ;;
+ *) # EBCDIC based system
+  lt_SP2NL='tr \100 \n'
+  lt_NL2SP='tr \r\n \100\100'
+  ;;
+esac
+_LT_DECL([SP2NL], [lt_SP2NL], [1], [turn spaces into newlines])dnl
+_LT_DECL([NL2SP], [lt_NL2SP], [1], [turn newlines into spaces])dnl
+])# _LT_CHECK_SHELL_FEATURES
+
+
+# _LT_PROG_XSI_SHELLFNS
+# ---------------------
+# Bourne and XSI compatible variants of some useful shell functions.
+m4_defun([_LT_PROG_XSI_SHELLFNS],
+[case $xsi_shell in
+  yes)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_dirname file append nondir_replacement
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+func_dirname ()
+{
+  case ${1} in
+    */*) func_dirname_result="${1%/*}${2}" ;;
+    *  ) func_dirname_result="${3}" ;;
+  esac
+}
+
+# func_basename file
+func_basename ()
+{
+  func_basename_result="${1##*/}"
+}
+
+# func_dirname_and_basename file append nondir_replacement
+# perform func_basename and func_dirname in a single function
+# call:
+#   dirname:  Compute the dirname of FILE.  If nonempty,
+#             add APPEND to the result, otherwise set result
+#             to NONDIR_REPLACEMENT.
+#             value returned in "$func_dirname_result"
+#   basename: Compute filename of FILE.
+#             value retuned in "$func_basename_result"
+# Implementation must be kept synchronized with func_dirname
+# and func_basename. For efficiency, we do not delegate to
+# those functions but instead duplicate the functionality here.
+func_dirname_and_basename ()
+{
+  case ${1} in
+    */*) func_dirname_result="${1%/*}${2}" ;;
+    *  ) func_dirname_result="${3}" ;;
+  esac
+  func_basename_result="${1##*/}"
+}
+
+# func_stripname prefix suffix name
+# strip PREFIX and SUFFIX off of NAME.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+func_stripname ()
+{
+  # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
+  # positional parameters, so assign one to ordinary parameter first.
+  func_stripname_result=${3}
+  func_stripname_result=${func_stripname_result#"${1}"}
+  func_stripname_result=${func_stripname_result%"${2}"}
+}
+
+# func_opt_split
+func_opt_split ()
+{
+  func_opt_split_opt=${1%%=*}
+  func_opt_split_arg=${1#*=}
+}
+
+# func_lo2o object
+func_lo2o ()
+{
+  case ${1} in
+    *.lo) func_lo2o_result=${1%.lo}.${objext} ;;
+    *)    func_lo2o_result=${1} ;;
+  esac
+}
+
+# func_xform libobj-or-source
+func_xform ()
+{
+  func_xform_result=${1%.*}.lo
+}
+
+# func_arith arithmetic-term...
+func_arith ()
+{
+  func_arith_result=$(( $[*] ))
+}
+
+# func_len string
+# STRING may not start with a hyphen.
+func_len ()
+{
+  func_len_result=${#1}
+}
+
+_LT_EOF
+    ;;
+  *) # Bourne compatible functions.
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_dirname file append nondir_replacement
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+func_dirname ()
+{
+  # Extract subdirectory from the argument.
+  func_dirname_result=`$ECHO "X${1}" | $Xsed -e "$dirname"`
+  if test "X$func_dirname_result" = "X${1}"; then
+    func_dirname_result="${3}"
+  else
+    func_dirname_result="$func_dirname_result${2}"
+  fi
+}
+
+# func_basename file
+func_basename ()
+{
+  func_basename_result=`$ECHO "X${1}" | $Xsed -e "$basename"`
+}
+
+dnl func_dirname_and_basename
+dnl A portable version of this function is already defined in general.m4sh
+dnl so there is no need for it here.
+
+# func_stripname prefix suffix name
+# strip PREFIX and SUFFIX off of NAME.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+# func_strip_suffix prefix name
+func_stripname ()
+{
+  case ${2} in
+    .*) func_stripname_result=`$ECHO "X${3}" \
+           | $Xsed -e "s%^${1}%%" -e "s%\\\\${2}\$%%"`;;
+    *)  func_stripname_result=`$ECHO "X${3}" \
+           | $Xsed -e "s%^${1}%%" -e "s%${2}\$%%"`;;
+  esac
+}
+
+# sed scripts:
+my_sed_long_opt='1s/^\(-[[^=]]*\)=.*/\1/;q'
+my_sed_long_arg='1s/^-[[^=]]*=//'
+
+# func_opt_split
+func_opt_split ()
+{
+  func_opt_split_opt=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_opt"`
+  func_opt_split_arg=`$ECHO "X${1}" | $Xsed -e "$my_sed_long_arg"`
+}
+
+# func_lo2o object
+func_lo2o ()
+{
+  func_lo2o_result=`$ECHO "X${1}" | $Xsed -e "$lo2o"`
+}
+
+# func_xform libobj-or-source
+func_xform ()
+{
+  func_xform_result=`$ECHO "X${1}" | $Xsed -e 's/\.[[^.]]*$/.lo/'`
+}
+
+# func_arith arithmetic-term...
+func_arith ()
+{
+  func_arith_result=`expr "$[@]"`
+}
+
+# func_len string
+# STRING may not start with a hyphen.
+func_len ()
+{
+  func_len_result=`expr "$[1]" : ".*" 2>/dev/null || echo $max_cmd_len`
+}
+
+_LT_EOF
+esac
+
+case $lt_shell_append in
+  yes)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_append var value
+# Append VALUE to the end of shell variable VAR.
+func_append ()
+{
+  eval "$[1]+=\$[2]"
+}
+_LT_EOF
+    ;;
+  *)
+    cat << \_LT_EOF >> "$cfgfile"
+
+# func_append var value
+# Append VALUE to the end of shell variable VAR.
+func_append ()
+{
+  eval "$[1]=\$$[1]\$[2]"
+}
+
+_LT_EOF
+    ;;
+  esac
+])
diff --git a/mpc/m4/ltoptions.m4 b/mpc/m4/ltoptions.m4
new file mode 100644
index 0000000..34151a3
--- /dev/null
+++ b/mpc/m4/ltoptions.m4
@@ -0,0 +1,368 @@
+# Helper functions for option handling.                    -*- Autoconf -*-
+#
+#   Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.
+#   Written by Gary V. Vaughan, 2004
+#
+# This file is free software; the Free Software Foundation gives
+# unlimited permission to copy and/or distribute it, with or without
+# modifications, as long as this notice is preserved.
+
+# serial 6 ltoptions.m4
+
+# This is to help aclocal find these macros, as it can't see m4_define.
+AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
+
+
+# _LT_MANGLE_OPTION(MACRO-NAME, OPTION-NAME)
+# ------------------------------------------
+m4_define([_LT_MANGLE_OPTION],
+[[_LT_OPTION_]m4_bpatsubst($1__$2, [[^a-zA-Z0-9_]], [_])])
+
+
+# _LT_SET_OPTION(MACRO-NAME, OPTION-NAME)
+# ---------------------------------------
+# Set option OPTION-NAME for macro MACRO-NAME, and if there is a
+# matching handler defined, dispatch to it.  Other OPTION-NAMEs are
+# saved as a flag.
+m4_define([_LT_SET_OPTION],
+[m4_define(_LT_MANGLE_OPTION([$1], [$2]))dnl
+m4_ifdef(_LT_MANGLE_DEFUN([$1], [$2]),
+        _LT_MANGLE_DEFUN([$1], [$2]),
+    [m4_warning([Unknown $1 option `$2'])])[]dnl
+])
+
+
+# _LT_IF_OPTION(MACRO-NAME, OPTION-NAME, IF-SET, [IF-NOT-SET])
+# ------------------------------------------------------------
+# Execute IF-SET if OPTION is set, IF-NOT-SET otherwise.
+m4_define([_LT_IF_OPTION],
+[m4_ifdef(_LT_MANGLE_OPTION([$1], [$2]), [$3], [$4])])
+
+
+# _LT_UNLESS_OPTIONS(MACRO-NAME, OPTION-LIST, IF-NOT-SET)
+# -------------------------------------------------------
+# Execute IF-NOT-SET unless all options in OPTION-LIST for MACRO-NAME
+# are set.
+m4_define([_LT_UNLESS_OPTIONS],
+[m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),
+	    [m4_ifdef(_LT_MANGLE_OPTION([$1], _LT_Option),
+		      [m4_define([$0_found])])])[]dnl
+m4_ifdef([$0_found], [m4_undefine([$0_found])], [$3
+])[]dnl
+])
+
+
+# _LT_SET_OPTIONS(MACRO-NAME, OPTION-LIST)
+# ----------------------------------------
+# OPTION-LIST is a space-separated list of Libtool options associated
+# with MACRO-NAME.  If any OPTION has a matching handler declared with
+# LT_OPTION_DEFINE, dispatch to that macro; otherwise complain about
+# the unknown option and exit.
+m4_defun([_LT_SET_OPTIONS],
+[# Set options
+m4_foreach([_LT_Option], m4_split(m4_normalize([$2])),
+    [_LT_SET_OPTION([$1], _LT_Option)])
+
+m4_if([$1],[LT_INIT],[
+  dnl
+  dnl Simply set some default values (i.e off) if boolean options were not
+  dnl specified:
+  _LT_UNLESS_OPTIONS([LT_INIT], [dlopen], [enable_dlopen=no
+  ])
+  _LT_UNLESS_OPTIONS([LT_INIT], [win32-dll], [enable_win32_dll=no
+  ])
+  dnl
+  dnl If no reference was made to various pairs of opposing options, then
+  dnl we run the default mode handler for the pair.  For example, if neither
+  dnl `shared' nor `disable-shared' was passed, we enable building of shared
+  dnl archives by default:
+  _LT_UNLESS_OPTIONS([LT_INIT], [shared disable-shared], [_LT_ENABLE_SHARED])
+  _LT_UNLESS_OPTIONS([LT_INIT], [static disable-static], [_LT_ENABLE_STATIC])
+  _LT_UNLESS_OPTIONS([LT_INIT], [pic-only no-pic], [_LT_WITH_PIC])
+  _LT_UNLESS_OPTIONS([LT_INIT], [fast-install disable-fast-install],
+  		   [_LT_ENABLE_FAST_INSTALL])
+  ])
+])# _LT_SET_OPTIONS
+
+
+## --------------------------------- ##
+## Macros to handle LT_INIT options. ##
+## --------------------------------- ##
+
+# _LT_MANGLE_DEFUN(MACRO-NAME, OPTION-NAME)
+# -----------------------------------------
+m4_define([_LT_MANGLE_DEFUN],
+[[_LT_OPTION_DEFUN_]m4_bpatsubst(m4_toupper([$1__$2]), [[^A-Z0-9_]], [_])])
+
+
+# LT_OPTION_DEFINE(MACRO-NAME, OPTION-NAME, CODE)
+# -----------------------------------------------
+m4_define([LT_OPTION_DEFINE],
+[m4_define(_LT_MANGLE_DEFUN([$1], [$2]), [$3])[]dnl
+])# LT_OPTION_DEFINE
+
+
+# dlopen
+# ------
+LT_OPTION_DEFINE([LT_INIT], [dlopen], [enable_dlopen=yes
+])
+
+AU_DEFUN([AC_LIBTOOL_DLOPEN],
+[_LT_SET_OPTION([LT_INIT], [dlopen])
+AC_DIAGNOSE([obsolete],
+[$0: Remove this warning and the call to _LT_SET_OPTION when you
+put the `dlopen' option into LT_INIT's first parameter.])
+])
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_LIBTOOL_DLOPEN], [])
+
+
+# win32-dll
+# ---------
+# Declare package support for building win32 dll's.
+LT_OPTION_DEFINE([LT_INIT], [win32-dll],
+[enable_win32_dll=yes
+
+case $host in
+*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-cegcc*)
+  AC_CHECK_TOOL(AS, as, false)
+  AC_CHECK_TOOL(DLLTOOL, dlltool, false)
+  AC_CHECK_TOOL(OBJDUMP, objdump, false)
+  ;;
+esac
+
+test -z "$AS" && AS=as
+_LT_DECL([], [AS],      [0], [Assembler program])dnl
+
+test -z "$DLLTOOL" && DLLTOOL=dlltool
+_LT_DECL([], [DLLTOOL], [0], [DLL creation program])dnl
+
+test -z "$OBJDUMP" && OBJDUMP=objdump
+_LT_DECL([], [OBJDUMP], [0], [Object dumper program])dnl
+])# win32-dll
+
+AU_DEFUN([AC_LIBTOOL_WIN32_DLL],
+[AC_REQUIRE([AC_CANONICAL_HOST])dnl
+_LT_SET_OPTION([LT_INIT], [win32-dll])
+AC_DIAGNOSE([obsolete],
+[$0: Remove this warning and the call to _LT_SET_OPTION when you
+put the `win32-dll' option into LT_INIT's first parameter.])
+])
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [])
+
+
+# _LT_ENABLE_SHARED([DEFAULT])
+# ----------------------------
+# implement the --enable-shared flag, and supports the `shared' and
+# `disable-shared' LT_INIT options.
+# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+m4_define([_LT_ENABLE_SHARED],
+[m4_define([_LT_ENABLE_SHARED_DEFAULT], [m4_if($1, no, no, yes)])dnl
+AC_ARG_ENABLE([shared],
+    [AS_HELP_STRING([--enable-shared@<:@=PKGS@:>@],
+	[build shared libraries @<:@default=]_LT_ENABLE_SHARED_DEFAULT[@:>@])],
+    [p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_shared=yes ;;
+    no) enable_shared=no ;;
+    *)
+      enable_shared=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_shared=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac],
+    [enable_shared=]_LT_ENABLE_SHARED_DEFAULT)
+
+    _LT_DECL([build_libtool_libs], [enable_shared], [0],
+	[Whether or not to build shared libraries])
+])# _LT_ENABLE_SHARED
+
+LT_OPTION_DEFINE([LT_INIT], [shared], [_LT_ENABLE_SHARED([yes])])
+LT_OPTION_DEFINE([LT_INIT], [disable-shared], [_LT_ENABLE_SHARED([no])])
+
+# Old names:
+AC_DEFUN([AC_ENABLE_SHARED],
+[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
+])
+
+AC_DEFUN([AC_DISABLE_SHARED],
+[_LT_SET_OPTION([LT_INIT], [disable-shared])
+])
+
+AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])
+AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AM_ENABLE_SHARED], [])
+dnl AC_DEFUN([AM_DISABLE_SHARED], [])
+
+
+
+# _LT_ENABLE_STATIC([DEFAULT])
+# ----------------------------
+# implement the --enable-static flag, and support the `static' and
+# `disable-static' LT_INIT options.
+# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+m4_define([_LT_ENABLE_STATIC],
+[m4_define([_LT_ENABLE_STATIC_DEFAULT], [m4_if($1, no, no, yes)])dnl
+AC_ARG_ENABLE([static],
+    [AS_HELP_STRING([--enable-static@<:@=PKGS@:>@],
+	[build static libraries @<:@default=]_LT_ENABLE_STATIC_DEFAULT[@:>@])],
+    [p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_static=yes ;;
+    no) enable_static=no ;;
+    *)
+     enable_static=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_static=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac],
+    [enable_static=]_LT_ENABLE_STATIC_DEFAULT)
+
+    _LT_DECL([build_old_libs], [enable_static], [0],
+	[Whether or not to build static libraries])
+])# _LT_ENABLE_STATIC
+
+LT_OPTION_DEFINE([LT_INIT], [static], [_LT_ENABLE_STATIC([yes])])
+LT_OPTION_DEFINE([LT_INIT], [disable-static], [_LT_ENABLE_STATIC([no])])
+
+# Old names:
+AC_DEFUN([AC_ENABLE_STATIC],
+[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
+])
+
+AC_DEFUN([AC_DISABLE_STATIC],
+[_LT_SET_OPTION([LT_INIT], [disable-static])
+])
+
+AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])
+AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AM_ENABLE_STATIC], [])
+dnl AC_DEFUN([AM_DISABLE_STATIC], [])
+
+
+
+# _LT_ENABLE_FAST_INSTALL([DEFAULT])
+# ----------------------------------
+# implement the --enable-fast-install flag, and support the `fast-install'
+# and `disable-fast-install' LT_INIT options.
+# DEFAULT is either `yes' or `no'.  If omitted, it defaults to `yes'.
+m4_define([_LT_ENABLE_FAST_INSTALL],
+[m4_define([_LT_ENABLE_FAST_INSTALL_DEFAULT], [m4_if($1, no, no, yes)])dnl
+AC_ARG_ENABLE([fast-install],
+    [AS_HELP_STRING([--enable-fast-install@<:@=PKGS@:>@],
+    [optimize for fast installation @<:@default=]_LT_ENABLE_FAST_INSTALL_DEFAULT[@:>@])],
+    [p=${PACKAGE-default}
+    case $enableval in
+    yes) enable_fast_install=yes ;;
+    no) enable_fast_install=no ;;
+    *)
+      enable_fast_install=no
+      # Look at the argument we got.  We use all the common list separators.
+      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      for pkg in $enableval; do
+	IFS="$lt_save_ifs"
+	if test "X$pkg" = "X$p"; then
+	  enable_fast_install=yes
+	fi
+      done
+      IFS="$lt_save_ifs"
+      ;;
+    esac],
+    [enable_fast_install=]_LT_ENABLE_FAST_INSTALL_DEFAULT)
+
+_LT_DECL([fast_install], [enable_fast_install], [0],
+	 [Whether or not to optimize for fast installation])dnl
+])# _LT_ENABLE_FAST_INSTALL
+
+LT_OPTION_DEFINE([LT_INIT], [fast-install], [_LT_ENABLE_FAST_INSTALL([yes])])
+LT_OPTION_DEFINE([LT_INIT], [disable-fast-install], [_LT_ENABLE_FAST_INSTALL([no])])
+
+# Old names:
+AU_DEFUN([AC_ENABLE_FAST_INSTALL],
+[_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
+AC_DIAGNOSE([obsolete],
+[$0: Remove this warning and the call to _LT_SET_OPTION when you put
+the `fast-install' option into LT_INIT's first parameter.])
+])
+
+AU_DEFUN([AC_DISABLE_FAST_INSTALL],
+[_LT_SET_OPTION([LT_INIT], [disable-fast-install])
+AC_DIAGNOSE([obsolete],
+[$0: Remove this warning and the call to _LT_SET_OPTION when you put
+the `disable-fast-install' option into LT_INIT's first parameter.])
+])
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_ENABLE_FAST_INSTALL], [])
+dnl AC_DEFUN([AM_DISABLE_FAST_INSTALL], [])
+
+
+# _LT_WITH_PIC([MODE])
+# --------------------
+# implement the --with-pic flag, and support the `pic-only' and `no-pic'
+# LT_INIT options.
+# MODE is either `yes' or `no'.  If omitted, it defaults to `both'.
+m4_define([_LT_WITH_PIC],
+[AC_ARG_WITH([pic],
+    [AS_HELP_STRING([--with-pic],
+	[try to use only PIC/non-PIC objects @<:@default=use both@:>@])],
+    [pic_mode="$withval"],
+    [pic_mode=default])
+
+test -z "$pic_mode" && pic_mode=m4_default([$1], [default])
+
+_LT_DECL([], [pic_mode], [0], [What type of objects to build])dnl
+])# _LT_WITH_PIC
+
+LT_OPTION_DEFINE([LT_INIT], [pic-only], [_LT_WITH_PIC([yes])])
+LT_OPTION_DEFINE([LT_INIT], [no-pic], [_LT_WITH_PIC([no])])
+
+# Old name:
+AU_DEFUN([AC_LIBTOOL_PICMODE],
+[_LT_SET_OPTION([LT_INIT], [pic-only])
+AC_DIAGNOSE([obsolete],
+[$0: Remove this warning and the call to _LT_SET_OPTION when you
+put the `pic-only' option into LT_INIT's first parameter.])
+])
+
+dnl aclocal-1.4 backwards compatibility:
+dnl AC_DEFUN([AC_LIBTOOL_PICMODE], [])
+
+## ----------------- ##
+## LTDL_INIT Options ##
+## ----------------- ##
+
+m4_define([_LTDL_MODE], [])
+LT_OPTION_DEFINE([LTDL_INIT], [nonrecursive],
+		 [m4_define([_LTDL_MODE], [nonrecursive])])
+LT_OPTION_DEFINE([LTDL_INIT], [recursive],
+		 [m4_define([_LTDL_MODE], [recursive])])
+LT_OPTION_DEFINE([LTDL_INIT], [subproject],
+		 [m4_define([_LTDL_MODE], [subproject])])
+
+m4_define([_LTDL_TYPE], [])
+LT_OPTION_DEFINE([LTDL_INIT], [installable],
+		 [m4_define([_LTDL_TYPE], [installable])])
+LT_OPTION_DEFINE([LTDL_INIT], [convenience],
+		 [m4_define([_LTDL_TYPE], [convenience])])
diff --git a/mpc/m4/ltsugar.m4 b/mpc/m4/ltsugar.m4
new file mode 100644
index 0000000..9000a05
--- /dev/null
+++ b/mpc/m4/ltsugar.m4
@@ -0,0 +1,123 @@
+# ltsugar.m4 -- libtool m4 base layer.                         -*-Autoconf-*-
+#
+# Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.
+# Written by Gary V. Vaughan, 2004
+#
+# This file is free software; the Free Software Foundation gives
+# unlimited permission to copy and/or distribute it, with or without
+# modifications, as long as this notice is preserved.
+
+# serial 6 ltsugar.m4
+
+# This is to help aclocal find these macros, as it can't see m4_define.
+AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])
+
+
+# lt_join(SEP, ARG1, [ARG2...])
+# -----------------------------
+# Produce ARG1SEPARG2...SEPARGn, omitting [] arguments and their
+# associated separator.
+# Needed until we can rely on m4_join from Autoconf 2.62, since all earlier
+# versions in m4sugar had bugs.
+m4_define([lt_join],
+[m4_if([$#], [1], [],
+       [$#], [2], [[$2]],
+       [m4_if([$2], [], [], [[$2]_])$0([$1], m4_shift(m4_shift($@)))])])
+m4_define([_lt_join],
+[m4_if([$#$2], [2], [],
+       [m4_if([$2], [], [], [[$1$2]])$0([$1], m4_shift(m4_shift($@)))])])
+
+
+# lt_car(LIST)
+# lt_cdr(LIST)
+# ------------
+# Manipulate m4 lists.
+# These macros are necessary as long as will still need to support
+# Autoconf-2.59 which quotes differently.
+m4_define([lt_car], [[$1]])
+m4_define([lt_cdr],
+[m4_if([$#], 0, [m4_fatal([$0: cannot be called without arguments])],
+       [$#], 1, [],
+       [m4_dquote(m4_shift($@))])])
+m4_define([lt_unquote], $1)
+
+
+# lt_append(MACRO-NAME, STRING, [SEPARATOR])
+# ------------------------------------------
+# Redefine MACRO-NAME to hold its former content plus `SEPARATOR'`STRING'.
+# Note that neither SEPARATOR nor STRING are expanded; they are appended
+# to MACRO-NAME as is (leaving the expansion for when MACRO-NAME is invoked).
+# No SEPARATOR is output if MACRO-NAME was previously undefined (different
+# than defined and empty).
+#
+# This macro is needed until we can rely on Autoconf 2.62, since earlier
+# versions of m4sugar mistakenly expanded SEPARATOR but not STRING.
+m4_define([lt_append],
+[m4_define([$1],
+	   m4_ifdef([$1], [m4_defn([$1])[$3]])[$2])])
+
+
+
+# lt_combine(SEP, PREFIX-LIST, INFIX, SUFFIX1, [SUFFIX2...])
+# ----------------------------------------------------------
+# Produce a SEP delimited list of all paired combinations of elements of
+# PREFIX-LIST with SUFFIX1 through SUFFIXn.  Each element of the list
+# has the form PREFIXmINFIXSUFFIXn.
+# Needed until we can rely on m4_combine added in Autoconf 2.62.
+m4_define([lt_combine],
+[m4_if(m4_eval([$# > 3]), [1],
+       [m4_pushdef([_Lt_sep], [m4_define([_Lt_sep], m4_defn([lt_car]))])]]dnl
+[[m4_foreach([_Lt_prefix], [$2],
+	     [m4_foreach([_Lt_suffix],
+		]m4_dquote(m4_dquote(m4_shift(m4_shift(m4_shift($@)))))[,
+	[_Lt_sep([$1])[]m4_defn([_Lt_prefix])[$3]m4_defn([_Lt_suffix])])])])])
+
+
+# lt_if_append_uniq(MACRO-NAME, VARNAME, [SEPARATOR], [UNIQ], [NOT-UNIQ])
+# -----------------------------------------------------------------------
+# Iff MACRO-NAME does not yet contain VARNAME, then append it (delimited
+# by SEPARATOR if supplied) and expand UNIQ, else NOT-UNIQ.
+m4_define([lt_if_append_uniq],
+[m4_ifdef([$1],
+	  [m4_if(m4_index([$3]m4_defn([$1])[$3], [$3$2$3]), [-1],
+		 [lt_append([$1], [$2], [$3])$4],
+		 [$5])],
+	  [lt_append([$1], [$2], [$3])$4])])
+
+
+# lt_dict_add(DICT, KEY, VALUE)
+# -----------------------------
+m4_define([lt_dict_add],
+[m4_define([$1($2)], [$3])])
+
+
+# lt_dict_add_subkey(DICT, KEY, SUBKEY, VALUE)
+# --------------------------------------------
+m4_define([lt_dict_add_subkey],
+[m4_define([$1($2:$3)], [$4])])
+
+
+# lt_dict_fetch(DICT, KEY, [SUBKEY])
+# ----------------------------------
+m4_define([lt_dict_fetch],
+[m4_ifval([$3],
+	m4_ifdef([$1($2:$3)], [m4_defn([$1($2:$3)])]),
+    m4_ifdef([$1($2)], [m4_defn([$1($2)])]))])
+
+
+# lt_if_dict_fetch(DICT, KEY, [SUBKEY], VALUE, IF-TRUE, [IF-FALSE])
+# -----------------------------------------------------------------
+m4_define([lt_if_dict_fetch],
+[m4_if(lt_dict_fetch([$1], [$2], [$3]), [$4],
+	[$5],
+    [$6])])
+
+
+# lt_dict_filter(DICT, [SUBKEY], VALUE, [SEPARATOR], KEY, [...])
+# --------------------------------------------------------------
+m4_define([lt_dict_filter],
+[m4_if([$5], [], [],
+  [lt_join(m4_quote(m4_default([$4], [[, ]])),
+           lt_unquote(m4_split(m4_normalize(m4_foreach(_Lt_key, lt_car([m4_shiftn(4, $@)]),
+		      [lt_if_dict_fetch([$1], _Lt_key, [$2], [$3], [_Lt_key ])])))))])[]dnl
+])
diff --git a/mpc/m4/ltversion.m4 b/mpc/m4/ltversion.m4
new file mode 100644
index 0000000..f3c5309
--- /dev/null
+++ b/mpc/m4/ltversion.m4
@@ -0,0 +1,23 @@
+# ltversion.m4 -- version numbers			-*- Autoconf -*-
+#
+#   Copyright (C) 2004 Free Software Foundation, Inc.
+#   Written by Scott James Remnant, 2004
+#
+# This file is free software; the Free Software Foundation gives
+# unlimited permission to copy and/or distribute it, with or without
+# modifications, as long as this notice is preserved.
+
+# Generated from ltversion.in.
+
+# serial 3017 ltversion.m4
+# This file is part of GNU Libtool
+
+m4_define([LT_PACKAGE_VERSION], [2.2.6b])
+m4_define([LT_PACKAGE_REVISION], [1.3017])
+
+AC_DEFUN([LTVERSION_VERSION],
+[macro_version='2.2.6b'
+macro_revision='1.3017'
+_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
+_LT_DECL(, macro_revision, 0)
+])
diff --git a/mpc/m4/lt~obsolete.m4 b/mpc/m4/lt~obsolete.m4
new file mode 100644
index 0000000..637bb20
--- /dev/null
+++ b/mpc/m4/lt~obsolete.m4
@@ -0,0 +1,92 @@
+# lt~obsolete.m4 -- aclocal satisfying obsolete definitions.    -*-Autoconf-*-
+#
+#   Copyright (C) 2004, 2005, 2007 Free Software Foundation, Inc.
+#   Written by Scott James Remnant, 2004.
+#
+# This file is free software; the Free Software Foundation gives
+# unlimited permission to copy and/or distribute it, with or without
+# modifications, as long as this notice is preserved.
+
+# serial 4 lt~obsolete.m4
+
+# These exist entirely to fool aclocal when bootstrapping libtool.
+#
+# In the past libtool.m4 has provided macros via AC_DEFUN (or AU_DEFUN)
+# which have later been changed to m4_define as they aren't part of the
+# exported API, or moved to Autoconf or Automake where they belong.
+#
+# The trouble is, aclocal is a bit thick.  It'll see the old AC_DEFUN
+# in /usr/share/aclocal/libtool.m4 and remember it, then when it sees us
+# using a macro with the same name in our local m4/libtool.m4 it'll
+# pull the old libtool.m4 in (it doesn't see our shiny new m4_define
+# and doesn't know about Autoconf macros at all.)
+#
+# So we provide this file, which has a silly filename so it's always
+# included after everything else.  This provides aclocal with the
+# AC_DEFUNs it wants, but when m4 processes it, it doesn't do anything
+# because those macros already exist, or will be overwritten later.
+# We use AC_DEFUN over AU_DEFUN for compatibility with aclocal-1.6. 
+#
+# Anytime we withdraw an AC_DEFUN or AU_DEFUN, remember to add it here.
+# Yes, that means every name once taken will need to remain here until
+# we give up compatibility with versions before 1.7, at which point
+# we need to keep only those names which we still refer to.
+
+# This is to help aclocal find these macros, as it can't see m4_define.
+AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])
+
+m4_ifndef([AC_LIBTOOL_LINKER_OPTION],	[AC_DEFUN([AC_LIBTOOL_LINKER_OPTION])])
+m4_ifndef([AC_PROG_EGREP],		[AC_DEFUN([AC_PROG_EGREP])])
+m4_ifndef([_LT_AC_PROG_ECHO_BACKSLASH],	[AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])])
+m4_ifndef([_LT_AC_SHELL_INIT],		[AC_DEFUN([_LT_AC_SHELL_INIT])])
+m4_ifndef([_LT_AC_SYS_LIBPATH_AIX],	[AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])])
+m4_ifndef([_LT_PROG_LTMAIN],		[AC_DEFUN([_LT_PROG_LTMAIN])])
+m4_ifndef([_LT_AC_TAGVAR],		[AC_DEFUN([_LT_AC_TAGVAR])])
+m4_ifndef([AC_LTDL_ENABLE_INSTALL],	[AC_DEFUN([AC_LTDL_ENABLE_INSTALL])])
+m4_ifndef([AC_LTDL_PREOPEN],		[AC_DEFUN([AC_LTDL_PREOPEN])])
+m4_ifndef([_LT_AC_SYS_COMPILER],	[AC_DEFUN([_LT_AC_SYS_COMPILER])])
+m4_ifndef([_LT_AC_LOCK],		[AC_DEFUN([_LT_AC_LOCK])])
+m4_ifndef([AC_LIBTOOL_SYS_OLD_ARCHIVE],	[AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])])
+m4_ifndef([_LT_AC_TRY_DLOPEN_SELF],	[AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])])
+m4_ifndef([AC_LIBTOOL_PROG_CC_C_O],	[AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])])
+m4_ifndef([AC_LIBTOOL_SYS_HARD_LINK_LOCKS], [AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])])
+m4_ifndef([AC_LIBTOOL_OBJDIR],		[AC_DEFUN([AC_LIBTOOL_OBJDIR])])
+m4_ifndef([AC_LTDL_OBJDIR],		[AC_DEFUN([AC_LTDL_OBJDIR])])
+m4_ifndef([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH], [AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])])
+m4_ifndef([AC_LIBTOOL_SYS_LIB_STRIP],	[AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])])
+m4_ifndef([AC_PATH_MAGIC],		[AC_DEFUN([AC_PATH_MAGIC])])
+m4_ifndef([AC_PROG_LD_GNU],		[AC_DEFUN([AC_PROG_LD_GNU])])
+m4_ifndef([AC_PROG_LD_RELOAD_FLAG],	[AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])])
+m4_ifndef([AC_DEPLIBS_CHECK_METHOD],	[AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])])
+m4_ifndef([AC_LIBTOOL_PROG_COMPILER_NO_RTTI], [AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])])
+m4_ifndef([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE], [AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])])
+m4_ifndef([AC_LIBTOOL_PROG_COMPILER_PIC], [AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])])
+m4_ifndef([AC_LIBTOOL_PROG_LD_SHLIBS],	[AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])])
+m4_ifndef([AC_LIBTOOL_POSTDEP_PREDEP],	[AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])])
+m4_ifndef([LT_AC_PROG_EGREP],		[AC_DEFUN([LT_AC_PROG_EGREP])])
+m4_ifndef([LT_AC_PROG_SED],		[AC_DEFUN([LT_AC_PROG_SED])])
+m4_ifndef([_LT_CC_BASENAME],		[AC_DEFUN([_LT_CC_BASENAME])])
+m4_ifndef([_LT_COMPILER_BOILERPLATE],	[AC_DEFUN([_LT_COMPILER_BOILERPLATE])])
+m4_ifndef([_LT_LINKER_BOILERPLATE],	[AC_DEFUN([_LT_LINKER_BOILERPLATE])])
+m4_ifndef([_AC_PROG_LIBTOOL],		[AC_DEFUN([_AC_PROG_LIBTOOL])])
+m4_ifndef([AC_LIBTOOL_SETUP],		[AC_DEFUN([AC_LIBTOOL_SETUP])])
+m4_ifndef([_LT_AC_CHECK_DLFCN],		[AC_DEFUN([_LT_AC_CHECK_DLFCN])])
+m4_ifndef([AC_LIBTOOL_SYS_DYNAMIC_LINKER],	[AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])])
+m4_ifndef([_LT_AC_TAGCONFIG],		[AC_DEFUN([_LT_AC_TAGCONFIG])])
+m4_ifndef([AC_DISABLE_FAST_INSTALL],	[AC_DEFUN([AC_DISABLE_FAST_INSTALL])])
+m4_ifndef([_LT_AC_LANG_CXX],		[AC_DEFUN([_LT_AC_LANG_CXX])])
+m4_ifndef([_LT_AC_LANG_F77],		[AC_DEFUN([_LT_AC_LANG_F77])])
+m4_ifndef([_LT_AC_LANG_GCJ],		[AC_DEFUN([_LT_AC_LANG_GCJ])])
+m4_ifndef([AC_LIBTOOL_RC],		[AC_DEFUN([AC_LIBTOOL_RC])])
+m4_ifndef([AC_LIBTOOL_LANG_C_CONFIG],	[AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])])
+m4_ifndef([_LT_AC_LANG_C_CONFIG],	[AC_DEFUN([_LT_AC_LANG_C_CONFIG])])
+m4_ifndef([AC_LIBTOOL_LANG_CXX_CONFIG],	[AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])])
+m4_ifndef([_LT_AC_LANG_CXX_CONFIG],	[AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])])
+m4_ifndef([AC_LIBTOOL_LANG_F77_CONFIG],	[AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])])
+m4_ifndef([_LT_AC_LANG_F77_CONFIG],	[AC_DEFUN([_LT_AC_LANG_F77_CONFIG])])
+m4_ifndef([AC_LIBTOOL_LANG_GCJ_CONFIG],	[AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])])
+m4_ifndef([_LT_AC_LANG_GCJ_CONFIG],	[AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])])
+m4_ifndef([AC_LIBTOOL_LANG_RC_CONFIG],	[AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])])
+m4_ifndef([_LT_AC_LANG_RC_CONFIG],	[AC_DEFUN([_LT_AC_LANG_RC_CONFIG])])
+m4_ifndef([AC_LIBTOOL_CONFIG],		[AC_DEFUN([AC_LIBTOOL_CONFIG])])
+m4_ifndef([_LT_AC_FILE_LTDLL_C],	[AC_DEFUN([_LT_AC_FILE_LTDLL_C])])
diff --git a/mpc/m4/mpc.m4 b/mpc/m4/mpc.m4
new file mode 100644
index 0000000..a014f01
--- /dev/null
+++ b/mpc/m4/mpc.m4
@@ -0,0 +1,166 @@
+/* mpc.m4
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#
+# SYNOPSIS
+#
+#
+MPC_PROG_CC_WARNINGFLAG([CFLAG-VAR])
+#
+# DESCRIPTION
+#
+# For development version only: Checks if gcc accepts warning flags.
+# Put accepted ones into CFLAG-VAR.
+#
+AC_DEFUN([MPC_PROG_CC_WARNINGCFLAGS], [
+  AC_REQUIRE([AC_PROG_GREP])
+  if echo $VERSION | grep -c dev >/dev/null 2>&1 ; then
+    if test "x$GCC" = "xyes" -a "x$compiler" != "xicc" -a "x$compiler" != "xg++"; then
+      case $host in
+         *darwin*) ;;
+         *) AX_C_CHECK_FLAG(-D_FORTIFY_SOURCE=2,,,$1="$$1 -D_FORTIFY_SOURCE=2",) ;;
+      esac
+      AX_C_CHECK_FLAG(-g,,,$1="$$1 -g",)
+      AX_C_CHECK_FLAG(-pedantic,,,$1="$$1 -pedantic",)
+      AX_C_CHECK_FLAG(-Wno-long-long,,,$1="$$1 -Wno-long-long",)
+      AX_C_CHECK_FLAG(-Wall,,,$1="$$1 -Wall",)
+      AX_C_CHECK_FLAG(-Wextra,,,$1="$$1 -Wextra",)
+      AX_C_CHECK_FLAG(-Werror,,,$1="$$1 -Werror",)
+      AX_C_CHECK_FLAG(-Wdeclaration-after-statement,,,$1="$$1 -Wdeclaration-after-statement",)
+      AX_C_CHECK_FLAG(-Wundef,,,$1="$$1 -Wundef",)
+      AX_C_CHECK_FLAG(-Wshadow,,,$1="$$1 -Wshadow",)
+      AX_C_CHECK_FLAG(-Wstrict-prototypes,,,$1="$$1 -Wstrict-prototypes",)
+      AX_C_CHECK_FLAG(-Wmissing-prototypes,,,$1="$$1 -Wmissing-prototypes",)
+      AC_SUBST($1)
+    fi
+  fi
+])
+
+
+#
+# SYNOPSIS
+#
+#
+MPC_GMP_CC_CFLAGS
+#
+# DESCRIPTION
+#
+# Checks if CC and CFLAGS can be extracted from gmp.h
+#
+AC_DEFUN([MPC_GMP_CC_CFLAGS], [
+   AC_MSG_CHECKING(for CC and CFLAGS in gmp.h)
+   AC_PROG_CPP
+   AC_PROG_EGREP
+   AC_PROG_SED
+   # Get CC
+   echo "#include \"gmp.h\"" >  conftest.c
+   echo "MPC_OPTION __GMP_CC"           >> conftest.c
+   GMP_CC=`$CPP $CPPFLAGS conftest.c 2> /dev/null | $EGREP MPC_OPTION | $SED -e 's/MPC_OPTION //g' | $SED -e 's/"//g'`
+   #Get CFLAGS
+   echo "#include \"gmp.h\"" >  conftest.c
+   echo "MPC_OPTION __GMP_CFLAGS"           >> conftest.c
+   GMP_CFLAGS=`$CPP $CPPFLAGS conftest.c 2> /dev/null | $EGREP MPC_OPTION | $SED -e 's/MPC_OPTION //g'| $SED -e 's/"//g'`
+   rm -f conftest.c
+   if test "x$GMP_CFLAGS" = "x__GMP_CFLAGS" -o "x$GMP_CC" = "x__GMP_CC" ; then
+      AC_MSG_RESULT(no)
+      GMP_CFLAGS=
+      GMP_CC=
+   else
+      AC_MSG_RESULT(yes [CC=$GMP_CC CFLAGS=$GMP_CFLAGS])
+   fi
+
+   dnl Check for validity of CC and CFLAGS obtained from gmp.h
+   if test -n "$GMP_CFLAGS" ; then
+      old_cflags=$CFLAGS
+      old_cc=$CC
+      CFLAGS=$GMP_CFLAGS
+      CC=$GMP_CC
+      AC_MSG_CHECKING(for CC=$GMP_CC and CFLAGS=$GMP_CFLAGS)
+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[/*hello*/]],[[/*world*/]])], [
+         AC_MSG_RESULT(yes)
+         ], [
+         AC_MSG_RESULT(no)
+         CFLAGS=$old_cflags
+         CC=$old_cc
+      ])
+      dnl CC may have changed. Recheck for GCC.
+      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+   #ifndef __GNUC__
+   #error "GCC Not Found"
+   error
+   #endif
+      ]])], [
+      GCC=yes
+      ], [
+      GCC=no
+      ])
+   fi
+
+])
+
+
+#
+# SYNOPSIS
+#
+#
+MPC_WINDOWS
+#
+# DESCRIPTION
+#
+# Additional checks on windows
+# libtool requires "-no-undefined" for win32 dll
+# It also disables the tests involving the linking with LIBGMP if DLL
+#
+AC_DEFUN([MPC_WINDOWS], [
+   AC_MSG_CHECKING(for DLL/static GMP)
+   if test "$enable_shared" = yes; then
+     LDFLAGS="$LDFLAGS -no-undefined"
+     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#include "gmp.h"
+#if !__GMP_LIBGMP_DLL
+#error
+error
+#endif
+     ]], [[]])],[AC_MSG_RESULT(DLL)],[
+  AC_MSG_RESULT(static)
+  AC_MSG_ERROR([gmp.h isn't a DLL: use --enable-static --disable-shared]) ])
+     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#include "mpfr.h"
+#if !__GMP_LIBGMP_DLL
+#error
+error
+#endif
+     ]], [[]])],[AC_MSG_RESULT(DLL)],[
+  AC_MSG_RESULT(static)
+  AC_MSG_ERROR([gmp.h isn't a DLL: use --enable-static --disable-shared]) ])
+   else
+     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#include "gmp.h"
+#if __GMP_LIBGMP_DLL
+#error
+error
+#endif
+     ]], [[]])],[AC_MSG_RESULT(static)],[
+  AC_MSG_RESULT(DLL)
+  AC_MSG_ERROR([gmp.h is a DLL: use --disable-static --enable-shared]) ])
+  fi
+  ;;
+])
diff --git a/mpc/missing b/mpc/missing
new file mode 100755
index 0000000..28055d2
--- /dev/null
+++ b/mpc/missing
@@ -0,0 +1,376 @@
+#! /bin/sh
+# Common stub for a few missing GNU programs while installing.
+
+scriptversion=2009-04-28.21; # UTC
+
+# Copyright (C) 1996, 1997, 1999, 2000, 2002, 2003, 2004, 2005, 2006,
+# 2008, 2009 Free Software Foundation, Inc.
+# Originally by Fran,cois Pinard <pinard@iro.umontreal.ca>, 1996.
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+if test $# -eq 0; then
+  echo 1>&2 "Try \`$0 --help' for more information"
+  exit 1
+fi
+
+run=:
+sed_output='s/.* --output[ =]\([^ ]*\).*/\1/p'
+sed_minuso='s/.* -o \([^ ]*\).*/\1/p'
+
+# In the cases where this matters, `missing' is being run in the
+# srcdir already.
+if test -f configure.ac; then
+  configure_ac=configure.ac
+else
+  configure_ac=configure.in
+fi
+
+msg="missing on your system"
+
+case $1 in
+--run)
+  # Try to run requested program, and just exit if it succeeds.
+  run=
+  shift
+  "$@" && exit 0
+  # Exit code 63 means version mismatch.  This often happens
+  # when the user try to use an ancient version of a tool on
+  # a file that requires a minimum version.  In this case we
+  # we should proceed has if the program had been absent, or
+  # if --run hadn't been passed.
+  if test $? = 63; then
+    run=:
+    msg="probably too old"
+  fi
+  ;;
+
+  -h|--h|--he|--hel|--help)
+    echo "\
+$0 [OPTION]... PROGRAM [ARGUMENT]...
+
+Handle \`PROGRAM [ARGUMENT]...' for when PROGRAM is missing, or return an
+error status if there is no known handling for PROGRAM.
+
+Options:
+  -h, --help      display this help and exit
+  -v, --version   output version information and exit
+  --run           try to run the given command, and emulate it if it fails
+
+Supported PROGRAM values:
+  aclocal      touch file \`aclocal.m4'
+  autoconf     touch file \`configure'
+  autoheader   touch file \`config.h.in'
+  autom4te     touch the output file, or create a stub one
+  automake     touch all \`Makefile.in' files
+  bison        create \`y.tab.[ch]', if possible, from existing .[ch]
+  flex         create \`lex.yy.c', if possible, from existing .c
+  help2man     touch the output file
+  lex          create \`lex.yy.c', if possible, from existing .c
+  makeinfo     touch the output file
+  tar          try tar, gnutar, gtar, then tar without non-portable flags
+  yacc         create \`y.tab.[ch]', if possible, from existing .[ch]
+
+Version suffixes to PROGRAM as well as the prefixes \`gnu-', \`gnu', and
+\`g' are ignored when checking the name.
+
+Send bug reports to <bug-automake@gnu.org>."
+    exit $?
+    ;;
+
+  -v|--v|--ve|--ver|--vers|--versi|--versio|--version)
+    echo "missing $scriptversion (GNU Automake)"
+    exit $?
+    ;;
+
+  -*)
+    echo 1>&2 "$0: Unknown \`$1' option"
+    echo 1>&2 "Try \`$0 --help' for more information"
+    exit 1
+    ;;
+
+esac
+
+# normalize program name to check for.
+program=`echo "$1" | sed '
+  s/^gnu-//; t
+  s/^gnu//; t
+  s/^g//; t'`
+
+# Now exit if we have it, but it failed.  Also exit now if we
+# don't have it and --version was passed (most likely to detect
+# the program).  This is about non-GNU programs, so use $1 not
+# $program.
+case $1 in
+  lex*|yacc*)
+    # Not GNU programs, they don't have --version.
+    ;;
+
+  tar*)
+    if test -n "$run"; then
+       echo 1>&2 "ERROR: \`tar' requires --run"
+       exit 1
+    elif test "x$2" = "x--version" || test "x$2" = "x--help"; then
+       exit 1
+    fi
+    ;;
+
+  *)
+    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+       # We have it, but it failed.
+       exit 1
+    elif test "x$2" = "x--version" || test "x$2" = "x--help"; then
+       # Could not run --version or --help.  This is probably someone
+       # running `$TOOL --version' or `$TOOL --help' to check whether
+       # $TOOL exists and not knowing $TOOL uses missing.
+       exit 1
+    fi
+    ;;
+esac
+
+# If it does not exist, or fails to run (possibly an outdated version),
+# try to emulate it.
+case $program in
+  aclocal*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`acinclude.m4' or \`${configure_ac}'.  You might want
+         to install the \`Automake' and \`Perl' packages.  Grab them from
+         any GNU archive site."
+    touch aclocal.m4
+    ;;
+
+  autoconf*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`${configure_ac}'.  You might want to install the
+         \`Autoconf' and \`GNU m4' packages.  Grab them from any GNU
+         archive site."
+    touch configure
+    ;;
+
+  autoheader*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`acconfig.h' or \`${configure_ac}'.  You might want
+         to install the \`Autoconf' and \`GNU m4' packages.  Grab them
+         from any GNU archive site."
+    files=`sed -n 's/^[ ]*A[CM]_CONFIG_HEADER(\([^)]*\)).*/\1/p' ${configure_ac}`
+    test -z "$files" && files="config.h"
+    touch_files=
+    for f in $files; do
+      case $f in
+      *:*) touch_files="$touch_files "`echo "$f" |
+				       sed -e 's/^[^:]*://' -e 's/:.*//'`;;
+      *) touch_files="$touch_files $f.in";;
+      esac
+    done
+    touch $touch_files
+    ;;
+
+  automake*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`Makefile.am', \`acinclude.m4' or \`${configure_ac}'.
+         You might want to install the \`Automake' and \`Perl' packages.
+         Grab them from any GNU archive site."
+    find . -type f -name Makefile.am -print |
+	   sed 's/\.am$/.in/' |
+	   while read f; do touch "$f"; done
+    ;;
+
+  autom4te*)
+    echo 1>&2 "\
+WARNING: \`$1' is needed, but is $msg.
+         You might have modified some files without having the
+         proper tools for further handling them.
+         You can get \`$1' as part of \`Autoconf' from any GNU
+         archive site."
+
+    file=`echo "$*" | sed -n "$sed_output"`
+    test -z "$file" && file=`echo "$*" | sed -n "$sed_minuso"`
+    if test -f "$file"; then
+	touch $file
+    else
+	test -z "$file" || exec >$file
+	echo "#! /bin/sh"
+	echo "# Created by GNU Automake missing as a replacement of"
+	echo "#  $ $@"
+	echo "exit 0"
+	chmod +x $file
+	exit 1
+    fi
+    ;;
+
+  bison*|yacc*)
+    echo 1>&2 "\
+WARNING: \`$1' $msg.  You should only need it if
+         you modified a \`.y' file.  You may need the \`Bison' package
+         in order for those modifications to take effect.  You can get
+         \`Bison' from any GNU archive site."
+    rm -f y.tab.c y.tab.h
+    if test $# -ne 1; then
+        eval LASTARG="\${$#}"
+	case $LASTARG in
+	*.y)
+	    SRCFILE=`echo "$LASTARG" | sed 's/y$/c/'`
+	    if test -f "$SRCFILE"; then
+	         cp "$SRCFILE" y.tab.c
+	    fi
+	    SRCFILE=`echo "$LASTARG" | sed 's/y$/h/'`
+	    if test -f "$SRCFILE"; then
+	         cp "$SRCFILE" y.tab.h
+	    fi
+	  ;;
+	esac
+    fi
+    if test ! -f y.tab.h; then
+	echo >y.tab.h
+    fi
+    if test ! -f y.tab.c; then
+	echo 'main() { return 0; }' >y.tab.c
+    fi
+    ;;
+
+  lex*|flex*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified a \`.l' file.  You may need the \`Flex' package
+         in order for those modifications to take effect.  You can get
+         \`Flex' from any GNU archive site."
+    rm -f lex.yy.c
+    if test $# -ne 1; then
+        eval LASTARG="\${$#}"
+	case $LASTARG in
+	*.l)
+	    SRCFILE=`echo "$LASTARG" | sed 's/l$/c/'`
+	    if test -f "$SRCFILE"; then
+	         cp "$SRCFILE" lex.yy.c
+	    fi
+	  ;;
+	esac
+    fi
+    if test ! -f lex.yy.c; then
+	echo 'main() { return 0; }' >lex.yy.c
+    fi
+    ;;
+
+  help2man*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+	 you modified a dependency of a manual page.  You may need the
+	 \`Help2man' package in order for those modifications to take
+	 effect.  You can get \`Help2man' from any GNU archive site."
+
+    file=`echo "$*" | sed -n "$sed_output"`
+    test -z "$file" && file=`echo "$*" | sed -n "$sed_minuso"`
+    if test -f "$file"; then
+	touch $file
+    else
+	test -z "$file" || exec >$file
+	echo ".ab help2man is required to generate this page"
+	exit $?
+    fi
+    ;;
+
+  makeinfo*)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified a \`.texi' or \`.texinfo' file, or any other file
+         indirectly affecting the aspect of the manual.  The spurious
+         call might also be the consequence of using a buggy \`make' (AIX,
+         DU, IRIX).  You might want to install the \`Texinfo' package or
+         the \`GNU make' package.  Grab either from any GNU archive site."
+    # The file to touch is that specified with -o ...
+    file=`echo "$*" | sed -n "$sed_output"`
+    test -z "$file" && file=`echo "$*" | sed -n "$sed_minuso"`
+    if test -z "$file"; then
+      # ... or it is the one specified with @setfilename ...
+      infile=`echo "$*" | sed 's/.* \([^ ]*\) *$/\1/'`
+      file=`sed -n '
+	/^@setfilename/{
+	  s/.* \([^ ]*\) *$/\1/
+	  p
+	  q
+	}' $infile`
+      # ... or it is derived from the source name (dir/f.texi becomes f.info)
+      test -z "$file" && file=`echo "$infile" | sed 's,.*/,,;s,.[^.]*$,,'`.info
+    fi
+    # If the file does not exist, the user really needs makeinfo;
+    # let's fail without touching anything.
+    test -f $file || exit 1
+    touch $file
+    ;;
+
+  tar*)
+    shift
+
+    # We have already tried tar in the generic part.
+    # Look for gnutar/gtar before invocation to avoid ugly error
+    # messages.
+    if (gnutar --version > /dev/null 2>&1); then
+       gnutar "$@" && exit 0
+    fi
+    if (gtar --version > /dev/null 2>&1); then
+       gtar "$@" && exit 0
+    fi
+    firstarg="$1"
+    if shift; then
+	case $firstarg in
+	*o*)
+	    firstarg=`echo "$firstarg" | sed s/o//`
+	    tar "$firstarg" "$@" && exit 0
+	    ;;
+	esac
+	case $firstarg in
+	*h*)
+	    firstarg=`echo "$firstarg" | sed s/h//`
+	    tar "$firstarg" "$@" && exit 0
+	    ;;
+	esac
+    fi
+
+    echo 1>&2 "\
+WARNING: I can't seem to be able to run \`tar' with the given arguments.
+         You may want to install GNU tar or Free paxutils, or check the
+         command line arguments."
+    exit 1
+    ;;
+
+  *)
+    echo 1>&2 "\
+WARNING: \`$1' is needed, and is $msg.
+         You might have modified some files without having the
+         proper tools for further handling them.  Check the \`README' file,
+         it often tells you about the needed prerequisites for installing
+         this package.  You may also peek at any GNU archive site, in case
+         some other package would contain this missing \`$1' program."
+    exit 1
+    ;;
+esac
+
+exit 0
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-time-zone: "UTC"
+# time-stamp-end: "; # UTC"
+# End:
diff --git a/mpc/src/Makefile.am b/mpc/src/Makefile.am
new file mode 100644
index 0000000..7c2c960
--- /dev/null
+++ b/mpc/src/Makefile.am
@@ -0,0 +1,17 @@
+## src/Makefile.am -- Process this file with automake to produce Makefile.in
+AM_CFLAGS=@WARNINGCFLAGS@
+
+lib_LTLIBRARIES = libmpc.la
+libmpc_la_LDFLAGS = -version-info 2:0:0
+libmpc_la_SOURCES = mpc-impl.h abs.c acos.c acosh.c add.c add_fr.c         \
+  add_si.c add_ui.c arg.c asin.c asinh.c atan.c atanh.c clear.c cmp.c cmp_si_si.c   \
+  conj.c cosh.c div_2exp.c div.c div_fr.c div_ui.c exp.c fma.c fr_div.c    \
+  fr_sub.c get.c get_prec2.c get_prec.c get_str.c get_version.c imag.c     \
+  init2.c init3.c inp_str.c log.c mem.c mul_2exp.c mul.c mul_fr.c mul_i.c  \
+  mul_si.c mul_ui.c neg.c norm.c out_str.c pow.c pow_fr.c pow_ld.c pow_d.c \
+  pow_si.c pow_ui.c pow_z.c proj.c real.c urandom.c set.c set_prec.c       \
+  set_str.c set_x.c set_x_x.c sin_cos.c sinh.c sqr.c sqrt.c strtoc.c \
+  sub.c sub_fr.c sub_ui.c swap.c tan.c tanh.c uceil_log2.c ui_div.c        \
+  ui_ui_sub.c
+
+libmpc_la_LIBADD = @LTLIBOBJS@
diff --git a/mpc/src/Makefile.in b/mpc/src/Makefile.in
new file mode 100644
index 0000000..b709f52
--- /dev/null
+++ b/mpc/src/Makefile.in
@@ -0,0 +1,619 @@
+# Makefile.in generated by automake 1.11.1 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
+# Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+subdir = src
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in logging.c
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_c_check_flag.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/mpc.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__installdirs = "$(DESTDIR)$(libdir)"
+LTLIBRARIES = $(lib_LTLIBRARIES)
+libmpc_la_DEPENDENCIES = @LTLIBOBJS@
+am_libmpc_la_OBJECTS = abs.lo acos.lo acosh.lo add.lo add_fr.lo \
+	add_si.lo add_ui.lo arg.lo asin.lo asinh.lo atan.lo atanh.lo \
+	clear.lo cmp.lo cmp_si_si.lo conj.lo cosh.lo div_2exp.lo \
+	div.lo div_fr.lo div_ui.lo exp.lo fma.lo fr_div.lo fr_sub.lo \
+	get.lo get_prec2.lo get_prec.lo get_str.lo get_version.lo \
+	imag.lo init2.lo init3.lo inp_str.lo log.lo mem.lo mul_2exp.lo \
+	mul.lo mul_fr.lo mul_i.lo mul_si.lo mul_ui.lo neg.lo norm.lo \
+	out_str.lo pow.lo pow_fr.lo pow_ld.lo pow_d.lo pow_si.lo \
+	pow_ui.lo pow_z.lo proj.lo real.lo urandom.lo set.lo \
+	set_prec.lo set_str.lo set_x.lo set_x_x.lo sin_cos.lo sinh.lo \
+	sqr.lo sqrt.lo strtoc.lo sub.lo sub_fr.lo sub_ui.lo swap.lo \
+	tan.lo tanh.lo uceil_log2.lo ui_div.lo ui_ui_sub.lo
+libmpc_la_OBJECTS = $(am_libmpc_la_OBJECTS)
+libmpc_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(libmpc_la_LDFLAGS) $(LDFLAGS) -o $@
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
+depcomp = $(SHELL) $(top_srcdir)/depcomp
+am__depfiles_maybe = depfiles
+am__mv = mv -f
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
+	$(LDFLAGS) -o $@
+SOURCES = $(libmpc_la_SOURCES)
+DIST_SOURCES = $(libmpc_la_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+GREP = @GREP@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+MPC_LOG_H = @MPC_LOG_H@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WARNINGCFLAGS = @WARNINGCFLAGS@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_ECHO = @lt_ECHO@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+AM_CFLAGS = @WARNINGCFLAGS@
+lib_LTLIBRARIES = libmpc.la
+libmpc_la_LDFLAGS = -version-info 2:0:0
+libmpc_la_SOURCES = mpc-impl.h abs.c acos.c acosh.c add.c add_fr.c         \
+  add_si.c add_ui.c arg.c asin.c asinh.c atan.c atanh.c clear.c cmp.c cmp_si_si.c   \
+  conj.c cosh.c div_2exp.c div.c div_fr.c div_ui.c exp.c fma.c fr_div.c    \
+  fr_sub.c get.c get_prec2.c get_prec.c get_str.c get_version.c imag.c     \
+  init2.c init3.c inp_str.c log.c mem.c mul_2exp.c mul.c mul_fr.c mul_i.c  \
+  mul_si.c mul_ui.c neg.c norm.c out_str.c pow.c pow_fr.c pow_ld.c pow_d.c \
+  pow_si.c pow_ui.c pow_z.c proj.c real.c urandom.c set.c set_prec.c       \
+  set_str.c set_x.c set_x_x.c sin_cos.c sinh.c sqr.c sqrt.c strtoc.c \
+  sub.c sub_fr.c sub_ui.c swap.c tan.c tanh.c uceil_log2.c ui_div.c        \
+  ui_ui_sub.c
+
+libmpc_la_LIBADD = @LTLIBOBJS@
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu src/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+install-libLTLIBRARIES: $(lib_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
+	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
+	list2=; for p in $$list; do \
+	  if test -f $$p; then \
+	    list2="$$list2 $$p"; \
+	  else :; fi; \
+	done; \
+	test -z "$$list2" || { \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
+	}
+
+uninstall-libLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
+	done
+
+clean-libLTLIBRARIES:
+	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
+	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
+	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
+	  test "$$dir" != "$$p" || dir=.; \
+	  echo "rm -f \"$${dir}/so_locations\""; \
+	  rm -f "$${dir}/so_locations"; \
+	done
+libmpc.la: $(libmpc_la_OBJECTS) $(libmpc_la_DEPENDENCIES) 
+	$(libmpc_la_LINK) -rpath $(libdir) $(libmpc_la_OBJECTS) $(libmpc_la_LIBADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/logging.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/abs.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acos.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/acosh.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/add.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/add_fr.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/add_si.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/add_ui.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arg.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asin.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asinh.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atan.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atanh.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clear.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmp.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmp_si_si.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/conj.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cosh.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/div.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/div_2exp.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/div_fr.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/div_ui.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exp.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fma.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fr_div.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fr_sub.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_prec.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_prec2.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_str.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/get_version.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/imag.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/init2.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/init3.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inp_str.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mem.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mul.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mul_2exp.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mul_fr.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mul_i.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mul_si.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mul_ui.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/neg.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/norm.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/out_str.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_d.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_fr.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_ld.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_si.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_ui.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pow_z.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proj.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/real.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_prec.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_str.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_x.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/set_x_x.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sin_cos.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sinh.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sqr.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sqrt.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strtoc.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sub.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sub_fr.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sub_ui.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swap.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tan.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tanh.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uceil_log2.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ui_div.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ui_ui_sub.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/urandom.Plo@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	set x; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LTLIBRARIES)
+installdirs:
+	for dir in "$(DESTDIR)$(libdir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
+	mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf $(DEPDIR) ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am: install-libLTLIBRARIES
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf $(DEPDIR) ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-libLTLIBRARIES
+
+.MAKE: install-am install-strip
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-libLTLIBRARIES clean-libtool ctags distclean \
+	distclean-compile distclean-generic distclean-libtool \
+	distclean-tags distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-dvi \
+	install-dvi-am install-exec install-exec-am install-html \
+	install-html-am install-info install-info-am \
+	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
+	install-ps install-ps-am install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags uninstall uninstall-am uninstall-libLTLIBRARIES
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff --git a/mpc/src/abs.c b/mpc/src/abs.c
new file mode 100644
index 0000000..6f88422
--- /dev/null
+++ b/mpc/src/abs.c
@@ -0,0 +1,29 @@
+/* mpc_abs -- Absolute value of a complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* the rounding mode is mpfr_rnd_t here since we return an mpfr number */
+int
+mpc_abs (mpfr_ptr a, mpc_srcptr b, mpfr_rnd_t rnd)
+{
+   return mpfr_hypot (a, MPC_RE(b), MPC_IM(b), rnd);
+}
diff --git a/mpc/src/acos.c b/mpc/src/acos.c
new file mode 100644
index 0000000..f604c96
--- /dev/null
+++ b/mpc/src/acos.c
@@ -0,0 +1,230 @@
+/* mpc_acos -- arccosine of a complex number.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h>    /* for MPC_ASSERT */
+#include "mpc-impl.h"
+
+int
+mpc_acos (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im, inex;
+  mpfr_prec_t p_re, p_im, p;
+  mpc_t z1;
+  mpfr_t pi_over_2;
+  mpfr_exp_t e1, e2;
+  mpfr_rnd_t rnd_im;
+  mpc_rnd_t rnd1;
+
+  inex_re = 0;
+  inex_im = 0;
+
+  /* special values */
+  if (mpfr_nan_p (MPC_RE (op)) || mpfr_nan_p (MPC_IM (op)))
+    {
+      if (mpfr_inf_p (MPC_RE (op)) || mpfr_inf_p (MPC_IM (op)))
+        {
+          mpfr_set_inf (MPC_IM (rop), mpfr_signbit (MPC_IM (op)) ? +1 : -1);
+          mpfr_set_nan (MPC_RE (rop));
+        }
+      else if (mpfr_zero_p (MPC_RE (op)))
+        {
+          inex_re = set_pi_over_2 (MPC_RE (rop), +1, MPC_RND_RE (rnd));
+          mpfr_set_nan (MPC_IM (rop));
+        }
+      else
+        {
+          mpfr_set_nan (MPC_RE (rop));
+          mpfr_set_nan (MPC_IM (rop));
+        }
+
+      return MPC_INEX (inex_re, 0);
+    }
+
+  if (mpfr_inf_p (MPC_RE (op)) || mpfr_inf_p (MPC_IM (op)))
+    {
+      if (mpfr_inf_p (MPC_RE (op)))
+        {
+          if (mpfr_inf_p (MPC_IM (op)))
+            {
+              if (mpfr_sgn (MPC_RE (op)) > 0)
+                {
+                  inex_re =
+                    set_pi_over_2 (MPC_RE (rop), +1, MPC_RND_RE (rnd));
+                  mpfr_div_2ui (MPC_RE (rop), MPC_RE (rop), 1, GMP_RNDN);
+                }
+              else
+                {
+
+                  /* the real part of the result is 3*pi/4
+                     a = o(pi)  error(a) < 1 ulp(a)
+                     b = o(3*a) error(b) < 2 ulp(b)
+                     c = b/4    exact
+                     thus 1 bit is lost */
+                  mpfr_t x;
+                  mpfr_prec_t prec;
+                  int ok;
+                  mpfr_init (x);
+                  prec = mpfr_get_prec (MPC_RE (rop));
+                  p = prec;
+
+                  do
+                    {
+                      p += mpc_ceil_log2 (p);
+                      mpfr_set_prec (x, p);
+                      mpfr_const_pi (x, GMP_RNDD);
+                      mpfr_mul_ui (x, x, 3, GMP_RNDD);
+                      ok =
+                        mpfr_can_round (x, p - 1, GMP_RNDD, MPC_RND_RE (rnd),
+                                        prec+(MPC_RND_RE (rnd) == GMP_RNDN));
+
+                    } while (ok == 0);
+                  inex_re =
+                    mpfr_div_2ui (MPC_RE (rop), x, 2, MPC_RND_RE (rnd));
+                  mpfr_clear (x);
+                }
+            }
+          else
+            {
+              if (mpfr_sgn (MPC_RE (op)) > 0)
+                mpfr_set_ui (MPC_RE (rop), 0, GMP_RNDN);
+              else
+                inex_re = mpfr_const_pi (MPC_RE (rop), MPC_RND_RE (rnd));
+            }
+        }
+      else
+        inex_re = set_pi_over_2 (MPC_RE (rop), +1, MPC_RND_RE (rnd));
+
+      mpfr_set_inf (MPC_IM (rop), mpfr_signbit (MPC_IM (op)) ? +1 : -1);
+
+      return MPC_INEX (inex_re, 0);
+    }
+
+  /* pure real argument */
+  if (mpfr_zero_p (MPC_IM (op)))
+    {
+      int s_im;
+      s_im = mpfr_signbit (MPC_IM (op));
+
+      if (mpfr_cmp_ui (MPC_RE (op), 1) > 0)
+        {
+          if (s_im)
+            inex_im = mpfr_acosh (MPC_IM (rop), MPC_RE (op),
+                                  MPC_RND_IM (rnd));
+          else
+            inex_im = -mpfr_acosh (MPC_IM (rop), MPC_RE (op),
+                                   INV_RND (MPC_RND_IM (rnd)));
+
+          mpfr_set_ui (MPC_RE (rop), 0, GMP_RNDN);
+        }
+      else if (mpfr_cmp_si (MPC_RE (op), -1) < 0)
+        {
+          mpfr_t minus_op_re;
+          minus_op_re[0] = MPC_RE (op)[0];
+          MPFR_CHANGE_SIGN (minus_op_re);
+
+          if (s_im)
+            inex_im = mpfr_acosh (MPC_IM (rop), minus_op_re,
+                                  MPC_RND_IM (rnd));
+          else
+            inex_im = -mpfr_acosh (MPC_IM (rop), minus_op_re,
+                                   INV_RND (MPC_RND_IM (rnd)));
+          inex_re = mpfr_const_pi (MPC_RE (rop), MPC_RND_RE (rnd));
+        }
+      else
+        {
+          inex_re = mpfr_acos (MPC_RE (rop), MPC_RE (op), MPC_RND_RE (rnd));
+          mpfr_set_ui (MPC_IM (rop), 0, MPC_RND_IM (rnd));
+        }
+
+      if (!s_im)
+        mpc_conj (rop, rop, MPC_RNDNN);
+
+      return MPC_INEX (inex_re, inex_im);
+    }
+
+  /* pure imaginary argument */
+  if (mpfr_zero_p (MPC_RE (op)))
+    {
+      inex_re = set_pi_over_2 (MPC_RE (rop), +1, MPC_RND_RE (rnd));
+      inex_im = -mpfr_asinh (MPC_IM (rop), MPC_IM (op),
+                             INV_RND (MPC_RND_IM (rnd)));
+      mpc_conj (rop,rop, MPC_RNDNN);
+
+      return MPC_INEX (inex_re, inex_im);
+    }
+
+  /* regular complex argument: acos(z) = Pi/2 - asin(z) */
+  p_re = mpfr_get_prec (MPC_RE(rop));
+  p_im = mpfr_get_prec (MPC_IM(rop));
+  p = p_re;
+  mpc_init3 (z1, p, p_im); /* we round directly the imaginary part to p_im,
+                              with rounding mode opposite to rnd_im */
+  rnd_im = MPC_RND_IM(rnd);
+  /* the imaginary part of asin(z) has the same sign as Im(z), thus if
+     Im(z) > 0 and rnd_im = RNDZ, we want to round the Im(asin(z)) to -Inf
+     so that -Im(asin(z)) is rounded to zero */
+  if (rnd_im == GMP_RNDZ)
+    rnd_im = mpfr_sgn (MPC_IM(op)) > 0 ? GMP_RNDD : GMP_RNDU;
+  else
+    rnd_im = rnd_im == GMP_RNDU ? GMP_RNDD
+      : rnd_im == GMP_RNDD ? GMP_RNDU
+      : rnd_im; /* both RNDZ and RNDA map to themselves for -asin(z) */
+  rnd1 = RNDC(GMP_RNDN, rnd_im);
+  mpfr_init2 (pi_over_2, p);
+  for (;;)
+    {
+      p += mpc_ceil_log2 (p) + 3;
+
+      mpfr_set_prec (MPC_RE(z1), p);
+      mpfr_set_prec (pi_over_2, p);
+
+      mpfr_const_pi (pi_over_2, GMP_RNDN);
+      mpfr_div_2exp (pi_over_2, pi_over_2, 1, GMP_RNDN); /* Pi/2 */
+      e1 = 1; /* Exp(pi_over_2) */
+      inex = mpc_asin (z1, op, rnd1); /* asin(z) */
+      MPC_ASSERT (mpfr_sgn (MPC_IM(z1)) * mpfr_sgn (MPC_IM(op)) > 0);
+      inex_im = MPC_INEX_IM(inex); /* inex_im is in {-1, 0, 1} */
+      e2 = mpfr_get_exp (MPC_RE(z1));
+      mpfr_sub (MPC_RE(z1), pi_over_2, MPC_RE(z1), GMP_RNDN);
+      if (!mpfr_zero_p (MPC_RE(z1)))
+        {
+          /* the error on x=Re(z1) is bounded by 1/2 ulp(x) + 2^(e1-p-1) +
+             2^(e2-p-1) */
+          e1 = e1 >= e2 ? e1 + 1 : e2 + 1;
+          /* the error on x is bounded by 1/2 ulp(x) + 2^(e1-p-1) */
+          e1 -= mpfr_get_exp (MPC_RE(z1));
+          /* the error on x is bounded by 1/2 ulp(x) [1 + 2^e1] */
+          e1 = e1 <= 0 ? 0 : e1;
+          /* the error on x is bounded by 2^e1 * ulp(x) */
+          mpfr_neg (MPC_IM(z1), MPC_IM(z1), GMP_RNDN); /* exact */
+          inex_im = -inex_im;
+          if (mpfr_can_round (MPC_RE(z1), p - e1, GMP_RNDN, GMP_RNDZ,
+                              p_re + (MPC_RND_RE(rnd) == GMP_RNDN)))
+            break;
+        }
+    }
+  inex = mpc_set (rop, z1, rnd);
+  inex_re = MPC_INEX_RE(inex);
+  mpc_clear (z1);
+  mpfr_clear (pi_over_2);
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/acosh.c b/mpc/src/acosh.c
new file mode 100644
index 0000000..6dcea52
--- /dev/null
+++ b/mpc/src/acosh.c
@@ -0,0 +1,77 @@
+/* mpc_acosh -- inverse hyperbolic cosine of a complex number.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_acosh (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  /* acosh(z) =
+      NaN + i*NaN, if z=0+i*NaN
+     -i*acos(z), if sign(Im(z)) = -
+      i*acos(z), if sign(Im(z)) = +
+      http://functions.wolfram.com/ElementaryFunctions/ArcCosh/27/02/03/01/01/
+  */
+  mpc_t a;
+  mpfr_t tmp;
+  int inex;
+
+  if (mpfr_zero_p (MPC_RE (op)) && mpfr_nan_p (MPC_IM (op)))
+    {
+      mpfr_set_nan (MPC_RE (rop));
+      mpfr_set_nan (MPC_IM (rop));
+      return 0;
+    }
+
+  /* Note reversal of precisions due to later multiplication by i or -i */
+  mpc_init3 (a, MPC_PREC_IM(rop), MPC_PREC_RE(rop));
+
+  if (mpfr_signbit (MPC_IM (op)))
+    {
+      inex = mpc_acos (a, op,
+                       RNDC (INV_RND (MPC_RND_IM (rnd)), MPC_RND_RE (rnd)));
+
+      /* change a to -i*a, i.e., -y+i*x to x+i*y */
+      tmp[0] = MPC_RE (a)[0];
+      MPC_RE (a)[0] = MPC_IM (a)[0];
+      MPC_IM (a)[0] = tmp[0];
+      MPFR_CHANGE_SIGN (MPC_IM (a));
+      inex = MPC_INEX (MPC_INEX_IM (inex), -MPC_INEX_RE (inex));
+    }
+  else
+    {
+      inex = mpc_acos (a, op,
+                       RNDC (MPC_RND_IM (rnd), INV_RND(MPC_RND_RE (rnd))));
+
+      /* change a to i*a, i.e., y-i*x to x+i*y */
+      tmp[0] = MPC_RE (a)[0];
+      MPC_RE (a)[0] = MPC_IM (a)[0];
+      MPC_IM (a)[0] = tmp[0];
+      MPFR_CHANGE_SIGN (MPC_RE (a));
+      inex = MPC_INEX (-MPC_INEX_IM (inex), MPC_INEX_RE (inex));
+    }
+
+  mpc_set (rop, a, rnd);
+
+  mpc_clear (a);
+
+  return inex;
+}
diff --git a/mpc/src/add.c b/mpc/src/add.c
new file mode 100644
index 0000000..6f6a449
--- /dev/null
+++ b/mpc/src/add.c
@@ -0,0 +1,34 @@
+/* mpc_add -- Add two complex numbers.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return 0 iff both the real and imaginary parts are exact */
+int
+mpc_add (mpc_ptr a, mpc_srcptr b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_add (MPC_RE(a), MPC_RE(b), MPC_RE(c), MPC_RND_RE(rnd));
+  inex_im = mpfr_add (MPC_IM(a), MPC_IM(b), MPC_IM(c), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/add_fr.c b/mpc/src/add_fr.c
new file mode 100644
index 0000000..b8d3d55
--- /dev/null
+++ b/mpc/src/add_fr.c
@@ -0,0 +1,34 @@
+/* mpc_add_fr -- Add a complex number and a floating-point number.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return 0 iff both the real and imaginary parts are exact */
+int
+mpc_add_fr (mpc_ptr a, mpc_srcptr b, mpfr_srcptr c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_add (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_set (MPC_IM(a), MPC_IM(b), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/add_si.c b/mpc/src/add_si.c
new file mode 100644
index 0000000..40522c4
--- /dev/null
+++ b/mpc/src/add_si.c
@@ -0,0 +1,33 @@
+/* mpc_add_si -- Add a complex number and a signed long int.
+
+Copyright (C) INRIA, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_add_si (mpc_ptr rop, mpc_srcptr op1, long int op2, mpc_rnd_t rnd)
+{
+   int inex_re, inex_im;
+
+   inex_re = mpfr_add_si (MPC_RE (rop), MPC_RE (op1), op2, MPC_RND_RE (rnd));
+   inex_im = mpfr_set (MPC_IM (rop), MPC_IM (op1), MPC_RND_IM (rnd));
+
+   return MPC_INEX (inex_re, inex_im);
+}
diff --git a/mpc/src/add_ui.c b/mpc/src/add_ui.c
new file mode 100644
index 0000000..0015004
--- /dev/null
+++ b/mpc/src/add_ui.c
@@ -0,0 +1,34 @@
+/* mpc_add_ui -- Add a complex number and an unsigned long int.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return 0 iff both the real and imaginary parts are exact */
+int
+mpc_add_ui (mpc_ptr a, mpc_srcptr b, unsigned long int c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_add_ui (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_set (MPC_IM(a), MPC_IM(b), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/arg.c b/mpc/src/arg.c
new file mode 100644
index 0000000..2d20896
--- /dev/null
+++ b/mpc/src/arg.c
@@ -0,0 +1,28 @@
+/* mpc_arg -- Get the argument of a complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_arg (mpfr_ptr a, mpc_srcptr b, mpfr_rnd_t rnd)
+{
+  return mpfr_atan2 (a, MPC_IM (b), MPC_RE (b), rnd);
+}
diff --git a/mpc/src/asin.c b/mpc/src/asin.c
new file mode 100644
index 0000000..8d0e274
--- /dev/null
+++ b/mpc/src/asin.c
@@ -0,0 +1,228 @@
+/* mpc_asin -- arcsine of a complex number.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_asin (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  mpfr_prec_t p, p_re, p_im, incr_p = 0;
+  mpfr_rnd_t rnd_re, rnd_im;
+  mpc_t z1;
+  int inex;
+
+  /* special values */
+  if (mpfr_nan_p (MPC_RE (op)) || mpfr_nan_p (MPC_IM (op)))
+    {
+      if (mpfr_inf_p (MPC_RE (op)) || mpfr_inf_p (MPC_IM (op)))
+        {
+          mpfr_set_nan (MPC_RE (rop));
+          mpfr_set_inf (MPC_IM (rop), mpfr_signbit (MPC_IM (op)) ? -1 : +1);
+        }
+      else if (mpfr_zero_p (MPC_RE (op)))
+        {
+          mpfr_set (MPC_RE (rop), MPC_RE (op), GMP_RNDN);
+          mpfr_set_nan (MPC_IM (rop));
+        }
+      else
+        {
+          mpfr_set_nan (MPC_RE (rop));
+          mpfr_set_nan (MPC_IM (rop));
+        }
+
+      return 0;
+    }
+
+  if (mpfr_inf_p (MPC_RE (op)) || mpfr_inf_p (MPC_IM (op)))
+    {
+      int inex_re;
+      if (mpfr_inf_p (MPC_RE (op)))
+        {
+          inex_re = set_pi_over_2 (MPC_RE (rop), -mpfr_signbit (MPC_RE (op)),
+                                   MPC_RND_RE (rnd));
+          mpfr_set_inf (MPC_IM (rop), -mpfr_signbit (MPC_IM (op)));
+
+          if (mpfr_inf_p (MPC_IM (op)))
+            mpfr_div_2ui (MPC_RE (rop), MPC_RE (rop), 1, GMP_RNDN);
+        }
+      else
+        {
+          int s;
+          s = mpfr_signbit (MPC_RE (op));
+          inex_re = mpfr_set_ui (MPC_RE (rop), 0, GMP_RNDN);
+          if (s)
+            mpfr_neg (MPC_RE (rop), MPC_RE (rop), GMP_RNDN);
+          mpfr_set_inf (MPC_IM (rop), -mpfr_signbit (MPC_IM (op)));
+        }
+
+      return MPC_INEX (inex_re, 0);
+    }
+
+  /* pure real argument */
+  if (mpfr_zero_p (MPC_IM (op)))
+    {
+      int inex_re;
+      int inex_im;
+      int s_im;
+      s_im = mpfr_signbit (MPC_IM (op));
+
+      if (mpfr_cmp_ui (MPC_RE (op), 1) > 0)
+        {
+          if (s_im)
+            inex_im = -mpfr_acosh (MPC_IM (rop), MPC_RE (op),
+                                   INV_RND (MPC_RND_IM (rnd)));
+          else
+            inex_im = mpfr_acosh (MPC_IM (rop), MPC_RE (op),
+                                  MPC_RND_IM (rnd));
+          inex_re = set_pi_over_2 (MPC_RE (rop), -mpfr_signbit (MPC_RE (op)),
+                                   MPC_RND_RE (rnd));
+          if (s_im)
+            mpc_conj (rop, rop, MPC_RNDNN);
+        }
+      else if (mpfr_cmp_si (MPC_RE (op), -1) < 0)
+        {
+          mpfr_t minus_op_re;
+          minus_op_re[0] = MPC_RE (op)[0];
+          MPFR_CHANGE_SIGN (minus_op_re);
+
+          if (s_im)
+            inex_im = -mpfr_acosh (MPC_IM (rop), minus_op_re,
+                                   INV_RND (MPC_RND_IM (rnd)));
+          else
+            inex_im = mpfr_acosh (MPC_IM (rop), minus_op_re,
+                                  MPC_RND_IM (rnd));
+          inex_re = set_pi_over_2 (MPC_RE (rop), -mpfr_signbit (MPC_RE (op)),
+                                   MPC_RND_RE (rnd));
+          if (s_im)
+            mpc_conj (rop, rop, MPC_RNDNN);
+        }
+      else
+        {
+          inex_im = mpfr_set_ui (MPC_IM (rop), 0, MPC_RND_IM (rnd));
+          if (s_im)
+            mpfr_neg (MPC_IM (rop), MPC_IM (rop), GMP_RNDN);
+          inex_re = mpfr_asin (MPC_RE (rop), MPC_RE (op), MPC_RND_RE (rnd));
+        }
+
+      return MPC_INEX (inex_re, inex_im);
+    }
+
+  /* pure imaginary argument */
+  if (mpfr_zero_p (MPC_RE (op)))
+    {
+      int inex_im;
+      int s;
+      s = mpfr_signbit (MPC_RE (op));
+      mpfr_set_ui (MPC_RE (rop), 0, GMP_RNDN);
+      if (s)
+        mpfr_neg (MPC_RE (rop), MPC_RE (rop), GMP_RNDN);
+      inex_im = mpfr_asinh (MPC_IM (rop), MPC_IM (op), MPC_RND_IM (rnd));
+
+      return MPC_INEX (0, inex_im);
+    }
+
+  /* regular complex: asin(z) = -i*log(i*z+sqrt(1-z^2)) */
+  p_re = mpfr_get_prec (MPC_RE(rop));
+  p_im = mpfr_get_prec (MPC_IM(rop));
+  rnd_re = MPC_RND_RE(rnd);
+  rnd_im = MPC_RND_IM(rnd);
+  p = p_re >= p_im ? p_re : p_im;
+  mpc_init2 (z1, p);
+  while (1)
+  {
+    mpfr_exp_t ex, ey, err;
+
+    p += mpc_ceil_log2 (p) + 3 + incr_p; /* incr_p is zero initially */
+    incr_p = p / 2;
+    mpfr_set_prec (MPC_RE(z1), p);
+    mpfr_set_prec (MPC_IM(z1), p);
+
+    /* z1 <- z^2 */
+    mpc_sqr (z1, op, MPC_RNDNN);
+    /* err(x) <= 1/2 ulp(x), err(y) <= 1/2 ulp(y) */
+    /* z1 <- 1-z1 */
+    ex = mpfr_get_exp (MPC_RE(z1));
+    mpfr_ui_sub (MPC_RE(z1), 1, MPC_RE(z1), GMP_RNDN);
+    mpfr_neg (MPC_IM(z1), MPC_IM(z1), GMP_RNDN);
+    ex = ex - mpfr_get_exp (MPC_RE(z1));
+    ex = (ex <= 0) ? 0 : ex;
+    /* err(x) <= 2^ex * ulp(x) */
+    ex = ex + mpfr_get_exp (MPC_RE(z1)) - p;
+    /* err(x) <= 2^ex */
+    ey = mpfr_get_exp (MPC_IM(z1)) - p - 1;
+    /* err(y) <= 2^ey */
+    ex = (ex >= ey) ? ex : ey; /* err(x), err(y) <= 2^ex, i.e., the norm
+                                  of the error is bounded by |h|<=2^(ex+1/2) */
+    /* z1 <- sqrt(z1): if z1 = z + h, then sqrt(z1) = sqrt(z) + h/2/sqrt(t) */
+    ey = mpfr_get_exp (MPC_RE(z1)) >= mpfr_get_exp (MPC_IM(z1))
+      ? mpfr_get_exp (MPC_RE(z1)) : mpfr_get_exp (MPC_IM(z1));
+    /* we have |z1| >= 2^(ey-1) thus 1/|z1| <= 2^(1-ey) */
+    mpc_sqrt (z1, z1, MPC_RNDNN);
+    ex = (2 * ex + 1) - 2 - (ey - 1); /* |h^2/4/|t| <= 2^ex */
+    ex = (ex + 1) / 2; /* ceil(ex/2) */
+    /* express ex in terms of ulp(z1) */
+    ey = mpfr_get_exp (MPC_RE(z1)) <= mpfr_get_exp (MPC_IM(z1))
+      ? mpfr_get_exp (MPC_RE(z1)) : mpfr_get_exp (MPC_IM(z1));
+    ex = ex - ey + p;
+    /* take into account the rounding error in the mpc_sqrt call */
+    err = (ex <= 0) ? 1 : ex + 1;
+    /* err(x) <= 2^err * ulp(x), err(y) <= 2^err * ulp(y) */
+    /* z1 <- i*z + z1 */
+    ex = mpfr_get_exp (MPC_RE(z1));
+    ey = mpfr_get_exp (MPC_IM(z1));
+    mpfr_sub (MPC_RE(z1), MPC_RE(z1), MPC_IM(op), GMP_RNDN);
+    mpfr_add (MPC_IM(z1), MPC_IM(z1), MPC_RE(op), GMP_RNDN);
+    if (mpfr_cmp_ui (MPC_RE(z1), 0) == 0 || mpfr_cmp_ui (MPC_IM(z1), 0) == 0)
+      continue;
+    ex -= mpfr_get_exp (MPC_RE(z1)); /* cancellation in x */
+    ey -= mpfr_get_exp (MPC_IM(z1)); /* cancellation in y */
+    ex = (ex >= ey) ? ex : ey; /* maximum cancellation */
+    err += ex;
+    err = (err <= 0) ? 1 : err + 1; /* rounding error in sub/add */
+    /* z1 <- log(z1): if z1 = z + h, then log(z1) = log(z) + h/t with
+       |t| >= min(|z1|,|z|) */
+    ex = mpfr_get_exp (MPC_RE(z1));
+    ey = mpfr_get_exp (MPC_IM(z1));
+    ex = (ex >= ey) ? ex : ey;
+    err += ex - p; /* revert to absolute error <= 2^err */
+    mpc_log (z1, z1, GMP_RNDN);
+    err -= ex - 1; /* 1/|t| <= 1/|z| <= 2^(1-ex) */
+    /* express err in terms of ulp(z1) */
+    ey = mpfr_get_exp (MPC_RE(z1)) <= mpfr_get_exp (MPC_IM(z1))
+      ? mpfr_get_exp (MPC_RE(z1)) : mpfr_get_exp (MPC_IM(z1));
+    err = err - ey + p;
+    /* take into account the rounding error in the mpc_log call */
+    err = (err <= 0) ? 1 : err + 1;
+    /* z1 <- -i*z1 */
+    mpfr_swap (MPC_RE(z1), MPC_IM(z1));
+    mpfr_neg (MPC_IM(z1), MPC_IM(z1), GMP_RNDN);
+    if (mpfr_can_round (MPC_RE(z1), p - err, GMP_RNDN, GMP_RNDZ,
+                        p_re + (rnd_re == GMP_RNDN)) &&
+        mpfr_can_round (MPC_IM(z1), p - err, GMP_RNDN, GMP_RNDZ,
+                        p_im + (rnd_im == GMP_RNDN)))
+      break;
+  }
+
+  inex = mpc_set (rop, z1, rnd);
+  mpc_clear (z1);
+
+  return inex;
+}
diff --git a/mpc/src/asinh.c b/mpc/src/asinh.c
new file mode 100644
index 0000000..bc692b4
--- /dev/null
+++ b/mpc/src/asinh.c
@@ -0,0 +1,56 @@
+/* mpc_asinh -- inverse hyperbolic sine of a complex number.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_asinh (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  /* asinh(op) = -i*asin(i*op) */
+  int inex;
+  mpc_t z, a;
+  mpfr_t tmp;
+
+  /* z = i*op */
+  MPC_RE (z)[0] = MPC_IM (op)[0];
+  MPC_IM (z)[0] = MPC_RE (op)[0];
+  MPFR_CHANGE_SIGN (MPC_RE (z));
+
+  /* Note reversal of precisions due to later multiplication by -i */
+  mpc_init3 (a, MPC_PREC_IM(rop), MPC_PREC_RE(rop));
+
+  inex = mpc_asin (a, z,
+                   RNDC (INV_RND (MPC_RND_IM (rnd)), MPC_RND_RE (rnd)));
+
+  /* if a = asin(i*op) = x+i*y, and we want y-i*x */
+
+  /* change a to -i*a */
+  tmp[0] = MPC_RE (a)[0];
+  MPC_RE (a)[0] = MPC_IM (a)[0];
+  MPC_IM (a)[0] = tmp[0];
+  MPFR_CHANGE_SIGN (MPC_IM (a));
+
+  mpc_set (rop, a, MPC_RNDNN);   /* exact */
+
+  mpc_clear (a);
+
+  return MPC_INEX (MPC_INEX_IM (inex), -MPC_INEX_RE (inex));
+}
diff --git a/mpc/src/atan.c b/mpc/src/atan.c
new file mode 100644
index 0000000..c071276
--- /dev/null
+++ b/mpc/src/atan.c
@@ -0,0 +1,361 @@
+/* mpc_atan -- arctangent of a complex number.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* set rop to
+   -pi/2 if s < 0
+   +pi/2 else
+   rounded in the direction rnd
+*/
+int
+set_pi_over_2 (mpfr_ptr rop, int s, mpfr_rnd_t rnd)
+{
+  int inex;
+
+  inex = mpfr_const_pi (rop, s < 0 ? INV_RND (rnd) : rnd);
+  mpfr_div_2ui (rop, rop, 1, GMP_RNDN);
+  if (s < 0)
+    {
+      inex = -inex;
+      mpfr_neg (rop, rop, GMP_RNDN);
+    }
+
+  return inex;
+}
+
+int
+mpc_atan (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  int s_re;
+  int s_im;
+  int inex_re;
+  int inex_im;
+  int inex;
+
+  inex_re = 0;
+  inex_im = 0;
+  s_re = mpfr_signbit (MPC_RE (op));
+  s_im = mpfr_signbit (MPC_IM (op));
+
+  /* special values */
+  if (mpfr_nan_p (MPC_RE (op)) || mpfr_nan_p (MPC_IM (op)))
+    {
+      if (mpfr_nan_p (MPC_RE (op)))
+        {
+          mpfr_set_nan (MPC_RE (rop));
+          if (mpfr_zero_p (MPC_IM (op)) || mpfr_inf_p (MPC_IM (op)))
+            {
+              mpfr_set_ui (MPC_IM (rop), 0, GMP_RNDN);
+              if (s_im)
+                mpc_conj (rop, rop, MPC_RNDNN);
+            }
+          else
+            mpfr_set_nan (MPC_IM (rop));
+        }
+      else
+        {
+          if (mpfr_inf_p (MPC_RE (op)))
+            {
+              inex_re = set_pi_over_2 (MPC_RE (rop), -s_re, MPC_RND_RE (rnd));
+              mpfr_set_ui (MPC_IM (rop), 0, GMP_RNDN);
+            }
+          else
+            {
+              mpfr_set_nan (MPC_RE (rop));
+              mpfr_set_nan (MPC_IM (rop));
+            }
+        }
+      return MPC_INEX (inex_re, 0);
+    }
+
+  if (mpfr_inf_p (MPC_RE (op)) || mpfr_inf_p (MPC_IM (op)))
+    {
+      inex_re = set_pi_over_2 (MPC_RE (rop), -s_re, MPC_RND_RE (rnd));
+
+      mpfr_set_ui (MPC_IM (rop), 0, GMP_RNDN);
+      if (s_im)
+        mpc_conj (rop, rop, GMP_RNDN);
+
+      return MPC_INEX (inex_re, 0);
+    }
+
+  /* pure real argument */
+  if (mpfr_zero_p (MPC_IM (op)))
+    {
+      inex_re = mpfr_atan (MPC_RE (rop), MPC_RE (op), MPC_RND_RE (rnd));
+
+      mpfr_set_ui (MPC_IM (rop), 0, GMP_RNDN);
+      if (s_im)
+        mpc_conj (rop, rop, GMP_RNDN);
+
+      return MPC_INEX (inex_re, 0);
+    }
+
+  /* pure imaginary argument */
+  if (mpfr_zero_p (MPC_RE (op)))
+    {
+      int cmp_1;
+
+      if (s_im)
+        cmp_1 = -mpfr_cmp_si (MPC_IM (op), -1);
+      else
+        cmp_1 = mpfr_cmp_ui (MPC_IM (op), +1);
+
+      if (cmp_1 < 0)
+        {
+          /* atan(+0+iy) = +0 +i*atanh(y), if |y| < 1
+             atan(-0+iy) = -0 +i*atanh(y), if |y| < 1 */
+
+          mpfr_set_ui (MPC_RE (rop), 0, GMP_RNDN);
+          if (s_re)
+            mpfr_neg (MPC_RE (rop), MPC_RE (rop), GMP_RNDN);
+
+          inex_im = mpfr_atanh (MPC_IM (rop), MPC_IM (op), MPC_RND_IM (rnd));
+        }
+      else if (cmp_1 == 0)
+        {
+          /* atan(+/-0+i) = NaN +i*inf
+             atan(+/-0-i) = NaN -i*inf */
+          mpfr_set_nan (MPC_RE (rop));
+          mpfr_set_inf (MPC_IM (rop), s_im ? -1 : +1);
+        }
+      else
+        {
+          /* atan(+0+iy) = +pi/2 +i*atanh(1/y), if |y| > 1
+             atan(-0+iy) = -pi/2 +i*atanh(1/y), if |y| > 1 */
+          mpfr_rnd_t rnd_im, rnd_away;
+          mpfr_t y;
+          mpfr_prec_t p, p_im;
+          int ok;
+
+          rnd_im = MPC_RND_IM (rnd);
+          mpfr_init (y);
+          p_im = mpfr_get_prec (MPC_IM (rop));
+          p = p_im;
+
+          /* a = o(1/y)      with error(a) < 1 ulp(a)
+             b = o(atanh(a)) with error(b) < (1+2^{1+Exp(a)-Exp(b)}) ulp(b)
+
+             As |atanh (1/y)| > |1/y| we have Exp(a)-Exp(b) <=0 so, at most,
+             2 bits of precision are lost.
+
+             We round atanh(1/y) away from 0.
+          */
+          do
+            {
+              p += mpc_ceil_log2 (p) + 2;
+              mpfr_set_prec (y, p);
+              rnd_away = s_im == 0 ? GMP_RNDU : GMP_RNDD;
+              inex_im = mpfr_ui_div (y, 1, MPC_IM (op), rnd_away);
+              /* FIXME: should we consider the case with unreasonably huge
+                 precision prec(y)>3*exp_min, where atanh(1/Im(op)) could be
+                 representable while 1/Im(op) underflows ?
+                 This corresponds to |y| = 0.5*2^emin, in which case the
+                 result may be wrong. */
+
+              /* atanh cannot underflow: |atanh(x)| > |x| for |x| < 1 */
+              inex_im |= mpfr_atanh (y, y, rnd_away);
+
+              ok = inex_im == 0
+                || mpfr_can_round (y, p - 2, rnd_away, GMP_RNDZ,
+                                   p_im + (rnd_im == GMP_RNDN));
+            } while (ok == 0);
+
+          inex_re = set_pi_over_2 (MPC_RE (rop), -s_re, MPC_RND_RE (rnd));
+          inex_im = mpfr_set (MPC_IM (rop), y, rnd_im);
+          mpfr_clear (y);
+        }
+      return MPC_INEX (inex_re, inex_im);
+    }
+
+  /* regular number argument */
+  {
+    mpfr_t a, b, x, y;
+    mpfr_prec_t prec, p;
+    mpfr_exp_t err, expo;
+    int ok = 0;
+    mpfr_t minus_op_re;
+    mpfr_exp_t op_re_exp, op_im_exp;
+    mpfr_rnd_t rnd1, rnd2;
+
+    mpfr_inits (a, b, x, y, (mpfr_ptr) 0);
+
+    /* real part: Re(arctan(x+i*y)) = [arctan2(x,1-y) - arctan2(-x,1+y)]/2 */
+    minus_op_re[0] = MPC_RE (op)[0];
+    MPFR_CHANGE_SIGN (minus_op_re);
+    op_re_exp = mpfr_get_exp (MPC_RE (op));
+    op_im_exp = mpfr_get_exp (MPC_IM (op));
+
+    prec = mpfr_get_prec (MPC_RE (rop)); /* result precision */
+
+    /* a = o(1-y)         error(a) < 1 ulp(a)
+       b = o(atan2(x,a))  error(b) < [1+2^{3+Exp(x)-Exp(a)-Exp(b)}] ulp(b)
+                                     = kb ulp(b)
+       c = o(1+y)         error(c) < 1 ulp(c)
+       d = o(atan2(-x,c)) error(d) < [1+2^{3+Exp(x)-Exp(c)-Exp(d)}] ulp(d)
+                                     = kd ulp(d)
+       e = o(b - d)       error(e) < [1 + kb*2^{Exp(b}-Exp(e)}
+                                        + kd*2^{Exp(d)-Exp(e)}] ulp(e)
+                          error(e) < [1 + 2^{4+Exp(x)-Exp(a)-Exp(e)}
+                                        + 2^{4+Exp(x)-Exp(c)-Exp(e)}] ulp(e)
+                          because |atan(u)| < |u|
+                                   < [1 + 2^{5+Exp(x)-min(Exp(a),Exp(c))
+                                             -Exp(e)}] ulp(e)
+       f = e/2            exact
+    */
+
+    /* p: working precision */
+    p = (op_im_exp > 0 || prec > SAFE_ABS (mpfr_prec_t, op_im_exp)) ? prec
+      : (prec - op_im_exp);
+    rnd1 = mpfr_sgn (MPC_RE (op)) > 0 ? GMP_RNDD : GMP_RNDU;
+    rnd2 = mpfr_sgn (MPC_RE (op)) < 0 ? GMP_RNDU : GMP_RNDD;
+
+    do
+      {
+        p += mpc_ceil_log2 (p) + 2;
+        mpfr_set_prec (a, p);
+        mpfr_set_prec (b, p);
+        mpfr_set_prec (x, p);
+
+        /* x = upper bound for atan (x/(1-y)). Since atan is increasing, we
+           need an upper bound on x/(1-y), i.e., a lower bound on 1-y for
+           x positive, and an upper bound on 1-y for x negative */
+        mpfr_ui_sub (a, 1, MPC_IM (op), rnd1);
+        if (mpfr_sgn (a) == 0) /* y is near 1, thus 1+y is near 2, and
+                                  expo will be 1 or 2 below */
+          {
+            if (mpfr_cmp_ui (MPC_IM(op), 1) != 0)
+              continue;
+            err = 2; /* ensures err will be expo below */
+          }
+        else
+          err = mpfr_get_exp (a); /* err = Exp(a) with the notations above */
+        mpfr_atan2 (x, MPC_RE (op), a, GMP_RNDU);
+
+        /* b = lower bound for atan (-x/(1+y)): for x negative, we need a
+           lower bound on -x/(1+y), i.e., an upper bound on 1+y */
+        mpfr_add_ui (a, MPC_IM(op), 1, rnd2);
+        /* if a is zero but inexact, try again with a larger precision
+           if a is exactly zero, i.e., Im(op) = -1, then the error on a is 0,
+           and we can simply ignore the terms involving Exp(a) in the error */
+        if (mpfr_sgn (a) == 0)
+          {
+            if (mpfr_cmp_si (MPC_IM(op), -1) != 0)
+              continue;
+            expo = err; /* will leave err unchanged below */
+          }
+        else
+          expo = mpfr_get_exp (a); /* expo = Exp(c) with the notations above */
+        mpfr_atan2 (b, minus_op_re, a, GMP_RNDD);
+
+        err = err < expo ? err : expo; /* err = min(Exp(a),Exp(c)) */
+        mpfr_sub (x, x, b, GMP_RNDU);
+
+        err = 5 + op_re_exp - err - mpfr_get_exp (x);
+        /* error is bounded by [1 + 2^err] ulp(e) */
+        err = err < 0 ? 1 : err + 1;
+
+        mpfr_div_2ui (x, x, 1, GMP_RNDU);
+
+        /* Note: using RND2=RNDD guarantees that if x is exactly representable
+           on prec + ... bits, mpfr_can_round will return 0 */
+        ok = mpfr_can_round (x, p - err, GMP_RNDU, GMP_RNDD,
+                             prec + (MPC_RND_RE (rnd) == GMP_RNDN));
+      } while (ok == 0);
+
+    /* Imaginary part
+       Im(atan(x+I*y)) = 1/4 * [log(x^2+(1+y)^2) - log (x^2 +(1-y)^2)] */
+    prec = mpfr_get_prec (MPC_IM (rop)); /* result precision */
+
+    /* a = o(1+y)    error(a) < 1 ulp(a)
+       b = o(a^2)    error(b) < 5 ulp(b)
+       c = o(x^2)    error(c) < 1 ulp(c)
+       d = o(b+c)    error(d) < 7 ulp(d)
+       e = o(log(d)) error(e) < [1 + 7*2^{2-Exp(e)}] ulp(e) = ke ulp(e)
+       f = o(1-y)    error(f) < 1 ulp(f)
+       g = o(f^2)    error(g) < 5 ulp(g)
+       h = o(c+f)    error(h) < 7 ulp(h)
+       i = o(log(h)) error(i) < [1 + 7*2^{2-Exp(i)}] ulp(i) = ki ulp(i)
+       j = o(e-i)    error(j) < [1 + ke*2^{Exp(e)-Exp(j)}
+                                   + ki*2^{Exp(i)-Exp(j)}] ulp(j)
+                     error(j) < [1 + 2^{Exp(e)-Exp(j)} + 2^{Exp(i)-Exp(j)}
+                                   + 7*2^{3-Exp(j)}] ulp(j)
+                              < [1 + 2^{max(Exp(e),Exp(i))-Exp(j)+1}
+                                   + 7*2^{3-Exp(j)}] ulp(j)
+       k = j/4       exact
+    */
+    err = 2;
+    p = prec; /* working precision */
+    rnd1 = mpfr_cmp_si (MPC_IM (op), -1) > 0 ? GMP_RNDU : GMP_RNDD;
+
+    do
+      {
+        p += mpc_ceil_log2 (p) + err;
+        mpfr_set_prec (a, p);
+        mpfr_set_prec (b, p);
+        mpfr_set_prec (y, p);
+
+        /* a = upper bound for log(x^2 + (1+y)^2) */
+        mpfr_add_ui (a, MPC_IM (op), 1, rnd1);
+        mpfr_sqr (a, a, GMP_RNDU);
+        mpfr_sqr (y, MPC_RE (op), GMP_RNDU);
+        mpfr_add (a, a, y, GMP_RNDU);
+        mpfr_log (a, a, GMP_RNDU);
+
+        /* b = lower bound for log(x^2 + (1-y)^2) */
+        mpfr_ui_sub (b, 1, MPC_IM (op), GMP_RNDZ);
+        mpfr_sqr (b, b, GMP_RNDU);
+        /* mpfr_sqr (y, MPC_RE (op), GMP_RNDZ); */
+        mpfr_nextbelow (y);
+        mpfr_add (b, b, y, GMP_RNDZ);
+        mpfr_log (b, b, GMP_RNDZ);
+
+        mpfr_sub (y, a, b, GMP_RNDU);
+
+        if (mpfr_zero_p (y))
+          ok = 0;
+        else
+          {
+            expo = MPC_MAX (mpfr_get_exp (a), mpfr_get_exp (b));
+            expo = expo - mpfr_get_exp (y) + 1;
+            err = 3 - mpfr_get_exp (y);
+            /* error(j) <= [1 + 2^expo + 7*2^err] ulp(j) */
+            if (expo <= err) /* error(j) <= [1 + 2^{err+1}] ulp(j) */
+              err = (err < 0) ? 1 : err + 2;
+            else
+              err = (expo < 0) ? 1 : expo + 2;
+
+            mpfr_div_2ui (y, y, 2, GMP_RNDN);
+            if (mpfr_zero_p (y))
+              err = 2; /* underflow */
+
+            ok = mpfr_can_round (y, p - err, GMP_RNDU, GMP_RNDD,
+                                 prec + (MPC_RND_IM (rnd) == GMP_RNDN));
+          }
+      } while (ok == 0);
+
+    inex = mpc_set_fr_fr (rop, x, y, rnd);
+
+    mpfr_clears (a, b, x, y, (mpfr_ptr) 0);
+    return inex;
+  }
+}
diff --git a/mpc/src/atanh.c b/mpc/src/atanh.c
new file mode 100644
index 0000000..ed935d1
--- /dev/null
+++ b/mpc/src/atanh.c
@@ -0,0 +1,53 @@
+/* mpc_atanh -- inverse hyperbolic tangent of a complex number.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_atanh (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  /* atanh(op) = -i*atan(i*op) */
+  int inex;
+  mpfr_t tmp;
+  mpc_t z, a;
+
+  MPC_RE (z)[0] = MPC_IM (op)[0];
+  MPC_IM (z)[0] = MPC_RE (op)[0];
+  MPFR_CHANGE_SIGN (MPC_RE (z));
+
+  /* Note reversal of precisions due to later multiplication by -i */
+  mpc_init3 (a, MPC_PREC_IM(rop), MPC_PREC_RE(rop));
+
+  inex = mpc_atan (a, z,
+                   RNDC (INV_RND (MPC_RND_IM (rnd)), MPC_RND_RE (rnd)));
+
+  /* change a to -i*a, i.e., x+i*y to y-i*x */
+  tmp[0] = MPC_RE (a)[0];
+  MPC_RE (a)[0] = MPC_IM (a)[0];
+  MPC_IM (a)[0] = tmp[0];
+  MPFR_CHANGE_SIGN (MPC_IM (a));
+
+  mpc_set (rop, a, rnd);
+
+  mpc_clear (a);
+
+  return MPC_INEX (MPC_INEX_IM (inex), -MPC_INEX_RE (inex));
+}
diff --git a/mpc/src/clear.c b/mpc/src/clear.c
new file mode 100644
index 0000000..e27641c
--- /dev/null
+++ b/mpc/src/clear.c
@@ -0,0 +1,29 @@
+/* mpc_clear -- Clear a complex variable.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+void
+mpc_clear (mpc_t x)
+{
+  mpfr_clear (MPC_RE(x));
+  mpfr_clear (MPC_IM(x));
+}
diff --git a/mpc/src/cmp.c b/mpc/src/cmp.c
new file mode 100644
index 0000000..dfc57c9
--- /dev/null
+++ b/mpc/src/cmp.c
@@ -0,0 +1,34 @@
+/* mpc_cmp -- Compare two complex numbers.
+
+Copyright (C) INRIA, 2002, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return 0 iff a = b */
+int
+mpc_cmp (mpc_srcptr a, mpc_srcptr b)
+{
+  int cmp_re, cmp_im;
+
+  cmp_re = mpfr_cmp (MPC_RE(a), MPC_RE(b));
+  cmp_im = mpfr_cmp (MPC_IM(a), MPC_IM(b));
+
+  return MPC_INEX(cmp_re, cmp_im);
+}
diff --git a/mpc/src/cmp_si_si.c b/mpc/src/cmp_si_si.c
new file mode 100644
index 0000000..5b41d15
--- /dev/null
+++ b/mpc/src/cmp_si_si.c
@@ -0,0 +1,35 @@
+/* mpc_cmp_si_si -- Compare a complex number to a number of the form
+   b+c*i with b and c signed integers.
+
+Copyright (C) INRIA, 2005, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return 0 iff a = b */
+int
+mpc_cmp_si_si (mpc_srcptr a, long int b, long int c)
+{
+  int cmp_re, cmp_im;
+
+  cmp_re = mpfr_cmp_si (MPC_RE(a), b);
+  cmp_im = mpfr_cmp_si (MPC_IM(a), c);
+
+  return MPC_INEX(cmp_re, cmp_im);
+}
diff --git a/mpc/src/conj.c b/mpc/src/conj.c
new file mode 100644
index 0000000..9e44073
--- /dev/null
+++ b/mpc/src/conj.c
@@ -0,0 +1,33 @@
+/* mpc_conj -- Conjugate of a complex number.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_conj (mpc_ptr a, mpc_srcptr b, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_set (MPC_RE(a), MPC_RE(b), MPC_RND_RE(rnd));
+  inex_im = mpfr_neg (MPC_IM(a), MPC_IM(b), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/cosh.c b/mpc/src/cosh.c
new file mode 100644
index 0000000..e86796a
--- /dev/null
+++ b/mpc/src/cosh.c
@@ -0,0 +1,36 @@
+/* mpc_cosh -- hyperbolic cosine of a complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_cosh (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  /* cosh(op) = cos(i*op) */
+  mpc_t z;
+
+  /* z = i*op without copying significand */
+  MPC_RE (z)[0] = MPC_IM (op)[0];
+  MPC_IM (z)[0] = MPC_RE (op)[0];
+  MPFR_CHANGE_SIGN (MPC_RE (z));
+
+  return mpc_cos (rop, z, rnd);
+}
diff --git a/mpc/src/div.c b/mpc/src/div.c
new file mode 100644
index 0000000..84d74df
--- /dev/null
+++ b/mpc/src/div.c
@@ -0,0 +1,389 @@
+/* mpc_div -- Divide two complex numbers.
+
+Copyright (C) INRIA, 2002, 2003, 2004, 2005, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+static int
+mpc_div_zero (mpc_ptr a, mpc_srcptr z, mpc_srcptr w, mpc_rnd_t rnd)
+{
+   /* Assumes w==0, implementation according to C99 G.5.1.8 */
+   int sign = MPFR_SIGNBIT (MPC_RE (w));
+   mpfr_t infty;
+   mpfr_set_inf (infty, sign);
+   mpfr_mul (MPC_RE (a), infty, MPC_RE (z), MPC_RND_RE (rnd));
+   mpfr_mul (MPC_IM (a), infty, MPC_IM (z), MPC_RND_IM (rnd));
+   return MPC_INEX (0, 0); /* exact */
+}
+
+static int
+mpc_div_inf_fin (mpc_ptr rop, mpc_srcptr z, mpc_srcptr w)
+{
+   /* Assumes w finite and non-zero and z infinite; implementation
+      according to C99 G.5.1.8                                     */
+   int a, b, x, y;
+
+   a = (mpfr_inf_p (MPC_RE (z)) ? MPFR_SIGNBIT (MPC_RE (z)) : 0);
+   b = (mpfr_inf_p (MPC_IM (z)) ? MPFR_SIGNBIT (MPC_IM (z)) : 0);
+
+   /* x = MPC_MPFR_SIGN (a * MPC_RE (w) + b * MPC_IM (w)) */
+   /* y = MPC_MPFR_SIGN (b * MPC_RE (w) - a * MPC_IM (w)) */
+   if (a == 0 || b == 0) {
+      x = a * MPC_MPFR_SIGN (MPC_RE (w)) + b * MPC_MPFR_SIGN (MPC_IM (w));
+      y = b * MPC_MPFR_SIGN (MPC_RE (w)) - a * MPC_MPFR_SIGN (MPC_IM (w));
+   }
+   else {
+      /* Both parts of z are infinite; x could be determined by sign
+         considerations and comparisons. Since operations with non-finite
+         numbers are not considered time-critical, we let mpfr do the work. */
+      mpfr_t sign;
+      mpfr_init2 (sign, 2);
+         /* This is enough to determine the sign of sums and differences. */
+
+      if (a == 1)
+         if (b == 1) {
+            mpfr_add (sign, MPC_RE (w), MPC_IM (w), GMP_RNDN);
+            x = MPC_MPFR_SIGN (sign);
+            mpfr_sub (sign, MPC_RE (w), MPC_IM (w), GMP_RNDN);
+            y = MPC_MPFR_SIGN (sign);
+         }
+         else { /* b == -1 */
+            mpfr_sub (sign, MPC_RE (w), MPC_IM (w), GMP_RNDN);
+            x = MPC_MPFR_SIGN (sign);
+            mpfr_add (sign, MPC_RE (w), MPC_IM (w), GMP_RNDN);
+            y = -MPC_MPFR_SIGN (sign);
+         }
+      else /* a == -1 */
+         if (b == 1) {
+            mpfr_sub (sign, MPC_IM (w), MPC_RE (w), GMP_RNDN);
+            x = MPC_MPFR_SIGN (sign);
+            mpfr_add (sign, MPC_RE (w), MPC_IM (w), GMP_RNDN);
+            y = MPC_MPFR_SIGN (sign);
+         }
+         else { /* b == -1 */
+            mpfr_add (sign, MPC_RE (w), MPC_IM (w), GMP_RNDN);
+            x = -MPC_MPFR_SIGN (sign);
+            mpfr_sub (sign, MPC_IM (w), MPC_RE (w), GMP_RNDN);
+            y = MPC_MPFR_SIGN (sign);
+         }
+      mpfr_clear (sign);
+   }
+
+   if (x == 0)
+      mpfr_set_nan (MPC_RE (rop));
+   else
+      mpfr_set_inf (MPC_RE (rop), x);
+   if (y == 0)
+      mpfr_set_nan (MPC_IM (rop));
+   else
+      mpfr_set_inf (MPC_IM (rop), y);
+
+   return MPC_INEX (0, 0); /* exact */
+}
+
+
+static int
+mpc_div_fin_inf (mpc_ptr rop, mpc_srcptr z, mpc_srcptr w)
+{
+   /* Assumes z finite and w infinite; implementation according to
+      C99 G.5.1.8                                                  */
+   mpfr_t c, d, a, b, x, y, zero;
+
+   mpfr_init2 (c, 2); /* needed to hold a signed zero, +1 or -1 */
+   mpfr_init2 (d, 2);
+   mpfr_init2 (x, 2);
+   mpfr_init2 (y, 2);
+   mpfr_init2 (zero, 2);
+   mpfr_set_ui (zero, 0ul, GMP_RNDN);
+   mpfr_init2 (a, mpfr_get_prec (MPC_RE (z)));
+   mpfr_init2 (b, mpfr_get_prec (MPC_IM (z)));
+
+   mpfr_set_ui (c, (mpfr_inf_p (MPC_RE (w)) ? 1 : 0), GMP_RNDN);
+   MPFR_COPYSIGN (c, c, MPC_RE (w), GMP_RNDN);
+   mpfr_set_ui (d, (mpfr_inf_p (MPC_IM (w)) ? 1 : 0), GMP_RNDN);
+   MPFR_COPYSIGN (d, d, MPC_IM (w), GMP_RNDN);
+
+   mpfr_mul (a, MPC_RE (z), c, GMP_RNDN); /* exact */
+   mpfr_mul (b, MPC_IM (z), d, GMP_RNDN);
+   mpfr_add (x, a, b, GMP_RNDN);
+
+   mpfr_mul (b, MPC_IM (z), c, GMP_RNDN);
+   mpfr_mul (a, MPC_RE (z), d, GMP_RNDN);
+   mpfr_sub (y, b, a, GMP_RNDN);
+
+   MPFR_COPYSIGN (MPC_RE (rop), zero, x, GMP_RNDN);
+   MPFR_COPYSIGN (MPC_IM (rop), zero, y, GMP_RNDN);
+
+   mpfr_clear (c);
+   mpfr_clear (d);
+   mpfr_clear (x);
+   mpfr_clear (y);
+   mpfr_clear (zero);
+   mpfr_clear (a);
+   mpfr_clear (b);
+
+   return MPC_INEX (0, 0); /* exact */
+}
+
+
+int
+mpc_div (mpc_ptr a, mpc_srcptr b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+   int ok_re = 0, ok_im = 0;
+   mpc_t res, c_conj;
+   mpfr_t q;
+   mpfr_prec_t prec;
+   int inexact_prod, inexact_norm, inexact_re, inexact_im, loops = 0;
+
+   /* save signs of operands in case there are overlaps */
+   int brs = MPFR_SIGNBIT (MPC_RE (b));
+   int bis = MPFR_SIGNBIT (MPC_IM (b));
+   int crs = MPFR_SIGNBIT (MPC_RE (c));
+   int cis = MPFR_SIGNBIT (MPC_IM (c));
+
+   /* According to the C standard G.3, there are three types of numbers:   */
+   /* finite (both parts are usual real numbers; contains 0), infinite     */
+   /* (at least one part is a real infinity) and all others; the latter    */
+   /* are numbers containing a nan, but no infinity, and could reasonably  */
+   /* be called nan.                                                       */
+   /* By G.5.1.4, infinite/finite=infinite; finite/infinite=0;             */
+   /* all other divisions that are not finite/finite return nan+i*nan.     */
+   /* Division by 0 could be handled by the following case of division by  */
+   /* a real; we handle it separately instead.                             */
+   if (mpc_zero_p (c))
+      return mpc_div_zero (a, b, c, rnd);
+   else {
+      if (mpc_inf_p (b) && mpc_fin_p (c))
+         return mpc_div_inf_fin (a, b, c);
+      else if (mpc_fin_p (b) && mpc_inf_p (c))
+         return mpc_div_fin_inf (a, b, c);
+      else if (!mpc_fin_p (b) || !mpc_fin_p (c)) {
+         mpfr_set_nan (MPC_RE (a));
+         mpfr_set_nan (MPC_IM (a));
+         return MPC_INEX (0, 0);
+      }
+   }
+
+   /* check for real divisor */
+   if (mpfr_zero_p(MPC_IM(c))) /* (re_b+i*im_b)/c = re_b/c + i * (im_b/c) */
+   {
+      /* warning: a may overlap with b,c so treat the imaginary part first */
+      inexact_im = mpfr_div (MPC_IM(a), MPC_IM(b), MPC_RE(c), MPC_RND_IM(rnd));
+      inexact_re = mpfr_div (MPC_RE(a), MPC_RE(b), MPC_RE(c), MPC_RND_RE(rnd));
+
+      /* correct signs of zeroes if necessary, which does not affect the
+         inexact flags                                                    */
+      if (mpfr_zero_p (MPC_RE (a)))
+         mpfr_setsign (MPC_RE (a), MPC_RE (a), (brs != crs && bis != cis),
+            GMP_RNDN); /* exact */
+      if (mpfr_zero_p (MPC_IM (a)))
+         mpfr_setsign (MPC_IM (a), MPC_IM (a), (bis != crs && brs == cis),
+            GMP_RNDN);
+
+      return MPC_INEX(inexact_re, inexact_im);
+   }
+
+   /* check for purely imaginary divisor */
+   if (mpfr_zero_p(MPC_RE(c)))
+   {
+      /* (re_b+i*im_b)/(i*c) = im_b/c - i * (re_b/c) */
+      int overlap = (a == b) || (a == c);
+      int imag_b = mpfr_zero_p (MPC_RE (b));
+      mpfr_t cloc;
+      mpc_t tmpa;
+      mpc_ptr dest = (overlap) ? tmpa : a;
+
+      if (overlap)
+         mpc_init3 (tmpa, MPC_PREC_RE (a), MPC_PREC_IM (a));
+
+      cloc[0] = MPC_IM(c)[0]; /* copies mpfr struct IM(c) into cloc */
+      inexact_re = mpfr_div (MPC_RE(dest), MPC_IM(b), cloc, MPC_RND_RE(rnd));
+      mpfr_neg (cloc, cloc, GMP_RNDN);
+      /* changes the sign only in cloc, not in c; no need to correct later */
+      inexact_im = mpfr_div (MPC_IM(dest), MPC_RE(b), cloc, MPC_RND_IM(rnd));
+
+      if (overlap)
+        {
+          /* Note: we could use mpc_swap here, but this might cause problems
+             if a and tmpa have been allocated using different methods, since
+             it will swap the significands of a and tmpa. See http://
+         lists.gforge.inria.fr/pipermail/mpc-discuss/2009-August/000504.html */
+          mpc_set (a, tmpa, MPC_RNDNN); /* exact */
+          mpc_clear (tmpa);
+        }
+
+      /* correct signs of zeroes if necessary, which does not affect the
+         inexact flags                                                    */
+      if (mpfr_zero_p (MPC_RE (a)))
+         mpfr_setsign (MPC_RE (a), MPC_RE (a), (brs != crs && bis != cis),
+            GMP_RNDN); /* exact */
+      if (imag_b)
+         mpfr_setsign (MPC_IM (a), MPC_IM (a), (bis != crs && brs == cis),
+            GMP_RNDN);
+
+      return MPC_INEX(inexact_re, inexact_im);
+   }
+
+   prec = MPC_MAX_PREC(a);
+
+   mpc_init2 (res, 2);
+   mpfr_init (q);
+
+   /* create the conjugate of c in c_conj without allocating new memory */
+   MPC_RE (c_conj)[0] = MPC_RE (c)[0];
+   MPC_IM (c_conj)[0] = MPC_IM (c)[0];
+   MPFR_CHANGE_SIGN (MPC_IM (c_conj));
+
+   do
+   {
+      loops ++;
+      prec += loops <= 2 ? mpc_ceil_log2 (prec) + 5 : prec / 2;
+
+      mpc_set_prec (res, prec);
+      mpfr_set_prec (q, prec);
+
+      /* first compute norm(c)^2 */
+      inexact_norm = mpc_norm (q, c, GMP_RNDD);
+
+      /* now compute b*conjugate(c) */
+      /* We need rounding away from zero for both the real and the imagin-  */
+      /* ary part; then the final result is also rounded away from zero.    */
+      /* The error is less than 1 ulp. Since this is not implemented in     */
+      /* mpc, we round towards zero and add 1 ulp to the absolute values    */
+      /* if they are not exact. */
+      inexact_prod = mpc_mul (res, b, c_conj, MPC_RNDZZ);
+      inexact_re = MPC_INEX_RE (inexact_prod);
+      inexact_im = MPC_INEX_IM (inexact_prod);
+      if (inexact_re != 0)
+         MPFR_ADD_ONE_ULP (MPC_RE (res));
+      if (inexact_im != 0)
+         MPFR_ADD_ONE_ULP (MPC_IM (res));
+
+      /* divide the product by the norm */
+      if (inexact_norm == 0 && (inexact_re == 0 || inexact_im == 0))
+      {
+         /* The division has good chances to be exact in at least one part.   */
+         /* Since this can cause problems when not rounding to the nearest,   */
+         /* we use the division code of mpfr, which handles the situation.    */
+         if (MPFR_SIGN (MPC_RE (res)) > 0)
+         {
+            inexact_re |= mpfr_div (MPC_RE (res), MPC_RE (res), q, GMP_RNDU);
+            ok_re = mpfr_inf_p (MPC_RE (res)) || mpfr_zero_p (MPC_RE (res)) ||
+              mpfr_can_round (MPC_RE (res), prec - 4, GMP_RNDU,
+                              MPC_RND_RE(rnd), MPC_PREC_RE(a));
+         }
+         else
+         {
+            inexact_re |= mpfr_div (MPC_RE (res), MPC_RE (res), q, GMP_RNDD);
+            ok_re = mpfr_inf_p (MPC_RE (res)) || mpfr_zero_p (MPC_RE (res)) ||
+              mpfr_can_round (MPC_RE (res), prec - 4, GMP_RNDD,
+                              MPC_RND_RE(rnd), MPC_PREC_RE(a));
+         }
+
+         if (ok_re || !inexact_re) /* compute imaginary part */
+         {
+            if (MPFR_SIGN (MPC_IM (res)) > 0)
+            {
+               inexact_im |= mpfr_div (MPC_IM (res), MPC_IM (res), q, GMP_RNDU);
+               ok_im = mpfr_can_round (MPC_IM (res), prec - 4, GMP_RNDU,
+                                       MPC_RND_IM(rnd), MPC_PREC_IM(a));
+            }
+            else
+            {
+               inexact_im |= mpfr_div (MPC_IM (res), MPC_IM (res), q, GMP_RNDD);
+               ok_im = mpfr_can_round (MPC_IM (res), prec - 4, GMP_RNDD,
+                                       MPC_RND_IM(rnd), MPC_PREC_IM(a));
+            }
+         }
+      }
+      else
+      {
+         /* The division is inexact, so for efficiency reasons we invert q */
+         /* only once and multiply by the inverse. */
+         /* We do not decide about the sign of the difference. */
+         if (mpfr_ui_div (q, 1, q, GMP_RNDU) || inexact_norm)
+           {
+             /* if 1/q is inexact, the approximations of the real and
+                imaginary part below will be inexact, unless RE(res)
+                or IM(res) is zero */
+             inexact_re = inexact_re || !mpfr_zero_p (MPC_RE (res));
+             inexact_im = inexact_im || !mpfr_zero_p (MPC_IM (res));
+           }
+         if (MPFR_SIGN (MPC_RE (res)) > 0)
+         {
+           inexact_re = mpfr_mul (MPC_RE (res), MPC_RE (res), q, GMP_RNDU)
+             || inexact_re;
+           ok_re = mpfr_inf_p (MPC_RE (res)) || mpfr_zero_p (MPC_RE (res)) ||
+             mpfr_can_round (MPC_RE (res), prec - 4, GMP_RNDU,
+                             MPC_RND_RE(rnd), MPC_PREC_RE(a));
+         }
+         else
+         {
+           inexact_re = mpfr_mul (MPC_RE (res), MPC_RE (res), q, GMP_RNDD)
+             || inexact_re;
+           ok_re = mpfr_inf_p (MPC_RE (res)) || mpfr_zero_p (MPC_RE (res)) ||
+             mpfr_can_round (MPC_RE (res), prec - 4, GMP_RNDD,
+                             MPC_RND_RE(rnd), MPC_PREC_RE(a));
+         }
+
+         if (ok_re) /* compute imaginary part */
+         {
+            if (MPFR_SIGN (MPC_IM (res)) > 0)
+            {
+              inexact_im = mpfr_mul (MPC_IM (res), MPC_IM (res), q, GMP_RNDU)
+                || inexact_im;
+              ok_im = mpfr_can_round (MPC_IM (res), prec - 4, GMP_RNDU,
+                                      MPC_RND_IM(rnd), MPC_PREC_IM(a));
+            }
+            else
+            {
+              inexact_im = mpfr_mul (MPC_IM (res), MPC_IM (res), q, GMP_RNDD)
+                || inexact_im;
+              ok_im = mpfr_can_round (MPC_IM (res), prec - 4, GMP_RNDD,
+                                      MPC_RND_IM(rnd), MPC_PREC_IM(a));
+            }
+         }
+      }
+
+      /* check for overflow or underflow on the imaginary part */
+      if (ok_im == 0 &&
+          (mpfr_inf_p (MPC_IM (res)) || mpfr_zero_p (MPC_IM (res))))
+        ok_im = 1;
+   }
+   while ((!ok_re && inexact_re) || (!ok_im && inexact_im));
+
+   mpc_set (a, res, rnd);
+
+   /* fix inexact flags in case of overflow/underflow */
+   if (mpfr_inf_p (MPC_RE (res)))
+     inexact_re = mpfr_sgn (MPC_RE (res));
+   else if (mpfr_zero_p (MPC_RE (res)))
+     inexact_re = -mpfr_sgn (MPC_RE (res));
+   if (mpfr_inf_p (MPC_IM (res)))
+     inexact_im = mpfr_sgn (MPC_IM (res));
+   else if (mpfr_zero_p (MPC_IM (res)))
+     inexact_im = -mpfr_sgn (MPC_IM (res));
+
+   mpc_clear (res);
+   mpfr_clear (q);
+
+   return (MPC_INEX (inexact_re, inexact_im));
+      /* Only exactness vs. inexactness is tested, not the sign. */
+}
diff --git a/mpc/src/div_2exp.c b/mpc/src/div_2exp.c
new file mode 100644
index 0000000..2cbede5
--- /dev/null
+++ b/mpc/src/div_2exp.c
@@ -0,0 +1,33 @@
+/* mpc_div_2exp -- Divide a complex number by 2^e.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_div_2exp (mpc_ptr a, mpc_srcptr b, unsigned long int c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_div_2exp (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_div_2exp (MPC_IM(a), MPC_IM(b), c, MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/div_fr.c b/mpc/src/div_fr.c
new file mode 100644
index 0000000..05ad96b
--- /dev/null
+++ b/mpc/src/div_fr.c
@@ -0,0 +1,40 @@
+/* mpc_div_fr -- Divide a complex number by a floating-point number.
+
+Copyright (C) INRIA, 2002, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_div_fr (mpc_ptr a, mpc_srcptr b, mpfr_srcptr c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+  mpfr_t real;
+
+  /* We have to use temporary variable in case c=MPC_RE (a). */
+  mpfr_init2 (real, MPC_PREC_RE (a));
+
+  inex_re = mpfr_div (real, MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_div (MPC_IM(a), MPC_IM(b), c, MPC_RND_IM(rnd));
+  mpfr_set (MPC_RE (a), real, GMP_RNDN);
+
+  mpfr_clear (real);
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/div_ui.c b/mpc/src/div_ui.c
new file mode 100644
index 0000000..e4e6917
--- /dev/null
+++ b/mpc/src/div_ui.c
@@ -0,0 +1,33 @@
+/* mpc_div_ui -- Divide a complex number by a nonnegative integer.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_div_ui (mpc_ptr a, mpc_srcptr b, unsigned long int c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_div_ui (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_div_ui (MPC_IM(a), MPC_IM(b), c, MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/exp.c b/mpc/src/exp.c
new file mode 100644
index 0000000..b609fcb
--- /dev/null
+++ b/mpc/src/exp.c
@@ -0,0 +1,192 @@
+/* mpc_exp -- exponential of a complex number.
+
+Copyright (C) INRIA, 2002, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_exp (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  mpfr_t x, y, z;
+  mpfr_prec_t prec;
+  int ok = 0;
+  int inex_re, inex_im;
+
+  /* special values */
+  if (mpfr_nan_p (MPC_RE (op)) || mpfr_nan_p (MPC_IM (op)))
+    /* NaNs
+       exp(nan +i*y) = nan -i*0   if y = -0,
+                       nan +i*0   if y = +0,
+                       nan +i*nan otherwise
+       exp(x+i*nan) =   +/-0 +/-i*0 if x=-inf,
+                      +/-inf +i*nan if x=+inf,
+                         nan +i*nan otherwise */
+    {
+      if (mpfr_zero_p (MPC_IM (op)))
+        return mpc_set (rop, op, MPC_RNDNN);
+
+      if (mpfr_inf_p (MPC_RE (op)))
+        {
+          if (mpfr_signbit (MPC_RE (op)))
+            return mpc_set_ui_ui (rop, 0, 0, MPC_RNDNN);
+          else
+            {
+              mpfr_set_inf (MPC_RE (rop), +1);
+              mpfr_set_nan (MPC_IM (rop));
+              return MPC_INEX(0, 0); /* Inf/NaN are exact */
+            }
+        }
+      mpfr_set_nan (MPC_RE (rop));
+      mpfr_set_nan (MPC_IM (rop));
+      return MPC_INEX(0, 0); /* NaN is exact */
+    }
+
+
+  if (mpfr_zero_p (MPC_IM(op)))
+    /* special case when the input is real
+       exp(x-i*0) = exp(x) -i*0, even if x is NaN
+       exp(x+i*0) = exp(x) +i*0, even if x is NaN */
+    {
+      inex_re = mpfr_exp (MPC_RE(rop), MPC_RE(op), MPC_RND_RE(rnd));
+      inex_im = mpfr_set (MPC_IM(rop), MPC_IM(op), MPC_RND_IM(rnd));
+      return MPC_INEX(inex_re, inex_im);
+    }
+
+  if (mpfr_zero_p (MPC_RE (op)))
+    /* special case when the input is imaginary  */
+    {
+      inex_re = mpfr_cos (MPC_RE (rop), MPC_IM (op), MPC_RND_RE(rnd));
+      inex_im = mpfr_sin (MPC_IM (rop), MPC_IM (op), MPC_RND_IM(rnd));
+      return MPC_INEX(inex_re, inex_im);
+    }
+
+
+  if (mpfr_inf_p (MPC_RE (op)))
+    /* real part is an infinity,
+       exp(-inf +i*y) = 0*(cos y +i*sin y)
+       exp(+inf +i*y) = +/-inf +i*nan         if y = +/-inf
+                        +inf*(cos y +i*sin y) if 0 < |y| < inf */
+    {
+      mpfr_t n;
+
+      mpfr_init2 (n, 2);
+      if (mpfr_signbit (MPC_RE (op)))
+        mpfr_set_ui (n, 0, GMP_RNDN);
+      else
+        mpfr_set_inf (n, +1);
+
+      if (mpfr_inf_p (MPC_IM (op)))
+        {
+          inex_re = mpfr_set (MPC_RE (rop), n, GMP_RNDN);
+          if (mpfr_signbit (MPC_RE (op)))
+            inex_im = mpfr_set (MPC_IM (rop), n, GMP_RNDN);
+          else
+            {
+              mpfr_set_nan (MPC_IM (rop));
+              inex_im = 0; /* NaN is exact */
+            }
+        }
+      else
+        {
+          mpfr_t c, s;
+          mpfr_init2 (c, 2);
+          mpfr_init2 (s, 2);
+
+          mpfr_sin_cos (s, c, MPC_IM (op), GMP_RNDN);
+          inex_re = mpfr_copysign (MPC_RE (rop), n, c, GMP_RNDN);
+          inex_im = mpfr_copysign (MPC_IM (rop), n, s, GMP_RNDN);
+
+          mpfr_clear (s);
+          mpfr_clear (c);
+        }
+
+      mpfr_clear (n);
+      return MPC_INEX(inex_re, inex_im);
+    }
+
+  if (mpfr_inf_p (MPC_IM (op)))
+    /* real part is finite non-zero number, imaginary part is an infinity */
+    {
+      mpfr_set_nan (MPC_RE (rop));
+      mpfr_set_nan (MPC_IM (rop));
+      return MPC_INEX(0, 0); /* NaN is exact */
+    }
+
+
+  /* from now on, both parts of op are regular numbers */
+
+  prec = MPC_MAX_PREC(rop)
+         + MPC_MAX (MPC_MAX (-mpfr_get_exp (MPC_RE (op)), 0),
+                   -mpfr_get_exp (MPC_IM (op)));
+    /* When op is close to 0, then exp is close to 1+Re(op), while
+       cos is close to 1-Im(op); to decide on the ternary value of exp*cos,
+       we need a high enough precision so that none of exp or cos is
+       computed as 1. */
+  mpfr_init2 (x, 2);
+  mpfr_init2 (y, 2);
+  mpfr_init2 (z, 2);
+
+  do
+    {
+      prec += mpc_ceil_log2 (prec) + 5;
+
+      mpfr_set_prec (x, prec);
+      mpfr_set_prec (y, prec);
+      mpfr_set_prec (z, prec);
+
+      /* FIXME: x may overflow so x.y does overflow too, while Re(exp(op))
+         could be represented in the precision of rop. */
+      mpfr_clear_overflow ();
+      mpfr_clear_underflow ();
+      mpfr_exp (x, MPC_RE(op), GMP_RNDN); /* error <= 0.5ulp */
+      mpfr_sin_cos (z, y, MPC_IM(op), GMP_RNDN); /* errors <= 0.5ulp */
+      mpfr_mul (y, y, x, GMP_RNDN); /* error <= 2ulp */
+      ok = mpfr_overflow_p () || mpfr_zero_p (x)
+        || mpfr_can_round (y, prec - 2, GMP_RNDN, GMP_RNDZ,
+                       MPC_PREC_RE(rop) + (MPC_RND_RE(rnd) == GMP_RNDN));
+      if (ok) /* compute imaginary part */
+        {
+          mpfr_mul (z, z, x, GMP_RNDN);
+          ok = mpfr_overflow_p () || mpfr_zero_p (x)
+            || mpfr_can_round (z, prec - 2, GMP_RNDN, GMP_RNDZ,
+                       MPC_PREC_IM(rop) + (MPC_RND_IM(rnd) == GMP_RNDN));
+        }
+    }
+  while (ok == 0);
+
+  inex_re = mpfr_set (MPC_RE(rop), y, MPC_RND_RE(rnd));
+  inex_im = mpfr_set (MPC_IM(rop), z, MPC_RND_IM(rnd));
+  if (mpfr_overflow_p ()) {
+    /* overflow in real exponential, inex is sign of infinite result */
+    inex_re = mpfr_sgn (y);
+    inex_im = mpfr_sgn (z);
+  }
+  else if (mpfr_underflow_p ()) {
+    /* underflow in real exponential, inex is opposite of sign of 0 result */
+    inex_re = (mpfr_signbit (y) ? +1 : -1);
+    inex_im = (mpfr_signbit (z) ? +1 : -1);
+  }
+
+  mpfr_clear (x);
+  mpfr_clear (y);
+  mpfr_clear (z);
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/fma.c b/mpc/src/fma.c
new file mode 100644
index 0000000..6758dca
--- /dev/null
+++ b/mpc/src/fma.c
@@ -0,0 +1,135 @@
+/* mpc_fma -- Fused multiply-add of three complex numbers
+
+Copyright (C) INRIA, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return a bound on the precision needed to add or subtract x and y exactly */
+static mpfr_prec_t
+bound_prec_addsub (mpfr_srcptr x, mpfr_srcptr y)
+{
+  if (!mpfr_number_p (x) || mpfr_zero_p (x))
+    /* FIXME: With mpfr-3, this and the following test may be replaced by
+       if (!mpfr_regular_p (x)) */
+    return mpfr_get_prec (y);
+  else if (!mpfr_number_p (y) || mpfr_zero_p (y))
+    return mpfr_get_prec (x);
+  else /* neither x nor y are NaN, Inf or zero */
+    {
+      mpfr_exp_t ex = mpfr_get_exp (x);
+      mpfr_exp_t ey = mpfr_get_exp (y);
+      mpfr_exp_t ulpx = ex - mpfr_get_prec (x);
+      mpfr_exp_t ulpy = ey - mpfr_get_prec (y);
+      return ((ex >= ey) ? ex : ey) + 1 - ((ulpx <= ulpy) ? ulpx : ulpy);
+    }
+}
+
+/* r <- a*b+c */
+int
+mpc_fma (mpc_ptr r, mpc_srcptr a, mpc_srcptr b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+  mpfr_t rea_reb, rea_imb, ima_reb, ima_imb, tmp;
+  mpfr_prec_t pre12, pre13, pre23, pim12, pim13, pim23;
+  int inex_re, inex_im;
+
+  mpfr_init2 (rea_reb, mpfr_get_prec (MPC_RE(a)) + mpfr_get_prec (MPC_RE(b)));
+  mpfr_init2 (rea_imb, mpfr_get_prec (MPC_RE(a)) + mpfr_get_prec (MPC_IM(b)));
+  mpfr_init2 (ima_reb, mpfr_get_prec (MPC_IM(a)) + mpfr_get_prec (MPC_RE(b)));
+  mpfr_init2 (ima_imb, mpfr_get_prec (MPC_IM(a)) + mpfr_get_prec (MPC_IM(b)));
+
+  mpfr_mul (rea_reb, MPC_RE(a), MPC_RE(b), GMP_RNDZ); /* exact */
+  mpfr_mul (rea_imb, MPC_RE(a), MPC_IM(b), GMP_RNDZ); /* exact */
+  mpfr_mul (ima_reb, MPC_IM(a), MPC_RE(b), GMP_RNDZ); /* exact */
+  mpfr_mul (ima_imb, MPC_IM(a), MPC_IM(b), GMP_RNDZ); /* exact */
+
+  /* Re(r) <- rea_reb - ima_imb + Re(c) */
+
+  pre12 = bound_prec_addsub (rea_reb, ima_imb); /* bound on exact precision for
+						   rea_reb - ima_imb */
+  pre13 = bound_prec_addsub (rea_reb, MPC_RE(c));
+  /* bound for rea_reb + Re(c) */
+  pre23 = bound_prec_addsub (ima_imb, MPC_RE(c));
+  /* bound for ima_imb - Re(c) */
+  if (pre12 <= pre13 && pre12 <= pre23) /* (rea_reb - ima_imb) + Re(c) */
+    {
+      mpfr_init2 (tmp, pre12);
+      mpfr_sub (tmp, rea_reb, ima_imb, GMP_RNDZ); /* exact */
+      inex_re = mpfr_add (MPC_RE(r), tmp, MPC_RE(c), MPC_RND_RE(rnd));
+      /* the only possible bad overlap is between r and c, but since we are
+	 only touching the real part of both, it is ok */
+    }
+  else if (pre13 <= pre23) /* (rea_reb + Re(c)) - ima_imb */
+    {
+      mpfr_init2 (tmp, pre13);
+      mpfr_add (tmp, rea_reb, MPC_RE(c), GMP_RNDZ); /* exact */
+      inex_re = mpfr_sub (MPC_RE(r), tmp, ima_imb, MPC_RND_RE(rnd));
+      /* the only possible bad overlap is between r and c, but since we are
+	 only touching the real part of both, it is ok */
+    }
+  else /* rea_reb + (Re(c) - ima_imb) */
+    {
+      mpfr_init2 (tmp, pre23);
+      mpfr_sub (tmp, MPC_RE(c), ima_imb, GMP_RNDZ); /* exact */
+      inex_re = mpfr_add (MPC_RE(r), tmp, rea_reb, MPC_RND_RE(rnd));
+      /* the only possible bad overlap is between r and c, but since we are
+	 only touching the real part of both, it is ok */
+    }
+
+  /* Im(r) <- rea_imb + ima_reb + Im(c) */
+  pim12 = bound_prec_addsub (rea_imb, ima_reb); /* bound on exact precision for
+						   rea_imb + ima_reb */
+  pim13 = bound_prec_addsub (rea_imb, MPC_IM(c));
+  /* bound for rea_imb + Im(c) */
+  pim23 = bound_prec_addsub (ima_reb, MPC_IM(c));
+  /* bound for ima_reb + Im(c) */
+  if (pim12 <= pim13 && pim12 <= pim23) /* (rea_imb + ima_reb) + Im(c) */
+    {
+      mpfr_set_prec (tmp, pim12);
+      mpfr_add (tmp, rea_imb, ima_reb, GMP_RNDZ); /* exact */
+      inex_im = mpfr_add (MPC_IM(r), tmp, MPC_IM(c), MPC_RND_IM(rnd));
+      /* the only possible bad overlap is between r and c, but since we are
+	 only touching the imaginary part of both, it is ok */
+    }
+  else if (pim13 <= pim23) /* (rea_imb + Im(c)) + ima_reb */
+    {
+      mpfr_set_prec (tmp, pim13);
+      mpfr_add (tmp, rea_imb, MPC_IM(c), GMP_RNDZ); /* exact */
+      inex_im = mpfr_add (MPC_IM(r), tmp, ima_reb, MPC_RND_IM(rnd));
+      /* the only possible bad overlap is between r and c, but since we are
+	 only touching the imaginary part of both, it is ok */
+    }
+  else /* rea_imb + (Im(c) + ima_reb) */
+    {
+      mpfr_set_prec (tmp, pre23);
+      mpfr_add (tmp, MPC_IM(c), ima_reb, GMP_RNDZ); /* exact */
+      inex_im = mpfr_add (MPC_IM(r), tmp, rea_imb, MPC_RND_IM(rnd));
+      /* the only possible bad overlap is between r and c, but since we are
+	 only touching the imaginary part of both, it is ok */
+    }
+
+  mpfr_clear (rea_reb);
+  mpfr_clear (rea_imb);
+  mpfr_clear (ima_reb);
+  mpfr_clear (ima_imb);
+  mpfr_clear (tmp);
+
+  return MPC_INEX(inex_re, inex_im);
+}
+
diff --git a/mpc/src/fr_div.c b/mpc/src/fr_div.c
new file mode 100644
index 0000000..bc46ae7
--- /dev/null
+++ b/mpc/src/fr_div.c
@@ -0,0 +1,40 @@
+/* mpc_fr_div -- Divide a floating-point number by a complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_fr_div (mpc_ptr a, mpfr_srcptr b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+   mpc_t bc;
+   int inexact;
+
+   MPC_RE (bc)[0] = b [0];
+   mpfr_init (MPC_IM (bc));
+   /* we consider the operand b to have imaginary part +0 */
+   mpfr_set_ui (MPC_IM (bc), 0, GMP_RNDN);
+
+   inexact = mpc_div (a, bc, c, rnd);
+
+   mpfr_clear (MPC_IM (bc));
+
+   return inexact;
+}
diff --git a/mpc/src/fr_sub.c b/mpc/src/fr_sub.c
new file mode 100644
index 0000000..78578ed
--- /dev/null
+++ b/mpc/src/fr_sub.c
@@ -0,0 +1,35 @@
+/* mpc_fr_sub -- Substract a complex number from a floating-point number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return 0 iff both the real and imaginary parts are exact */
+int
+mpc_fr_sub (mpc_ptr a, mpfr_srcptr b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_sub (MPC_RE(a), b, MPC_RE(c), MPC_RND_RE(rnd));
+  inex_im = mpfr_set (MPC_IM (a), MPC_IM (c), INV_RND (MPC_RND_IM (rnd)));
+  MPFR_CHANGE_SIGN (MPC_IM (a));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/get.c b/mpc/src/get.c
new file mode 100644
index 0000000..e30801e
--- /dev/null
+++ b/mpc/src/get.c
@@ -0,0 +1,42 @@
+/* mpc_get_c, mpc_get_lc -- Transform mpc number into C complex number
+
+Copyright (C) INRIA, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "config.h"
+
+#if HAVE_COMPLEX_H
+# include <complex.h>
+#endif
+
+#include "mpc-impl.h"
+
+#if defined _MPC_H_HAVE_COMPLEX
+double _Complex
+mpc_get_dc (mpc_srcptr op, mpc_rnd_t rnd) {
+   return I * mpfr_get_d (mpc_imagref (op), MPC_RND_IM (rnd))
+          + mpfr_get_d (mpc_realref (op), MPC_RND_RE (rnd));
+}
+
+long double _Complex
+mpc_get_ldc (mpc_srcptr op, mpc_rnd_t rnd) {
+   return I * mpfr_get_ld (mpc_imagref (op), MPC_RND_IM (rnd))
+          + mpfr_get_ld (mpc_realref (op), MPC_RND_RE (rnd));
+}
+#endif
diff --git a/mpc/src/get_prec.c b/mpc/src/get_prec.c
new file mode 100644
index 0000000..b2b817b
--- /dev/null
+++ b/mpc/src/get_prec.c
@@ -0,0 +1,29 @@
+/* mpc_get_prec -- returns the common precision of real and imaginary part, or 0 if they differ
+
+Copyright (C) INRIA, 2007, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+mpfr_prec_t
+mpc_get_prec (mpc_srcptr x)
+{
+  mpfr_prec_t precre = MPC_PREC_RE (x);
+  return (MPC_PREC_IM (x) == precre ? precre : 0);
+}
diff --git a/mpc/src/get_prec2.c b/mpc/src/get_prec2.c
new file mode 100644
index 0000000..242d9bf
--- /dev/null
+++ b/mpc/src/get_prec2.c
@@ -0,0 +1,30 @@
+/* mpc_get_prec2 -- returns the precisions of the real and of the imaginary
+part through the first two arguments
+
+Copyright (C) INRIA, 2007, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+void
+mpc_get_prec2 (mpfr_prec_t *pr, mpfr_prec_t *pi, mpc_srcptr x)
+{
+   *pr = MPC_PREC_RE (x);
+   *pi = MPC_PREC_IM (x);
+}
diff --git a/mpc/src/get_str.c b/mpc/src/get_str.c
new file mode 100644
index 0000000..17f249a
--- /dev/null
+++ b/mpc/src/get_str.c
@@ -0,0 +1,216 @@
+/* mpc_get_str -- Convert a complex number into a string.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h> /* for sprintf, fprintf */
+#include <ctype.h>
+#include <string.h>
+#include "mpc-impl.h"
+
+/* Needs <locale.h> */
+#ifdef HAVE_LOCALE_H
+#include <locale.h>
+#endif
+
+/* The output format is "(real imag)", the decimal point of the locale is
+   used. */
+
+/* mpfr_prec_t can be either int or long int */
+#if (__GMP_MP_SIZE_T_INT == 1)
+#define MPC_EXP_FORMAT_SPEC "i"
+#elif (__GMP_MP_SIZE_T_INT == 0)
+#define MPC_EXP_FORMAT_SPEC "li"
+#else
+#error "mpfr_exp_t size not supported"
+#endif
+
+static char *
+pretty_zero (mpfr_srcptr zero)
+{
+  char *pretty;
+
+  pretty = mpc_alloc_str (3);
+
+  pretty[0] = mpfr_signbit (zero) ? '-' : '+';
+  pretty[1] = '0';
+  pretty[2] = '\0';
+
+  return pretty;
+}
+
+static char *
+prettify (const char *str, const mp_exp_t expo, int base, int special)
+{
+  size_t sz;
+  char *pretty;
+  char *p;
+  const char *s;
+  mp_exp_t x;
+  int sign;
+
+  sz = strlen (str) + 1; /* + terminal '\0' */
+
+  if (special)
+    {
+      /* special number: nan or inf */
+      pretty = mpc_alloc_str (sz);
+      strcpy (pretty, str);
+
+      return pretty;
+    }
+
+  /* regular number */
+
+  sign = (str[0] == '-' || str[0] == '+');
+
+  x = expo - 1; /* expo is the exponent value with decimal point BEFORE
+                   the first digit, we wants decimal point AFTER the first
+                   digit */
+  if (base == 16)
+    x <<= 2; /* the output exponent is a binary exponent */
+
+  ++sz; /* + decimal point */
+
+  if (x != 0)
+    {
+      /* augment sz with the size needed for an exponent written in base
+         ten */
+      mp_exp_t xx;
+
+      sz += 3; /* + exponent char + sign + 1 digit */
+
+      if (x < 0)
+        {
+          /* avoid overflow when changing sign (assuming that, for the
+             mp_exp_t type, (max value) is greater than (- min value / 10)) */
+          if (x < -10)
+            {
+              xx = - (x / 10);
+              sz++;
+            }
+          else
+            xx = -x;
+        }
+      else
+        xx = x;
+
+      /* compute sz += floor(log(expo)/log(10)) without using libm
+         functions */
+      while (xx > 9)
+        {
+          sz++;
+          xx /= 10;
+        }
+    }
+
+  pretty = mpc_alloc_str (sz);
+  p = pretty;
+
+  /* 1. optional sign plus first digit */
+  s = str;
+  *p++ = *s++;
+  if (sign)
+    *p++ = *s++;
+
+  /* 2. decimal point */
+#ifdef HAVE_LOCALECONV
+  *p++ = *localeconv ()->decimal_point;
+#else
+  *p++ = '.';
+#endif
+  *p = '\0';
+
+  /* 3. other significant digits */
+  strcat (pretty, s);
+
+  /* 4. exponent (in base ten) */
+  if (x == 0)
+    return pretty;
+
+  p = pretty + strlen (str) + 1;
+
+  switch (base)
+    {
+    case 10:
+      *p++ = 'e';
+      break;
+    case 2:
+    case 16:
+      *p++ = 'p';
+      break;
+    default:
+      *p++ = '@';
+    }
+
+  *p = '\0';
+
+  sprintf (p, "%+"MPC_EXP_FORMAT_SPEC, x);
+
+  return pretty;
+}
+
+static char *
+get_pretty_str (const int base, const size_t n, mpfr_srcptr x, mpfr_rnd_t rnd)
+{
+  mp_exp_t expo;
+  char *ugly;
+  char *pretty;
+
+  if (mpfr_zero_p (x))
+    return pretty_zero (x);
+
+  ugly = mpfr_get_str (NULL, &expo, base, n, x, rnd);
+  MPC_ASSERT (ugly != NULL);
+  pretty = prettify (ugly, expo, base, !mpfr_number_p (x));
+  mpfr_free_str (ugly);
+
+  return pretty;
+}
+
+char *
+mpc_get_str (int base, size_t n, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  size_t needed_size;
+  char *real_str;
+  char *imag_str;
+  char *complex_str = NULL;
+
+  if (base < 2 || base > 36)
+    return NULL;
+
+  real_str = get_pretty_str (base, n, MPC_RE (op), MPC_RND_RE (rnd));
+  imag_str = get_pretty_str (base, n, MPC_IM (op), MPC_RND_IM (rnd));
+
+  needed_size = strlen (real_str) + strlen (imag_str) + 4;
+
+  complex_str = mpc_alloc_str (needed_size);
+MPC_ASSERT (complex_str != NULL);
+
+  strcpy (complex_str, "(");
+  strcat (complex_str, real_str);
+  strcat (complex_str, " ");
+  strcat (complex_str, imag_str);
+  strcat (complex_str, ")");
+
+  mpc_free_str (real_str);
+  mpc_free_str (imag_str);
+
+  return complex_str;
+}
diff --git a/mpc/src/get_version.c b/mpc/src/get_version.c
new file mode 100644
index 0000000..298f323
--- /dev/null
+++ b/mpc/src/get_version.c
@@ -0,0 +1,28 @@
+/* mpc_get_version -- MPC version
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+const char *
+mpc_get_version (void)
+{
+  return "0.9";
+}
diff --git a/mpc/src/imag.c b/mpc/src/imag.c
new file mode 100644
index 0000000..e2f359c
--- /dev/null
+++ b/mpc/src/imag.c
@@ -0,0 +1,28 @@
+/* mpc_imag -- Get the real part of a complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_imag (mpfr_ptr a, mpc_srcptr b, mpfr_rnd_t rnd)
+{
+  return mpfr_set (a, MPC_IM (b), rnd);
+}
diff --git a/mpc/src/init2.c b/mpc/src/init2.c
new file mode 100644
index 0000000..3a4482b
--- /dev/null
+++ b/mpc/src/init2.c
@@ -0,0 +1,29 @@
+/* mpc_init2 -- Initialize a complex variable with a given precision.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+void
+mpc_init2 (mpc_t x, mpfr_prec_t prec)
+{
+  mpfr_init2 (MPC_RE(x), prec);
+  mpfr_init2 (MPC_IM(x), prec);
+}
diff --git a/mpc/src/init3.c b/mpc/src/init3.c
new file mode 100644
index 0000000..07b2920
--- /dev/null
+++ b/mpc/src/init3.c
@@ -0,0 +1,29 @@
+/* mpc_init3 -- Initialize a complex variable with given precisions.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+void
+mpc_init3 (mpc_t x, mpfr_prec_t prec_re, mpfr_prec_t prec_im)
+{
+  mpfr_init2 (MPC_RE(x), prec_re);
+  mpfr_init2 (MPC_IM(x), prec_im);
+}
diff --git a/mpc/src/inp_str.c b/mpc/src/inp_str.c
new file mode 100644
index 0000000..314f91a
--- /dev/null
+++ b/mpc/src/inp_str.c
@@ -0,0 +1,239 @@
+/* mpc_inp_str -- Input a complex number from a given stream.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h> /* for FILE */
+#include <ctype.h>
+#include <string.h>
+#include "mpc-impl.h"
+
+static size_t
+skip_whitespace (FILE *stream) {
+   int c = getc (stream);
+   size_t size = 0;
+   while (c != EOF && isspace ((unsigned char) c)) {
+      c = getc (stream);
+      size++;
+   }
+   if (c != EOF)
+      ungetc (c, stream);
+   return size;
+}
+
+/* Extract from stream the longest string made up of alphanumeric char and
+   '_' (i.e. n-char-sequence).
+   The user must free the returned string. */
+static char *
+extract_suffix (FILE *stream)
+{
+  int c;
+  size_t nread = 0;
+  size_t strsize = 100;
+  char *str = mpc_alloc_str (strsize);
+
+  c = getc (stream);
+  while (isalnum ((unsigned char) c) || c == '_') {
+    str [nread] = (char) c;
+    nread++;
+    if (nread == strsize) {
+      str = mpc_realloc_str (str, strsize, 2 * strsize);
+      strsize *= 2;
+         }
+    c = getc (stream);
+  }
+
+  str = mpc_realloc_str (str, strsize, nread + 1);
+  strsize = nread + 1;
+  str [nread] = '\0';
+
+  if (c != EOF)
+    ungetc (c, stream);
+  return str;
+}
+
+
+/* Extract from the stream the longest string of characters which are neither
+   whitespace nor brackets (except for an optional bracketed n-char_sequence
+   directly following nan or @nan@ independently of case).
+   The user must free the returned string.                                    */
+static char *
+extract_string (FILE *stream)
+{
+  int c;
+  size_t nread = 0;
+  size_t strsize = 100;
+  char *str = mpc_alloc_str (strsize);
+  size_t lenstr;
+
+  c = getc (stream);
+  while (c != EOF && c != '\n'
+         && !isspace ((unsigned char) c)
+         && c != '(' && c != ')') {
+    str [nread] = (char) c;
+    nread++;
+    if (nread == strsize) {
+      str = mpc_realloc_str (str, strsize, 2 * strsize);
+      strsize *= 2;
+    }
+    c = getc (stream);
+  }
+
+  str = mpc_realloc_str (str, strsize, nread + 1);
+  strsize = nread + 1;
+  str [nread] = '\0';
+
+  if (nread == 0)
+    return str;
+
+  lenstr = nread;
+
+  if (c == '(') {
+    size_t n;
+    char *suffix;
+    int ret;
+
+    /* (n-char-sequence) only after a NaN */
+    if ((nread != 3
+         || tolower ((unsigned char) (str[0])) != 'n'
+         || tolower ((unsigned char) (str[1])) != 'a'
+         || tolower ((unsigned char) (str[2])) != 'n')
+        && (nread != 5
+            || str[0] != '@'
+            || tolower ((unsigned char) (str[1])) != 'n'
+            || tolower ((unsigned char) (str[2])) != 'a'
+            || tolower ((unsigned char) (str[3])) != 'n'
+            || str[4] != '@')) {
+      ungetc (c, stream);
+      return str;
+    }
+
+    suffix = extract_suffix (stream);
+    nread += strlen (suffix) + 1;
+    if (nread >= strsize) {
+      str = mpc_realloc_str (str, strsize, nread + 1);
+      strsize = nread + 1;
+    }
+
+    /* Warning: the sprintf does not allow overlap between arguments. */
+    ret = sprintf (str + lenstr, "(%s", suffix);
+    MPC_ASSERT (ret >= 0);
+    n = lenstr + (size_t) ret;
+    MPC_ASSERT (n == nread);
+
+    c = getc (stream);
+    if (c == ')') {
+      str = mpc_realloc_str (str, strsize, nread + 2);
+      strsize = nread + 2;
+      str [nread] = (char) c;
+      str [nread+1] = '\0';
+      nread++;
+    }
+    else if (c != EOF)
+      ungetc (c, stream);
+
+    mpc_free_str (suffix);
+  }
+  else if (c != EOF)
+    ungetc (c, stream);
+
+  return str;
+}
+
+
+int
+mpc_inp_str (mpc_ptr rop, FILE *stream, size_t *read, int base,
+mpc_rnd_t rnd_mode)
+{
+   size_t white, nread = 0;
+   int inex = -1;
+   int c;
+   char *str;
+
+   if (stream == NULL)
+      stream = stdin;
+
+   white = skip_whitespace (stream);
+   c = getc (stream);
+   if (c != EOF) {
+     if (c == '(') {
+       char *real_str;
+       char *imag_str;
+       size_t n;
+       int ret;
+
+       nread++; /* the opening parenthesis */
+       white = skip_whitespace (stream);
+       real_str = extract_string (stream);
+       nread += strlen(real_str);
+
+       c = getc (stream);
+       if (!isspace ((unsigned int) c)) {
+         if (c != EOF)
+           ungetc (c, stream);
+         mpc_free_str (real_str);
+         goto error;
+       }
+       else
+         ungetc (c, stream);
+
+       white += skip_whitespace (stream);
+       imag_str = extract_string (stream);
+       nread += strlen (imag_str);
+
+       str = mpc_alloc_str (nread + 2);
+       ret = sprintf (str, "(%s %s", real_str, imag_str);
+       MPC_ASSERT (ret >= 0);
+       n = (size_t) ret;
+       MPC_ASSERT (n == nread + 1);
+       mpc_free_str (real_str);
+       mpc_free_str (imag_str);
+
+       white += skip_whitespace (stream);
+       c = getc (stream);
+       if (c == ')') {
+         str = mpc_realloc_str (str, nread +2, nread + 3);
+         str [nread+1] = (char) c;
+         str [nread+2] = '\0';
+         nread++;
+       }
+       else if (c != EOF)
+         ungetc (c, stream);
+     }
+     else {
+       if (c != EOF)
+         ungetc (c, stream);
+       str = extract_string (stream);
+       nread += strlen (str);
+     }
+
+     inex = mpc_set_str (rop, str, base, rnd_mode);
+
+     mpc_free_str (str);
+   }
+
+error:
+   if (inex == -1) {
+      mpfr_set_nan (MPC_RE(rop));
+      mpfr_set_nan (MPC_IM(rop));
+   }
+   if (read != NULL)
+     *read = white + nread;
+   return inex;
+}
diff --git a/mpc/src/log.c b/mpc/src/log.c
new file mode 100644
index 0000000..5d0baa7
--- /dev/null
+++ b/mpc/src/log.c
@@ -0,0 +1,152 @@
+/* mpc_log -- Take the logarithm of a complex number.
+
+Copyright (C) INRIA, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_log (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd){
+   int ok=0;
+   mpfr_t w;
+   mpfr_prec_t prec;
+   int loops = 0;
+   int re_cmp, im_cmp;
+   int inex_re, inex_im;
+
+   /* special values: NaN and infinities */
+   if (!mpc_fin_p (op)) {
+      if (mpfr_nan_p (MPC_RE (op))) {
+         if (mpfr_inf_p (MPC_IM (op)))
+            mpfr_set_inf (MPC_RE (rop), +1);
+         else
+            mpfr_set_nan (MPC_RE (rop));
+         mpfr_set_nan (MPC_IM (rop));
+         inex_im = 0; /* Inf/NaN is exact */
+      }
+      else if (mpfr_nan_p (MPC_IM (op))) {
+         if (mpfr_inf_p (MPC_RE (op)))
+            mpfr_set_inf (MPC_RE (rop), +1);
+         else
+            mpfr_set_nan (MPC_RE (rop));
+         mpfr_set_nan (MPC_IM (rop));
+         inex_im = 0; /* Inf/NaN is exact */
+      }
+      else /* We have an infinity in at least one part. */ {
+         inex_im = mpfr_atan2 (MPC_IM (rop), MPC_IM (op), MPC_RE (op),
+                               MPC_RND_IM (rnd));
+         mpfr_set_inf (MPC_RE (rop), +1);
+      }
+      return MPC_INEX(0, inex_im);
+   }
+
+   /* special cases: real and purely imaginary numbers */
+   re_cmp = mpfr_cmp_ui (MPC_RE (op), 0);
+   im_cmp = mpfr_cmp_ui (MPC_IM (op), 0);
+   if (im_cmp == 0) {
+      if (re_cmp == 0) {
+         inex_im = mpfr_atan2 (MPC_IM (rop), MPC_IM (op), MPC_RE (op),
+                               MPC_RND_IM (rnd));
+         mpfr_set_inf (MPC_RE (rop), -1);
+         inex_re = 0; /* -Inf is exact */
+      }
+      else if (re_cmp > 0) {
+         inex_re = mpfr_log (MPC_RE (rop), MPC_RE (op), MPC_RND_RE (rnd));
+         inex_im = mpfr_set (MPC_IM (rop), MPC_IM (op), MPC_RND_IM (rnd));
+      }
+      else {
+         /* op = x + 0*y; let w = -x = |x| */
+         int negative_zero;
+         mpfr_rnd_t rnd_im;
+
+         negative_zero = mpfr_signbit (MPC_IM (op));
+         if (negative_zero)
+            rnd_im = INV_RND (MPC_RND_IM (rnd));
+         else
+            rnd_im = MPC_RND_IM (rnd);
+         w [0] = *MPC_RE (op);
+         MPFR_CHANGE_SIGN (w);
+         inex_re = mpfr_log (MPC_RE (rop), w, MPC_RND_RE (rnd));
+         inex_im = mpfr_const_pi (MPC_IM (rop), rnd_im);
+         if (negative_zero) {
+            mpc_conj (rop, rop, MPC_RNDNN);
+            inex_im = -inex_im;
+         }
+      }
+      return MPC_INEX(inex_re, inex_im);
+   }
+   else if (re_cmp == 0) {
+      if (im_cmp > 0) {
+         inex_re = mpfr_log (MPC_RE (rop), MPC_IM (op), MPC_RND_RE (rnd));
+         inex_im = mpfr_const_pi (MPC_IM (rop), MPC_RND_IM (rnd));
+         /* division by 2 does not change the ternary flag */
+         mpfr_div_2ui (MPC_IM (rop), MPC_IM (rop), 1, GMP_RNDN);
+      }
+      else {
+         w [0] = *MPC_IM (op);
+         MPFR_CHANGE_SIGN (w);
+         inex_re = mpfr_log (MPC_RE (rop), w, MPC_RND_RE (rnd));
+         inex_im = mpfr_const_pi (MPC_IM (rop), INV_RND (MPC_RND_IM (rnd)));
+         /* division by 2 does not change the ternary flag */
+         mpfr_div_2ui (MPC_IM (rop), MPC_IM (rop), 1, GMP_RNDN);
+         mpfr_neg (MPC_IM (rop), MPC_IM (rop), GMP_RNDN);
+         inex_im = -inex_im; /* negate the ternary flag */
+      }
+      return MPC_INEX(inex_re, inex_im);
+   }
+
+   prec = MPC_PREC_RE(rop);
+   mpfr_init2 (w, prec);
+   /* let op = x + iy; log = 1/2 log (x^2 + y^2) + i atan2 (y, x) */
+   /* loop for the real part: log (x^2 + y^2)                    */
+   do {
+      loops ++;
+      prec += (loops <= 2) ? mpc_ceil_log2 (prec) + 4 : prec / 2;
+      mpfr_set_prec (w, prec);
+
+      /* w is rounded down */
+      mpc_norm (w, op, GMP_RNDD);
+      /* error 1 ulp */
+
+      if (mpfr_inf_p (w))
+         /* FIXME
+            return +inf, which is wrong since the logarithm is representable */
+         ok = 1;
+      else {
+         mpfr_log (w, w, GMP_RNDD);
+         /* generic error of log: (2^(2 - exp(w)) + 1) ulp */
+
+         if (mpfr_get_exp (w) >= 2)
+            ok = mpfr_can_round (w, prec - 2, GMP_RNDD,
+               MPC_RND_RE(rnd), MPC_PREC_RE(rop));
+         else
+            ok = mpfr_can_round (w, prec - 3 + mpfr_get_exp (w), GMP_RNDD,
+               MPC_RND_RE(rnd), MPC_PREC_RE(rop));
+      }
+   } while (ok == 0);
+
+   /* imaginary part */
+   inex_im = mpfr_atan2 (MPC_IM (rop), MPC_IM (op), MPC_RE (op),
+                         MPC_RND_IM (rnd));
+
+   /* set the real part; cannot be done before when rop==op */
+   inex_re = mpfr_div_2ui (MPC_RE(rop), w, 1ul, MPC_RND_RE (rnd));
+   mpfr_clear (w);
+   return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/logging.c b/mpc/src/logging.c
new file mode 100644
index 0000000..7888129
--- /dev/null
+++ b/mpc/src/logging.c
@@ -0,0 +1,145 @@
+/* logging.c -- "Dummy" functions logging calls to real mpc functions.
+
+Copyright (C) INRIA, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "config.h"
+#include <stdio.h>
+
+#ifdef HAVE_INTTYPES_H
+#include <inttypes.h>
+#endif
+#ifdef HAVE_STDINT_H
+#include <stdint.h>
+#endif
+
+#include "mpc-log.h"
+
+#ifdef HAVE_DLFCN_H
+#include <dlfcn.h>
+#endif
+
+typedef int (*c_c_func_ptr) (mpc_ptr, mpc_srcptr, mpc_rnd_t);
+typedef int (*c_cc_func_ptr) (mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t);
+typedef int (*c_ccc_func_ptr) (mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t);
+typedef int (*cc_c_func_ptr) (mpc_ptr, mpc_ptr, mpc_srcptr, mpc_rnd_t, mpc_rnd_t);
+
+#define MPC_LOGGING_OUT_PREC(z) \
+   do { \
+      fprintf (stderr, " %li %li", (long) mpfr_get_prec (mpc_realref (z)),  \
+                                (long) mpfr_get_prec (mpc_imagref (z))); \
+   } while (0);
+
+#define MPC_LOGGING_OUT_C(z) \
+   do { \
+      MPC_LOGGING_OUT_PREC (z); \
+      fprintf (stderr, " "); \
+      mpc_out_str (stderr, 16, 0, z, MPC_RNDNN); \
+   } while (0);
+
+#define MPC_LOGGING_FUNC_TYPE(funcname, type) \
+   do { \
+      fprintf (stderr, "mpc_"#funcname" "#type); \
+   } while (0);
+
+#define MPC_LOGGING_C_C(funcname) \
+__MPC_DECLSPEC int mpc_log_##funcname (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd) \
+{ \
+   static c_c_func_ptr func = NULL; \
+   if (func == NULL) \
+      func = (c_c_func_ptr) (intptr_t) dlsym (NULL, "mpc_"#funcname); \
+   MPC_LOGGING_FUNC_TYPE (funcname, c_c); \
+   MPC_LOGGING_OUT_PREC (rop); \
+   MPC_LOGGING_OUT_C (op); \
+   fprintf (stderr, "\n"); \
+   return func (rop, op, rnd); \
+}
+
+#define MPC_LOGGING_C_CC(funcname) \
+__MPC_DECLSPEC int mpc_log_##funcname (mpc_ptr rop, mpc_srcptr op1, mpc_srcptr op2, mpc_rnd_t rnd) \
+{ \
+   static c_cc_func_ptr func = NULL; \
+   if (func == NULL) \
+      func = (c_cc_func_ptr) (intptr_t) dlsym (NULL, "mpc_"#funcname); \
+   MPC_LOGGING_FUNC_TYPE (funcname, c_cc); \
+   MPC_LOGGING_OUT_PREC (rop); \
+   MPC_LOGGING_OUT_C (op1); \
+   MPC_LOGGING_OUT_C (op2); \
+   fprintf (stderr, "\n"); \
+   return func (rop, op1, op2, rnd); \
+}
+
+#define MPC_LOGGING_C_CCC(funcname) \
+__MPC_DECLSPEC int mpc_log_##funcname (mpc_ptr rop, mpc_srcptr op1, mpc_srcptr op2, mpc_srcptr op3, mpc_rnd_t rnd) \
+{ \
+   static c_ccc_func_ptr func = NULL; \
+   if (func == NULL) \
+      func = (c_ccc_func_ptr) (intptr_t) dlsym (NULL, "mpc_"#funcname); \
+   MPC_LOGGING_FUNC_TYPE (funcname, c_ccc); \
+   MPC_LOGGING_OUT_PREC (rop); \
+   MPC_LOGGING_OUT_C (op1); \
+   MPC_LOGGING_OUT_C (op2); \
+   MPC_LOGGING_OUT_C (op3); \
+   fprintf (stderr, "\n"); \
+   return func (rop, op1, op2, op3, rnd); \
+}
+
+#define MPC_LOGGING_CC_C(funcname) \
+__MPC_DECLSPEC int mpc_log_##funcname (mpc_ptr rop1, mpc_ptr rop2, mpc_srcptr op, mpc_rnd_t rnd1, mpc_rnd_t rnd2) \
+{ \
+   static cc_c_func_ptr func = NULL; \
+   if (func == NULL) \
+      func = (cc_c_func_ptr) (intptr_t) dlsym (NULL, "mpc_"#funcname); \
+   MPC_LOGGING_FUNC_TYPE (funcname, cc_c); \
+   MPC_LOGGING_OUT_PREC (rop1); \
+   MPC_LOGGING_OUT_PREC (rop2); \
+   MPC_LOGGING_OUT_C (op); \
+   fprintf (stderr, "\n"); \
+   return func (rop1, rop2, op, rnd1, rnd2); \
+}
+
+MPC_LOGGING_C_C (sqr)
+MPC_LOGGING_C_C (conj)
+MPC_LOGGING_C_C (neg)
+MPC_LOGGING_C_C (sqrt)
+MPC_LOGGING_C_C (proj)
+MPC_LOGGING_C_C (exp)
+MPC_LOGGING_C_C (log)
+MPC_LOGGING_C_C (sin)
+MPC_LOGGING_C_C (cos)
+MPC_LOGGING_C_C (tan)
+MPC_LOGGING_C_C (sinh)
+MPC_LOGGING_C_C (cosh)
+MPC_LOGGING_C_C (tanh)
+MPC_LOGGING_C_C (asin)
+MPC_LOGGING_C_C (acos)
+MPC_LOGGING_C_C (atan)
+MPC_LOGGING_C_C (asinh)
+MPC_LOGGING_C_C (acosh)
+MPC_LOGGING_C_C (atanh)
+
+MPC_LOGGING_C_CC (add)
+MPC_LOGGING_C_CC (sub)
+MPC_LOGGING_C_CC (mul)
+MPC_LOGGING_C_CC (div)
+MPC_LOGGING_C_CC (pow)
+
+MPC_LOGGING_C_CCC (fma)
+
+MPC_LOGGING_CC_C (sin_cos)
diff --git a/mpc/src/mem.c b/mpc/src/mem.c
new file mode 100644
index 0000000..3787a72
--- /dev/null
+++ b/mpc/src/mem.c
@@ -0,0 +1,47 @@
+/* wrapper functions to allocate, reallocate and free memory
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <string.h>   /* for strlen */
+#include "mpc-impl.h"
+
+char *
+mpc_alloc_str (size_t len)
+{
+  void * (*allocfunc) (size_t);
+  mp_get_memory_functions (&allocfunc, NULL, NULL);
+  return (char *) ((*allocfunc) (len));
+}
+
+char *
+mpc_realloc_str (char * str, size_t oldlen, size_t newlen)
+{
+  void * (*reallocfunc) (void *, size_t, size_t);
+  mp_get_memory_functions (NULL, &reallocfunc, NULL);
+  return (char *) ((*reallocfunc) (str, oldlen, newlen));
+}
+
+void
+mpc_free_str (char *str)
+{
+  void (*freefunc) (void *, size_t);
+  mp_get_memory_functions (NULL, NULL, &freefunc);
+  (*freefunc) (str, strlen (str) + 1);
+}
diff --git a/mpc/src/mpc-impl.h b/mpc/src/mpc-impl.h
new file mode 100644
index 0000000..2d9ed3b
--- /dev/null
+++ b/mpc/src/mpc-impl.h
@@ -0,0 +1,168 @@
+/* mpc-impl.h -- Internal include file for mpc.
+
+Copyright (C) INRIA, 2002, 2004, 2005, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#ifndef __MPC_IMPL_H
+#define __MPC_IMPL_H
+
+#include <stdlib.h>
+#include "config.h"
+#include "mpc.h"
+
+#define MPC_RE(x) ((x)->re)
+#define MPC_IM(x) ((x)->im)
+
+/*
+ * Miscellaneous useful macros
+ */
+
+#define MPC_MAX(h,i) ((h) > (i) ? (h) : (i))
+
+/* Safe absolute value (to avoid possible integer overflow) */
+/* type is the target (unsigned) type (copied from mpfr-impl.h) */
+#ifdef SAFE_ABS
+#undef SAFE_ABS
+#endif
+#define SAFE_ABS(type,x) ((x) >= 0 ? (type)(x) : -(type)(x))
+
+
+/*
+ * MPFR constants and macros
+ */
+
+#ifndef BITS_PER_MP_LIMB
+#define BITS_PER_MP_LIMB mp_bits_per_limb
+#endif
+
+#define MPFR_SIGNBIT(x) (mpfr_signbit (x) ? -1 : 1)
+#define MPC_MPFR_SIGN(x) (mpfr_zero_p (x) ? 0 : MPFR_SIGNBIT (x))
+   /* should be called MPFR_SIGN, but this is taken in mpfr.h */
+#define MPFR_CHANGE_SIGN(x) mpfr_neg(x,x,GMP_RNDN)
+#define MPFR_COPYSIGN(x,y,z,rnd) (mpfr_nan_p (z) ? \
+   mpfr_setsign (x, y, 0, rnd) : \
+   mpfr_copysign (x, y, z, rnd))
+   /* work around spurious signs in nan */
+#define MPFR_ADD_ONE_ULP(x) mpfr_add_one_ulp (x, GMP_RNDN)
+#define MPFR_SUB_ONE_ULP(x) mpfr_sub_one_ulp (x, GMP_RNDN)
+   /* drop unused rounding mode from macroes */
+#define MPFR_SWAP(a,b) do { mpfr_srcptr tmp; tmp = a; a = b; b = tmp; } while (0)
+
+
+/*
+ * Macro implementing rounding away from zero, to ease compatibility with
+ * mpfr < 3. f is the complete function call with a rounding mode of
+ * MPFR_RNDA, rop the name of the variable containing the result; it is
+ * already contained in f, but needs to be repeated so that the macro can
+ * modify the variable.
+ * Usage: replace each call to a function such as
+ *    mpfr_add (rop, a, b, MPFR_RNDA)
+ * by
+ *    ROUND_AWAY (mpfr_add (rop, a, b, MPFR_RNDA), rop)
+*/
+#if MPFR_VERSION_MAJOR < 3
+   /* round towards zero, add 1 ulp if not exact */
+#define MPFR_RNDA GMP_RNDZ
+#define ROUND_AWAY(f,rop)                            \
+   ((f) ? MPFR_ADD_ONE_ULP (rop), MPFR_SIGNBIT (rop) : 0)
+#else
+#define ROUND_AWAY(f,rop) \
+   (f)
+#endif
+
+
+/*
+ * MPC macros
+ */
+
+#define MPC_PREC_RE(x) (mpfr_get_prec(MPC_RE(x)))
+#define MPC_PREC_IM(x) (mpfr_get_prec(MPC_IM(x)))
+#define MPC_MAX_PREC(x) MPC_MAX(MPC_PREC_RE(x), MPC_PREC_IM(x))
+
+#define INV_RND(r) \
+   (((r) == GMP_RNDU) ? GMP_RNDD : (((r) == GMP_RNDD) ? GMP_RNDU : (r)))
+
+#define mpc_inf_p(z) (mpfr_inf_p(MPC_RE(z))||mpfr_inf_p(MPC_IM(z)))
+   /* Convention in C99 (G.3): z is regarded as an infinity if at least one of
+      its parts is infinite */
+#define mpc_zero_p(z) (mpfr_zero_p(MPC_RE(z))&&mpfr_zero_p(MPC_IM(z)))
+   /* Convention in C99 (G.3): z is regarded as a zero if each of its parts is
+      a zero */
+#define mpc_fin_p(z) (mpfr_number_p(MPC_RE(z))&&mpfr_number_p(MPC_IM(z)))
+   /* Convention in C99 (G.3): z is regarded as finite if both its parts are */
+#define mpc_nan_p(z) ((mpfr_nan_p(MPC_RE(z)) && !mpfr_inf_p(MPC_IM(z))) || (mpfr_nan_p(MPC_IM(z)) && !mpfr_inf_p(MPC_RE(z))))
+   /* Consider as NaN all other numbers containing at least one NaN */
+
+
+#define MPC_OUT(x)                                                  \
+do {                                                            \
+  printf (#x "[%lu,%lu]=", (unsigned long int) MPC_PREC_RE (x), \
+      (unsigned long int) MPC_PREC_IM (x));                     \
+  mpc_out_str (stdout, 2, 0, x, MPC_RNDNN);                     \
+  printf ("\n");                                                \
+} while (0)
+
+
+/*
+ * ASSERT macros
+ */
+
+#define MPC_ASSERT(expr)                                        \
+  do {                                                          \
+    if (!(expr))                                                \
+      {                                                         \
+        fprintf (stderr, "%s:%d: MPC assertion failed: %s\n",   \
+                 __FILE__, __LINE__, #expr);                    \
+        abort();                                                \
+      }                                                         \
+  } while (0)
+
+
+/*
+ * Constants
+ */
+
+#ifndef MUL_KARATSUBA_THRESHOLD
+#define MUL_KARATSUBA_THRESHOLD 23
+#endif
+
+
+/*
+ * Define internal functions
+ */
+
+#if defined (__cplusplus)
+extern "C" {
+#endif
+
+__MPC_DECLSPEC int  mpc_mul_naive __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_mul_karatsuba __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_pow_usi __MPC_PROTO ((mpc_ptr, mpc_srcptr, unsigned long, int, mpc_rnd_t));
+__MPC_DECLSPEC char* mpc_alloc_str __MPC_PROTO ((size_t));
+__MPC_DECLSPEC char* mpc_realloc_str __MPC_PROTO ((char*, size_t, size_t));
+__MPC_DECLSPEC void mpc_free_str __MPC_PROTO ((char*));
+__MPC_DECLSPEC mpfr_prec_t mpc_ceil_log2 __MPC_PROTO ((mpfr_prec_t));
+__MPC_DECLSPEC int set_pi_over_2 __MPC_PROTO ((mpfr_ptr, int, mpfr_rnd_t));
+
+#if defined (__cplusplus)
+}
+#endif
+
+
+#endif
diff --git a/mpc/src/mpc-log.h b/mpc/src/mpc-log.h
new file mode 100644
index 0000000..bb03c5e
--- /dev/null
+++ b/mpc/src/mpc-log.h
@@ -0,0 +1,52 @@
+/* mpc-log.h -- Include file to enable function call logging; replaces mpc.h.
+
+Copyright (C) INRIA, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#define mpc_sqr mpc_log_sqr
+#define mpc_conj mpc_log_conj
+#define mpc_neg mpc_log_neg
+#define mpc_sqrt mpc_log_sqrt
+#define mpc_proj mpc_log_proj
+#define mpc_exp mpc_log_exp
+#define mpc_log mpc_log_log
+#define mpc_sin mpc_log_sin
+#define mpc_cos mpc_log_cos
+#define mpc_tan mpc_log_tan
+#define mpc_sinh mpc_log_sinh
+#define mpc_cosh mpc_log_cosh
+#define mpc_tanh mpc_log_tanh
+#define mpc_asin mpc_log_asin
+#define mpc_acos mpc_log_acos
+#define mpc_atan mpc_log_atan
+#define mpc_asinh mpc_log_asinh
+#define mpc_acosh mpc_log_acosh
+#define mpc_atanh mpc_log_atanh
+
+#define mpc_add mpc_log_add
+#define mpc_sub mpc_log_sub
+#define mpc_mul mpc_log_mul
+#define mpc_div mpc_log_div
+#define mpc_pow mpc_log_pow
+
+#define mpc_fma mpc_log_fma
+
+#define mpc_sin_cos mpc_log_sin_cos
+
+#include "mpc.h"
diff --git a/mpc/src/mpc.h b/mpc/src/mpc.h
new file mode 100644
index 0000000..c32ca65
--- /dev/null
+++ b/mpc/src/mpc.h
@@ -0,0 +1,284 @@
+/* mpc.h -- Include file for mpc.
+
+Copyright (C) INRIA, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#ifndef __MPC_H
+#define __MPC_H
+
+#include "gmp.h"
+#include "mpfr.h"
+
+/* Backwards compatibility with mpfr<3.0.0 */
+#ifndef mpfr_exp_t
+#define mpfr_exp_t mp_exp_t
+#endif
+
+/* Define MPC version number */
+#define MPC_VERSION_MAJOR 0
+#define MPC_VERSION_MINOR 9
+#define MPC_VERSION_PATCHLEVEL 0
+#define MPC_VERSION_STRING "0.9"
+
+/* Macros dealing with MPC VERSION */
+#define MPC_VERSION_NUM(a,b,c) (((a) << 16L) | ((b) << 8) | (c))
+#define MPC_VERSION                                                     \
+  MPC_VERSION_NUM(MPC_VERSION_MAJOR,MPC_VERSION_MINOR,MPC_VERSION_PATCHLEVEL)
+
+/* Check if stdio.h is included */
+#if defined (_GMP_H_HAVE_FILE)
+# define _MPC_H_HAVE_FILE 1
+#endif
+
+/* Check if stdint.h/inttypes.h is included */
+#if defined (INTMAX_C) && defined (UINTMAX_C)
+# define _MPC_H_HAVE_INTMAX_T 1
+#endif
+
+/* Check if complex.h is included */
+#if defined (_COMPLEX_H)
+# define _MPC_H_HAVE_COMPLEX 1
+#endif
+
+/* Return values */
+
+/* Transform negative to 2, positive to 1, leave 0 unchanged */
+#define MPC_INEX_POS(inex) (((inex) < 0) ? 2 : ((inex) == 0) ? 0 : 1)
+/* Transform 2 to negative, 1 to positive, leave 0 unchanged */
+#define MPC_INEX_NEG(inex) (((inex) == 2) ? -1 : ((inex) == 0) ? 0 : 1)
+
+/* The global inexact flag is made of (real flag) + 4 * (imaginary flag), where
+   each of the real and imaginary inexact flag are:
+   0 when the result is exact (no rounding error)
+   1 when the result is larger than the exact value
+   2 when the result is smaller than the exact value */
+#define MPC_INEX(inex_re, inex_im) \
+        (MPC_INEX_POS(inex_re) | (MPC_INEX_POS(inex_im) << 2))
+#define MPC_INEX_RE(inex) MPC_INEX_NEG((inex) & 3)
+#define MPC_INEX_IM(inex) MPC_INEX_NEG((inex) >> 2)
+
+/* For functions computing two results, the return value is
+   inexact1+16*inexact2, which is 0 iif both results are exact. */
+#define MPC_INEX12(inex1, inex2) (inex1 | (inex2 << 4))
+#define MPC_INEX1(inex) (inex & 15)
+#define MPC_INEX2(inex) (inex >> 4)
+
+/* Definition of rounding modes */
+
+/* a complex rounding mode is just a pair of two real rounding modes
+   we reserve four bits for a real rounding mode.  */
+typedef int mpc_rnd_t;
+
+#define RNDC(r1,r2) (((int)(r1)) + ((int)(r2) << 4))
+#define MPC_RND_RE(x) ((mpfr_rnd_t)((x) & 0x0F))
+#define MPC_RND_IM(x) ((mpfr_rnd_t)((x) >> 4))
+
+#define MPC_RNDNN RNDC(GMP_RNDN,GMP_RNDN)
+#define MPC_RNDNZ RNDC(GMP_RNDN,GMP_RNDZ)
+#define MPC_RNDNU RNDC(GMP_RNDN,GMP_RNDU)
+#define MPC_RNDND RNDC(GMP_RNDN,GMP_RNDD)
+
+#define MPC_RNDZN RNDC(GMP_RNDZ,GMP_RNDN)
+#define MPC_RNDZZ RNDC(GMP_RNDZ,GMP_RNDZ)
+#define MPC_RNDZU RNDC(GMP_RNDZ,GMP_RNDU)
+#define MPC_RNDZD RNDC(GMP_RNDZ,GMP_RNDD)
+
+#define MPC_RNDUN RNDC(GMP_RNDU,GMP_RNDN)
+#define MPC_RNDUZ RNDC(GMP_RNDU,GMP_RNDZ)
+#define MPC_RNDUU RNDC(GMP_RNDU,GMP_RNDU)
+#define MPC_RNDUD RNDC(GMP_RNDU,GMP_RNDD)
+
+#define MPC_RNDDN RNDC(GMP_RNDD,GMP_RNDN)
+#define MPC_RNDDZ RNDC(GMP_RNDD,GMP_RNDZ)
+#define MPC_RNDDU RNDC(GMP_RNDD,GMP_RNDU)
+#define MPC_RNDDD RNDC(GMP_RNDD,GMP_RNDD)
+
+
+/* Definitions of types and their semantics */
+
+typedef struct {
+  mpfr_t re;
+  mpfr_t im;
+}
+__mpc_struct;
+
+typedef __mpc_struct mpc_t[1];
+typedef __mpc_struct *mpc_ptr;
+typedef __gmp_const __mpc_struct *mpc_srcptr;
+
+/* Prototypes: Support of K&R compiler */
+#if defined (__GMP_PROTO)
+# define __MPC_PROTO __GMP_PROTO
+#elif defined (__STDC__) || defined (__cplusplus)
+# define __MPC_PROTO(x) x
+#else
+# define __MPC_PROTO(x) ()
+#endif
+
+/* Support for WINDOWS Dll:
+   Check if we are inside a MPC build, and if so export the functions.
+   Otherwise does the same thing as GMP */
+#if defined(__MPC_WITHIN_MPC) && __GMP_LIBGMP_DLL
+# define __MPC_DECLSPEC __GMP_DECLSPEC_EXPORT
+#else
+# define __MPC_DECLSPEC __GMP_DECLSPEC
+#endif
+
+#if defined (__cplusplus)
+extern "C" {
+#endif
+
+__MPC_DECLSPEC int  mpc_add    __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_add_fr __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpfr_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_add_si __MPC_PROTO ((mpc_ptr, mpc_srcptr, long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_add_ui __MPC_PROTO ((mpc_ptr, mpc_srcptr, unsigned long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_sub    __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_sub_fr __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpfr_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_fr_sub __MPC_PROTO ((mpc_ptr, mpfr_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_sub_ui __MPC_PROTO ((mpc_ptr, mpc_srcptr, unsigned long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_ui_ui_sub __MPC_PROTO ((mpc_ptr, unsigned long int, unsigned long int, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_mul    __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_mul_fr __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpfr_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_mul_ui __MPC_PROTO ((mpc_ptr, mpc_srcptr, unsigned long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_mul_si __MPC_PROTO ((mpc_ptr, mpc_srcptr, long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_mul_i  __MPC_PROTO ((mpc_ptr, mpc_srcptr, int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_sqr    __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_div    __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_pow    __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_pow_fr __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpfr_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_pow_ld __MPC_PROTO ((mpc_ptr, mpc_srcptr, long double, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_pow_d __MPC_PROTO ((mpc_ptr, mpc_srcptr, double, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_pow_si __MPC_PROTO ((mpc_ptr, mpc_srcptr, long, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_pow_ui __MPC_PROTO ((mpc_ptr, mpc_srcptr, unsigned long, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_pow_z  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpz_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_div_fr __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpfr_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_fr_div __MPC_PROTO ((mpc_ptr, mpfr_srcptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_div_ui __MPC_PROTO ((mpc_ptr, mpc_srcptr, unsigned long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_ui_div __MPC_PROTO ((mpc_ptr, unsigned long int, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_div_2exp __MPC_PROTO ((mpc_ptr, mpc_srcptr, unsigned long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_mul_2exp __MPC_PROTO ((mpc_ptr, mpc_srcptr, unsigned long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_conj  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_neg   __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_norm  __MPC_PROTO ((mpfr_ptr, mpc_srcptr, mpfr_rnd_t));
+__MPC_DECLSPEC int  mpc_abs   __MPC_PROTO ((mpfr_ptr, mpc_srcptr, mpfr_rnd_t));
+__MPC_DECLSPEC int  mpc_sqrt  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set       __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_d     __MPC_PROTO ((mpc_ptr, double, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_d_d   __MPC_PROTO ((mpc_ptr, double, double, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_ld    __MPC_PROTO ((mpc_ptr, long double, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_ld_ld __MPC_PROTO ((mpc_ptr, long double, long double, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_f     __MPC_PROTO ((mpc_ptr, mpf_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_f_f   __MPC_PROTO ((mpc_ptr, mpf_srcptr, mpf_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_fr    __MPC_PROTO ((mpc_ptr, mpfr_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_fr_fr __MPC_PROTO ((mpc_ptr, mpfr_srcptr, mpfr_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_q     __MPC_PROTO ((mpc_ptr, mpq_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_q_q   __MPC_PROTO ((mpc_ptr, mpq_srcptr, mpq_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_si    __MPC_PROTO ((mpc_ptr, long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_si_si __MPC_PROTO ((mpc_ptr, long int, long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_ui    __MPC_PROTO ((mpc_ptr, unsigned long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_ui_ui __MPC_PROTO ((mpc_ptr, unsigned long int, unsigned long int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_z     __MPC_PROTO ((mpc_ptr, mpz_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_z_z   __MPC_PROTO ((mpc_ptr, mpz_srcptr, mpz_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC void mpc_swap      __MPC_PROTO ((mpc_ptr, mpc_ptr));
+__MPC_DECLSPEC int  mpc_fma       __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_srcptr, mpc_srcptr, mpc_rnd_t));
+
+#ifdef _MPC_H_HAVE_INTMAX_T
+__MPC_DECLSPEC int  mpc_set_sj __MPC_PROTO ((mpc_ptr, intmax_t, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_uj __MPC_PROTO ((mpc_ptr, uintmax_t,  mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_sj_sj __MPC_PROTO ((mpc_ptr, intmax_t, intmax_t, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_uj_uj __MPC_PROTO ((mpc_ptr, uintmax_t, uintmax_t, mpc_rnd_t));
+#endif
+
+#ifdef _MPC_H_HAVE_COMPLEX
+__MPC_DECLSPEC int  mpc_set_dc __MPC_PROTO ((mpc_ptr, double _Complex, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_ldc __MPC_PROTO ((mpc_ptr, long double _Complex, mpc_rnd_t));
+__MPC_DECLSPEC double _Complex  mpc_get_dc __MPC_PROTO ((mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC long double _Complex  mpc_get_ldc __MPC_PROTO ((mpc_srcptr, mpc_rnd_t));
+#endif
+
+__MPC_DECLSPEC void mpc_set_nan     __MPC_PROTO ((mpc_ptr));
+
+__MPC_DECLSPEC int  mpc_real __MPC_PROTO ((mpfr_ptr, mpc_srcptr, mpfr_rnd_t));
+__MPC_DECLSPEC int  mpc_imag __MPC_PROTO ((mpfr_ptr, mpc_srcptr, mpfr_rnd_t));
+__MPC_DECLSPEC int  mpc_arg  __MPC_PROTO ((mpfr_ptr, mpc_srcptr, mpfr_rnd_t));
+__MPC_DECLSPEC int  mpc_proj __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_cmp  __MPC_PROTO ((mpc_srcptr, mpc_srcptr));
+__MPC_DECLSPEC int  mpc_cmp_si_si __MPC_PROTO ((mpc_srcptr, long int, long int));
+__MPC_DECLSPEC int  mpc_exp  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_log  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_sin  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_cos  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_sin_cos  __MPC_PROTO ((mpc_ptr, mpc_ptr, mpc_srcptr, mpc_rnd_t, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_tan  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_sinh __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_cosh __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_tanh __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_asin  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_acos  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_atan  __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_asinh __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_acosh __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_atanh __MPC_PROTO ((mpc_ptr, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC void mpc_clear   __MPC_PROTO ((mpc_ptr));
+__MPC_DECLSPEC int  mpc_urandom __MPC_PROTO ((mpc_ptr, gmp_randstate_t));
+__MPC_DECLSPEC void mpc_init2 __MPC_PROTO ((mpc_ptr, mpfr_prec_t));
+__MPC_DECLSPEC void mpc_init3 __MPC_PROTO ((mpc_ptr, mpfr_prec_t, mpfr_prec_t));
+__MPC_DECLSPEC mpfr_prec_t mpc_get_prec __MPC_PROTO((mpc_srcptr x));
+__MPC_DECLSPEC void mpc_get_prec2 __MPC_PROTO((mpfr_prec_t *pr, mpfr_prec_t *pi, mpc_srcptr x));
+__MPC_DECLSPEC void mpc_set_prec  __MPC_PROTO ((mpc_ptr, mpfr_prec_t));
+__MPC_DECLSPEC __gmp_const char * mpc_get_version __MPC_PROTO ((void));
+
+__MPC_DECLSPEC int  mpc_strtoc    _MPFR_PROTO ((mpc_ptr, const char *, char **, int, mpc_rnd_t));
+__MPC_DECLSPEC int  mpc_set_str   _MPFR_PROTO ((mpc_ptr, const char *, int, mpc_rnd_t));
+__MPC_DECLSPEC char * mpc_get_str _MPFR_PROTO ((int, size_t, mpc_srcptr, mpc_rnd_t));
+__MPC_DECLSPEC void mpc_free_str  _MPFR_PROTO ((char *));
+#ifdef _MPC_H_HAVE_FILE
+__MPC_DECLSPEC int mpc_inp_str __MPC_PROTO ((mpc_ptr, FILE *, size_t *, int, mpc_rnd_t));
+__MPC_DECLSPEC size_t mpc_out_str __MPC_PROTO ((FILE *, int, size_t, mpc_srcptr, mpc_rnd_t));
+#endif
+
+#if defined (__cplusplus)
+}
+#endif
+
+#define mpc_realref(x) ((x)->re)
+#define mpc_imagref(x) ((x)->im)
+
+#define mpc_cmp_si(x, y) \
+ ( mpc_cmp_si_si ((x), (y), 0l) )
+#define mpc_ui_sub(x, y, z, r) mpc_ui_ui_sub (x, y, 0ul, z, r)
+
+/*
+   Define a fake mpfr_set_fr so that, for instance, mpc_set_fr_z would
+   be defined as follows:
+   mpc_set_fr_z (mpc_t rop, mpfr_t x, mpz_t y, mpc_rnd_t rnd)
+       MPC_SET_X_Y (fr, z, rop, x, y, rnd)
+*/
+#ifndef mpfr_set_fr
+#define mpfr_set_fr mpfr_set
+#endif
+#define MPC_SET_X_Y(real_t, imag_t, z, real_value, imag_value, rnd)     \
+  {                                                                     \
+    int _inex_re, _inex_im;                                             \
+    _inex_re = (mpfr_set_ ## real_t) (mpc_realref (z), (real_value), MPC_RND_RE (rnd)); \
+    _inex_im = (mpfr_set_ ## imag_t) (mpc_imagref (z), (imag_value), MPC_RND_IM (rnd)); \
+    return MPC_INEX (_inex_re, _inex_im);                               \
+  }
+
+#endif /* ifndef __MPC_H */
diff --git a/mpc/src/mul.c b/mpc/src/mul.c
new file mode 100644
index 0000000..50d7b1b
--- /dev/null
+++ b/mpc/src/mul.c
@@ -0,0 +1,526 @@
+/* mpc_mul -- Multiply two complex numbers
+
+Copyright (C) INRIA, 2002, 2004, 2005, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+static int mul_infinite (mpc_ptr a, mpc_srcptr u, mpc_srcptr v);
+static int mul_pure_imaginary (mpc_ptr a, mpc_srcptr u, mpfr_srcptr y,
+                               mpc_rnd_t rnd, int overlap);
+
+/* return inex such that MPC_INEX_RE(inex) = -1, 0, 1
+                         MPC_INEX_IM(inex) = -1, 0, 1
+   depending on the signs of the real/imaginary parts of the result
+*/
+int
+mpc_mul (mpc_ptr a, mpc_srcptr b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+  int brs, bis, crs, cis;
+
+  /* Conforming to ISO C99 standard (G.5.1 multiplicative operators),
+     infinities have special treatment if both parts are NaN when computed
+     naively. */
+  if (mpc_inf_p (b))
+    return mul_infinite (a, b, c);
+  if (mpc_inf_p (c))
+    return mul_infinite (a, c, b);
+
+  /* NaN contamination of both part in result */
+  if (mpfr_nan_p (MPC_RE (b)) || mpfr_nan_p (MPC_IM (b))
+      || mpfr_nan_p (MPC_RE (c)) || mpfr_nan_p (MPC_IM (c)))
+    {
+      mpfr_set_nan (MPC_RE (a));
+      mpfr_set_nan (MPC_IM (a));
+      return MPC_INEX (0, 0);
+    }
+
+  /* save operands' sign */
+  brs = MPFR_SIGNBIT (MPC_RE (b));
+  bis = MPFR_SIGNBIT (MPC_IM (b));
+  crs = MPFR_SIGNBIT (MPC_RE (c));
+  cis = MPFR_SIGNBIT (MPC_IM (c));
+
+  /* first check for real multiplication */
+  if (mpfr_zero_p (MPC_IM (b))) /* b * (x+i*y) = b*x + i *(b*y) */
+    {
+      int inex;
+      inex = mpc_mul_fr (a, c, MPC_RE (b), rnd);
+
+      /* Sign of zeros is wrong in some cases. This correction doesn't change
+         inexact flag. */
+      if (mpfr_zero_p (MPC_RE (a)))
+        mpfr_setsign (MPC_RE (a), MPC_RE (a), MPC_RND_RE(rnd) == GMP_RNDD
+                      || (brs != crs && bis == cis), GMP_RNDN); /* exact */
+      if (mpfr_zero_p (MPC_IM (a)))
+        mpfr_setsign (MPC_IM (a), MPC_IM (a), MPC_RND_IM (rnd) == GMP_RNDD
+                      || (brs != cis && bis != crs), GMP_RNDN); /* exact */
+
+      return inex;
+    }
+  if (mpfr_zero_p (MPC_IM (c)))
+    {
+      int inex;
+      inex = mpc_mul_fr (a, b, MPC_RE (c), rnd);
+
+      /* Sign of zeros is wrong in some cases. This correction doesn't change
+         inexact flag. */
+      if (mpfr_zero_p (MPC_RE (a)))
+        mpfr_setsign (MPC_RE (a), MPC_RE (a), MPC_RND_RE(rnd) == GMP_RNDD
+                      || (brs != crs && bis == cis), GMP_RNDN);
+      if (mpfr_zero_p (MPC_IM (a)))
+        mpfr_setsign (MPC_IM (a), MPC_IM (a), MPC_RND_IM (rnd) == GMP_RNDD
+                      || (brs != cis && bis != crs), GMP_RNDN);
+
+      return inex;
+    }
+
+  /* check for purely complex multiplication */
+  if (mpfr_zero_p (MPC_RE (b))) /* i*b * (x+i*y) = -b*y + i*(b*x) */
+    {
+      int inex;
+      inex = mul_pure_imaginary (a, c, MPC_IM (b), rnd, (a == b || a == c));
+
+      /* Sign of zeros is wrong in some cases (note that Re(a) cannot be a
+         zero) */
+      if (mpfr_zero_p (MPC_IM (a)))
+        mpfr_setsign (MPC_IM (a), MPC_IM (a), MPC_RND_IM (rnd) == GMP_RNDD
+                      || (brs != cis && bis != crs), GMP_RNDN);
+
+      return inex;
+    }
+  if (mpfr_zero_p (MPC_RE (c)))
+    /* note that a cannot be a zero */
+    return mul_pure_imaginary (a, b, MPC_IM (c), rnd, (a == b || a == c));
+
+  /* Check if b==c and call mpc_sqr in this case, to make sure            */
+  /* mpc_mul(a,b,b) behaves exactly like mpc_sqr(a,b) concerning          */
+  /* internal overflows etc.                                              */
+  if (mpc_cmp (b, c) == 0)
+     return mpc_sqr (a, b, rnd);
+
+  /* If the real and imaginary part of one argument have a very different */
+  /* exponent, it is not reasonable to use Karatsuba multiplication.      */
+  if (   SAFE_ABS (mpfr_exp_t,
+                   mpfr_get_exp (MPC_RE (b)) - mpfr_get_exp (MPC_IM (b)))
+         > (mpfr_exp_t) MPC_MAX_PREC (b) / 2
+      || SAFE_ABS (mpfr_exp_t,
+                   mpfr_get_exp (MPC_RE (c)) - mpfr_get_exp (MPC_IM (c)))
+         > (mpfr_exp_t) MPC_MAX_PREC (c) / 2)
+    return mpc_mul_naive (a, b, c, rnd);
+  else
+    return ((MPC_MAX_PREC(a)
+             <= (mpfr_prec_t) MUL_KARATSUBA_THRESHOLD * BITS_PER_MP_LIMB)
+            ? mpc_mul_naive : mpc_mul_karatsuba) (a, b, c, rnd);
+}
+
+/* compute a=u*v when u has an infinite part */
+static int
+mul_infinite (mpc_ptr a, mpc_srcptr u, mpc_srcptr v)
+{
+  /* let u = ur+i*ui and v =vr+i*vi */
+  int x, y;
+
+  /* save operands' sign */
+  int urs = mpfr_signbit (MPC_RE (u)) ? -1 : 1;
+  int uis = mpfr_signbit (MPC_IM (u)) ? -1 : 1;
+  int vrs = mpfr_signbit (MPC_RE (v)) ? -1 : 1;
+  int vis = mpfr_signbit (MPC_IM (v)) ? -1 : 1;
+
+  /* compute the sign of
+     x = urs * ur * vrs * vr - uis * ui * vis * vi
+     y = urs * ur * vis * vi + uis * ui * vrs * vr
+     +1 if positive, -1 if negative, 0 if zero or NaN */
+  if (mpfr_nan_p (MPC_RE (u)) || mpfr_nan_p (MPC_IM (u))
+      || mpfr_nan_p (MPC_RE (v)) || mpfr_nan_p (MPC_IM (v)))
+    {
+      x = 0;
+      y = 0;
+    }
+  else if (mpfr_inf_p (MPC_RE (u)))
+    {
+      /* u = (+/-inf) +i*v */
+      x = mpfr_zero_p (MPC_RE (v))
+        || (mpfr_inf_p (MPC_IM (u)) && mpfr_zero_p (MPC_IM (v)))
+        || (mpfr_zero_p (MPC_IM (u)) && mpfr_inf_p (MPC_IM (v)))
+        || ((mpfr_inf_p (MPC_IM (u)) || mpfr_inf_p (MPC_IM (v)))
+            && urs*vrs == uis*vis) ?
+        0 : urs * vrs;
+      y = mpfr_zero_p (MPC_IM (v))
+        || (mpfr_inf_p (MPC_IM (u)) && mpfr_zero_p (MPC_RE (v)))
+        || (mpfr_zero_p (MPC_IM (u)) && mpfr_inf_p (MPC_RE (v)))
+        || ((mpfr_inf_p (MPC_IM (u)) || mpfr_inf_p (MPC_IM (u)))
+            && urs*vis == -uis*vrs) ?
+        0 : urs * vis;
+    }
+  else
+    {
+      /* u = u +i*(+/-inf) where |u| < inf */
+      x = mpfr_zero_p (MPC_IM (v))
+        || (mpfr_zero_p (MPC_RE (u)) && mpfr_inf_p (MPC_RE (v)))
+        || (mpfr_inf_p (MPC_RE (v)) && urs*vrs == uis*vis) ?
+        0 : -uis * vis;
+      y = mpfr_zero_p (MPC_RE (v))
+        || (mpfr_zero_p (MPC_RE (u)) && mpfr_inf_p (MPC_IM (v)))
+        || (mpfr_inf_p (MPC_IM (v)) && urs*vis == -uis*vrs) ?
+        0 : uis * vrs;
+    }
+
+  /* Naive result is NaN+i*NaN. We will try to obtain an infinite using
+     algorithm given in Annex G of ISO C99 standard */
+  if (x == 0 && y ==0)
+    {
+      int ur = mpfr_zero_p (MPC_RE (u)) || mpfr_nan_p (MPC_RE (u)) ?
+        0 : 1;
+      int ui = mpfr_zero_p (MPC_IM (u)) || mpfr_nan_p (MPC_IM (u)) ?
+        0 : 1;
+      int vr = mpfr_zero_p (MPC_RE (v)) || mpfr_nan_p (MPC_RE (v)) ?
+        0 : 1;
+      int vi = mpfr_zero_p (MPC_IM (v)) || mpfr_nan_p (MPC_IM (v)) ?
+        0 : 1;
+      if (mpc_inf_p (u))
+        {
+          ur = mpfr_inf_p (MPC_RE (u)) ? 1 : 0;
+          ui = mpfr_inf_p (MPC_IM (u)) ? 1 : 0;
+        }
+      if (mpc_inf_p (v))
+        {
+          vr = mpfr_inf_p (MPC_RE (v)) ? 1 : 0;
+          vi = mpfr_inf_p (MPC_IM (v)) ? 1 : 0;
+        }
+
+      x = urs * ur * vrs * vr - uis * ui * vis * vi;
+      y = urs * ur * vis * vi + uis * ui * vrs * vr;
+    }
+
+  if (x == 0)
+    mpfr_set_nan (MPC_RE (a));
+  else
+    mpfr_set_inf (MPC_RE (a), x);
+
+  if (y == 0)
+    mpfr_set_nan (MPC_IM (a));
+  else
+    mpfr_set_inf (MPC_IM (a), y);
+
+  return MPC_INEX (0, 0); /* exact */
+}
+
+static int
+mul_pure_imaginary (mpc_ptr a, mpc_srcptr u, mpfr_srcptr y, mpc_rnd_t rnd,
+                    int overlap)
+{
+  int inex_re, inex_im;
+  mpc_t result;
+
+  if (overlap)
+    mpc_init3 (result, MPC_PREC_RE (a), MPC_PREC_IM (a));
+  else
+    result [0] = a [0];
+
+  inex_re = -mpfr_mul (MPC_RE(result), MPC_IM(u), y, INV_RND(MPC_RND_RE(rnd)));
+  mpfr_neg (MPC_RE (result), MPC_RE (result), GMP_RNDN);
+  inex_im = mpfr_mul (MPC_IM(result), MPC_RE(u), y, MPC_RND_IM(rnd));
+  mpc_set (a, result, MPC_RNDNN);
+
+  if (overlap)
+    mpc_clear (result);
+
+  return MPC_INEX(inex_re, inex_im);
+}
+
+int
+mpc_mul_naive (mpc_ptr a, mpc_srcptr b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+   /* We assume that b and c are different, which is checked in mpc_mul. */
+  int overlap, inex_re, inex_im;
+  mpfr_t u, v, t;
+  mpfr_prec_t prec;
+
+  overlap = (a == b) || (a == c);
+
+  prec = MPC_MAX_PREC(b) + MPC_MAX_PREC(c);
+
+  mpfr_init2 (u, prec);
+  mpfr_init2 (v, prec);
+
+  /* Re(a) = Re(b)*Re(c) - Im(b)*Im(c) */
+  /* FIXME: this code suffers undue overflows: u or v can overflow while u-v
+     or u+v is representable */
+  mpfr_mul (u, MPC_RE(b), MPC_RE(c), GMP_RNDN); /* exact */
+  mpfr_mul (v, MPC_IM(b), MPC_IM(c), GMP_RNDN); /* exact */
+
+  if (overlap)
+    {
+      mpfr_init2 (t, MPC_PREC_RE(a));
+      inex_re = mpfr_sub (t, u, v, MPC_RND_RE(rnd));
+    }
+  else
+    inex_re = mpfr_sub (MPC_RE(a), u, v, MPC_RND_RE(rnd));
+
+  /* Im(a) = Re(b)*Im(c) + Im(b)*Re(c) */
+  mpfr_mul (u, MPC_RE(b), MPC_IM(c), GMP_RNDN); /* exact */
+  mpfr_mul (v, MPC_IM(b), MPC_RE(c), GMP_RNDN); /* exact */
+  inex_im = mpfr_add (MPC_IM(a), u, v, MPC_RND_IM(rnd));
+
+  mpfr_clear (u);
+  mpfr_clear (v);
+
+  if (overlap)
+    {
+      mpfr_set (MPC_RE(a), t, GMP_RNDN); /* exact */
+      mpfr_clear (t);
+    }
+
+  return MPC_INEX(inex_re, inex_im);
+}
+
+
+/* Karatsuba multiplication, with 3 real multiplies */
+int
+mpc_mul_karatsuba (mpc_ptr rop, mpc_srcptr op1, mpc_srcptr op2, mpc_rnd_t rnd)
+{
+  mpfr_srcptr a, b, c, d;
+  int mul_i, ok, inexact, mul_a, mul_c, inex_re, inex_im, sign_x, sign_u;
+  mpfr_t u, v, w, x;
+  mpfr_prec_t prec, prec_re, prec_u, prec_v, prec_w;
+  mpfr_rnd_t rnd_re, rnd_u;
+  int overlap;
+     /* true if rop == op1 or rop == op2 */
+  mpc_t result;
+     /* overlap is quite difficult to handle, because we have to tentatively
+        round the variable u in the end to either the real or the imaginary
+        part of rop (it is not possible to tell now whether the real or
+        imaginary part is used). If this fails, we have to start again and
+        need the correct values of op1 and op2.
+        So we just create a new variable for the result in this case. */
+  int loop;
+  const int MAX_MUL_LOOP = 1;
+
+  overlap = (rop == op1) || (rop == op2);
+  if (overlap)
+     mpc_init3 (result, MPC_PREC_RE (rop), MPC_PREC_IM (rop));
+  else
+     result [0] = rop [0];
+
+  a = MPC_RE(op1);
+  b = MPC_IM(op1);
+  c = MPC_RE(op2);
+  d = MPC_IM(op2);
+
+  /* (a + i*b) * (c + i*d) = [ac - bd] + i*[ad + bc] */
+
+  mul_i = 0; /* number of multiplications by i */
+  mul_a = 1; /* implicit factor for a */
+  mul_c = 1; /* implicit factor for c */
+
+  if (mpfr_cmp_abs (a, b) < 0)
+    {
+      MPFR_SWAP (a, b);
+      mul_i ++;
+      mul_a = -1; /* consider i * (a+i*b) = -b + i*a */
+    }
+
+  if (mpfr_cmp_abs (c, d) < 0)
+    {
+      MPFR_SWAP (c, d);
+      mul_i ++;
+      mul_c = -1; /* consider -d + i*c instead of c + i*d */
+    }
+
+  /* find the precision and rounding mode for the new real part */
+  if (mul_i % 2)
+    {
+      prec_re = MPC_PREC_IM(rop);
+      rnd_re = MPC_RND_IM(rnd);
+    }
+  else /* mul_i = 0 or 2 */
+    {
+      prec_re = MPC_PREC_RE(rop);
+      rnd_re = MPC_RND_RE(rnd);
+    }
+
+  if (mul_i)
+    rnd_re = INV_RND(rnd_re);
+
+  /* now |a| >= |b| and |c| >= |d| */
+  prec = MPC_MAX_PREC(rop);
+
+  mpfr_init2 (u, 2);
+  mpfr_init2 (v, prec_v = mpfr_get_prec (a) + mpfr_get_prec (d));
+  mpfr_init2 (w, prec_w = mpfr_get_prec (b) + mpfr_get_prec (c));
+  mpfr_init2 (x, 2);
+
+  mpfr_mul (v, a, d, GMP_RNDN); /* exact */
+  if (mul_a == -1)
+    mpfr_neg (v, v, GMP_RNDN);
+
+  mpfr_mul (w, b, c, GMP_RNDN); /* exact */
+  if (mul_c == -1)
+    mpfr_neg (w, w, GMP_RNDN);
+
+  /* compute sign(v-w) */
+  sign_x = mpfr_cmp_abs (v, w);
+  if (sign_x > 0)
+    sign_x = 2 * mpfr_sgn (v) - mpfr_sgn (w);
+  else if (sign_x == 0)
+    sign_x = mpfr_sgn (v) - mpfr_sgn (w);
+  else
+    sign_x = mpfr_sgn (v) - 2 * mpfr_sgn (w);
+
+   sign_u = mul_a * mpfr_sgn (a) * mul_c * mpfr_sgn (c);
+
+   if (sign_x * sign_u < 0)
+    {  /* swap inputs */
+      MPFR_SWAP (a, c);
+      MPFR_SWAP (b, d);
+      mpfr_swap (v, w);
+      { int tmp; tmp = mul_a; mul_a = mul_c; mul_c = tmp; }
+      sign_x = - sign_x;
+    }
+
+   /* now sign_x * sign_u >= 0 */
+   loop = 0;
+   do
+     {
+        loop++;
+         /* the following should give failures with prob. <= 1/prec */
+         prec += mpc_ceil_log2 (prec) + 3;
+
+         mpfr_set_prec (u, prec_u = prec);
+         mpfr_set_prec (x, prec);
+
+         /* first compute away(b +/- a) and store it in u */
+         inexact = (mul_a == -1 ?
+                    ROUND_AWAY (mpfr_sub (u, b, a, MPFR_RNDA), u) :
+                    ROUND_AWAY (mpfr_add (u, b, a, MPFR_RNDA), u));
+
+         /* then compute away(+/-c - d) and store it in x */
+         inexact |= (mul_c == -1 ?
+                     ROUND_AWAY (mpfr_add (x, c, d, MPFR_RNDA), x) :
+                     ROUND_AWAY (mpfr_sub (x, c, d, MPFR_RNDA), x));
+         if (mul_c == -1)
+           mpfr_neg (x, x, GMP_RNDN);
+
+         if (inexact == 0)
+            mpfr_prec_round (u, prec_u = 2 * prec, GMP_RNDN);
+
+         /* compute away(u*x) and store it in u */
+         inexact |= ROUND_AWAY (mpfr_mul (u, u, x, MPFR_RNDA), u);
+            /* (a+b)*(c-d) */
+
+	 /* if all computations are exact up to here, it may be that
+	    the real part is exact, thus we need if possible to
+	    compute v - w exactly */
+	 if (inexact == 0)
+	   {
+	     mpfr_prec_t prec_x;
+             if (mpfr_zero_p(v))
+               prec_x = prec_w;
+             else if (mpfr_zero_p(w))
+               prec_x = prec_v;
+             else
+                 prec_x = SAFE_ABS (mpfr_exp_t, mpfr_get_exp (v) - mpfr_get_exp (w))
+                          + MPC_MAX (prec_v, prec_w) + 1;
+                 /* +1 is necessary for a potential carry */
+	     /* ensure we do not use a too large precision */
+	     if (prec_x > prec_u)
+               prec_x = prec_u;
+	     if (prec_x > prec)
+	       mpfr_prec_round (x, prec_x, GMP_RNDN);
+	   }
+
+         rnd_u = (sign_u > 0) ? GMP_RNDU : GMP_RNDD;
+         inexact |= mpfr_sub (x, v, w, rnd_u); /* ad - bc */
+
+         /* in case u=0, ensure that rnd_u rounds x away from zero */
+         if (mpfr_sgn (u) == 0)
+           rnd_u = (mpfr_sgn (x) > 0) ? GMP_RNDU : GMP_RNDD;
+         inexact |= mpfr_add (u, u, x, rnd_u); /* ac - bd */
+
+         ok = inexact == 0 ||
+           mpfr_can_round (u, prec_u - 3, rnd_u, GMP_RNDZ,
+                           prec_re + (rnd_re == GMP_RNDN));
+         /* this ensures both we can round correctly and determine the correct
+            inexact flag (for rounding to nearest) */
+     }
+   while (!ok && loop <= MAX_MUL_LOOP);
+      /* after MAX_MUL_LOOP rounds, use mpc_naive instead */
+
+   if (ok) {
+      /* if inexact is zero, then u is exactly ac-bd, otherwise fix the sign
+         of the inexact flag for u, which was rounded away from ac-bd */
+      if (inexact != 0)
+      inexact = mpfr_sgn (u);
+
+      if (mul_i == 0)
+      {
+         inex_re = mpfr_set (MPC_RE(result), u, MPC_RND_RE(rnd));
+         if (inex_re == 0)
+            {
+            inex_re = inexact; /* u is rounded away from 0 */
+            inex_im = mpfr_add (MPC_IM(result), v, w, MPC_RND_IM(rnd));
+            }
+         else
+            inex_im = mpfr_add (MPC_IM(result), v, w, MPC_RND_IM(rnd));
+      }
+      else if (mul_i == 1) /* (x+i*y)/i = y - i*x */
+      {
+         inex_im = mpfr_neg (MPC_IM(result), u, MPC_RND_IM(rnd));
+         if (inex_im == 0)
+            {
+            inex_im = -inexact; /* u is rounded away from 0 */
+            inex_re = mpfr_add (MPC_RE(result), v, w, MPC_RND_RE(rnd));
+            }
+         else
+            inex_re = mpfr_add (MPC_RE(result), v, w, MPC_RND_RE(rnd));
+      }
+      else /* mul_i = 2, z/i^2 = -z */
+      {
+         inex_re = mpfr_neg (MPC_RE(result), u, MPC_RND_RE(rnd));
+         if (inex_re == 0)
+            {
+            inex_re = -inexact; /* u is rounded away from 0 */
+            inex_im = -mpfr_add (MPC_IM(result), v, w,
+                                 INV_RND(MPC_RND_IM(rnd)));
+            mpfr_neg (MPC_IM(result), MPC_IM(result), MPC_RND_IM(rnd));
+            }
+         else
+            {
+            inex_im = -mpfr_add (MPC_IM(result), v, w,
+                                 INV_RND(MPC_RND_IM(rnd)));
+            mpfr_neg (MPC_IM(result), MPC_IM(result), MPC_RND_IM(rnd));
+            }
+      }
+
+      mpc_set (rop, result, MPC_RNDNN);
+   }
+
+   mpfr_clear (u);
+   mpfr_clear (v);
+   mpfr_clear (w);
+   mpfr_clear (x);
+   if (overlap)
+      mpc_clear (result);
+
+   if (ok)
+      return MPC_INEX(inex_re, inex_im);
+   else
+      return mpc_mul_naive (rop, op1, op2, rnd);
+}
diff --git a/mpc/src/mul_2exp.c b/mpc/src/mul_2exp.c
new file mode 100644
index 0000000..e0e3e17
--- /dev/null
+++ b/mpc/src/mul_2exp.c
@@ -0,0 +1,33 @@
+/* mpc_mul_2exp -- Multiply a complex number by 2^e.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_mul_2exp (mpc_ptr a, mpc_srcptr b, unsigned long int c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_mul_2exp (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_mul_2exp (MPC_IM(a), MPC_IM(b), c, MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/mul_fr.c b/mpc/src/mul_fr.c
new file mode 100644
index 0000000..5f40d01
--- /dev/null
+++ b/mpc/src/mul_fr.c
@@ -0,0 +1,44 @@
+/* mpc_mul_fr -- Multiply a complex number by a floating-point number.
+
+Copyright (C) INRIA, 2002, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_mul_fr (mpc_ptr a, mpc_srcptr b, mpfr_srcptr c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+  mpfr_t real;
+
+  if (c == MPC_RE (a))
+    /* We have to use a temporary variable. */
+    mpfr_init2 (real, MPC_PREC_RE (a));
+  else
+    real [0] = MPC_RE (a) [0];
+
+  inex_re = mpfr_mul (real, MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_mul (MPC_IM(a), MPC_IM(b), c, MPC_RND_IM(rnd));
+  mpfr_set (MPC_RE (a), real, GMP_RNDN); /* exact */
+
+  if (c == MPC_RE (a))
+    mpfr_clear (real);
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/mul_i.c b/mpc/src/mul_i.c
new file mode 100644
index 0000000..62c48aa
--- /dev/null
+++ b/mpc/src/mul_i.c
@@ -0,0 +1,81 @@
+/* mpc_mul_i -- Multiply a complex number by plus or minus i.
+
+Copyright (C) INRIA, 2005, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_mul_i (mpc_ptr a, mpc_srcptr b, int sign, mpc_rnd_t rnd)
+/* if sign is >= 0, multiply by i, otherwise by -i */
+{
+  int   inex_re, inex_im;
+  mpfr_t tmp;
+
+  /* Treat the most probable case of compatible precisions first */
+  if (     MPC_PREC_RE (b) == MPC_PREC_IM (a)
+        && MPC_PREC_IM (b) == MPC_PREC_RE (a))
+  {
+     if (a == b)
+        mpfr_swap (MPC_RE (a), MPC_IM (a));
+     else
+     {
+        mpfr_set (MPC_RE (a), MPC_IM (b), GMP_RNDN);
+        mpfr_set (MPC_IM (a), MPC_RE (b), GMP_RNDN);
+     }
+     if (sign >= 0)
+        MPFR_CHANGE_SIGN (MPC_RE (a));
+     else
+        MPFR_CHANGE_SIGN (MPC_IM (a));
+     inex_re = 0;
+     inex_im = 0;
+  }
+  else
+  {
+     if (a == b)
+     {
+        mpfr_init2 (tmp, MPC_PREC_RE (a));
+        if (sign >= 0)
+        {
+           inex_re = mpfr_neg (tmp, MPC_IM (b), MPC_RND_RE (rnd));
+           inex_im = mpfr_set (MPC_IM (a), MPC_RE (b), MPC_RND_IM (rnd));
+        }
+        else
+        {
+           inex_re = mpfr_set (tmp, MPC_IM (b), MPC_RND_RE (rnd));
+           inex_im = mpfr_neg (MPC_IM (a), MPC_RE (b), MPC_RND_IM (rnd));
+        }
+        mpfr_clear (MPC_RE (a));
+        MPC_RE (a)[0] = tmp [0];
+     }
+     else
+        if (sign >= 0)
+        {
+           inex_re = mpfr_neg (MPC_RE (a), MPC_IM (b), MPC_RND_RE (rnd));
+           inex_im = mpfr_set (MPC_IM (a), MPC_RE (b), MPC_RND_IM (rnd));
+        }
+        else
+        {
+           inex_re = mpfr_set (MPC_RE (a), MPC_IM (b), MPC_RND_RE (rnd));
+           inex_im = mpfr_neg (MPC_IM (a), MPC_RE (b), MPC_RND_IM (rnd));
+        }
+  }
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/mul_si.c b/mpc/src/mul_si.c
new file mode 100644
index 0000000..b0ffbcb
--- /dev/null
+++ b/mpc/src/mul_si.c
@@ -0,0 +1,33 @@
+/* mpc_mul_si -- Multiply a complex number by a signed integer.
+
+Copyright (C) INRIA, 2005, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_mul_si (mpc_ptr a, mpc_srcptr b, long int c, mpc_rnd_t rnd)
+{
+   int inex_re, inex_im;
+
+   inex_re = mpfr_mul_si (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+   inex_im = mpfr_mul_si (MPC_IM(a), MPC_IM(b), c, MPC_RND_IM(rnd));
+
+   return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/mul_ui.c b/mpc/src/mul_ui.c
new file mode 100644
index 0000000..3967016
--- /dev/null
+++ b/mpc/src/mul_ui.c
@@ -0,0 +1,33 @@
+/* mpc_mul_ui -- Multiply a complex number by a nonnegative integer.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_mul_ui (mpc_ptr a, mpc_srcptr b, unsigned long int c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_mul_ui (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_mul_ui (MPC_IM(a), MPC_IM(b), c, MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/neg.c b/mpc/src/neg.c
new file mode 100644
index 0000000..beed31b
--- /dev/null
+++ b/mpc/src/neg.c
@@ -0,0 +1,33 @@
+/* mpc_neg -- Negate a complex number.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_neg (mpc_ptr a, mpc_srcptr b, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_neg (MPC_RE(a), MPC_RE(b), MPC_RND_RE(rnd));
+  inex_im = mpfr_neg (MPC_IM(a), MPC_IM(b), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/norm.c b/mpc/src/norm.c
new file mode 100644
index 0000000..d132793
--- /dev/null
+++ b/mpc/src/norm.c
@@ -0,0 +1,91 @@
+/* mpc_norm -- Square of the norm of a complex number.
+
+Copyright (C) INRIA, 2002, 2005, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* the rounding mode is mpfr_rnd_t here since we return an mpfr number */
+int
+mpc_norm (mpfr_ptr a, mpc_srcptr b, mpfr_rnd_t rnd)
+{
+  mpfr_t u, v;
+  mpfr_prec_t prec;
+  int inexact, overflow, underflow;
+
+  prec = mpfr_get_prec (a);
+
+  /* handling of special values; consistent with abs in that
+     norm = abs^2; so norm (+-inf, nan) = norm (nan, +-inf) = +inf */
+  if (   (mpfr_nan_p (MPC_RE (b)) || mpfr_nan_p (MPC_IM (b)))
+      || (mpfr_inf_p (MPC_RE (b)) || mpfr_inf_p (MPC_IM (b))))
+      return mpc_abs (a, b, rnd);
+
+  mpfr_init (u);
+  mpfr_init (v);
+
+  if (!mpfr_zero_p(MPC_RE(b)) && !mpfr_zero_p(MPC_IM(b)) &&
+      2 * SAFE_ABS (mpfr_exp_t,
+                    mpfr_get_exp (MPC_RE (b)) - mpfr_get_exp (MPC_IM (b)))
+      > (mpfr_exp_t)prec)
+    /* If real and imaginary part have very different magnitudes, then the */
+    /* generic code increases the precision too much. Instead, compute the */
+    /* squarings _exactly_.                                                */
+  {
+     mpfr_set_prec (u, 2 * MPC_PREC_RE (b));
+     mpfr_set_prec (v, 2 * MPC_PREC_IM (b));
+     mpfr_sqr (u, MPC_RE (b), GMP_RNDN);
+     mpfr_sqr (v, MPC_IM (b), GMP_RNDN);
+     inexact = mpfr_add (a, u, v, rnd);
+  }
+  else if (mpfr_zero_p(MPC_RE(b)) && mpfr_zero_p(MPC_IM(b)))
+    {
+      inexact = mpfr_set_ui (a, 0, rnd);
+    }
+  else
+  {
+    do
+      {
+        prec += mpc_ceil_log2 (prec) + 3;
+
+        mpfr_set_prec (u, prec);
+        mpfr_set_prec (v, prec);
+
+        inexact = mpfr_sqr (u, MPC_RE(b), GMP_RNDN);  /* err<=1/2ulp */
+        inexact |= mpfr_sqr (v, MPC_IM(b), GMP_RNDN); /* err<=1/2ulp*/
+        inexact |= mpfr_add (u, u, v, GMP_RNDN);      /* err <= 3/2 ulps */
+
+        overflow = mpfr_inf_p (u);
+        underflow = mpfr_zero_p (u);
+      }
+    while (!overflow && !underflow && inexact &&
+           mpfr_can_round (u, prec - 2, GMP_RNDN, rnd, mpfr_get_prec (a)) == 0);
+
+    inexact |= mpfr_set (a, u, rnd);
+
+    if (overflow)
+      inexact = 1;
+    if (underflow)
+      inexact = -1;
+  }
+  mpfr_clear (u);
+  mpfr_clear (v);
+
+  return inexact;
+}
diff --git a/mpc/src/out_str.c b/mpc/src/out_str.c
new file mode 100644
index 0000000..e8cba66
--- /dev/null
+++ b/mpc/src/out_str.c
@@ -0,0 +1,40 @@
+/* mpc_out_str -- Output a complex number on a given stream.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h> /* for FILE */
+#include <ctype.h>
+#include "mpc-impl.h"
+
+size_t
+mpc_out_str (FILE *stream, int base, size_t n, mpc_srcptr op, mpc_rnd_t rnd) {
+   size_t size = 3; /* for '(', ' ' and ')' */
+
+   if (stream == NULL)
+      stream = stdout; /* fprintf does not allow NULL as first argument */
+
+   fprintf (stream, "(");
+   size += mpfr_out_str (stream, base, n, MPC_RE(op), MPC_RND_RE(rnd));
+   fprintf (stream, " ");
+   size += mpfr_out_str (stream, base, n, MPC_IM(op), MPC_RND_RE(rnd));
+   fprintf (stream, ")");
+
+   return size;
+}
diff --git a/mpc/src/pow.c b/mpc/src/pow.c
new file mode 100644
index 0000000..a8951f4
--- /dev/null
+++ b/mpc/src/pow.c
@@ -0,0 +1,697 @@
+/* mpc_pow -- Raise a complex number to the power of another complex number.
+
+Copyright (C) INRIA, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h> /* for MPC_ASSERT */
+#include "mpc-impl.h"
+
+/* Return non-zero iff c+i*d is an exact square (a+i*b)^2,
+   with a, b both of the form m*2^e with m, e integers.
+   If so, returns in a+i*b the corresponding square root, with a >= 0.
+   The variables a, b must not overlap with c, d.
+
+   We have c = a^2 - b^2 and d = 2*a*b.
+
+   If one of a, b is exact, then both are (see algorithms.tex).
+
+   Case 1: a <> 0 and b <> 0.
+   Let a = m*2^e and b = n*2^f with m, e, n, f integers, m and n odd
+   (we will treat apart the case a = 0 or b = 0).
+   Then 2*a*b = m*n*2^(e+f+1), thus necessarily e+f >= -1.
+   Assume e < 0, then f >= 0, then a^2 - b^2 = m^2*2^(2e) - n^2*2^(2f) cannot
+   be an integer, since n^2*2^(2f) is an integer, and m^2*2^(2e) is not.
+   Similarly when f < 0 (and thus e >= 0).
+   Thus we have e, f >= 0, and a, b are both integers.
+   Let A = 2a^2, then eliminating b between c = a^2 - b^2 and d = 2*a*b
+   gives A^2 - 2c*A - d^2 = 0, which has solutions c +/- sqrt(c^2+d^2).
+   We thus need c^2+d^2 to be a square, and c + sqrt(c^2+d^2) --- the solution
+   we are interested in --- to be two times a square. Then b = d/(2a) is
+   necessarily an integer.
+
+   Case 2: a = 0. Then d is necessarily zero, thus it suffices to check
+   whether c = -b^2, i.e., if -c is a square.
+
+   Case 3: b = 0. Then d is necessarily zero, thus it suffices to check
+   whether c = a^2, i.e., if c is a square.
+*/
+static int
+mpc_perfect_square_p (mpz_t a, mpz_t b, mpz_t c, mpz_t d)
+{
+  if (mpz_cmp_ui (d, 0) == 0) /* case a = 0 or b = 0 */
+    {
+      /* necessarily c < 0 here, since we have already considered the case
+         where x is real non-negative and y is real */
+      MPC_ASSERT (mpz_cmp_ui (c, 0) < 0);
+      mpz_neg (b, c);
+      if (mpz_perfect_square_p (b)) /* case 2 above */
+        {
+          mpz_sqrt (b, b);
+          mpz_set_ui (a, 0);
+          return 1; /* c + i*d = (0 + i*b)^2 */
+        }
+    }
+  else /* both a and b are non-zero */
+    {
+      if (mpz_divisible_2exp_p (d, 1) == 0)
+        return 0; /* d must be even */
+      mpz_mul (a, c, c);
+      mpz_addmul (a, d, d); /* c^2 + d^2 */
+      if (mpz_perfect_square_p (a))
+        {
+          mpz_sqrt (a, a);
+          mpz_add (a, c, a); /* c + sqrt(c^2+d^2) */
+          if (mpz_divisible_2exp_p (a, 1))
+            {
+              mpz_tdiv_q_2exp (a, a, 1);
+              if (mpz_perfect_square_p (a))
+                {
+                  mpz_sqrt (a, a);
+                  mpz_tdiv_q_2exp (b, d, 1); /* d/2 */
+                  mpz_divexact (b, b, a); /* d/(2a) */
+                  return 1;
+                }
+            }
+        }
+    }
+  return 0; /* not a square */
+}
+
+/* If x^y is exactly representable (with maybe a larger precision than z),
+   round it in z and return the (mpc) inexact flag in [0, 10].
+
+   If x^y is not exactly representable, return -1.
+
+   If intermediate computations lead to numbers of more than maxprec bits,
+   then abort and return -2 (in that case, to avoid loops, mpc_pow_exact
+   should be called again with a larger value of maxprec).
+
+   Assume one of Re(x) or Im(x) is non-zero, and y is non-zero (y is real).
+*/
+static int
+mpc_pow_exact (mpc_ptr z, mpc_srcptr x, mpfr_srcptr y, mpc_rnd_t rnd,
+               mpfr_prec_t maxprec)
+{
+  mpfr_exp_t ec, ed, ey;
+  mpz_t my, a, b, c, d, u;
+  unsigned long int t;
+  int ret = -2;
+
+  mpz_init (my);
+  mpz_init (a);
+  mpz_init (b);
+  mpz_init (c);
+  mpz_init (d);
+  mpz_init (u);
+
+  ey = mpfr_get_z_exp (my, y);
+  /* normalize so that my is odd */
+  t = mpz_scan1 (my, 0);
+  ey += (mpfr_exp_t) t;
+  mpz_tdiv_q_2exp (my, my, t);
+
+  if (mpfr_zero_p (MPC_RE(x)))
+    {
+      mpz_set_ui (c, 0);
+      ec = 0;
+    }
+  else
+    ec = mpfr_get_z_exp (c, MPC_RE(x));
+  if (mpfr_zero_p (MPC_IM(x)))
+    {
+      mpz_set_ui (d, 0);
+      ed = ec;
+    }
+  else
+    {
+      ed = mpfr_get_z_exp (d, MPC_IM(x));
+      if (mpfr_zero_p (MPC_RE(x)))
+        ec = ed;
+    }
+  /* x = c*2^ec + I * d*2^ed */
+  /* equalize the exponents of x */
+  if (ec < ed)
+    {
+      mpz_mul_2exp (d, d, (unsigned long int) (ed - ec));
+      if ((mpfr_prec_t) mpz_sizeinbase (d, 2) > maxprec)
+        goto end;
+      ed = ec;
+    }
+  else if (ed < ec)
+    {
+      mpz_mul_2exp (c, c, (unsigned long int) (ec - ed));
+      if ((mpfr_prec_t) mpz_sizeinbase (c, 2) > maxprec)
+        goto end;
+      ec = ed;
+    }
+  /* now ec=ed and x = (c + I * d) * 2^ec */
+
+  /* divide by two if possible */
+  if (mpz_cmp_ui (c, 0) == 0)
+    {
+      t = mpz_scan1 (d, 0);
+      mpz_tdiv_q_2exp (d, d, t);
+      ec += (mpfr_exp_t) t;
+    }
+  else if (mpz_cmp_ui (d, 0) == 0)
+    {
+      t = mpz_scan1 (c, 0);
+      mpz_tdiv_q_2exp (c, c, t);
+      ec += (mpfr_exp_t) t;
+    }
+  else /* neither c nor d is zero */
+    {
+      unsigned long v;
+      t = mpz_scan1 (c, 0);
+      v = mpz_scan1 (d, 0);
+      if (v < t)
+        t = v;
+      mpz_tdiv_q_2exp (c, c, t);
+      mpz_tdiv_q_2exp (d, d, t);
+      ec += (mpfr_exp_t) t;
+    }
+
+  /* now either one of c, d is odd */
+
+  while (ey < 0)
+    {
+      /* check if x is a square */
+      if (ec & 1)
+        {
+          mpz_mul_2exp (c, c, 1);
+          mpz_mul_2exp (d, d, 1);
+          ec --;
+        }
+      /* now ec is even */
+      if (mpc_perfect_square_p (a, b, c, d) == 0)
+        break;
+      mpz_swap (a, c);
+      mpz_swap (b, d);
+      ec /= 2;
+      ey ++;
+    }
+
+  if (ey < 0)
+    {
+      ret = -1; /* not representable */
+      goto end;
+    }
+
+  /* Now ey >= 0, it thus suffices to check that x^my is representable.
+     If my > 0, this is always true. If my < 0, we first try to invert
+     (c+I*d)*2^ec.
+  */
+  if (mpz_cmp_ui (my, 0) < 0)
+    {
+      /* If my < 0, 1 / (c + I*d) = (c - I*d)/(c^2 + d^2), thus a sufficient
+         condition is that c^2 + d^2 is a power of two, assuming |c| <> |d|.
+         Assume a prime p <> 2 divides c^2 + d^2,
+         then if p does not divide c or d, 1 / (c + I*d) cannot be exact.
+         If p divides both c and d, then we can write c = p*c', d = p*d',
+         and 1 / (c + I*d) = 1/p * 1/(c' + I*d'). This shows that if 1/(c+I*d)
+         is exact, then 1/(c' + I*d') is exact too, and we are back to the
+         previous case. In conclusion, a necessary and sufficient condition
+         is that c^2 + d^2 is a power of two.
+      */
+      /* FIXME: we could first compute c^2+d^2 mod a limb for example */
+      mpz_mul (a, c, c);
+      mpz_addmul (a, d, d);
+      t = mpz_scan1 (a, 0);
+      if (mpz_sizeinbase (a, 2) != 1 + t) /* a is not a power of two */
+        {
+          ret = -1; /* not representable */
+          goto end;
+        }
+      /* replace (c,d) by (c/(c^2+d^2), -d/(c^2+d^2)) */
+      mpz_neg (d, d);
+      ec = -ec - (mpfr_exp_t) t;
+      mpz_neg (my, my);
+    }
+
+  /* now ey >= 0 and my >= 0, and we want to compute
+     [(c + I * d) * 2^ec] ^ (my * 2^ey).
+
+     We first compute [(c + I * d) * 2^ec]^my, then square ey times. */
+  t = mpz_sizeinbase (my, 2) - 1;
+  mpz_set (a, c);
+  mpz_set (b, d);
+  ed = ec;
+  /* invariant: (a + I*b) * 2^ed = ((c + I*d) * 2^ec)^trunc(my/2^t) */
+  while (t-- > 0)
+    {
+      unsigned long int v, w;
+      /* square a + I*b */
+      mpz_mul (u, a, b);
+      mpz_mul (a, a, a);
+      mpz_submul (a, b, b);
+      mpz_mul_2exp (b, u, 1);
+      ed *= 2;
+      if (mpz_tstbit (my, t)) /* multiply by c + I*d */
+        {
+          mpz_mul (u, a, c);
+          mpz_submul (u, b, d); /* ac-bd */
+          mpz_mul (b, b, c);
+          mpz_addmul (b, a, d); /* bc+ad */
+          mpz_swap (a, u);
+          ed += ec;
+        }
+      /* remove powers of two in (a,b) */
+      if (mpz_cmp_ui (a, 0) == 0)
+        {
+          w = mpz_scan1 (b, 0);
+          mpz_tdiv_q_2exp (b, b, w);
+          ed += (mpfr_exp_t) w;
+        }
+      else if (mpz_cmp_ui (b, 0) == 0)
+        {
+          w = mpz_scan1 (a, 0);
+          mpz_tdiv_q_2exp (a, a, w);
+          ed += (mpfr_exp_t) w;
+        }
+      else
+        {
+          w = mpz_scan1 (a, 0);
+          v = mpz_scan1 (b, 0);
+          if (v < w)
+            w = v;
+          mpz_tdiv_q_2exp (a, a, w);
+          mpz_tdiv_q_2exp (b, b, w);
+          ed += (mpfr_exp_t) w;
+        }
+      if (   (mpfr_prec_t) mpz_sizeinbase (a, 2) > maxprec
+          || (mpfr_prec_t) mpz_sizeinbase (b, 2) > maxprec)
+        goto end;
+    }
+  /* now a+I*b = (c+I*d)^my */
+
+  while (ey-- > 0)
+    {
+      unsigned long sa, sb;
+
+      /* square a + I*b */
+      mpz_mul (u, a, b);
+      mpz_mul (a, a, a);
+      mpz_submul (a, b, b);
+      mpz_mul_2exp (b, u, 1);
+      ed *= 2;
+
+      /* divide by largest 2^n possible, to avoid many loops for e.g.,
+         (2+2*I)^16777216 */
+      sa = mpz_scan1 (a, 0);
+      sb = mpz_scan1 (b, 0);
+      sa = (sa <= sb) ? sa : sb;
+      mpz_tdiv_q_2exp (a, a, sa);
+      mpz_tdiv_q_2exp (b, b, sa);
+      ed += (mpfr_exp_t) sa;
+
+      if (   (mpfr_prec_t) mpz_sizeinbase (a, 2) > maxprec
+          || (mpfr_prec_t) mpz_sizeinbase (b, 2) > maxprec)
+        goto end;
+    }
+
+  ret = mpfr_set_z (MPC_RE(z), a, MPC_RND_RE(rnd));
+  ret = MPC_INEX(ret, mpfr_set_z (MPC_IM(z), b, MPC_RND_IM(rnd)));
+  mpfr_mul_2si (MPC_RE(z), MPC_RE(z), ed, MPC_RND_RE(rnd));
+  mpfr_mul_2si (MPC_IM(z), MPC_IM(z), ed, MPC_RND_IM(rnd));
+
+ end:
+  mpz_clear (my);
+  mpz_clear (a);
+  mpz_clear (b);
+  mpz_clear (c);
+  mpz_clear (d);
+  mpz_clear (u);
+
+  return ret;
+}
+
+/* Return 1 if y*2^k is an odd integer, 0 otherwise.
+   Adapted from MPFR, file pow.c.
+
+   Examples: with k=0, check if y is an odd integer,
+             with k=1, check if y is half-an-integer,
+             with k=-1, check if y/2 is an odd integer.
+*/
+#define MPFR_LIMB_HIGHBIT ((mp_limb_t) 1 << (BITS_PER_MP_LIMB - 1))
+static int
+is_odd (mpfr_srcptr y, mpfr_exp_t k)
+{
+  mpfr_exp_t expo;
+  mpfr_prec_t prec;
+  mp_size_t yn;
+  mp_limb_t *yp;
+
+  expo = mpfr_get_exp (y) + k;
+  if (expo <= 0)
+    return 0;  /* |y| < 1 and not 0 */
+
+  prec = mpfr_get_prec (y);
+  if ((mpfr_prec_t) expo > prec)
+    return 0;  /* y is a multiple of 2^(expo-prec), thus not odd */
+
+  /* 0 < expo <= prec:
+     y = 1xxxxxxxxxt.zzzzzzzzzzzzzzzzzz[000]
+          expo bits   (prec-expo) bits
+
+     We have to check that:
+     (a) the bit 't' is set
+     (b) all the 'z' bits are zero
+  */
+
+  prec = ((prec - 1) / BITS_PER_MP_LIMB + 1) * BITS_PER_MP_LIMB - expo;
+  /* number of z+0 bits */
+
+  yn = prec / BITS_PER_MP_LIMB;
+  /* yn is the index of limb containing the 't' bit */
+
+  yp = y->_mpfr_d;
+  /* if expo is a multiple of BITS_PER_MP_LIMB, t is bit 0 */
+  if (expo % BITS_PER_MP_LIMB == 0 ? (yp[yn] & 1) == 0
+      : yp[yn] << ((expo % BITS_PER_MP_LIMB) - 1) != MPFR_LIMB_HIGHBIT)
+    return 0;
+  while (--yn >= 0)
+    if (yp[yn] != 0)
+      return 0;
+  return 1;
+}
+
+/* Put in z the value of x^y, rounded according to 'rnd'.
+   Return the inexact flag in [0, 10]. */
+int
+mpc_pow (mpc_ptr z, mpc_srcptr x, mpc_srcptr y, mpc_rnd_t rnd)
+{
+  int ret = -2, loop, x_real, y_real, z_real = 0, z_imag = 0;
+  mpc_t t, u;
+  mpfr_prec_t p, pr, pi, maxprec;
+
+  x_real = mpfr_zero_p (MPC_IM(x));
+  y_real = mpfr_zero_p (MPC_IM(y));
+
+  if (y_real && mpfr_zero_p (MPC_RE(y))) /* case y zero */
+    {
+      if (x_real && mpfr_zero_p (MPC_RE(x))) /* 0^0 = NaN +i*NaN */
+        {
+          mpfr_set_nan (MPC_RE(z));
+          mpfr_set_nan (MPC_IM(z));
+          return 0;
+        }
+      else /* x^0 = 1 +/- i*0 even for x=NaN see algorithms.tex for the
+              sign of zero */
+        {
+          mpfr_t n;
+          int inex, cx1;
+          int sign_zi;
+          /* cx1 < 0 if |x| < 1
+             cx1 = 0 if |x| = 1
+             cx1 > 0 if |x| > 1
+          */
+          mpfr_init (n);
+          inex = mpc_norm (n, x, GMP_RNDN);
+          cx1 = mpfr_cmp_ui (n, 1);
+          if (cx1 == 0 && inex != 0)
+            cx1 = -inex;
+
+          sign_zi = (cx1 < 0 && mpfr_signbit (MPC_IM (y)) == 0)
+            || (cx1 == 0
+                && mpfr_signbit (MPC_IM (x)) != mpfr_signbit (MPC_RE (y)))
+            || (cx1 > 0 && mpfr_signbit (MPC_IM (y)));
+
+          /* warning: mpc_set_ui_ui does not set Im(z) to -0 if Im(rnd)=RNDD */
+          ret = mpc_set_ui_ui (z, 1, 0, rnd);
+
+          if (MPC_RND_IM (rnd) == GMP_RNDD || sign_zi)
+            mpc_conj (z, z, MPC_RNDNN);
+
+          mpfr_clear (n);
+          return ret;
+        }
+    }
+
+  if (!mpc_fin_p (x) || !mpc_fin_p (y))
+    {
+      /* special values: exp(y*log(x)) */
+      mpc_init2 (u, 2);
+      mpc_log (u, x, MPC_RNDNN);
+      mpc_mul (u, u, y, MPC_RNDNN);
+      ret = mpc_exp (z, u, rnd);
+      mpc_clear (u);
+      goto end;
+    }
+
+  if (x_real) /* case x real */
+    {
+      if (mpfr_zero_p (MPC_RE(x))) /* x is zero */
+        {
+          /* special values: exp(y*log(x)) */
+          mpc_init2 (u, 2);
+          mpc_log (u, x, MPC_RNDNN);
+          mpc_mul (u, u, y, MPC_RNDNN);
+          ret = mpc_exp (z, u, rnd);
+          mpc_clear (u);
+          goto end;
+        }
+
+      /* Special case 1^y = 1 */
+      if (mpfr_cmp_ui (MPC_RE(x), 1) == 0)
+        {
+          int s1, s2;
+          s1 = mpfr_signbit (MPC_RE (y));
+          s2 = mpfr_signbit (MPC_IM (x));
+
+          ret = mpc_set_ui (z, +1, rnd);
+          /* the sign of the zero imaginary part is known in some cases (see
+             algorithm.tex). In such cases we have
+             (x +s*0i)^(y+/-0i) = x^y + s*sign(y)*0i
+             where s = +/-1.  We extend here this rule to fix the sign of the
+             zero part.
+
+             Note that the sign must also be set explicitly when rnd=RNDD
+             because mpfr_set_ui(z_i, 0, rnd) always sets z_i to +0.
+          */
+          if (MPC_RND_IM (rnd) == GMP_RNDD || s1 != s2)
+            mpc_conj (z, z, MPC_RNDNN);
+          goto end;
+        }
+
+      /* x^y is real when:
+         (a) x is real and y is integer
+         (b) x is real non-negative and y is real */
+      if (y_real && (mpfr_integer_p (MPC_RE(y)) ||
+                     mpfr_cmp_ui (MPC_RE(x), 0) >= 0))
+        {
+          int s1, s2;
+          s1 = mpfr_signbit (MPC_RE (y));
+          s2 = mpfr_signbit (MPC_IM (x));
+
+          ret = mpfr_pow (MPC_RE(z), MPC_RE(x), MPC_RE(y), MPC_RND_RE(rnd));
+          ret = MPC_INEX(ret, mpfr_set_ui (MPC_IM(z), 0, MPC_RND_IM(rnd)));
+
+          /* the sign of the zero imaginary part is known in some cases
+             (see algorithm.tex). In such cases we have (x +s*0i)^(y+/-0i)
+             = x^y + s*sign(y)*0i where s = +/-1.
+             We extend here this rule to fix the sign of the zero part.
+
+             Note that the sign must also be set explicitly when rnd=RNDD
+             because mpfr_set_ui(z_i, 0, rnd) always sets z_i to +0.
+          */
+          if (MPC_RND_IM(rnd) == GMP_RNDD || s1 != s2)
+            mpfr_neg (MPC_IM(z), MPC_IM(z), MPC_RND_IM(rnd));
+          goto end;
+        }
+
+      /* (-1)^(n+I*t) is real for n integer and t real */
+      if (mpfr_cmp_si (MPC_RE(x), -1) == 0 && mpfr_integer_p (MPC_RE(y)))
+        z_real = 1;
+
+      /* for x real, x^y is imaginary when:
+         (a) x is negative and y is half-an-integer
+         (b) x = -1 and Re(y) is half-an-integer
+      */
+      if (mpfr_cmp_ui (MPC_RE(x), 0) < 0 && is_odd (MPC_RE(y), 1) &&
+          (y_real || mpfr_cmp_si (MPC_RE(x), -1) == 0))
+        z_imag = 1;
+    }
+  else /* x non real */
+    /* I^(t*I) and (-I)^(t*I) are real for t real,
+       I^(n+t*I) and (-I)^(n+t*I) are real for n even and t real, and
+       I^(n+t*I) and (-I)^(n+t*I) are imaginary for n odd and t real
+       (s*I)^n is real for n even and imaginary for n odd */
+    if ((mpc_cmp_si_si (x, 0, 1) == 0 || mpc_cmp_si_si (x, 0, -1) == 0 ||
+         (mpfr_cmp_ui (MPC_RE(x), 0) == 0 && y_real)) &&
+        mpfr_integer_p (MPC_RE(y)))
+      { /* x is I or -I, and Re(y) is an integer */
+        if (is_odd (MPC_RE(y), 0))
+          z_imag = 1; /* Re(y) odd: z is imaginary */
+        else
+          z_real = 1; /* Re(y) even: z is real */
+      }
+    else /* (t+/-t*I)^(2n) is imaginary for n odd and real for n even */
+      if (mpfr_cmpabs (MPC_RE(x), MPC_IM(x)) == 0 && y_real &&
+          mpfr_integer_p (MPC_RE(y)) && is_odd (MPC_RE(y), 0) == 0)
+        {
+          if (is_odd (MPC_RE(y), -1)) /* y/2 is odd */
+            z_imag = 1;
+          else
+            z_real = 1;
+        }
+
+  pr = mpfr_get_prec (MPC_RE(z));
+  pi = mpfr_get_prec (MPC_IM(z));
+  p = (pr > pi) ? pr : pi;
+  p += 12; /* experimentally, seems to give less than 10% of failures in
+              Ziv's strategy; probably wrong now since q is not computed      */
+  if (p < 64)
+    p = 64;
+  mpc_init2 (u, p);
+  mpc_init2 (t, p);
+  pr += MPC_RND_RE(rnd) == GMP_RNDN;
+  pi += MPC_RND_IM(rnd) == GMP_RNDN;
+  maxprec = MPC_MAX_PREC (z);
+  for (loop = 0;; loop++)
+    {
+      int ret_exp;
+      mpfr_exp_t dr, di;
+      mpfr_prec_t q=0;
+         /* to avoid warning message, real initialisation below */
+
+      mpc_log (t, x, MPC_RNDNN);
+      mpc_mul (t, t, y, MPC_RNDNN);
+
+      if (loop == 0) {
+         /* compute q such that |Re (y log x)|, |Im (y log x)| < 2^q */
+         q = mpfr_get_exp (MPC_RE(t)) > 0 ? mpfr_get_exp (MPC_RE(t)) : 0;
+         if (mpfr_get_exp (MPC_IM(t)) > (mpfr_exp_t) q)
+            q = mpfr_get_exp (MPC_IM(t));
+      }
+
+      mpfr_clear_overflow ();
+      mpfr_clear_underflow ();
+      ret_exp = mpc_exp (u, t, MPC_RNDNN);
+      if (mpfr_underflow_p () || mpfr_overflow_p ()) {
+         /* under- and overflow flags are set by mpc_exp */
+         mpc_set (z, u, MPC_RNDNN);
+         ret = ret_exp;
+         goto clear_t_and_u;
+      }
+
+      /* Since the error bound is global, we have to take into account the
+         exponent difference between the real and imaginary parts. We assume
+         either the real or the imaginary part of u is not zero.
+      */
+      dr = mpfr_zero_p (MPC_RE(u)) ? mpfr_get_exp (MPC_IM(u))
+        : mpfr_get_exp (MPC_RE(u));
+      di = mpfr_zero_p (MPC_IM(u)) ? dr : mpfr_get_exp (MPC_IM(u));
+      if (dr > di)
+        {
+          di = dr - di;
+          dr = 0;
+        }
+      else
+        {
+          dr = di - dr;
+          di = 0;
+        }
+      /* the term -3 takes into account the factor 4 in the complex error
+         (see algorithms.tex) plus one due to the exponent difference: if
+         z = a + I*b, where the relative error on z is at most 2^(-p), and
+         EXP(a) = EXP(b) + k, the relative error on b is at most 2^(k-p) */
+      if ((z_imag || mpfr_can_round (MPC_RE(u), p - q - 3 - dr, GMP_RNDN, GMP_RNDZ, pr)) &&
+          (z_real || mpfr_can_round (MPC_IM(u), p - q - 3 - di, GMP_RNDN, GMP_RNDZ, pi)))
+        break;
+
+      /* if Re(u) is not known to be zero, assume it is a normal number, i.e.,
+         neither zero, Inf or NaN, otherwise we might enter an infinite loop */
+      MPC_ASSERT (z_imag || mpfr_number_p (MPC_RE(u)));
+      /* idem for Im(u) */
+      MPC_ASSERT (z_real || mpfr_number_p (MPC_IM(u)));
+
+      if (ret == -2) /* we did not yet call mpc_pow_exact, or it aborted
+                        because intermediate computations had > maxprec bits */
+        {
+          /* check exact cases (see algorithms.tex) */
+          if (y_real)
+            {
+              maxprec *= 2;
+              ret = mpc_pow_exact (z, x, MPC_RE(y), rnd, maxprec);
+              if (ret != -1 && ret != -2)
+                goto exact;
+            }
+          p += dr + di + 64;
+        }
+      else
+        p += p / 2;
+      mpc_set_prec (t, p);
+      mpc_set_prec (u, p);
+    }
+
+  if (z_real)
+    {
+      /* When the result is real (see algorithm.tex for details),
+         Im(x^y) =
+         + sign(imag(y))*0i,               if |x| > 1
+         + sign(imag(x))*sign(real(y))*0i, if |x| = 1
+         - sign(imag(y))*0i,               if |x| < 1
+      */
+      mpfr_t n;
+      int inex, cx1;
+      int sign_zi;
+      /* cx1 < 0 if |x| < 1
+         cx1 = 0 if |x| = 1
+         cx1 > 0 if |x| > 1
+      */
+      mpfr_init (n);
+      inex = mpc_norm (n, x, GMP_RNDN);
+      cx1 = mpfr_cmp_ui (n, 1);
+      if (cx1 == 0 && inex != 0)
+        cx1 = -inex;
+
+      sign_zi = (cx1 < 0 && mpfr_signbit (MPC_IM (y)) == 0)
+        || (cx1 == 0
+            && mpfr_signbit (MPC_IM (x)) != mpfr_signbit (MPC_RE (y)))
+        || (cx1 > 0 && mpfr_signbit (MPC_IM (y)));
+
+      ret = mpfr_set (MPC_RE(z), MPC_RE(u), MPC_RND_RE(rnd));
+      /* warning: mpfr_set_ui does not set Im(z) to -0 if Im(rnd) = RNDD */
+      ret = MPC_INEX (ret, mpfr_set_ui (MPC_IM (z), 0, MPC_RND_IM (rnd)));
+
+      if (MPC_RND_IM (rnd) == GMP_RNDD || sign_zi)
+        mpc_conj (z, z, MPC_RNDNN);
+
+      mpfr_clear (n);
+    }
+  else if (z_imag)
+    {
+      ret = mpfr_set (MPC_IM(z), MPC_IM(u), MPC_RND_IM(rnd));
+      ret = MPC_INEX(mpfr_set_ui (MPC_RE(z), 0, MPC_RND_RE(rnd)), ret);
+    }
+  else
+    ret = mpc_set (z, u, rnd);
+ exact:
+  mpc_clear (t);
+  mpc_clear (u);
+
+ end:
+  return ret;
+
+
+clear_t_and_u:
+  mpc_clear (t);
+  mpc_clear (u);
+  return ret;
+}
diff --git a/mpc/src/pow_d.c b/mpc/src/pow_d.c
new file mode 100644
index 0000000..b02cd44
--- /dev/null
+++ b/mpc/src/pow_d.c
@@ -0,0 +1,39 @@
+/* mpc_pow_d -- Raise a complex number to a double-precision power.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h>    /* for MPC_ASSERT */
+#include <float.h>    /* for DBL_MANT_DIG */
+#include "mpc-impl.h"
+
+int
+mpc_pow_d (mpc_ptr z, mpc_srcptr x, double y, mpc_rnd_t rnd)
+{
+  mpc_t yy;
+  int inex;
+  
+  MPC_ASSERT(FLT_RADIX == 2);
+  mpc_init3 (yy, DBL_MANT_DIG, MPFR_PREC_MIN);
+  mpc_set_d (yy, y, MPC_RNDNN);   /* exact */
+  inex = mpc_pow (z, x, yy, rnd);
+  mpc_clear (yy);
+  return inex;
+}
+
diff --git a/mpc/src/pow_fr.c b/mpc/src/pow_fr.c
new file mode 100644
index 0000000..130c526
--- /dev/null
+++ b/mpc/src/pow_fr.c
@@ -0,0 +1,38 @@
+/* mpc_pow_fr -- Raise a complex number to a floating-point power.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_pow_fr (mpc_ptr z, mpc_srcptr x, mpfr_srcptr y, mpc_rnd_t rnd)
+{
+  mpc_t yy;
+  int inex;
+
+  /* avoid copying the significand of y by copying only the struct */
+  MPC_RE(yy)[0] = y[0];
+  mpfr_init2 (MPC_IM(yy), MPFR_PREC_MIN);
+  mpfr_set_ui (MPC_IM(yy), 0, GMP_RNDN);
+  inex = mpc_pow (z, x, yy, rnd);
+  mpfr_clear (MPC_IM(yy));
+  return inex;
+}
+
diff --git a/mpc/src/pow_ld.c b/mpc/src/pow_ld.c
new file mode 100644
index 0000000..6152b37
--- /dev/null
+++ b/mpc/src/pow_ld.c
@@ -0,0 +1,39 @@
+/* mpc_pow_ld -- Raise a complex number to a long double power.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h>    /* for MPC_ASSERT */
+#include <float.h>    /* for LDBL_MANT_DIG */
+#include "mpc-impl.h"
+
+int
+mpc_pow_ld (mpc_ptr z, mpc_srcptr x, long double y, mpc_rnd_t rnd)
+{
+  mpc_t yy;
+  int inex;
+
+  MPC_ASSERT(FLT_RADIX == 2);
+  mpc_init3 (yy, LDBL_MANT_DIG, MPFR_PREC_MIN);
+  mpc_set_ld (yy, y, MPC_RNDNN);   /* exact */
+  inex = mpc_pow (z, x, yy, rnd);
+  mpc_clear (yy);
+  return inex;
+}
+
diff --git a/mpc/src/pow_si.c b/mpc/src/pow_si.c
new file mode 100644
index 0000000..b6ad45c
--- /dev/null
+++ b/mpc/src/pow_si.c
@@ -0,0 +1,31 @@
+/* mpc_pow_si -- Raise a complex number to an integer power.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_pow_si (mpc_ptr z, mpc_srcptr x, long y, mpc_rnd_t rnd)
+{
+   if (y >= 0)
+     return mpc_pow_usi (z, x, (unsigned long) y, 1, rnd);
+   else
+     return mpc_pow_usi (z, x, (unsigned long) (-y), -1, rnd);
+}
diff --git a/mpc/src/pow_ui.c b/mpc/src/pow_ui.c
new file mode 100644
index 0000000..617681c
--- /dev/null
+++ b/mpc/src/pow_ui.c
@@ -0,0 +1,170 @@
+/* mpc_pow_ui -- Raise a complex number to an integer power.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <limits.h> /* for CHAR_BIT */
+#include "mpc-impl.h"
+
+static int
+mpc_pow_usi_naive (mpc_ptr z, mpc_srcptr x, unsigned long y, int sign,
+   mpc_rnd_t rnd)
+{
+   int inex;
+   mpc_t t;
+
+   mpc_init3 (t, sizeof (unsigned long) * CHAR_BIT, MPFR_PREC_MIN);
+   if (sign > 0)
+      mpc_set_ui (t, y, MPC_RNDNN); /* exact */
+   else
+      mpc_set_si (t, - (signed long) y, MPC_RNDNN);
+   inex = mpc_pow (z, x, t, rnd);
+   mpc_clear (t);
+
+   return inex;
+}
+
+
+int
+mpc_pow_usi (mpc_ptr z, mpc_srcptr x, unsigned long y, int sign,
+   mpc_rnd_t rnd)
+   /* computes z = x^(sign*y) */
+{
+   int inex;
+   mpc_t t, x3;
+   mpfr_prec_t p, l, l0;
+   long unsigned int u;
+   int has3; /* non-zero if y has '11' in its binary representation */
+   int loop, done;
+
+   /* let mpc_pow deal with special values */
+   if (!mpc_fin_p (x) || mpfr_zero_p (MPC_RE (x)) || mpfr_zero_p (MPC_IM(x))
+       || y == 0)
+      return mpc_pow_usi_naive (z, x, y, sign, rnd);
+   /* easy special cases */
+   else if (y == 1) {
+      if (sign > 0)
+         return mpc_set (z, x, rnd);
+      else
+         return mpc_ui_div (z, 1ul, x, rnd);
+   }
+   else if (y == 2 && sign > 0)
+      return mpc_sqr (z, x, rnd);
+   /* let mpc_pow treat potential over- and underflows */
+   else {
+      mpfr_exp_t exp_r = mpfr_get_exp (MPC_RE (x)),
+                 exp_i = mpfr_get_exp (MPC_IM (x));
+      if (   MPC_MAX (exp_r, exp_i) > mpfr_get_emax () / (mpfr_exp_t) y
+             /* heuristic for overflow */
+          || MPC_MAX (-exp_r, -exp_i) > (-mpfr_get_emin ()) / (mpfr_exp_t) y
+             /* heuristic for underflow */
+         )
+         return mpc_pow_usi_naive (z, x, y, sign, rnd);
+   }
+
+   has3 = (y & (y >> 1)) != 0;
+   for (l = 0, u = y; u > 3; l ++, u >>= 1);
+   /* l>0 is the number of bits of y, minus 2, thus y has bits:
+      y_{l+1} y_l y_{l-1} ... y_1 y_0 */
+   l0 = l + 2;
+   p = MPC_MAX_PREC(z) + l0 + 32; /* l0 ensures that y*2^{-p} <= 1 below */
+   mpc_init2 (t, p);
+   if (has3)
+      mpc_init2 (x3, p);
+
+   loop = 0;
+   done = 0;
+   while (!done) {
+      loop++;
+
+      mpc_sqr (t, x, MPC_RNDNN);
+      if (has3) {
+         mpc_mul (x3, t, x, MPC_RNDNN);
+         if ((y >> l) & 1) /* y starts with 11... */
+            mpc_set (t, x3, MPC_RNDNN);
+      }
+      while (l-- > 0) {
+         mpc_sqr (t, t, MPC_RNDNN);
+         if ((y >> l) & 1) {
+            if ((l > 0) && ((y >> (l-1)) & 1)) /* implies has3 <> 0 */ {
+               l--;
+               mpc_sqr (t, t, MPC_RNDNN);
+               mpc_mul (t, t, x3, MPC_RNDNN);
+            }
+            else
+               mpc_mul (t, t, x, MPC_RNDNN);
+         }
+      }
+      if (sign < 0)
+         mpc_ui_div (t, 1ul, t, MPC_RNDNN);
+
+      if (mpfr_zero_p (MPC_RE(t)) || mpfr_zero_p (MPC_IM(t))) {
+         inex = mpc_pow_usi_naive (z, x, y, sign, rnd);
+            /* since mpfr_get_exp() is not defined for zero */
+         done = 1;
+      }
+      else {
+         /* see error bound in algorithms.tex; we use y<2^l0 instead of y-1
+            also when sign>0                                                */
+         mpfr_exp_t diff;
+         mpfr_prec_t er, ei;
+
+         diff = mpfr_get_exp (MPC_RE(t)) - mpfr_get_exp (MPC_IM(t));
+         /* the factor on the real part is 2+2^(-diff+2) <= 4 for diff >= 1
+            and < 2^(-diff+3) for diff <= 0 */
+         er = (diff >= 1) ? l0 + 3 : l0 + (-diff) + 3;
+         /* the factor on the imaginary part is 2+2^(diff+2) <= 4 for diff <= -1
+            and < 2^(diff+3) for diff >= 0 */
+         ei = (diff <= -1) ? l0 + 3 : l0 + diff + 3;
+         if (mpfr_can_round (MPC_RE(t), p - er, GMP_RNDZ, GMP_RNDZ,
+                              MPC_PREC_RE(z) + (MPC_RND_RE(rnd) == GMP_RNDN))
+               && mpfr_can_round (MPC_IM(t), p - ei, GMP_RNDZ, GMP_RNDZ,
+                              MPC_PREC_IM(z) + (MPC_RND_IM(rnd) == GMP_RNDN))) {
+            inex = mpc_set (z, t, rnd);
+            done = 1;
+         }
+         else if (loop == 1 && SAFE_ABS(mpfr_prec_t, diff) < MPC_MAX_PREC(z)) {
+            /* common case, make a second trial at higher precision */
+            p += MPC_MAX_PREC(x);
+            mpc_set_prec (t, p);
+            if (has3)
+               mpc_set_prec (x3, p);
+            l = l0 - 2;
+         }
+         else {
+            /* stop the loop and use mpc_pow */
+            inex = mpc_pow_usi_naive (z, x, y, sign, rnd);
+            done = 1;
+         }
+      }
+   }
+
+   mpc_clear (t);
+   if (has3)
+      mpc_clear (x3);
+
+   return inex;
+}
+
+
+int
+mpc_pow_ui (mpc_ptr z, mpc_srcptr x, unsigned long y, mpc_rnd_t rnd)
+{
+  return mpc_pow_usi (z, x, y, 1, rnd);
+}
diff --git a/mpc/src/pow_z.c b/mpc/src/pow_z.c
new file mode 100644
index 0000000..9b0eb39
--- /dev/null
+++ b/mpc/src/pow_z.c
@@ -0,0 +1,48 @@
+/* mpc_pow_z -- Raise a complex number to an integer power.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_pow_z (mpc_ptr z, mpc_srcptr x, mpz_srcptr y, mpc_rnd_t rnd)
+{
+   mpc_t yy;
+   int inex;
+   mpfr_prec_t n = (mpfr_prec_t) mpz_sizeinbase (y, 2);
+
+   /* if y fits in an unsigned long or long, call the corresponding functions,
+      which are supposed to be more efficient */
+   if (mpz_cmp_ui (y, 0ul) >= 0) {
+      if (mpz_fits_ulong_p (y))
+         return mpc_pow_usi (z, x, mpz_get_ui (y), 1, rnd);
+   }
+   else {
+      if (mpz_fits_slong_p (y))
+         return mpc_pow_usi (z, x, (unsigned long) (-mpz_get_si (y)), -1, rnd);
+   }
+
+   mpc_init3 (yy, (n < MPFR_PREC_MIN) ? MPFR_PREC_MIN : n, MPFR_PREC_MIN);
+   mpc_set_z (yy, y, MPC_RNDNN);   /* exact */
+   inex = mpc_pow (z, x, yy, rnd);
+   mpc_clear (yy);
+   return inex;
+}
+
diff --git a/mpc/src/proj.c b/mpc/src/proj.c
new file mode 100644
index 0000000..b9d7940
--- /dev/null
+++ b/mpc/src/proj.c
@@ -0,0 +1,44 @@
+/* mpc_proj -- projection of a complex number onto the Riemann sphere.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_proj (mpc_ptr a, mpc_srcptr b, mpc_rnd_t rnd)
+{
+  if (mpc_inf_p (b))
+    {
+      /* infinities projects to +Inf +i* copysign(0.0, cimag(z)) */
+      int inex;
+
+      mpfr_set_inf (MPC_RE (a), +1);
+      inex = mpfr_set_ui (MPC_IM (a), 0, MPC_RND_IM (rnd));
+      if (mpfr_signbit (MPC_IM (b)))
+        {
+          mpc_conj (a, a, MPC_RNDNN);
+          inex = -inex;
+        }
+
+      return MPC_INEX (0, inex);
+    }
+  else
+    return mpc_set (a, b, rnd);
+}
diff --git a/mpc/src/real.c b/mpc/src/real.c
new file mode 100644
index 0000000..19770b7
--- /dev/null
+++ b/mpc/src/real.c
@@ -0,0 +1,28 @@
+/* mpc_real -- Get the real part of a complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_real (mpfr_ptr a, mpc_srcptr b, mpfr_rnd_t rnd)
+{
+  return mpfr_set (a, MPC_RE (b), rnd);
+}
diff --git a/mpc/src/set.c b/mpc/src/set.c
new file mode 100644
index 0000000..5628680
--- /dev/null
+++ b/mpc/src/set.c
@@ -0,0 +1,33 @@
+/* mpc_set -- Set a complex number from another complex number.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_set (mpc_ptr a, mpc_srcptr b, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_set (MPC_RE(a), MPC_RE(b), MPC_RND_RE(rnd));
+  inex_im = mpfr_set (MPC_IM(a), MPC_IM(b), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/set_prec.c b/mpc/src/set_prec.c
new file mode 100644
index 0000000..221fe72
--- /dev/null
+++ b/mpc/src/set_prec.c
@@ -0,0 +1,29 @@
+/* mpc_set_prec -- reset the precision of a complex variable.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+void
+mpc_set_prec (mpc_t x, mpfr_prec_t prec)
+{
+  mpfr_set_prec (MPC_RE(x), prec);
+  mpfr_set_prec (MPC_IM(x), prec);
+}
diff --git a/mpc/src/set_str.c b/mpc/src/set_str.c
new file mode 100644
index 0000000..6fa1dc5
--- /dev/null
+++ b/mpc/src/set_str.c
@@ -0,0 +1,43 @@
+/* mpc_set_str -- Convert a string into a complex number.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <ctype.h>
+#include "mpc-impl.h"
+
+int
+mpc_set_str (mpc_t z, const char *str, int base, mpc_rnd_t rnd)
+{
+  char *p;
+  int inex;
+
+  inex = mpc_strtoc (z, str, &p, base, rnd);
+
+  if (inex != -1){
+     while (isspace ((unsigned char) (*p)))
+        p++;
+     if (*p == '\0')
+        return inex;
+  }
+
+  mpfr_set_nan (MPC_RE (z));
+  mpfr_set_nan (MPC_IM (z));
+  return -1;
+}
diff --git a/mpc/src/set_x.c b/mpc/src/set_x.c
new file mode 100644
index 0000000..1aef404
--- /dev/null
+++ b/mpc/src/set_x.c
@@ -0,0 +1,105 @@
+/* mpc_set_x -- Set the real part of a complex number
+   (imaginary part equals +0 regardless of rounding mode).
+
+Copyright (C) INRIA, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "config.h"
+
+#if HAVE_INTTYPES_H
+# include <inttypes.h> /* for intmax_t */
+#else
+# if HAVE_STDINT_H
+#  include <stdint.h>
+# endif
+#endif
+
+#if HAVE_COMPLEX_H
+# include <complex.h>
+#endif
+
+#include "mpc-impl.h"
+
+#define MPC_SET_X(real_t, z, real_value, rnd)     \
+  {                                                                     \
+    int _inex_re, _inex_im;                                             \
+    _inex_re = (mpfr_set_ ## real_t) (mpc_realref (z), (real_value), MPC_RND_RE (rnd)); \
+    _inex_im = mpfr_set_ui (mpc_imagref (z), 0, MPC_RND_IM (rnd)); \
+    return MPC_INEX (_inex_re, _inex_im);                               \
+  }
+
+int
+mpc_set_fr (mpc_ptr a, mpfr_srcptr b, mpc_rnd_t rnd)
+   MPC_SET_X (fr, a, b, rnd)
+
+int
+mpc_set_d (mpc_ptr a, double b, mpc_rnd_t rnd)
+   MPC_SET_X (d, a, b, rnd)
+
+int
+mpc_set_ld (mpc_ptr a, long double b, mpc_rnd_t rnd)
+   MPC_SET_X (ld, a, b, rnd)
+
+int
+mpc_set_ui (mpc_ptr a, unsigned long int b, mpc_rnd_t rnd)
+   MPC_SET_X (ui, a, b, rnd)
+
+int
+mpc_set_si (mpc_ptr a, long int b, mpc_rnd_t rnd)
+   MPC_SET_X (si, a, b, rnd)
+
+int
+mpc_set_z (mpc_ptr a, mpz_srcptr b, mpc_rnd_t rnd)
+   MPC_SET_X (z, a, b, rnd)
+
+int
+mpc_set_q (mpc_ptr a, mpq_srcptr b, mpc_rnd_t rnd)
+   MPC_SET_X (q, a, b, rnd)
+
+int
+mpc_set_f (mpc_ptr a, mpf_srcptr b, mpc_rnd_t rnd)
+   MPC_SET_X (f, a, b, rnd)
+
+#ifdef _MPC_H_HAVE_INTMAX_T
+int
+mpc_set_uj (mpc_ptr a, uintmax_t b, mpc_rnd_t rnd)
+   MPC_SET_X (uj, a, b, rnd)
+
+int
+mpc_set_sj (mpc_ptr a, intmax_t b, mpc_rnd_t rnd)
+   MPC_SET_X (sj, a, b, rnd)
+#endif
+
+#ifdef _MPC_H_HAVE_COMPLEX
+int
+mpc_set_dc (mpc_ptr a, double _Complex b, mpc_rnd_t rnd) {
+   return mpc_set_d_d (a, creal (b), cimag (b), rnd);
+}
+
+int
+mpc_set_ldc (mpc_ptr a, long double _Complex b, mpc_rnd_t rnd) {
+   return mpc_set_ld_ld (a, creall (b), cimagl (b), rnd);
+}
+#endif
+
+void
+mpc_set_nan (mpc_ptr a) {
+   mpfr_set_nan (mpc_realref (a));
+   mpfr_set_nan (mpc_imagref (a));
+}
diff --git a/mpc/src/set_x_x.c b/mpc/src/set_x_x.c
new file mode 100644
index 0000000..86d45b7
--- /dev/null
+++ b/mpc/src/set_x_x.c
@@ -0,0 +1,79 @@
+/* mpc_set_x_x -- Set complex number real and imaginary parts from parameters
+   whose type is known by mpfr.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "config.h"
+
+#if HAVE_INTTYPES_H
+# include <inttypes.h> /* for intmax_t */
+#else
+# if HAVE_STDINT_H
+#  include <stdint.h>
+# endif
+#endif
+
+#include "mpc-impl.h"
+
+#define MPC_SET_X_X(type, z, real_value, imag_value, rnd)       \
+  MPC_SET_X_Y (type, type, z, real_value, imag_value, rnd)
+
+int
+mpc_set_d_d (mpc_ptr z, double a, double b, mpc_rnd_t rnd)
+  MPC_SET_X_X (d, z, a, b, rnd)
+
+int
+mpc_set_f_f (mpc_ptr z, mpf_srcptr a, mpf_srcptr b, mpc_rnd_t rnd)
+  MPC_SET_X_X (f, z, a, b, rnd)
+
+int
+mpc_set_fr_fr (mpc_ptr z, mpfr_srcptr a, mpfr_srcptr b, mpc_rnd_t rnd)
+  MPC_SET_X_X (fr, z, a, b, rnd)
+
+int
+mpc_set_ld_ld (mpc_ptr z, long double a, long double b, mpc_rnd_t rnd)
+  MPC_SET_X_X (ld, z, a, b, rnd)
+
+int
+mpc_set_q_q (mpc_ptr z, mpq_srcptr a, mpq_srcptr b, mpc_rnd_t rnd)
+  MPC_SET_X_X (q, z, a, b, rnd)
+
+int
+mpc_set_si_si (mpc_ptr z, long int a, long int b, mpc_rnd_t rnd)
+  MPC_SET_X_X (si, z, a, b, rnd)
+
+int
+mpc_set_ui_ui (mpc_ptr z, unsigned long int a, unsigned long int b,
+               mpc_rnd_t rnd)
+  MPC_SET_X_X (ui, z, a, b, rnd)
+
+int
+mpc_set_z_z (mpc_ptr z, mpz_srcptr a, mpz_srcptr b, mpc_rnd_t rnd)
+  MPC_SET_X_X (z, z, a, b, rnd)
+
+#ifdef _MPC_H_HAVE_INTMAX_T
+int
+mpc_set_uj_uj (mpc_ptr z, uintmax_t a, uintmax_t b, mpc_rnd_t rnd)
+  MPC_SET_X_X (uj, z, a, b, rnd)
+
+int
+mpc_set_sj_sj (mpc_ptr z, intmax_t a, intmax_t b, mpc_rnd_t rnd)
+  MPC_SET_X_X (sj, z, a, b, rnd)
+#endif
diff --git a/mpc/src/sin_cos.c b/mpc/src/sin_cos.c
new file mode 100644
index 0000000..793f230
--- /dev/null
+++ b/mpc/src/sin_cos.c
@@ -0,0 +1,430 @@
+/* mpc_sin_cos, mpc_sin, mpc_cos -- sine and cosine of a complex number.
+
+Copyright (C) INRIA, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+static int
+mpc_sin_cos_nonfinite (mpc_ptr rop_sin, mpc_ptr rop_cos, mpc_srcptr op,
+   mpc_rnd_t rnd_sin, mpc_rnd_t rnd_cos)
+   /* assumes that op (that is, its real or imaginary part) is not finite */
+{
+   int overlap;
+   mpc_t op_loc;
+
+   overlap = (rop_sin == op || rop_cos == op);
+   if (overlap) {
+      mpc_init3 (op_loc, MPC_PREC_RE (op), MPC_PREC_IM (op));
+      mpc_set (op_loc, op, MPC_RNDNN);
+   }
+   else
+      op_loc [0] = op [0];
+
+   if (rop_sin != NULL) {
+      if (mpfr_nan_p (MPC_RE (op_loc)) || mpfr_nan_p (MPC_IM (op_loc))) {
+         mpc_set (rop_sin, op_loc, rnd_sin);
+         if (mpfr_nan_p (MPC_IM (op_loc))) {
+            /* sin(x +i*NaN) = NaN +i*NaN, except for x=0 */
+            /* sin(-0 +i*NaN) = -0 +i*NaN */
+            /* sin(+0 +i*NaN) = +0 +i*NaN */
+            if (!mpfr_zero_p (MPC_RE (op_loc)))
+               mpfr_set_nan (MPC_RE (rop_sin));
+         }
+         else /* op = NaN + i*y */
+            if (!mpfr_inf_p (MPC_IM (op_loc)) && !mpfr_zero_p (MPC_IM (op_loc)))
+            /* sin(NaN -i*Inf) = NaN -i*Inf */
+            /* sin(NaN -i*0) = NaN -i*0 */
+            /* sin(NaN +i*0) = NaN +i*0 */
+            /* sin(NaN +i*Inf) = NaN +i*Inf */
+            /* sin(NaN +i*y) = NaN +i*NaN, when 0<|y|<Inf */
+            mpfr_set_nan (MPC_IM (rop_sin));
+      }
+      else if (mpfr_inf_p (MPC_RE (op_loc))) {
+         mpfr_set_nan (MPC_RE (rop_sin));
+
+         if (!mpfr_inf_p (MPC_IM (op_loc)) && !mpfr_zero_p (MPC_IM (op_loc)))
+            /* sin(+/-Inf +i*y) = NaN +i*NaN, when 0<|y|<Inf */
+            mpfr_set_nan (MPC_IM (rop_sin));
+         else
+            /* sin(+/-Inf -i*Inf) = NaN -i*Inf */
+            /* sin(+/-Inf +i*Inf) = NaN +i*Inf */
+            /* sin(+/-Inf -i*0) = NaN -i*0 */
+            /* sin(+/-Inf +i*0) = NaN +i*0 */
+            mpfr_set (MPC_IM (rop_sin), MPC_IM (op_loc), MPC_RND_IM (rnd_sin));
+      }
+      else if (mpfr_zero_p (MPC_RE (op_loc))) {
+         /* sin(-0 -i*Inf) = -0 -i*Inf */
+         /* sin(+0 -i*Inf) = +0 -i*Inf */
+         /* sin(-0 +i*Inf) = -0 +i*Inf */
+         /* sin(+0 +i*Inf) = +0 +i*Inf */
+         mpc_set (rop_sin, op_loc, rnd_sin);
+      }
+      else {
+         /* sin(x -i*Inf) = +Inf*(sin(x) -i*cos(x)) */
+         /* sin(x +i*Inf) = +Inf*(sin(x) +i*cos(x)) */
+         mpfr_t s, c;
+         mpfr_init2 (s, 2);
+         mpfr_init2 (c, 2);
+         mpfr_sin_cos (s, c, MPC_RE (op_loc), GMP_RNDZ);
+         mpfr_set_inf (MPC_RE (rop_sin), MPFR_SIGN (s));
+         mpfr_set_inf (MPC_IM (rop_sin), MPFR_SIGN (c)*MPFR_SIGN (MPC_IM (op_loc)));
+         mpfr_clear (s);
+         mpfr_clear (c);
+      }
+   }
+
+   if (rop_cos != NULL) {
+      if (mpfr_nan_p (MPC_RE (op_loc))) {
+         /* cos(NaN + i * NaN) = NaN + i * NaN */
+         /* cos(NaN - i * Inf) = +Inf + i * NaN */
+         /* cos(NaN + i * Inf) = +Inf + i * NaN */
+         /* cos(NaN - i * 0) = NaN - i * 0 */
+         /* cos(NaN + i * 0) = NaN + i * 0 */
+         /* cos(NaN + i * y) = NaN + i * NaN, when y != 0 */
+         if (mpfr_inf_p (MPC_IM (op_loc)))
+            mpfr_set_inf (MPC_RE (rop_cos), +1);
+         else
+            mpfr_set_nan (MPC_RE (rop_cos));
+
+         if (mpfr_zero_p (MPC_IM (op_loc)))
+            mpfr_set (MPC_IM (rop_cos), MPC_IM (op_loc), MPC_RND_IM (rnd_cos));
+         else
+            mpfr_set_nan (MPC_IM (rop_cos));
+      }
+      else if (mpfr_nan_p (MPC_IM (op_loc))) {
+          /* cos(-Inf + i * NaN) = NaN + i * NaN */
+          /* cos(+Inf + i * NaN) = NaN + i * NaN */
+          /* cos(-0 + i * NaN) = NaN - i * 0 */
+          /* cos(+0 + i * NaN) = NaN + i * 0 */
+          /* cos(x + i * NaN) = NaN + i * NaN, when x != 0 */
+         if (mpfr_zero_p (MPC_RE (op_loc)))
+            mpfr_set (MPC_IM (rop_cos), MPC_RE (op_loc), MPC_RND_IM (rnd_cos));
+         else
+            mpfr_set_nan (MPC_IM (rop_cos));
+
+         mpfr_set_nan (MPC_RE (rop_cos));
+      }
+      else if (mpfr_inf_p (MPC_RE (op_loc))) {
+         /* cos(-Inf -i*Inf) = cos(+Inf +i*Inf) = -Inf +i*NaN */
+         /* cos(-Inf +i*Inf) = cos(+Inf -i*Inf) = +Inf +i*NaN */
+         /* cos(-Inf -i*0) = cos(+Inf +i*0) = NaN -i*0 */
+         /* cos(-Inf +i*0) = cos(+Inf -i*0) = NaN +i*0 */
+         /* cos(-Inf +i*y) = cos(+Inf +i*y) = NaN +i*NaN, when y != 0 */
+
+         const int same_sign =
+            mpfr_signbit (MPC_RE (op_loc)) == mpfr_signbit (MPC_IM (op_loc));
+
+         if (mpfr_inf_p (MPC_IM (op_loc)))
+            mpfr_set_inf (MPC_RE (rop_cos), (same_sign ? -1 : +1));
+         else
+            mpfr_set_nan (MPC_RE (rop_cos));
+
+         if (mpfr_zero_p (MPC_IM (op_loc)))
+            mpfr_setsign (MPC_IM (rop_cos), MPC_IM (op_loc), same_sign,
+                          MPC_RND_IM(rnd_cos));
+         else
+            mpfr_set_nan (MPC_IM (rop_cos));
+      }
+      else if (mpfr_zero_p (MPC_RE (op_loc))) {
+         /* cos(-0 -i*Inf) = cos(+0 +i*Inf) = +Inf -i*0 */
+         /* cos(-0 +i*Inf) = cos(+0 -i*Inf) = +Inf +i*0 */
+         const int same_sign =
+            mpfr_signbit (MPC_RE (op_loc)) == mpfr_signbit (MPC_IM (op_loc));
+
+         mpfr_setsign (MPC_IM (rop_cos), MPC_RE (op_loc), same_sign,
+                       MPC_RND_IM (rnd_cos));
+         mpfr_set_inf (MPC_RE (rop_cos), +1);
+      }
+      else {
+         /* cos(x -i*Inf) = +Inf*cos(x) +i*Inf*sin(x), when x != 0 */
+         /* cos(x +i*Inf) = +Inf*cos(x) -i*Inf*sin(x), when x != 0 */
+         mpfr_t s, c;
+         mpfr_init2 (c, 2);
+         mpfr_init2 (s, 2);
+         mpfr_sin_cos (s, c, MPC_RE (op_loc), GMP_RNDN);
+         mpfr_set_inf (MPC_RE (rop_cos), mpfr_sgn (c));
+         mpfr_set_inf (MPC_IM (rop_cos),
+            (mpfr_sgn (MPC_IM (op_loc)) == mpfr_sgn (s) ? -1 : +1));
+         mpfr_clear (s);
+         mpfr_clear (c);
+      }
+   }
+
+   if (overlap)
+      mpc_clear (op_loc);
+
+   return MPC_INEX12 (MPC_INEX (0,0), MPC_INEX (0,0));
+      /* everything is exact */
+}
+
+
+static int
+mpc_sin_cos_real (mpc_ptr rop_sin, mpc_ptr rop_cos, mpc_srcptr op,
+   mpc_rnd_t rnd_sin, mpc_rnd_t rnd_cos)
+   /* assumes that op is real */
+{
+   int inex_sin_re = 0, inex_cos_re = 0;
+      /* Until further notice, assume computations exact; in particular,
+         by definition, for not computed values.                         */
+   mpfr_t s, c;
+   int inex_s, inex_c;
+   int sign_im_op = mpfr_signbit (MPC_IM (op));
+
+   /* sin(x +-0*i) = sin(x) +-0*i*sign(cos(x)) */
+   /* cos(x +-i*0) = cos(x) -+i*0*sign(sin(x)) */
+   if (rop_sin != 0)
+      mpfr_init2 (s, MPC_PREC_RE (rop_sin));
+   else
+      mpfr_init2 (s, 2); /* We need only the sign. */
+   if (rop_cos != NULL)
+      mpfr_init2 (c, MPC_PREC_RE (rop_cos));
+   else
+      mpfr_init2 (c, 2);
+   inex_s = mpfr_sin (s, MPC_RE (op), MPC_RND_RE (rnd_sin));
+   inex_c = mpfr_cos (c, MPC_RE (op), MPC_RND_RE (rnd_cos));
+      /* We cannot use mpfr_sin_cos since we may need two distinct rounding
+         modes and the exact return values. If we need only the sign, an
+         arbitrary rounding mode will work.                                 */
+
+   if (rop_sin != NULL) {
+      mpfr_set (MPC_RE (rop_sin), s, GMP_RNDN); /* exact */
+      inex_sin_re = inex_s;
+      mpfr_set_ui (MPC_IM (rop_sin), 0ul, GMP_RNDN);
+      if (   ( sign_im_op && !mpfr_signbit (c))
+          || (!sign_im_op &&  mpfr_signbit (c)))
+         MPFR_CHANGE_SIGN (MPC_IM (rop_sin));
+      /* FIXME: simpler implementation with mpfr-3:
+         mpfr_set_zero (MPC_IM (rop_sin),
+            (   ( mpfr_signbit (MPC_IM(op)) && !mpfr_signbit(c))
+             || (!mpfr_signbit (MPC_IM(op)) &&  mpfr_signbit(c)) ? -1 : 1);
+         there is no need to use the variable sign_im_op then, needed now in
+         the case rop_sin == op                                              */
+   }
+
+   if (rop_cos != NULL) {
+      mpfr_set (MPC_RE (rop_cos), c, GMP_RNDN); /* exact */
+      inex_cos_re = inex_c;
+      mpfr_set_ui (MPC_IM (rop_cos), 0ul, GMP_RNDN);
+      if (   ( sign_im_op &&  mpfr_signbit (s))
+          || (!sign_im_op && !mpfr_signbit (s)))
+         MPFR_CHANGE_SIGN (MPC_IM (rop_cos));
+      /* FIXME: see previous MPFR_CHANGE_SIGN */
+   }
+
+   mpfr_clear (s);
+   mpfr_clear (c);
+
+   return MPC_INEX12 (MPC_INEX (inex_sin_re, 0), MPC_INEX (inex_cos_re, 0));
+}
+
+
+static int
+mpc_sin_cos_imag (mpc_ptr rop_sin, mpc_ptr rop_cos, mpc_srcptr op,
+   mpc_rnd_t rnd_sin, mpc_rnd_t rnd_cos)
+   /* assumes that op is purely imaginary */
+{
+   int inex_sin_im = 0, inex_cos_re = 0;
+      /* assume exact if not computed */
+   int overlap;
+   mpc_t op_loc;
+
+   overlap = (rop_sin == op || rop_cos == op);
+   if (overlap) {
+      mpc_init3 (op_loc, MPC_PREC_RE (op), MPC_PREC_IM (op));
+      mpc_set (op_loc, op, MPC_RNDNN);
+   }
+   else
+      op_loc [0] = op [0];
+
+   if (rop_sin != NULL) {
+      /* sin(+-O +i*y) = +-0 +i*sinh(y) */
+      mpfr_set (MPC_RE(rop_sin), MPC_RE(op_loc), GMP_RNDN);
+      inex_sin_im = mpfr_sinh (MPC_IM(rop_sin), MPC_IM(op_loc), MPC_RND_IM(rnd_sin));
+   }
+
+   if (rop_cos != NULL) {
+      /* cos(-0 - i * y) = cos(+0 + i * y) = cosh(y) - i * 0,
+         cos(-0 + i * y) = cos(+0 - i * y) = cosh(y) + i * 0,
+         where y >= 0 */
+
+      if (mpfr_zero_p (MPC_IM (op_loc)))
+        inex_cos_re = mpfr_set_ui (MPC_RE (rop_cos), 1ul, MPC_RND_RE (rnd_cos));
+      else
+        inex_cos_re = mpfr_cosh (MPC_RE (rop_cos), MPC_IM (op_loc), MPC_RND_RE (rnd_cos));
+
+      mpfr_set_ui (MPC_IM (rop_cos), 0ul, MPC_RND_IM (rnd_cos));
+      if (mpfr_signbit (MPC_RE (op_loc)) ==  mpfr_signbit (MPC_IM (op_loc)))
+         MPFR_CHANGE_SIGN (MPC_IM (rop_cos));
+   }
+
+   if (overlap)
+      mpc_clear (op_loc);
+
+   return MPC_INEX12 (MPC_INEX (0, inex_sin_im), MPC_INEX (inex_cos_re, 0));
+}
+
+
+int
+mpc_sin_cos (mpc_ptr rop_sin, mpc_ptr rop_cos, mpc_srcptr op,
+   mpc_rnd_t rnd_sin, mpc_rnd_t rnd_cos)
+   /* Feature not documented in the texinfo file: One of rop_sin or
+      rop_cos may be NULL, in which case it is not computed, and the
+      corresponding ternary inexact value is set to 0 (exact).       */
+{
+   if (!mpc_fin_p (op))
+      return mpc_sin_cos_nonfinite (rop_sin, rop_cos, op, rnd_sin, rnd_cos);
+   else if (mpfr_zero_p (MPC_IM (op)))
+      return mpc_sin_cos_real (rop_sin, rop_cos, op, rnd_sin, rnd_cos);
+   else if (mpfr_zero_p (MPC_RE (op)))
+      return mpc_sin_cos_imag (rop_sin, rop_cos, op, rnd_sin, rnd_cos);
+   else {
+      /* let op = a + i*b, then sin(op) = sin(a)*cosh(b) + i*cos(a)*sinh(b)
+                           and  cos(op) = cos(a)*cosh(b) - i*sin(a)*sinh(b).
+
+         For Re(sin(op)) (and analogously, the other parts), we use the
+         following algorithm, with rounding to nearest for all operations
+         and working precision w:
+
+         (1) x = o(sin(a))
+         (2) y = o(cosh(b))
+         (3) r = o(x*y)
+         then the error on r is at most 4 ulps, since we can write
+         r = sin(a)*cosh(b)*(1+t)^3 with |t| <= 2^(-w),
+         thus for w >= 2, r = sin(a)*cosh(b)*(1+4*t) with |t| <= 2^(-w),
+         thus the relative error is bounded by 4*2^(-w) <= 4*ulp(r).
+      */
+      mpfr_t s, c, sh, ch, sch, csh;
+      mpfr_prec_t prec;
+      int ok;
+      int inex_re, inex_im, inex_sin, inex_cos;
+
+      prec = 2;
+      if (rop_sin != NULL)
+         prec = MPC_MAX (prec, MPC_MAX_PREC (rop_sin));
+      if (rop_cos != NULL)
+         prec = MPC_MAX (prec, MPC_MAX_PREC (rop_cos));
+
+      mpfr_init2 (s, 2);
+      mpfr_init2 (c, 2);
+      mpfr_init2 (sh, 2);
+      mpfr_init2 (ch, 2);
+      mpfr_init2 (sch, 2);
+      mpfr_init2 (csh, 2);
+
+      do {
+         ok = 1;
+         prec += mpc_ceil_log2 (prec) + 5;
+
+         mpfr_set_prec (s, prec);
+         mpfr_set_prec (c, prec);
+         mpfr_set_prec (sh, prec);
+         mpfr_set_prec (ch, prec);
+         mpfr_set_prec (sch, prec);
+         mpfr_set_prec (csh, prec);
+
+         mpfr_sin_cos (s, c, MPC_RE(op), GMP_RNDN);
+         mpfr_sinh_cosh (sh, ch, MPC_IM(op), GMP_RNDN);
+
+         if (rop_sin != NULL) {
+            /* real part of sine */
+            mpfr_mul (sch, s, ch, GMP_RNDN);
+            ok = (!mpfr_number_p (sch))
+                  || mpfr_can_round (sch, prec - 2, GMP_RNDN, GMP_RNDZ,
+                        MPC_PREC_RE (rop_sin)
+                        + (MPC_RND_RE (rnd_sin) == GMP_RNDN));
+
+            if (ok) {
+               /* imaginary part of sine */
+               mpfr_mul (csh, c, sh, GMP_RNDN);
+               ok = (!mpfr_number_p (csh))
+                     || mpfr_can_round (csh, prec - 2, GMP_RNDN, GMP_RNDZ,
+                           MPC_PREC_IM (rop_sin)
+                           + (MPC_RND_IM (rnd_sin) == GMP_RNDN));
+            }
+         }
+
+         if (rop_cos != NULL && ok) {
+            /* real part of cosine */
+            mpfr_mul (c, c, ch, GMP_RNDN);
+            ok = (!mpfr_number_p (c))
+                  || mpfr_can_round (c, prec - 2, GMP_RNDN, GMP_RNDZ,
+                        MPC_PREC_RE (rop_cos)
+                        + (MPC_RND_RE (rnd_cos) == GMP_RNDN));
+
+            if (ok) {
+               /* imaginary part of cosine */
+               mpfr_mul (s, s, sh, GMP_RNDN);
+               mpfr_neg (s, s, GMP_RNDN);
+               ok = (!mpfr_number_p (s))
+                     || mpfr_can_round (s, prec - 2, GMP_RNDN, GMP_RNDZ,
+                           MPC_PREC_IM (rop_cos)
+                           + (MPC_RND_IM (rnd_cos) == GMP_RNDN));
+            }
+         }
+      } while (ok == 0);
+
+      if (rop_sin != NULL) {
+         inex_re = mpfr_set (MPC_RE (rop_sin), sch, MPC_RND_RE (rnd_sin));
+         if (mpfr_inf_p (sch))
+            inex_re = mpfr_sgn (sch);
+         inex_im = mpfr_set (MPC_IM (rop_sin), csh, MPC_RND_IM (rnd_sin));
+         if (mpfr_inf_p (csh))
+            inex_im = mpfr_sgn (csh);
+         inex_sin = MPC_INEX (inex_re, inex_im);
+      }
+      else
+         inex_sin = MPC_INEX (0,0); /* return exact if not computed */
+
+      if (rop_cos != NULL) {
+         inex_re = mpfr_set (MPC_RE (rop_cos), c, MPC_RND_RE (rnd_cos));
+         if (mpfr_inf_p (c))
+            inex_re = mpfr_sgn (c);
+         inex_im = mpfr_set (MPC_IM (rop_cos), s, MPC_RND_IM (rnd_cos));
+         if (mpfr_inf_p (s))
+            inex_im = mpfr_sgn (s);
+         inex_cos = MPC_INEX (inex_re, inex_im);
+      }
+      else
+         inex_cos = MPC_INEX (0,0); /* return exact if not computed */
+
+      mpfr_clear (s);
+      mpfr_clear (c);
+      mpfr_clear (sh);
+      mpfr_clear (ch);
+      mpfr_clear (sch);
+      mpfr_clear (csh);
+
+      return (MPC_INEX12 (inex_sin, inex_cos));
+   }
+}
+
+
+int
+mpc_sin (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+   return MPC_INEX1 (mpc_sin_cos (rop, NULL, op, rnd, 0));
+}
+
+
+int
+mpc_cos (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  return MPC_INEX2 (mpc_sin_cos (NULL, rop, op, 0, rnd));
+}
diff --git a/mpc/src/sinh.c b/mpc/src/sinh.c
new file mode 100644
index 0000000..77d8d7b
--- /dev/null
+++ b/mpc/src/sinh.c
@@ -0,0 +1,48 @@
+/* mpc_sinh -- hyperbolic sine of a complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_sinh (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  /* sinh(op) = -i*sin(i*op) = conj(-i*sin(conj(-i*op))) */
+  mpc_t z;
+  mpc_t sin_z;
+  int inex;
+
+  /* z := conj(-i * op) and rop = conj(-i * sin(z)), in other words, we have
+     to switch real and imaginary parts. Let us set them without copying
+     significands. */
+  MPC_RE (z)[0] = MPC_IM (op)[0];
+  MPC_IM (z)[0] = MPC_RE (op)[0];
+  MPC_RE (sin_z)[0] = MPC_IM (rop)[0];
+  MPC_IM (sin_z)[0] = MPC_RE (rop)[0];
+
+  inex = mpc_sin (sin_z, z, RNDC (MPC_RND_IM (rnd), MPC_RND_RE (rnd)));
+
+  /* sin_z and rop parts share the same significands, copy the rest now. */
+  MPC_RE (rop)[0] = MPC_IM (sin_z)[0];
+  MPC_IM (rop)[0] = MPC_RE (sin_z)[0];
+
+  /* swap inexact flags for real and imaginary parts */
+  return MPC_INEX (MPC_INEX_IM (inex), MPC_INEX_RE (inex));
+}
diff --git a/mpc/src/sqr.c b/mpc/src/sqr.c
new file mode 100644
index 0000000..a324f15
--- /dev/null
+++ b/mpc/src/sqr.c
@@ -0,0 +1,241 @@
+/* mpc_sqr -- Square a complex number.
+
+Copyright (C) INRIA, 2002, 2005, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h>    /* for MPC_ASSERT */
+#include "mpc-impl.h"
+
+int
+mpc_sqr (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+   int ok;
+   mpfr_t u, v;
+   mpfr_t x;
+      /* rop temporary variable to hold the real part of op,
+         needed in the case rop==op */
+   mpfr_prec_t prec;
+   int inex_re, inex_im, inexact;
+   mpfr_exp_t emin, emax;
+
+   /* special values: NaN and infinities */
+   if (!mpc_fin_p (op)) {
+      if (mpfr_nan_p (MPC_RE (op)) || mpfr_nan_p (MPC_IM (op))) {
+         mpfr_set_nan (MPC_RE (rop));
+         mpfr_set_nan (MPC_IM (rop));
+      }
+      else if (mpfr_inf_p (MPC_RE (op))) {
+         if (mpfr_inf_p (MPC_IM (op))) {
+            mpfr_set_nan (MPC_RE (rop));
+            mpfr_set_inf (MPC_IM (rop),
+                          MPFR_SIGN (MPC_RE (op)) * MPFR_SIGN (MPC_IM (op)));
+         }
+         else {
+            mpfr_set_inf (MPC_RE (rop), +1);
+            if (mpfr_zero_p (MPC_IM (op)))
+               mpfr_set_nan (MPC_IM (rop));
+            else
+               mpfr_set_inf (MPC_IM (rop),
+                             MPFR_SIGN (MPC_RE (op)) * MPFR_SIGN (MPC_IM (op)));
+         }
+      }
+      else /* IM(op) is infinity, RE(op) is not */ {
+         mpfr_set_inf (MPC_RE (rop), -1);
+         if (mpfr_zero_p (MPC_RE (op)))
+            mpfr_set_nan (MPC_IM (rop));
+         else
+            mpfr_set_inf (MPC_IM (rop),
+                          MPFR_SIGN (MPC_RE (op)) * MPFR_SIGN (MPC_IM (op)));
+      }
+      return MPC_INEX (0, 0); /* exact */
+   }
+
+   prec = MPC_MAX_PREC(rop);
+
+   /* first check for real resp. purely imaginary number */
+   if (mpfr_zero_p (MPC_IM(op)))
+   {
+      int same_sign = mpfr_signbit (MPC_RE (op)) == mpfr_signbit (MPC_IM (op));
+      inex_re = mpfr_sqr (MPC_RE(rop), MPC_RE(op), MPC_RND_RE(rnd));
+      inex_im = mpfr_set_ui (MPC_IM(rop), 0ul, GMP_RNDN);
+      if (!same_sign)
+        mpc_conj (rop, rop, MPC_RNDNN);
+      return MPC_INEX(inex_re, inex_im);
+   }
+   if (mpfr_zero_p (MPC_RE(op)))
+   {
+      int same_sign = mpfr_signbit (MPC_RE (op)) == mpfr_signbit (MPC_IM (op));
+      inex_re = -mpfr_sqr (MPC_RE(rop), MPC_IM(op), INV_RND (MPC_RND_RE(rnd)));
+      mpfr_neg (MPC_RE(rop), MPC_RE(rop), GMP_RNDN);
+      inex_im = mpfr_set_ui (MPC_IM(rop), 0ul, GMP_RNDN);
+      if (!same_sign)
+        mpc_conj (rop, rop, MPC_RNDNN);
+      return MPC_INEX(inex_re, inex_im);
+   }
+   /* If the real and imaginary parts of the argument have very different  */
+   /* exponents, it is not reasonable to use Karatsuba squaring; compute   */
+   /* exactly with the standard formulae instead, even if this means an    */
+   /* additional multiplication.                                           */
+   if (SAFE_ABS (mpfr_exp_t,
+                 mpfr_get_exp (MPC_RE (op)) - mpfr_get_exp (MPC_IM (op)))
+       > (mpfr_exp_t) MPC_MAX_PREC (op) / 2)
+   {
+      mpfr_init2 (u, 2*MPC_PREC_RE (op));
+      mpfr_init2 (v, 2*MPC_PREC_IM (op));
+
+      mpfr_sqr (u, MPC_RE (op), GMP_RNDN);
+      mpfr_sqr (v, MPC_IM (op), GMP_RNDN); /* both are exact */
+      inex_im = mpfr_mul (rop->im, op->re, op->im, MPC_RND_IM (rnd));
+      mpfr_mul_2exp (rop->im, rop->im, 1, GMP_RNDN);
+      inex_re = mpfr_sub (rop->re, u, v, MPC_RND_RE (rnd));
+
+      mpfr_clear (u);
+      mpfr_clear (v);
+      return MPC_INEX (inex_re, inex_im);
+   }
+
+
+   mpfr_init (u);
+   mpfr_init (v);
+
+   if (rop == op)
+   {
+      mpfr_init2 (x, MPC_PREC_RE (op));
+      mpfr_set (x, op->re, GMP_RNDN);
+   }
+   else
+      x [0] = op->re [0];
+
+   emax = mpfr_get_emax ();
+   emin = mpfr_get_emin ();
+
+   do
+   {
+      prec += mpc_ceil_log2 (prec) + 5;
+
+      mpfr_set_prec (u, prec);
+      mpfr_set_prec (v, prec);
+
+      /* Let op = x + iy. We need u = x+y and v = x-y, rounded away.      */
+      /* The error is bounded above by 1 ulp.                             */
+      /* We first let inexact be 1 if the real part is not computed       */
+      /* exactly and determine the sign later.                            */
+      inexact =    ROUND_AWAY (mpfr_add (u, x, MPC_IM (op), MPFR_RNDA), u)
+                 | ROUND_AWAY (mpfr_sub (v, x, MPC_IM (op), MPFR_RNDA), v);
+
+      /* compute the real part as u*v, rounded away                    */
+      /* determine also the sign of inex_re                            */
+      if (mpfr_sgn (u) == 0 || mpfr_sgn (v) == 0)
+        {
+          /* as we have rounded away, the result is exact */
+          mpfr_set_ui (MPC_RE (rop), 0, GMP_RNDN);
+          inex_re = 0;
+          ok = 1;
+        }
+      else if (mpfr_sgn (u) * mpfr_sgn (v) > 0)
+        {
+          inexact |= mpfr_mul (u, u, v, GMP_RNDU); /* error 5 */
+          /* checks that no overflow nor underflow occurs: since u*v > 0
+             and we round up, an overflow will give +Inf, but an underflow
+             will give 0.5*2^emin */
+          MPC_ASSERT (mpfr_get_exp (u) != emin);
+          if (mpfr_inf_p (u))
+            {
+              mpfr_rnd_t rnd_re = MPC_RND_RE (rnd);
+              if (rnd_re == GMP_RNDZ || rnd_re == GMP_RNDD)
+                {
+                  mpfr_set_ui_2exp (MPC_RE (rop), 1, emax, rnd_re);
+                  inex_re = -1;
+                }
+              else /* round up or away from zero */ {
+                mpfr_set_inf (MPC_RE (rop), 1);
+                inex_re = 1;
+              }
+              break;
+            }
+          ok = (!inexact) | mpfr_can_round (u, prec - 3, GMP_RNDU, GMP_RNDZ,
+               MPC_PREC_RE (rop) + (MPC_RND_RE (rnd) == GMP_RNDN));
+          if (ok)
+            {
+              inex_re = mpfr_set (MPC_RE (rop), u, MPC_RND_RE (rnd));
+              if (inex_re == 0)
+                /* remember that u was already rounded */
+                inex_re = inexact;
+            }
+        }
+      else
+        {
+          inexact |= mpfr_mul (u, u, v, GMP_RNDD); /* error 5 */
+          /* checks that no overflow occurs: since u*v < 0 and we round down,
+             an overflow will give -Inf */
+          MPC_ASSERT (mpfr_inf_p (u) == 0);
+          /* if an underflow happens (i.e., u = -0.5*2^emin since we round
+             away from zero), the result will be an underflow */
+          if (mpfr_get_exp (u) == emin)
+            {
+              mpfr_rnd_t rnd_re = MPC_RND_RE (rnd);
+              if (rnd_re == GMP_RNDZ || rnd_re == GMP_RNDN ||
+                  rnd_re == GMP_RNDU)
+                {
+                  mpfr_set_ui (MPC_RE (rop), 0, rnd_re);
+                  inex_re = 1;
+                }
+              else /* round down or away from zero */ {
+                mpfr_set (MPC_RE (rop), u, rnd_re);
+                inex_re = -1;
+              }
+              break;
+            }
+          ok = (!inexact) | mpfr_can_round (u, prec - 3, GMP_RNDD, GMP_RNDZ,
+               MPC_PREC_RE (rop) + (MPC_RND_RE (rnd) == GMP_RNDN));
+          if (ok)
+            {
+              inex_re = mpfr_set (MPC_RE (rop), u, MPC_RND_RE (rnd));
+              if (inex_re == 0)
+                inex_re = inexact;
+            }
+        }
+   }
+   while (!ok);
+
+   /* compute the imaginary part as 2*x*y, which is always possible */
+   if (mpfr_get_exp (x) + mpfr_get_exp(MPC_IM (op)) <= emin + 1)
+     {
+       mpfr_mul_2ui (x, x, 1, GMP_RNDN);
+       inex_im = mpfr_mul (MPC_IM (rop), x, MPC_IM (op), MPC_RND_IM (rnd));
+     }
+   else
+     {
+       inex_im = mpfr_mul (MPC_IM (rop), x, MPC_IM (op), MPC_RND_IM (rnd));
+       /* checks that no underflow occurs (an overflow can occur here) */
+       MPC_ASSERT (mpfr_zero_p (MPC_IM (rop)) == 0);
+       mpfr_mul_2ui (MPC_IM (rop), MPC_IM (rop), 1, GMP_RNDN);
+     }
+
+   mpfr_clear (u);
+   mpfr_clear (v);
+
+   if (rop == op)
+      mpfr_clear (x);
+
+   inex_re = mpfr_check_range (MPC_RE(rop), inex_re, MPC_RND_RE (rnd));
+   inex_im = mpfr_check_range (MPC_IM(rop), inex_im, MPC_RND_IM (rnd));
+
+   return MPC_INEX (inex_re, inex_im);
+}
diff --git a/mpc/src/sqrt.c b/mpc/src/sqrt.c
new file mode 100644
index 0000000..838e23c
--- /dev/null
+++ b/mpc/src/sqrt.c
@@ -0,0 +1,369 @@
+/* mpc_sqrt -- Take the square root of a complex number.
+
+Copyright (C) INRIA, 2002, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+#if MPFR_VERSION_MAJOR < 3
+#define mpfr_min_prec(x) \
+   ( ((prec + BITS_PER_MP_LIMB - 1) / BITS_PER_MP_LIMB) * BITS_PER_MP_LIMB \
+     - mpn_scan1 (x->_mpfr_d, 0))
+#endif
+
+
+int
+mpc_sqrt (mpc_ptr a, mpc_srcptr b, mpc_rnd_t rnd)
+{
+  int ok_w, ok_t = 0;
+  mpfr_t    w, t;
+  mpfr_rnd_t  rnd_w, rnd_t;
+  mpfr_prec_t prec_w, prec_t;
+  /* the rounding mode and the precision required for w and t, which can */
+  /* be either the real or the imaginary part of a */
+  mpfr_prec_t prec;
+  int inex_w, inex_t = 1, inex_re, inex_im, loops = 0;
+  const int re_cmp = mpfr_cmp_ui (MPC_RE (b), 0),
+            im_cmp = mpfr_cmp_ui (MPC_IM (b), 0);
+     /* comparison of the real/imaginary part of b with 0 */
+  int repr_w, repr_t = 0 /* to avoid gcc warning */ ;
+     /* flag indicating whether the computed value is already representable
+        at the target precision */
+  const int im_sgn = mpfr_signbit (MPC_IM (b)) == 0 ? 0 : -1;
+     /* we need to know the sign of Im(b) when it is +/-0 */
+  const mpfr_rnd_t r = im_sgn ? GMP_RNDD : GMP_RNDU;
+     /* rounding mode used when computing t */
+
+  /* special values */
+  if (!mpc_fin_p (b)) {
+   /* sqrt(x +i*Inf) = +Inf +I*Inf, even if x = NaN */
+   /* sqrt(x -i*Inf) = +Inf -I*Inf, even if x = NaN */
+   if (mpfr_inf_p (MPC_IM (b)))
+      {
+         mpfr_set_inf (MPC_RE (a), +1);
+         mpfr_set_inf (MPC_IM (a), im_sgn);
+         return MPC_INEX (0, 0);
+      }
+
+   if (mpfr_inf_p (MPC_RE (b)))
+      {
+         if (mpfr_signbit (MPC_RE (b)))
+         {
+            if (mpfr_number_p (MPC_IM (b)))
+               {
+               /* sqrt(-Inf +i*y) = +0 +i*Inf, when y positive */
+               /* sqrt(-Inf +i*y) = +0 -i*Inf, when y positive */
+               mpfr_set_ui (MPC_RE (a), 0, GMP_RNDN);
+               mpfr_set_inf (MPC_IM (a), im_sgn);
+               return MPC_INEX (0, 0);
+               }
+            else
+               {
+               /* sqrt(-Inf +i*NaN) = NaN +/-i*Inf */
+               mpfr_set_nan (MPC_RE (a));
+               mpfr_set_inf (MPC_IM (a), im_sgn);
+               return MPC_INEX (0, 0);
+               }
+         }
+         else
+         {
+            if (mpfr_number_p (MPC_IM (b)))
+               {
+               /* sqrt(+Inf +i*y) = +Inf +i*0, when y positive */
+               /* sqrt(+Inf +i*y) = +Inf -i*0, when y positive */
+               mpfr_set_inf (MPC_RE (a), +1);
+               mpfr_set_ui (MPC_IM (a), 0, GMP_RNDN);
+               if (im_sgn)
+                  mpc_conj (a, a, MPC_RNDNN);
+               return MPC_INEX (0, 0);
+               }
+            else
+               {
+               /* sqrt(+Inf -i*Inf) = +Inf -i*Inf */
+               /* sqrt(+Inf +i*Inf) = +Inf +i*Inf */
+               /* sqrt(+Inf +i*NaN) = +Inf +i*NaN */
+               return mpc_set (a, b, rnd);
+               }
+         }
+      }
+
+   /* sqrt(x +i*NaN) = NaN +i*NaN, if x is not infinite */
+   /* sqrt(NaN +i*y) = NaN +i*NaN, if y is not infinite */
+   if (mpfr_nan_p (MPC_RE (b)) || mpfr_nan_p (MPC_IM (b)))
+      {
+         mpfr_set_nan (MPC_RE (a));
+         mpfr_set_nan (MPC_IM (a));
+         return MPC_INEX (0, 0);
+      }
+  }
+
+  /* purely real */
+  if (im_cmp == 0)
+    {
+      if (re_cmp == 0)
+        {
+          mpc_set_ui_ui (a, 0, 0, MPC_RNDNN);
+          if (im_sgn)
+            mpc_conj (a, a, MPC_RNDNN);
+          return MPC_INEX (0, 0);
+        }
+      else if (re_cmp > 0)
+        {
+          inex_w = mpfr_sqrt (MPC_RE (a), MPC_RE (b), MPC_RND_RE (rnd));
+          mpfr_set_ui (MPC_IM (a), 0, GMP_RNDN);
+          if (im_sgn)
+            mpc_conj (a, a, MPC_RNDNN);
+          return MPC_INEX (inex_w, 0);
+        }
+      else
+        {
+          mpfr_init2 (w, MPC_PREC_RE (b));
+          mpfr_neg (w, MPC_RE (b), GMP_RNDN);
+          if (im_sgn)
+            {
+              inex_w = -mpfr_sqrt (MPC_IM (a), w, INV_RND (MPC_RND_IM (rnd)));
+              mpfr_neg (MPC_IM (a), MPC_IM (a), GMP_RNDN);
+            }
+          else
+            inex_w = mpfr_sqrt (MPC_IM (a), w, MPC_RND_IM (rnd));
+
+          mpfr_set_ui (MPC_RE (a), 0, GMP_RNDN);
+          mpfr_clear (w);
+          return MPC_INEX (0, inex_w);
+        }
+    }
+
+  /* purely imaginary */
+  if (re_cmp == 0)
+    {
+      mpfr_t y;
+
+      y[0] = MPC_IM (b)[0];
+      /* If y/2 underflows, so does sqrt(y/2) */
+      mpfr_div_2ui (y, y, 1, GMP_RNDN);
+      if (im_cmp > 0)
+        {
+          inex_w = mpfr_sqrt (MPC_RE (a), y, MPC_RND_RE (rnd));
+          inex_t = mpfr_sqrt (MPC_IM (a), y, MPC_RND_IM (rnd));
+        }
+      else
+        {
+          mpfr_neg (y, y, GMP_RNDN);
+          inex_w = mpfr_sqrt (MPC_RE (a), y, MPC_RND_RE (rnd));
+          inex_t = -mpfr_sqrt (MPC_IM (a), y, INV_RND (MPC_RND_IM (rnd)));
+          mpfr_neg (MPC_IM (a), MPC_IM (a), GMP_RNDN);
+        }
+      return MPC_INEX (inex_w, inex_t);
+    }
+
+  prec = MPC_MAX_PREC(a);
+
+  mpfr_init (w);
+  mpfr_init (t);
+
+   if (re_cmp > 0) {
+      rnd_w = MPC_RND_RE (rnd);
+      prec_w = MPC_PREC_RE (a);
+      rnd_t = MPC_RND_IM(rnd);
+      if (rnd_t == GMP_RNDZ)
+         /* force GMP_RNDD or GMP_RNDUP, using sign(t) = sign(y) */
+         rnd_t = (im_cmp > 0 ? GMP_RNDD : GMP_RNDU);
+      prec_t = MPC_PREC_IM (a);
+   }
+   else {
+      prec_w = MPC_PREC_IM (a);
+      prec_t = MPC_PREC_RE (a);
+      if (im_cmp > 0) {
+         rnd_w = MPC_RND_IM(rnd);
+         rnd_t = MPC_RND_RE(rnd);
+         if (rnd_t == GMP_RNDZ)
+            rnd_t = GMP_RNDD;
+      }
+      else {
+         rnd_w = INV_RND(MPC_RND_IM (rnd));
+         rnd_t = INV_RND(MPC_RND_RE (rnd));
+         if (rnd_t == GMP_RNDZ)
+            rnd_t = GMP_RNDU;
+      }
+   }
+
+  do
+    {
+      loops ++;
+      prec += (loops <= 2) ? mpc_ceil_log2 (prec) + 4 : prec / 2;
+      mpfr_set_prec (w, prec);
+      mpfr_set_prec (t, prec);
+      /* let b = x + iy */
+      /* w = sqrt ((|x| + sqrt (x^2 + y^2)) / 2), rounded down */
+      /* total error bounded by 3 ulps */
+      inex_w = mpc_abs (w, b, GMP_RNDD);
+      if (re_cmp < 0)
+        inex_w |= mpfr_sub (w, w, MPC_RE (b), GMP_RNDD);
+      else
+        inex_w |= mpfr_add (w, w, MPC_RE (b), GMP_RNDD);
+      inex_w |= mpfr_div_2ui (w, w, 1, GMP_RNDD);
+      inex_w |= mpfr_sqrt (w, w, GMP_RNDD);
+
+      repr_w = mpfr_min_prec (w) <= prec_w;
+      if (!repr_w)
+         /* use the usual trick for obtaining the ternary value */
+         ok_w = mpfr_can_round (w, prec - 2, GMP_RNDD, GMP_RNDU,
+                                prec_w + (rnd_w == GMP_RNDN));
+      else {
+            /* w is representable in the target precision and thus cannot be
+               rounded up */
+         if (rnd_w == GMP_RNDN)
+            /* If w can be rounded to nearest, then actually no rounding
+               occurs, and the ternary value is known from inex_w. */
+            ok_w = mpfr_can_round (w, prec - 2, GMP_RNDD, GMP_RNDN, prec_w);
+         else
+            /* If w can be rounded down, then any direct rounding and the
+               ternary flag can be determined from inex_w. */
+            ok_w = mpfr_can_round (w, prec - 2, GMP_RNDD, GMP_RNDD, prec_w);
+      }
+
+      if (!inex_w || ok_w) {
+         /* t = y / 2w, rounded away */
+         /* total error bounded by 7 ulps */
+         inex_t = mpfr_div (t, MPC_IM (b), w, r);
+         if (!inex_t && inex_w)
+            /* The division was exact, but w was not. */
+            inex_t = im_sgn ? -1 : 1;
+         inex_t |= mpfr_div_2ui (t, t, 1, r);
+         repr_t = mpfr_min_prec (t) <= prec_t;
+         if (!repr_t)
+             /* As for w; since t was rounded away, we check whether rounding to 0
+                is possible. */
+            ok_t = mpfr_can_round (t, prec - 3, r, GMP_RNDZ,
+                                   prec_t + (rnd_t == GMP_RNDN));
+         else {
+            if (rnd_t == GMP_RNDN)
+               ok_t = mpfr_can_round (t, prec - 3, r, GMP_RNDN, prec_t);
+            else
+               ok_t = mpfr_can_round (t, prec - 3, r, r, prec_t);
+         }
+      }
+    }
+    while ((inex_w && !ok_w) || (inex_t && !ok_t));
+
+   if (re_cmp > 0) {
+         inex_re = mpfr_set (MPC_RE (a), w, MPC_RND_RE(rnd));
+         inex_im = mpfr_set (MPC_IM (a), t, MPC_RND_IM(rnd));
+   }
+   else if (im_cmp > 0) {
+      inex_re = mpfr_set (MPC_RE(a), t, MPC_RND_RE(rnd));
+      inex_im = mpfr_set (MPC_IM(a), w, MPC_RND_IM(rnd));
+   }
+   else {
+      inex_re = mpfr_neg (MPC_RE (a), t, MPC_RND_RE(rnd));
+      inex_im = mpfr_neg (MPC_IM (a), w, MPC_RND_IM(rnd));
+   }
+
+   if (repr_w && inex_w) {
+      if (rnd_w == GMP_RNDN) {
+         /* w has not been rounded with mpfr_set/mpfr_neg, determine ternary
+            value from inex_w instead */
+         if (re_cmp > 0)
+            inex_re = inex_w;
+         else if (im_cmp > 0)
+            inex_im = inex_w;
+         else
+            inex_im = -inex_w;
+      }
+      else {
+         /* determine ternary value, but also potentially add 1 ulp; can only
+            be done now when we are in the target precision */
+         if (re_cmp > 0) {
+            if (rnd_w == GMP_RNDU) {
+               MPFR_ADD_ONE_ULP (MPC_RE (a));
+               inex_re = +1;
+            }
+            else
+               inex_re = -1;
+         }
+         else if (im_cmp > 0) {
+            if (rnd_w == GMP_RNDU) {
+               MPFR_ADD_ONE_ULP (MPC_IM (a));
+               inex_im = +1;
+            }
+            else
+               inex_im = -1;
+         }
+         else {
+            if (rnd_w == GMP_RNDU) {
+               MPFR_ADD_ONE_ULP (MPC_IM (a));
+               inex_im = -1;
+            }
+            else
+               inex_im = +1;
+         }
+      }
+   }
+   if (repr_t && inex_t) {
+      if (rnd_t == GMP_RNDN) {
+         if (re_cmp > 0)
+            inex_im = inex_t;
+         else if (im_cmp > 0)
+            inex_re = inex_t;
+         else
+            inex_re = -inex_t;
+      }
+      else {
+         if (re_cmp > 0) {
+            if (rnd_t == r)
+               inex_im = inex_t;
+            else {
+               inex_im = -inex_t;
+               if (   (im_cmp > 0 && r == GMP_RNDD)
+                   || (im_cmp < 0 && r == GMP_RNDU))
+                  MPFR_ADD_ONE_ULP (MPC_IM (a));
+               else
+                  MPFR_SUB_ONE_ULP (MPC_IM (a));
+            }
+         }
+         else if (im_cmp > 0) {
+            if (rnd_t == r)
+               inex_re = inex_t;
+            else {
+               inex_re = -inex_t;
+               if (r == GMP_RNDD)
+                  MPFR_ADD_ONE_ULP (MPC_RE (a));
+               else
+                  MPFR_SUB_ONE_ULP (MPC_RE (a));
+            }
+         }
+         else {
+            if (rnd_t == r)
+               inex_re = -inex_t;
+            else {
+               inex_re = inex_t;
+               if (r == GMP_RNDD)
+                  MPFR_SUB_ONE_ULP (MPC_RE (a));
+               else
+                  MPFR_ADD_ONE_ULP (MPC_RE (a));
+            }
+         }
+      }
+   }
+
+  mpfr_clear (w);
+  mpfr_clear (t);
+
+  return MPC_INEX (inex_re, inex_im);
+}
diff --git a/mpc/src/strtoc.c b/mpc/src/strtoc.c
new file mode 100644
index 0000000..99f6e0e
--- /dev/null
+++ b/mpc/src/strtoc.c
@@ -0,0 +1,88 @@
+/* mpc_strtoc -- Read a complex number from a string.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <string.h>
+#include <ctype.h>
+#include "mpc-impl.h"
+
+static void
+skip_whitespace (const char **p) {
+   /* TODO: This function had better be inlined, but it is unclear whether
+      the hassle to get this implemented across all platforms is worth it. */
+   while (isspace ((unsigned char) **p))
+      (*p)++;
+}
+
+int
+mpc_strtoc (mpc_ptr rop, const char *nptr, char **endptr, int base, mpc_rnd_t rnd) {
+   const char *p;
+   char *end;
+   int bracketed = 0;
+
+   int inex_re = 0, inex_im = 0;
+
+   if (nptr == NULL || base > 36 || base == 1)
+     goto error;
+
+   p = nptr;
+   skip_whitespace (&p);
+
+   if (*p == '('){
+      bracketed = 1;
+      ++p;
+   }
+
+   inex_re = mpfr_strtofr (MPC_RE(rop), p, &end, base, MPC_RND_RE (rnd));
+   if (end == p)
+      goto error;
+   p = end;
+
+   if (!bracketed)
+     inex_im = mpfr_set_ui (MPC_IM (rop), 0ul, GMP_RNDN);
+   else {
+     if (!isspace ((unsigned char)*p))
+         goto error;
+
+      skip_whitespace (&p);
+
+      inex_im = mpfr_strtofr (MPC_IM(rop), p, &end, base, MPC_RND_IM (rnd));
+      if (end == p)
+         goto error;
+      p = end;
+
+      skip_whitespace (&p);
+      if (*p != ')')
+         goto error;
+
+      p++;
+   }
+
+   if (endptr != NULL)
+     *endptr = (char*) p;
+   return MPC_INEX (inex_re, inex_im);
+
+error:
+   if (endptr != NULL)
+     *endptr = (char*) nptr;
+   mpfr_set_nan (MPC_RE (rop));
+   mpfr_set_nan (MPC_IM (rop));
+   return -1;
+}
diff --git a/mpc/src/sub.c b/mpc/src/sub.c
new file mode 100644
index 0000000..e09c542
--- /dev/null
+++ b/mpc/src/sub.c
@@ -0,0 +1,33 @@
+/* mpc_sub -- Subtract two complex numbers.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_sub (mpc_ptr a, mpc_srcptr b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_sub (MPC_RE(a), MPC_RE(b), MPC_RE(c), MPC_RND_RE(rnd));
+  inex_im = mpfr_sub (MPC_IM(a), MPC_IM(b), MPC_IM(c), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/sub_fr.c b/mpc/src/sub_fr.c
new file mode 100644
index 0000000..613c5e4
--- /dev/null
+++ b/mpc/src/sub_fr.c
@@ -0,0 +1,35 @@
+/* mpc_sub_fr -- Substract a floating-point number to the real part of a
+   complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return 0 iff both the real and imaginary parts are exact */
+int
+mpc_sub_fr (mpc_ptr a, mpc_srcptr b, mpfr_srcptr c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_sub (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_set (MPC_IM(a), MPC_IM(b), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/sub_ui.c b/mpc/src/sub_ui.c
new file mode 100644
index 0000000..888d430
--- /dev/null
+++ b/mpc/src/sub_ui.c
@@ -0,0 +1,34 @@
+/* mpc_sub_ui -- Add a complex number and an unsigned long int.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* return 0 iff both the real and imaginary parts are exact */
+int
+mpc_sub_ui (mpc_ptr a, mpc_srcptr b, unsigned long int c, mpc_rnd_t rnd)
+{
+  int inex_re, inex_im;
+
+  inex_re = mpfr_sub_ui (MPC_RE(a), MPC_RE(b), c, MPC_RND_RE(rnd));
+  inex_im = mpfr_set (MPC_IM(a), MPC_IM(b), MPC_RND_IM(rnd));
+
+  return MPC_INEX(inex_re, inex_im);
+}
diff --git a/mpc/src/swap.c b/mpc/src/swap.c
new file mode 100644
index 0000000..9271d97
--- /dev/null
+++ b/mpc/src/swap.c
@@ -0,0 +1,30 @@
+/* mpc_swap -- Swap two complex numbers.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+void
+mpc_swap (mpc_ptr a, mpc_ptr b)
+{
+  /* assumes real and imaginary parts do not overlap */
+  mpfr_swap (MPC_RE(a), MPC_RE(b));
+  mpfr_swap (MPC_IM(a), MPC_IM(b));
+}
diff --git a/mpc/src/tan.c b/mpc/src/tan.c
new file mode 100644
index 0000000..f29aa26
--- /dev/null
+++ b/mpc/src/tan.c
@@ -0,0 +1,285 @@
+/* mpc_tan -- tangent of a complex number.
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h>    /* for MPC_ASSERT */
+#include <limits.h>
+#include "mpc-impl.h"
+
+int
+mpc_tan (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  mpc_t x, y;
+  mpfr_prec_t prec;
+  mpfr_exp_t err;
+  int ok = 0;
+  int inex;
+
+  /* special values */
+  if (!mpc_fin_p (op))
+    {
+      if (mpfr_nan_p (MPC_RE (op)))
+        {
+          if (mpfr_inf_p (MPC_IM (op)))
+            /* tan(NaN -i*Inf) = +/-0 -i */
+            /* tan(NaN +i*Inf) = +/-0 +i */
+            {
+              /* exact unless 1 is not in exponent range */
+              inex = mpc_set_si_si (rop, 0,
+                                    (MPFR_SIGN (MPC_IM (op)) < 0) ? -1 : +1,
+                                    rnd);
+            }
+          else
+            /* tan(NaN +i*y) = NaN +i*NaN, when y is finite */
+            /* tan(NaN +i*NaN) = NaN +i*NaN */
+            {
+              mpfr_set_nan (MPC_RE (rop));
+              mpfr_set_nan (MPC_IM (rop));
+              inex = MPC_INEX (0, 0); /* always exact */
+            }
+        }
+      else if (mpfr_nan_p (MPC_IM (op)))
+        {
+          if (mpfr_cmp_ui (MPC_RE (op), 0) == 0)
+            /* tan(-0 +i*NaN) = -0 +i*NaN */
+            /* tan(+0 +i*NaN) = +0 +i*NaN */
+            {
+              mpc_set (rop, op, rnd);
+              inex = MPC_INEX (0, 0); /* always exact */
+            }
+          else
+            /* tan(x +i*NaN) = NaN +i*NaN, when x != 0 */
+            {
+              mpfr_set_nan (MPC_RE (rop));
+              mpfr_set_nan (MPC_IM (rop));
+              inex = MPC_INEX (0, 0); /* always exact */
+            }
+        }
+      else if (mpfr_inf_p (MPC_RE (op)))
+        {
+          if (mpfr_inf_p (MPC_IM (op)))
+            /* tan(-Inf -i*Inf) = -/+0 -i */
+            /* tan(-Inf +i*Inf) = -/+0 +i */
+            /* tan(+Inf -i*Inf) = +/-0 -i */
+            /* tan(+Inf +i*Inf) = +/-0 +i */
+            {
+              const int sign_re = mpfr_signbit (MPC_RE (op));
+              int inex_im;
+
+              mpfr_set_ui (MPC_RE (rop), 0, MPC_RND_RE (rnd));
+              mpfr_setsign (MPC_RE (rop), MPC_RE (rop), sign_re, GMP_RNDN);
+
+              /* exact, unless 1 is not in exponent range */
+              inex_im = mpfr_set_si (MPC_IM (rop),
+                                     mpfr_signbit (MPC_IM (op)) ? -1 : +1,
+                                     MPC_RND_IM (rnd));
+              inex = MPC_INEX (0, inex_im);
+            }
+          else
+            /* tan(-Inf +i*y) = tan(+Inf +i*y) = NaN +i*NaN, when y is
+               finite */
+            {
+              mpfr_set_nan (MPC_RE (rop));
+              mpfr_set_nan (MPC_IM (rop));
+              inex = MPC_INEX (0, 0); /* always exact */
+            }
+        }
+      else
+        /* tan(x -i*Inf) = +0*sin(x)*cos(x) -i, when x is finite */
+        /* tan(x +i*Inf) = +0*sin(x)*cos(x) +i, when x is finite */
+        {
+          mpfr_t c;
+          mpfr_t s;
+          int inex_im;
+
+          mpfr_init (c);
+          mpfr_init (s);
+
+          mpfr_sin_cos (s, c, MPC_RE (op), GMP_RNDN);
+          mpfr_set_ui (MPC_RE (rop), 0, MPC_RND_RE (rnd));
+          mpfr_setsign (MPC_RE (rop), MPC_RE (rop),
+                        mpfr_signbit (c) != mpfr_signbit (s), GMP_RNDN);
+          /* exact, unless 1 is not in exponent range */
+          inex_im = mpfr_set_si (MPC_IM (rop),
+                                 (mpfr_signbit (MPC_IM (op)) ? -1 : +1),
+                                 MPC_RND_IM (rnd));
+          inex = MPC_INEX (0, inex_im);
+
+          mpfr_clear (s);
+          mpfr_clear (c);
+        }
+
+      return inex;
+    }
+
+  if (mpfr_zero_p (MPC_RE (op)))
+    /* tan(-0 -i*y) = -0 +i*tanh(y), when y is finite. */
+    /* tan(+0 +i*y) = +0 +i*tanh(y), when y is finite. */
+    {
+      int inex_im;
+
+      mpfr_set (MPC_RE (rop), MPC_RE (op), MPC_RND_RE (rnd));
+      inex_im = mpfr_tanh (MPC_IM (rop), MPC_IM (op), MPC_RND_IM (rnd));
+
+      return MPC_INEX (0, inex_im);
+    }
+
+  if (mpfr_zero_p (MPC_IM (op)))
+    /* tan(x -i*0) = tan(x) -i*0, when x is finite. */
+    /* tan(x +i*0) = tan(x) +i*0, when x is finite. */
+    {
+      int inex_re;
+
+      inex_re = mpfr_tan (MPC_RE (rop), MPC_RE (op), MPC_RND_RE (rnd));
+      mpfr_set (MPC_IM (rop), MPC_IM (op), MPC_RND_IM (rnd));
+
+      return MPC_INEX (inex_re, 0);
+    }
+
+  /* ordinary (non-zero) numbers */
+
+  /* tan(op) = sin(op) / cos(op).
+
+     We use the following algorithm with rounding away from 0 for all
+     operations, and working precision w:
+
+     (1) x = A(sin(op))
+     (2) y = A(cos(op))
+     (3) z = A(x/y)
+
+     the error on Im(z) is at most 81 ulp,
+     the error on Re(z) is at most
+     7 ulp if k < 2,
+     8 ulp if k = 2,
+     else 5+k ulp, where
+     k = Exp(Re(x))+Exp(Re(y))-2min{Exp(Re(y)), Exp(Im(y))}-Exp(Re(x/y))
+     see proof in algorithms.tex.
+  */
+
+  prec = MPC_MAX_PREC(rop);
+
+  mpc_init2 (x, 2);
+  mpc_init2 (y, 2);
+
+  err = 7;
+
+  do
+    {
+      mpfr_exp_t k, exr, eyr, eyi, ezr;
+
+      ok = 0;
+
+      /* FIXME: prevent addition overflow */
+      prec += mpc_ceil_log2 (prec) + err;
+      mpc_set_prec (x, prec);
+      mpc_set_prec (y, prec);
+
+      /* rounding away from zero: except in the cases x=0 or y=0 (processed
+         above), sin x and cos y are never exact, so rounding away from 0 is
+         rounding towards 0 and adding one ulp to the absolute value */
+      mpc_sin_cos (x, y, op, MPC_RNDZZ, MPC_RNDZZ);
+      MPFR_ADD_ONE_ULP (MPC_RE (x));
+      MPFR_ADD_ONE_ULP (MPC_IM (x));
+      MPFR_ADD_ONE_ULP (MPC_RE (y));
+      MPFR_ADD_ONE_ULP (MPC_IM (y));
+      MPC_ASSERT (mpfr_zero_p (MPC_RE (x)) == 0);
+
+      if (   mpfr_inf_p (MPC_RE (x)) || mpfr_inf_p (MPC_IM (x))
+          || mpfr_inf_p (MPC_RE (y)) || mpfr_inf_p (MPC_IM (y))) {
+         /* If the real or imaginary part of x is infinite, it means that
+            Im(op) was large, in which case the result is
+            sign(tan(Re(op)))*0 + sign(Im(op))*I,
+            where sign(tan(Re(op))) = sign(Re(x))*sign(Re(y)). */
+          int inex_re, inex_im;
+          mpfr_set_ui (MPC_RE (rop), 0, GMP_RNDN);
+          if (mpfr_sgn (MPC_RE (x)) * mpfr_sgn (MPC_RE (y)) < 0)
+            {
+              mpfr_neg (MPC_RE (rop), MPC_RE (rop), GMP_RNDN);
+              inex_re = 1;
+            }
+          else
+            inex_re = -1; /* +0 is rounded down */
+          if (mpfr_sgn (MPC_IM (op)) > 0)
+            {
+              mpfr_set_ui (MPC_IM (rop), 1, GMP_RNDN);
+              inex_im = 1;
+            }
+          else
+            {
+              mpfr_set_si (MPC_IM (rop), -1, GMP_RNDN);
+              inex_im = -1;
+            }
+          inex = MPC_INEX(inex_re, inex_im);
+          goto end;
+        }
+
+      exr = mpfr_get_exp (MPC_RE (x));
+      eyr = mpfr_get_exp (MPC_RE (y));
+      eyi = mpfr_get_exp (MPC_IM (y));
+
+      /* some parts of the quotient may be exact */
+      inex = mpc_div (x, x, y, MPC_RNDZZ);
+      /* OP is no pure real nor pure imaginary, so in theory the real and
+         imaginary parts of its tangent cannot be null. However due to
+         rouding errors this might happen. Consider for example
+         tan(1+14*I) = 1.26e-10 + 1.00*I. For small precision sin(op) and
+         cos(op) differ only by a factor I, thus after mpc_div x = I and
+         its real part is zero. */
+      if (mpfr_zero_p (MPC_RE (x)) || mpfr_zero_p (MPC_IM (x)))
+        {
+          err = prec; /* double precision */
+          continue;
+        }
+      if (MPC_INEX_RE (inex))
+         MPFR_ADD_ONE_ULP (MPC_RE (x));
+      if (MPC_INEX_IM (inex))
+         MPFR_ADD_ONE_ULP (MPC_IM (x));
+      MPC_ASSERT (mpfr_zero_p (MPC_RE (x)) == 0);
+      ezr = mpfr_get_exp (MPC_RE (x));
+
+      /* FIXME: compute
+         k = Exp(Re(x))+Exp(Re(y))-2min{Exp(Re(y)), Exp(Im(y))}-Exp(Re(x/y))
+         avoiding overflow */
+      k = exr - ezr + MPC_MAX(-eyr, eyr - 2 * eyi);
+      err = k < 2 ? 7 : (k == 2 ? 8 : (5 + k));
+
+      /* Can the real part be rounded? */
+      ok = (!mpfr_number_p (MPC_RE (x)))
+           || mpfr_can_round (MPC_RE(x), prec - err, GMP_RNDN, GMP_RNDZ,
+                      MPC_PREC_RE(rop) + (MPC_RND_RE(rnd) == GMP_RNDN));
+
+      if (ok)
+        {
+          /* Can the imaginary part be rounded? */
+          ok = (!mpfr_number_p (MPC_IM (x)))
+               || mpfr_can_round (MPC_IM(x), prec - 6, GMP_RNDN, GMP_RNDZ,
+                      MPC_PREC_IM(rop) + (MPC_RND_IM(rnd) == GMP_RNDN));
+        }
+    }
+  while (ok == 0);
+
+  inex = mpc_set (rop, x, rnd);
+
+ end:
+  mpc_clear (x);
+  mpc_clear (y);
+
+  return inex;
+}
diff --git a/mpc/src/tanh.c b/mpc/src/tanh.c
new file mode 100644
index 0000000..438090a
--- /dev/null
+++ b/mpc/src/tanh.c
@@ -0,0 +1,48 @@
+/* mpc_tanh -- hyperbolic tangent of a complex number.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_tanh (mpc_ptr rop, mpc_srcptr op, mpc_rnd_t rnd)
+{
+  /* tanh(op) = -i*tan(i*op) = conj(-i*tan(conj(-i*op))) */
+  mpc_t z;
+  mpc_t tan_z;
+  int inex;
+
+  /* z := conj(-i * op) and rop = conj(-i * tan(z)), in other words, we have
+     to switch real and imaginary parts. Let us set them without copying
+     significands. */
+  MPC_RE (z)[0] = MPC_IM (op)[0];
+  MPC_IM (z)[0] = MPC_RE (op)[0];
+  MPC_RE (tan_z)[0] = MPC_IM (rop)[0];
+  MPC_IM (tan_z)[0] = MPC_RE (rop)[0];
+
+  inex = mpc_tan (tan_z, z, RNDC (MPC_RND_IM (rnd), MPC_RND_RE (rnd)));
+
+  /* tan_z and rop parts share the same significands, copy the rest now. */
+  MPC_RE (rop)[0] = MPC_IM (tan_z)[0];
+  MPC_IM (rop)[0] = MPC_RE (tan_z)[0];
+
+  /* swap inexact flags for real and imaginary parts */
+  return MPC_INEX (MPC_INEX_IM (inex), MPC_INEX_RE (inex));
+}
diff --git a/mpc/src/uceil_log2.c b/mpc/src/uceil_log2.c
new file mode 100644
index 0000000..665cefa
--- /dev/null
+++ b/mpc/src/uceil_log2.c
@@ -0,0 +1,34 @@
+/* mpc_ceil_log2 - returns ceil(log(d)/log(2))
+
+Copyright (C) INRIA, 2004, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+/* returns ceil(log(d)/log(2)) if d > 0 */
+/* Don't use count_leading_zeros since it is in longlong.h */
+mpfr_prec_t
+mpc_ceil_log2 (mpfr_prec_t d)
+{
+  mpfr_prec_t exp;
+
+  for (exp = 0; d > 1; d = (d + 1) / 2)
+    exp++;
+  return exp;
+}
diff --git a/mpc/src/ui_div.c b/mpc/src/ui_div.c
new file mode 100644
index 0000000..cae0a54
--- /dev/null
+++ b/mpc/src/ui_div.c
@@ -0,0 +1,37 @@
+/* mpc_ui_div -- Divide an unsigned long int by a complex number.
+
+Copyright (C) INRIA, 2002, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <limits.h>
+#include "mpc-impl.h"
+
+int
+mpc_ui_div (mpc_ptr a, unsigned long int b, mpc_srcptr c, mpc_rnd_t rnd)
+{
+  int inex;
+  mpc_t bb;
+
+  mpc_init2 (bb, sizeof(unsigned long int) * CHAR_BIT);
+  mpc_set_ui (bb, b, rnd); /* exact */
+  inex = mpc_div (a, bb, c, rnd);
+  mpc_clear (bb);
+
+  return inex;
+}
diff --git a/mpc/src/ui_ui_sub.c b/mpc/src/ui_ui_sub.c
new file mode 100644
index 0000000..af69777
--- /dev/null
+++ b/mpc/src/ui_ui_sub.c
@@ -0,0 +1,35 @@
+/* mpc_ui_ui_sub -- Subtract a complex number from another one given
+implicitly by its real and imaginary parts of type unsigned long int.
+
+Copyright (C) INRIA, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_ui_ui_sub (mpc_ptr rop, unsigned long int re, unsigned long int im,
+               mpc_srcptr op, mpc_rnd_t rnd)
+{
+   int inex_re, inex_im;
+
+   inex_re = mpfr_ui_sub (MPC_RE (rop), re, MPC_RE (op), MPC_RND_RE (rnd));
+   inex_im = mpfr_ui_sub (MPC_IM (rop), im, MPC_IM (op), MPC_RND_IM (rnd));
+
+   return MPC_INEX (inex_re, inex_im);
+}
diff --git a/mpc/src/urandom.c b/mpc/src/urandom.c
new file mode 100644
index 0000000..6330ccf
--- /dev/null
+++ b/mpc/src/urandom.c
@@ -0,0 +1,33 @@
+/* mpc_urandom -- Generate a random complex number uniformly distributed in
+   the interval [0,1[.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-impl.h"
+
+int
+mpc_urandom (mpc_ptr a, gmp_randstate_t state)
+{
+  int r, i;
+
+  r = mpfr_urandomb (MPC_RE(a), state);
+  i = mpfr_urandomb (MPC_IM(a), state);
+  return r && i;
+}
diff --git a/mpc/tests/Makefile.am b/mpc/tests/Makefile.am
new file mode 100644
index 0000000..4b11f4b
--- /dev/null
+++ b/mpc/tests/Makefile.am
@@ -0,0 +1,29 @@
+## Makefile.am -- Process this file with automake to produce Makefile.in
+AM_CFLAGS=@WARNINGCFLAGS@
+AM_CPPFLAGS = -I$(top_srcdir)/src
+LDADD = libmpc-tests.la $(top_builddir)/src/libmpc.la
+# LOADLIBES (documented in the "GNU make" manual and equivalent to LDLIBS)
+# enables to compile a program foo.c in the test directory by simply doing
+# "make foo".
+LOADLIBES=$(DEFS) -I$(top_srcdir)/src -I$(top_builddir) $(CPPFLAGS) $(CFLAGS) $(top_builddir)/tests/.libs/libmpc-tests.a $(top_builddir)/src/.libs/libmpc.a $(LIBS)
+
+check_PROGRAMS = tabs tacos tacosh tadd tadd_fr tadd_si tadd_ui targ tasin    \
+tasinh tatan tatanh tconj tcos tcosh tdiv tdiv_2exp tdiv_fr tdiv_ui texp tfma \
+tfr_div tfr_sub timag tio_str tlog tmul tmul_2exp tmul_fr tmul_i tmul_si      \
+tmul_ui tneg tnorm tpow tpow_ld tpow_d tpow_fr tpow_si tpow_ui tpow_z tprec   \
+tproj treal treimref tset tsin tsin_cos tsinh tsqr tsqrt tstrtoc tsub tsub_fr \
+tsub_ui ttan ttanh tui_div tui_ui_sub tget_version
+
+check_LTLIBRARIES=libmpc-tests.la
+libmpc_tests_la_SOURCES=mpc-tests.h random.c tgeneric.c read_data.c           \
+comparisons.c memory.c
+
+EXTRA_DIST = abs.dat acos.dat acosh.dat asin.dat asinh.dat atan.dat atanh.dat \
+add.dat add_fr.dat arg.dat conj.dat cos.dat cosh.dat div.dat div_fr.dat       \
+exp.dat fma.dat fr_div.dat fr_sub.dat inp_str.dat log.dat mul.dat mul_fr.dat  \
+neg.dat norm.dat pow.dat pow_ui.dat proj.dat sin.dat sinh.dat sqr.dat         \
+sqrt.dat strtoc.dat sub.dat sub_fr.dat tan.dat tanh.dat
+
+TESTS = $(check_PROGRAMS)
+CLEANFILES = mpc_test
+
diff --git a/mpc/tests/Makefile.in b/mpc/tests/Makefile.in
new file mode 100644
index 0000000..c5496c2
--- /dev/null
+++ b/mpc/tests/Makefile.in
@@ -0,0 +1,1115 @@
+# Makefile.in generated by automake 1.11.1 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
+# Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkglibexecdir = $(libexecdir)/@PACKAGE@
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+build_triplet = @build@
+host_triplet = @host@
+check_PROGRAMS = tabs$(EXEEXT) tacos$(EXEEXT) tacosh$(EXEEXT) \
+	tadd$(EXEEXT) tadd_fr$(EXEEXT) tadd_si$(EXEEXT) \
+	tadd_ui$(EXEEXT) targ$(EXEEXT) tasin$(EXEEXT) tasinh$(EXEEXT) \
+	tatan$(EXEEXT) tatanh$(EXEEXT) tconj$(EXEEXT) tcos$(EXEEXT) \
+	tcosh$(EXEEXT) tdiv$(EXEEXT) tdiv_2exp$(EXEEXT) \
+	tdiv_fr$(EXEEXT) tdiv_ui$(EXEEXT) texp$(EXEEXT) tfma$(EXEEXT) \
+	tfr_div$(EXEEXT) tfr_sub$(EXEEXT) timag$(EXEEXT) \
+	tio_str$(EXEEXT) tlog$(EXEEXT) tmul$(EXEEXT) \
+	tmul_2exp$(EXEEXT) tmul_fr$(EXEEXT) tmul_i$(EXEEXT) \
+	tmul_si$(EXEEXT) tmul_ui$(EXEEXT) tneg$(EXEEXT) tnorm$(EXEEXT) \
+	tpow$(EXEEXT) tpow_ld$(EXEEXT) tpow_d$(EXEEXT) \
+	tpow_fr$(EXEEXT) tpow_si$(EXEEXT) tpow_ui$(EXEEXT) \
+	tpow_z$(EXEEXT) tprec$(EXEEXT) tproj$(EXEEXT) treal$(EXEEXT) \
+	treimref$(EXEEXT) tset$(EXEEXT) tsin$(EXEEXT) \
+	tsin_cos$(EXEEXT) tsinh$(EXEEXT) tsqr$(EXEEXT) tsqrt$(EXEEXT) \
+	tstrtoc$(EXEEXT) tsub$(EXEEXT) tsub_fr$(EXEEXT) \
+	tsub_ui$(EXEEXT) ttan$(EXEEXT) ttanh$(EXEEXT) tui_div$(EXEEXT) \
+	tui_ui_sub$(EXEEXT) tget_version$(EXEEXT)
+subdir = tests
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_c_check_flag.m4 \
+	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
+	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
+	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/mpc.m4 \
+	$(top_srcdir)/configure.ac
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(install_sh) -d
+CONFIG_HEADER = $(top_builddir)/config.h
+CONFIG_CLEAN_FILES =
+CONFIG_CLEAN_VPATH_FILES =
+libmpc_tests_la_LIBADD =
+am_libmpc_tests_la_OBJECTS = random.lo tgeneric.lo read_data.lo \
+	comparisons.lo memory.lo
+libmpc_tests_la_OBJECTS = $(am_libmpc_tests_la_OBJECTS)
+tabs_SOURCES = tabs.c
+tabs_OBJECTS = tabs.$(OBJEXT)
+tabs_LDADD = $(LDADD)
+tabs_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tacos_SOURCES = tacos.c
+tacos_OBJECTS = tacos.$(OBJEXT)
+tacos_LDADD = $(LDADD)
+tacos_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tacosh_SOURCES = tacosh.c
+tacosh_OBJECTS = tacosh.$(OBJEXT)
+tacosh_LDADD = $(LDADD)
+tacosh_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tadd_SOURCES = tadd.c
+tadd_OBJECTS = tadd.$(OBJEXT)
+tadd_LDADD = $(LDADD)
+tadd_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tadd_fr_SOURCES = tadd_fr.c
+tadd_fr_OBJECTS = tadd_fr.$(OBJEXT)
+tadd_fr_LDADD = $(LDADD)
+tadd_fr_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tadd_si_SOURCES = tadd_si.c
+tadd_si_OBJECTS = tadd_si.$(OBJEXT)
+tadd_si_LDADD = $(LDADD)
+tadd_si_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tadd_ui_SOURCES = tadd_ui.c
+tadd_ui_OBJECTS = tadd_ui.$(OBJEXT)
+tadd_ui_LDADD = $(LDADD)
+tadd_ui_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+targ_SOURCES = targ.c
+targ_OBJECTS = targ.$(OBJEXT)
+targ_LDADD = $(LDADD)
+targ_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tasin_SOURCES = tasin.c
+tasin_OBJECTS = tasin.$(OBJEXT)
+tasin_LDADD = $(LDADD)
+tasin_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tasinh_SOURCES = tasinh.c
+tasinh_OBJECTS = tasinh.$(OBJEXT)
+tasinh_LDADD = $(LDADD)
+tasinh_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tatan_SOURCES = tatan.c
+tatan_OBJECTS = tatan.$(OBJEXT)
+tatan_LDADD = $(LDADD)
+tatan_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tatanh_SOURCES = tatanh.c
+tatanh_OBJECTS = tatanh.$(OBJEXT)
+tatanh_LDADD = $(LDADD)
+tatanh_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tconj_SOURCES = tconj.c
+tconj_OBJECTS = tconj.$(OBJEXT)
+tconj_LDADD = $(LDADD)
+tconj_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tcos_SOURCES = tcos.c
+tcos_OBJECTS = tcos.$(OBJEXT)
+tcos_LDADD = $(LDADD)
+tcos_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tcosh_SOURCES = tcosh.c
+tcosh_OBJECTS = tcosh.$(OBJEXT)
+tcosh_LDADD = $(LDADD)
+tcosh_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tdiv_SOURCES = tdiv.c
+tdiv_OBJECTS = tdiv.$(OBJEXT)
+tdiv_LDADD = $(LDADD)
+tdiv_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tdiv_2exp_SOURCES = tdiv_2exp.c
+tdiv_2exp_OBJECTS = tdiv_2exp.$(OBJEXT)
+tdiv_2exp_LDADD = $(LDADD)
+tdiv_2exp_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tdiv_fr_SOURCES = tdiv_fr.c
+tdiv_fr_OBJECTS = tdiv_fr.$(OBJEXT)
+tdiv_fr_LDADD = $(LDADD)
+tdiv_fr_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tdiv_ui_SOURCES = tdiv_ui.c
+tdiv_ui_OBJECTS = tdiv_ui.$(OBJEXT)
+tdiv_ui_LDADD = $(LDADD)
+tdiv_ui_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+texp_SOURCES = texp.c
+texp_OBJECTS = texp.$(OBJEXT)
+texp_LDADD = $(LDADD)
+texp_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tfma_SOURCES = tfma.c
+tfma_OBJECTS = tfma.$(OBJEXT)
+tfma_LDADD = $(LDADD)
+tfma_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tfr_div_SOURCES = tfr_div.c
+tfr_div_OBJECTS = tfr_div.$(OBJEXT)
+tfr_div_LDADD = $(LDADD)
+tfr_div_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tfr_sub_SOURCES = tfr_sub.c
+tfr_sub_OBJECTS = tfr_sub.$(OBJEXT)
+tfr_sub_LDADD = $(LDADD)
+tfr_sub_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tget_version_SOURCES = tget_version.c
+tget_version_OBJECTS = tget_version.$(OBJEXT)
+tget_version_LDADD = $(LDADD)
+tget_version_DEPENDENCIES = libmpc-tests.la \
+	$(top_builddir)/src/libmpc.la
+timag_SOURCES = timag.c
+timag_OBJECTS = timag.$(OBJEXT)
+timag_LDADD = $(LDADD)
+timag_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tio_str_SOURCES = tio_str.c
+tio_str_OBJECTS = tio_str.$(OBJEXT)
+tio_str_LDADD = $(LDADD)
+tio_str_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tlog_SOURCES = tlog.c
+tlog_OBJECTS = tlog.$(OBJEXT)
+tlog_LDADD = $(LDADD)
+tlog_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tmul_SOURCES = tmul.c
+tmul_OBJECTS = tmul.$(OBJEXT)
+tmul_LDADD = $(LDADD)
+tmul_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tmul_2exp_SOURCES = tmul_2exp.c
+tmul_2exp_OBJECTS = tmul_2exp.$(OBJEXT)
+tmul_2exp_LDADD = $(LDADD)
+tmul_2exp_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tmul_fr_SOURCES = tmul_fr.c
+tmul_fr_OBJECTS = tmul_fr.$(OBJEXT)
+tmul_fr_LDADD = $(LDADD)
+tmul_fr_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tmul_i_SOURCES = tmul_i.c
+tmul_i_OBJECTS = tmul_i.$(OBJEXT)
+tmul_i_LDADD = $(LDADD)
+tmul_i_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tmul_si_SOURCES = tmul_si.c
+tmul_si_OBJECTS = tmul_si.$(OBJEXT)
+tmul_si_LDADD = $(LDADD)
+tmul_si_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tmul_ui_SOURCES = tmul_ui.c
+tmul_ui_OBJECTS = tmul_ui.$(OBJEXT)
+tmul_ui_LDADD = $(LDADD)
+tmul_ui_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tneg_SOURCES = tneg.c
+tneg_OBJECTS = tneg.$(OBJEXT)
+tneg_LDADD = $(LDADD)
+tneg_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tnorm_SOURCES = tnorm.c
+tnorm_OBJECTS = tnorm.$(OBJEXT)
+tnorm_LDADD = $(LDADD)
+tnorm_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tpow_SOURCES = tpow.c
+tpow_OBJECTS = tpow.$(OBJEXT)
+tpow_LDADD = $(LDADD)
+tpow_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tpow_d_SOURCES = tpow_d.c
+tpow_d_OBJECTS = tpow_d.$(OBJEXT)
+tpow_d_LDADD = $(LDADD)
+tpow_d_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tpow_fr_SOURCES = tpow_fr.c
+tpow_fr_OBJECTS = tpow_fr.$(OBJEXT)
+tpow_fr_LDADD = $(LDADD)
+tpow_fr_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tpow_ld_SOURCES = tpow_ld.c
+tpow_ld_OBJECTS = tpow_ld.$(OBJEXT)
+tpow_ld_LDADD = $(LDADD)
+tpow_ld_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tpow_si_SOURCES = tpow_si.c
+tpow_si_OBJECTS = tpow_si.$(OBJEXT)
+tpow_si_LDADD = $(LDADD)
+tpow_si_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tpow_ui_SOURCES = tpow_ui.c
+tpow_ui_OBJECTS = tpow_ui.$(OBJEXT)
+tpow_ui_LDADD = $(LDADD)
+tpow_ui_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tpow_z_SOURCES = tpow_z.c
+tpow_z_OBJECTS = tpow_z.$(OBJEXT)
+tpow_z_LDADD = $(LDADD)
+tpow_z_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tprec_SOURCES = tprec.c
+tprec_OBJECTS = tprec.$(OBJEXT)
+tprec_LDADD = $(LDADD)
+tprec_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tproj_SOURCES = tproj.c
+tproj_OBJECTS = tproj.$(OBJEXT)
+tproj_LDADD = $(LDADD)
+tproj_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+treal_SOURCES = treal.c
+treal_OBJECTS = treal.$(OBJEXT)
+treal_LDADD = $(LDADD)
+treal_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+treimref_SOURCES = treimref.c
+treimref_OBJECTS = treimref.$(OBJEXT)
+treimref_LDADD = $(LDADD)
+treimref_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tset_SOURCES = tset.c
+tset_OBJECTS = tset.$(OBJEXT)
+tset_LDADD = $(LDADD)
+tset_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tsin_SOURCES = tsin.c
+tsin_OBJECTS = tsin.$(OBJEXT)
+tsin_LDADD = $(LDADD)
+tsin_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tsin_cos_SOURCES = tsin_cos.c
+tsin_cos_OBJECTS = tsin_cos.$(OBJEXT)
+tsin_cos_LDADD = $(LDADD)
+tsin_cos_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tsinh_SOURCES = tsinh.c
+tsinh_OBJECTS = tsinh.$(OBJEXT)
+tsinh_LDADD = $(LDADD)
+tsinh_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tsqr_SOURCES = tsqr.c
+tsqr_OBJECTS = tsqr.$(OBJEXT)
+tsqr_LDADD = $(LDADD)
+tsqr_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tsqrt_SOURCES = tsqrt.c
+tsqrt_OBJECTS = tsqrt.$(OBJEXT)
+tsqrt_LDADD = $(LDADD)
+tsqrt_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tstrtoc_SOURCES = tstrtoc.c
+tstrtoc_OBJECTS = tstrtoc.$(OBJEXT)
+tstrtoc_LDADD = $(LDADD)
+tstrtoc_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tsub_SOURCES = tsub.c
+tsub_OBJECTS = tsub.$(OBJEXT)
+tsub_LDADD = $(LDADD)
+tsub_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tsub_fr_SOURCES = tsub_fr.c
+tsub_fr_OBJECTS = tsub_fr.$(OBJEXT)
+tsub_fr_LDADD = $(LDADD)
+tsub_fr_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tsub_ui_SOURCES = tsub_ui.c
+tsub_ui_OBJECTS = tsub_ui.$(OBJEXT)
+tsub_ui_LDADD = $(LDADD)
+tsub_ui_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+ttan_SOURCES = ttan.c
+ttan_OBJECTS = ttan.$(OBJEXT)
+ttan_LDADD = $(LDADD)
+ttan_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+ttanh_SOURCES = ttanh.c
+ttanh_OBJECTS = ttanh.$(OBJEXT)
+ttanh_LDADD = $(LDADD)
+ttanh_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tui_div_SOURCES = tui_div.c
+tui_div_OBJECTS = tui_div.$(OBJEXT)
+tui_div_LDADD = $(LDADD)
+tui_div_DEPENDENCIES = libmpc-tests.la $(top_builddir)/src/libmpc.la
+tui_ui_sub_SOURCES = tui_ui_sub.c
+tui_ui_sub_OBJECTS = tui_ui_sub.$(OBJEXT)
+tui_ui_sub_LDADD = $(LDADD)
+tui_ui_sub_DEPENDENCIES = libmpc-tests.la \
+	$(top_builddir)/src/libmpc.la
+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
+depcomp = $(SHELL) $(top_srcdir)/depcomp
+am__depfiles_maybe = depfiles
+am__mv = mv -f
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
+	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
+	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
+	$(LDFLAGS) -o $@
+SOURCES = $(libmpc_tests_la_SOURCES) tabs.c tacos.c tacosh.c tadd.c \
+	tadd_fr.c tadd_si.c tadd_ui.c targ.c tasin.c tasinh.c tatan.c \
+	tatanh.c tconj.c tcos.c tcosh.c tdiv.c tdiv_2exp.c tdiv_fr.c \
+	tdiv_ui.c texp.c tfma.c tfr_div.c tfr_sub.c tget_version.c \
+	timag.c tio_str.c tlog.c tmul.c tmul_2exp.c tmul_fr.c tmul_i.c \
+	tmul_si.c tmul_ui.c tneg.c tnorm.c tpow.c tpow_d.c tpow_fr.c \
+	tpow_ld.c tpow_si.c tpow_ui.c tpow_z.c tprec.c tproj.c treal.c \
+	treimref.c tset.c tsin.c tsin_cos.c tsinh.c tsqr.c tsqrt.c \
+	tstrtoc.c tsub.c tsub_fr.c tsub_ui.c ttan.c ttanh.c tui_div.c \
+	tui_ui_sub.c
+DIST_SOURCES = $(libmpc_tests_la_SOURCES) tabs.c tacos.c tacosh.c \
+	tadd.c tadd_fr.c tadd_si.c tadd_ui.c targ.c tasin.c tasinh.c \
+	tatan.c tatanh.c tconj.c tcos.c tcosh.c tdiv.c tdiv_2exp.c \
+	tdiv_fr.c tdiv_ui.c texp.c tfma.c tfr_div.c tfr_sub.c \
+	tget_version.c timag.c tio_str.c tlog.c tmul.c tmul_2exp.c \
+	tmul_fr.c tmul_i.c tmul_si.c tmul_ui.c tneg.c tnorm.c tpow.c \
+	tpow_d.c tpow_fr.c tpow_ld.c tpow_si.c tpow_ui.c tpow_z.c \
+	tprec.c tproj.c treal.c treimref.c tset.c tsin.c tsin_cos.c \
+	tsinh.c tsqr.c tsqrt.c tstrtoc.c tsub.c tsub_fr.c tsub_ui.c \
+	ttan.c ttanh.c tui_div.c tui_ui_sub.c
+ETAGS = etags
+CTAGS = ctags
+am__tty_colors = \
+red=; grn=; lgn=; blu=; std=
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+CC = @CC@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPP = @CPP@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DSYMUTIL = @DSYMUTIL@
+DUMPBIN = @DUMPBIN@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EGREP = @EGREP@
+EXEEXT = @EXEEXT@
+FGREP = @FGREP@
+GREP = @GREP@
+INSTALL = @INSTALL@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LIBTOOL = @LIBTOOL@
+LIPO = @LIPO@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAKEINFO = @MAKEINFO@
+MKDIR_P = @MKDIR_P@
+MPC_LOG_H = @MPC_LOG_H@
+NM = @NM@
+NMEDIT = @NMEDIT@
+OBJDUMP = @OBJDUMP@
+OBJEXT = @OBJEXT@
+OTOOL = @OTOOL@
+OTOOL64 = @OTOOL64@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_URL = @PACKAGE_URL@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SED = @SED@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+WARNINGCFLAGS = @WARNINGCFLAGS@
+abs_builddir = @abs_builddir@
+abs_srcdir = @abs_srcdir@
+abs_top_builddir = @abs_top_builddir@
+abs_top_srcdir = @abs_top_srcdir@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+am__tar = @am__tar@
+am__untar = @am__untar@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+builddir = @builddir@
+datadir = @datadir@
+datarootdir = @datarootdir@
+docdir = @docdir@
+dvidir = @dvidir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+htmldir = @htmldir@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localedir = @localedir@
+localstatedir = @localstatedir@
+lt_ECHO = @lt_ECHO@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+pdfdir = @pdfdir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+psdir = @psdir@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+srcdir = @srcdir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+top_build_prefix = @top_build_prefix@
+top_builddir = @top_builddir@
+top_srcdir = @top_srcdir@
+AM_CFLAGS = @WARNINGCFLAGS@
+AM_CPPFLAGS = -I$(top_srcdir)/src
+LDADD = libmpc-tests.la $(top_builddir)/src/libmpc.la
+# LOADLIBES (documented in the "GNU make" manual and equivalent to LDLIBS)
+# enables to compile a program foo.c in the test directory by simply doing
+# "make foo".
+LOADLIBES = $(DEFS) -I$(top_srcdir)/src -I$(top_builddir) $(CPPFLAGS) $(CFLAGS) $(top_builddir)/tests/.libs/libmpc-tests.a $(top_builddir)/src/.libs/libmpc.a $(LIBS)
+check_LTLIBRARIES = libmpc-tests.la
+libmpc_tests_la_SOURCES = mpc-tests.h random.c tgeneric.c read_data.c           \
+comparisons.c memory.c
+
+EXTRA_DIST = abs.dat acos.dat acosh.dat asin.dat asinh.dat atan.dat atanh.dat \
+add.dat add_fr.dat arg.dat conj.dat cos.dat cosh.dat div.dat div_fr.dat       \
+exp.dat fma.dat fr_div.dat fr_sub.dat inp_str.dat log.dat mul.dat mul_fr.dat  \
+neg.dat norm.dat pow.dat pow_ui.dat proj.dat sin.dat sinh.dat sqr.dat         \
+sqrt.dat strtoc.dat sub.dat sub_fr.dat tan.dat tanh.dat
+
+TESTS = $(check_PROGRAMS)
+CLEANFILES = mpc_test
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .lo .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
+	        && { if test -f $@; then exit 0; else break; fi; }; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
+	$(am__cd) $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu tests/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(am__aclocal_m4_deps):
+
+clean-checkLTLIBRARIES:
+	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
+	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
+	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
+	  test "$$dir" != "$$p" || dir=.; \
+	  echo "rm -f \"$${dir}/so_locations\""; \
+	  rm -f "$${dir}/so_locations"; \
+	done
+libmpc-tests.la: $(libmpc_tests_la_OBJECTS) $(libmpc_tests_la_DEPENDENCIES) 
+	$(LINK)  $(libmpc_tests_la_OBJECTS) $(libmpc_tests_la_LIBADD) $(LIBS)
+
+clean-checkPROGRAMS:
+	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
+	echo " rm -f" $$list; \
+	rm -f $$list || exit $$?; \
+	test -n "$(EXEEXT)" || exit 0; \
+	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
+	echo " rm -f" $$list; \
+	rm -f $$list
+tabs$(EXEEXT): $(tabs_OBJECTS) $(tabs_DEPENDENCIES) 
+	@rm -f tabs$(EXEEXT)
+	$(LINK) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)
+tacos$(EXEEXT): $(tacos_OBJECTS) $(tacos_DEPENDENCIES) 
+	@rm -f tacos$(EXEEXT)
+	$(LINK) $(tacos_OBJECTS) $(tacos_LDADD) $(LIBS)
+tacosh$(EXEEXT): $(tacosh_OBJECTS) $(tacosh_DEPENDENCIES) 
+	@rm -f tacosh$(EXEEXT)
+	$(LINK) $(tacosh_OBJECTS) $(tacosh_LDADD) $(LIBS)
+tadd$(EXEEXT): $(tadd_OBJECTS) $(tadd_DEPENDENCIES) 
+	@rm -f tadd$(EXEEXT)
+	$(LINK) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)
+tadd_fr$(EXEEXT): $(tadd_fr_OBJECTS) $(tadd_fr_DEPENDENCIES) 
+	@rm -f tadd_fr$(EXEEXT)
+	$(LINK) $(tadd_fr_OBJECTS) $(tadd_fr_LDADD) $(LIBS)
+tadd_si$(EXEEXT): $(tadd_si_OBJECTS) $(tadd_si_DEPENDENCIES) 
+	@rm -f tadd_si$(EXEEXT)
+	$(LINK) $(tadd_si_OBJECTS) $(tadd_si_LDADD) $(LIBS)
+tadd_ui$(EXEEXT): $(tadd_ui_OBJECTS) $(tadd_ui_DEPENDENCIES) 
+	@rm -f tadd_ui$(EXEEXT)
+	$(LINK) $(tadd_ui_OBJECTS) $(tadd_ui_LDADD) $(LIBS)
+targ$(EXEEXT): $(targ_OBJECTS) $(targ_DEPENDENCIES) 
+	@rm -f targ$(EXEEXT)
+	$(LINK) $(targ_OBJECTS) $(targ_LDADD) $(LIBS)
+tasin$(EXEEXT): $(tasin_OBJECTS) $(tasin_DEPENDENCIES) 
+	@rm -f tasin$(EXEEXT)
+	$(LINK) $(tasin_OBJECTS) $(tasin_LDADD) $(LIBS)
+tasinh$(EXEEXT): $(tasinh_OBJECTS) $(tasinh_DEPENDENCIES) 
+	@rm -f tasinh$(EXEEXT)
+	$(LINK) $(tasinh_OBJECTS) $(tasinh_LDADD) $(LIBS)
+tatan$(EXEEXT): $(tatan_OBJECTS) $(tatan_DEPENDENCIES) 
+	@rm -f tatan$(EXEEXT)
+	$(LINK) $(tatan_OBJECTS) $(tatan_LDADD) $(LIBS)
+tatanh$(EXEEXT): $(tatanh_OBJECTS) $(tatanh_DEPENDENCIES) 
+	@rm -f tatanh$(EXEEXT)
+	$(LINK) $(tatanh_OBJECTS) $(tatanh_LDADD) $(LIBS)
+tconj$(EXEEXT): $(tconj_OBJECTS) $(tconj_DEPENDENCIES) 
+	@rm -f tconj$(EXEEXT)
+	$(LINK) $(tconj_OBJECTS) $(tconj_LDADD) $(LIBS)
+tcos$(EXEEXT): $(tcos_OBJECTS) $(tcos_DEPENDENCIES) 
+	@rm -f tcos$(EXEEXT)
+	$(LINK) $(tcos_OBJECTS) $(tcos_LDADD) $(LIBS)
+tcosh$(EXEEXT): $(tcosh_OBJECTS) $(tcosh_DEPENDENCIES) 
+	@rm -f tcosh$(EXEEXT)
+	$(LINK) $(tcosh_OBJECTS) $(tcosh_LDADD) $(LIBS)
+tdiv$(EXEEXT): $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES) 
+	@rm -f tdiv$(EXEEXT)
+	$(LINK) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)
+tdiv_2exp$(EXEEXT): $(tdiv_2exp_OBJECTS) $(tdiv_2exp_DEPENDENCIES) 
+	@rm -f tdiv_2exp$(EXEEXT)
+	$(LINK) $(tdiv_2exp_OBJECTS) $(tdiv_2exp_LDADD) $(LIBS)
+tdiv_fr$(EXEEXT): $(tdiv_fr_OBJECTS) $(tdiv_fr_DEPENDENCIES) 
+	@rm -f tdiv_fr$(EXEEXT)
+	$(LINK) $(tdiv_fr_OBJECTS) $(tdiv_fr_LDADD) $(LIBS)
+tdiv_ui$(EXEEXT): $(tdiv_ui_OBJECTS) $(tdiv_ui_DEPENDENCIES) 
+	@rm -f tdiv_ui$(EXEEXT)
+	$(LINK) $(tdiv_ui_OBJECTS) $(tdiv_ui_LDADD) $(LIBS)
+texp$(EXEEXT): $(texp_OBJECTS) $(texp_DEPENDENCIES) 
+	@rm -f texp$(EXEEXT)
+	$(LINK) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)
+tfma$(EXEEXT): $(tfma_OBJECTS) $(tfma_DEPENDENCIES) 
+	@rm -f tfma$(EXEEXT)
+	$(LINK) $(tfma_OBJECTS) $(tfma_LDADD) $(LIBS)
+tfr_div$(EXEEXT): $(tfr_div_OBJECTS) $(tfr_div_DEPENDENCIES) 
+	@rm -f tfr_div$(EXEEXT)
+	$(LINK) $(tfr_div_OBJECTS) $(tfr_div_LDADD) $(LIBS)
+tfr_sub$(EXEEXT): $(tfr_sub_OBJECTS) $(tfr_sub_DEPENDENCIES) 
+	@rm -f tfr_sub$(EXEEXT)
+	$(LINK) $(tfr_sub_OBJECTS) $(tfr_sub_LDADD) $(LIBS)
+tget_version$(EXEEXT): $(tget_version_OBJECTS) $(tget_version_DEPENDENCIES) 
+	@rm -f tget_version$(EXEEXT)
+	$(LINK) $(tget_version_OBJECTS) $(tget_version_LDADD) $(LIBS)
+timag$(EXEEXT): $(timag_OBJECTS) $(timag_DEPENDENCIES) 
+	@rm -f timag$(EXEEXT)
+	$(LINK) $(timag_OBJECTS) $(timag_LDADD) $(LIBS)
+tio_str$(EXEEXT): $(tio_str_OBJECTS) $(tio_str_DEPENDENCIES) 
+	@rm -f tio_str$(EXEEXT)
+	$(LINK) $(tio_str_OBJECTS) $(tio_str_LDADD) $(LIBS)
+tlog$(EXEEXT): $(tlog_OBJECTS) $(tlog_DEPENDENCIES) 
+	@rm -f tlog$(EXEEXT)
+	$(LINK) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)
+tmul$(EXEEXT): $(tmul_OBJECTS) $(tmul_DEPENDENCIES) 
+	@rm -f tmul$(EXEEXT)
+	$(LINK) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)
+tmul_2exp$(EXEEXT): $(tmul_2exp_OBJECTS) $(tmul_2exp_DEPENDENCIES) 
+	@rm -f tmul_2exp$(EXEEXT)
+	$(LINK) $(tmul_2exp_OBJECTS) $(tmul_2exp_LDADD) $(LIBS)
+tmul_fr$(EXEEXT): $(tmul_fr_OBJECTS) $(tmul_fr_DEPENDENCIES) 
+	@rm -f tmul_fr$(EXEEXT)
+	$(LINK) $(tmul_fr_OBJECTS) $(tmul_fr_LDADD) $(LIBS)
+tmul_i$(EXEEXT): $(tmul_i_OBJECTS) $(tmul_i_DEPENDENCIES) 
+	@rm -f tmul_i$(EXEEXT)
+	$(LINK) $(tmul_i_OBJECTS) $(tmul_i_LDADD) $(LIBS)
+tmul_si$(EXEEXT): $(tmul_si_OBJECTS) $(tmul_si_DEPENDENCIES) 
+	@rm -f tmul_si$(EXEEXT)
+	$(LINK) $(tmul_si_OBJECTS) $(tmul_si_LDADD) $(LIBS)
+tmul_ui$(EXEEXT): $(tmul_ui_OBJECTS) $(tmul_ui_DEPENDENCIES) 
+	@rm -f tmul_ui$(EXEEXT)
+	$(LINK) $(tmul_ui_OBJECTS) $(tmul_ui_LDADD) $(LIBS)
+tneg$(EXEEXT): $(tneg_OBJECTS) $(tneg_DEPENDENCIES) 
+	@rm -f tneg$(EXEEXT)
+	$(LINK) $(tneg_OBJECTS) $(tneg_LDADD) $(LIBS)
+tnorm$(EXEEXT): $(tnorm_OBJECTS) $(tnorm_DEPENDENCIES) 
+	@rm -f tnorm$(EXEEXT)
+	$(LINK) $(tnorm_OBJECTS) $(tnorm_LDADD) $(LIBS)
+tpow$(EXEEXT): $(tpow_OBJECTS) $(tpow_DEPENDENCIES) 
+	@rm -f tpow$(EXEEXT)
+	$(LINK) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)
+tpow_d$(EXEEXT): $(tpow_d_OBJECTS) $(tpow_d_DEPENDENCIES) 
+	@rm -f tpow_d$(EXEEXT)
+	$(LINK) $(tpow_d_OBJECTS) $(tpow_d_LDADD) $(LIBS)
+tpow_fr$(EXEEXT): $(tpow_fr_OBJECTS) $(tpow_fr_DEPENDENCIES) 
+	@rm -f tpow_fr$(EXEEXT)
+	$(LINK) $(tpow_fr_OBJECTS) $(tpow_fr_LDADD) $(LIBS)
+tpow_ld$(EXEEXT): $(tpow_ld_OBJECTS) $(tpow_ld_DEPENDENCIES) 
+	@rm -f tpow_ld$(EXEEXT)
+	$(LINK) $(tpow_ld_OBJECTS) $(tpow_ld_LDADD) $(LIBS)
+tpow_si$(EXEEXT): $(tpow_si_OBJECTS) $(tpow_si_DEPENDENCIES) 
+	@rm -f tpow_si$(EXEEXT)
+	$(LINK) $(tpow_si_OBJECTS) $(tpow_si_LDADD) $(LIBS)
+tpow_ui$(EXEEXT): $(tpow_ui_OBJECTS) $(tpow_ui_DEPENDENCIES) 
+	@rm -f tpow_ui$(EXEEXT)
+	$(LINK) $(tpow_ui_OBJECTS) $(tpow_ui_LDADD) $(LIBS)
+tpow_z$(EXEEXT): $(tpow_z_OBJECTS) $(tpow_z_DEPENDENCIES) 
+	@rm -f tpow_z$(EXEEXT)
+	$(LINK) $(tpow_z_OBJECTS) $(tpow_z_LDADD) $(LIBS)
+tprec$(EXEEXT): $(tprec_OBJECTS) $(tprec_DEPENDENCIES) 
+	@rm -f tprec$(EXEEXT)
+	$(LINK) $(tprec_OBJECTS) $(tprec_LDADD) $(LIBS)
+tproj$(EXEEXT): $(tproj_OBJECTS) $(tproj_DEPENDENCIES) 
+	@rm -f tproj$(EXEEXT)
+	$(LINK) $(tproj_OBJECTS) $(tproj_LDADD) $(LIBS)
+treal$(EXEEXT): $(treal_OBJECTS) $(treal_DEPENDENCIES) 
+	@rm -f treal$(EXEEXT)
+	$(LINK) $(treal_OBJECTS) $(treal_LDADD) $(LIBS)
+treimref$(EXEEXT): $(treimref_OBJECTS) $(treimref_DEPENDENCIES) 
+	@rm -f treimref$(EXEEXT)
+	$(LINK) $(treimref_OBJECTS) $(treimref_LDADD) $(LIBS)
+tset$(EXEEXT): $(tset_OBJECTS) $(tset_DEPENDENCIES) 
+	@rm -f tset$(EXEEXT)
+	$(LINK) $(tset_OBJECTS) $(tset_LDADD) $(LIBS)
+tsin$(EXEEXT): $(tsin_OBJECTS) $(tsin_DEPENDENCIES) 
+	@rm -f tsin$(EXEEXT)
+	$(LINK) $(tsin_OBJECTS) $(tsin_LDADD) $(LIBS)
+tsin_cos$(EXEEXT): $(tsin_cos_OBJECTS) $(tsin_cos_DEPENDENCIES) 
+	@rm -f tsin_cos$(EXEEXT)
+	$(LINK) $(tsin_cos_OBJECTS) $(tsin_cos_LDADD) $(LIBS)
+tsinh$(EXEEXT): $(tsinh_OBJECTS) $(tsinh_DEPENDENCIES) 
+	@rm -f tsinh$(EXEEXT)
+	$(LINK) $(tsinh_OBJECTS) $(tsinh_LDADD) $(LIBS)
+tsqr$(EXEEXT): $(tsqr_OBJECTS) $(tsqr_DEPENDENCIES) 
+	@rm -f tsqr$(EXEEXT)
+	$(LINK) $(tsqr_OBJECTS) $(tsqr_LDADD) $(LIBS)
+tsqrt$(EXEEXT): $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES) 
+	@rm -f tsqrt$(EXEEXT)
+	$(LINK) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)
+tstrtoc$(EXEEXT): $(tstrtoc_OBJECTS) $(tstrtoc_DEPENDENCIES) 
+	@rm -f tstrtoc$(EXEEXT)
+	$(LINK) $(tstrtoc_OBJECTS) $(tstrtoc_LDADD) $(LIBS)
+tsub$(EXEEXT): $(tsub_OBJECTS) $(tsub_DEPENDENCIES) 
+	@rm -f tsub$(EXEEXT)
+	$(LINK) $(tsub_OBJECTS) $(tsub_LDADD) $(LIBS)
+tsub_fr$(EXEEXT): $(tsub_fr_OBJECTS) $(tsub_fr_DEPENDENCIES) 
+	@rm -f tsub_fr$(EXEEXT)
+	$(LINK) $(tsub_fr_OBJECTS) $(tsub_fr_LDADD) $(LIBS)
+tsub_ui$(EXEEXT): $(tsub_ui_OBJECTS) $(tsub_ui_DEPENDENCIES) 
+	@rm -f tsub_ui$(EXEEXT)
+	$(LINK) $(tsub_ui_OBJECTS) $(tsub_ui_LDADD) $(LIBS)
+ttan$(EXEEXT): $(ttan_OBJECTS) $(ttan_DEPENDENCIES) 
+	@rm -f ttan$(EXEEXT)
+	$(LINK) $(ttan_OBJECTS) $(ttan_LDADD) $(LIBS)
+ttanh$(EXEEXT): $(ttanh_OBJECTS) $(ttanh_DEPENDENCIES) 
+	@rm -f ttanh$(EXEEXT)
+	$(LINK) $(ttanh_OBJECTS) $(ttanh_LDADD) $(LIBS)
+tui_div$(EXEEXT): $(tui_div_OBJECTS) $(tui_div_DEPENDENCIES) 
+	@rm -f tui_div$(EXEEXT)
+	$(LINK) $(tui_div_OBJECTS) $(tui_div_LDADD) $(LIBS)
+tui_ui_sub$(EXEEXT): $(tui_ui_sub_OBJECTS) $(tui_ui_sub_DEPENDENCIES) 
+	@rm -f tui_ui_sub$(EXEEXT)
+	$(LINK) $(tui_ui_sub_OBJECTS) $(tui_ui_sub_LDADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/comparisons.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memory.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/read_data.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tabs.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacos.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tacosh.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd_fr.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd_si.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tadd_ui.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasin.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasinh.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatan.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tatanh.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tconj.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcos.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcosh.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv_2exp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv_fr.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiv_ui.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/texp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfma.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfr_div.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tfr_sub.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tgeneric.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tget_version.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timag.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tio_str.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tlog.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_2exp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_fr.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_i.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_si.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tmul_ui.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tneg.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tnorm.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_d.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_fr.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_ld.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_si.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_ui.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpow_z.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tprec.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tproj.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treal.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treimref.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsin_cos.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsinh.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqr.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsqrt.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstrtoc.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub_fr.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsub_ui.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttan.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ttanh.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_div.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tui_ui_sub.Po@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+
+.c.lo:
+@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
+@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<
+
+mostlyclean-libtool:
+	-rm -f *.lo
+
+clean-libtool:
+	-rm -rf .libs _libs
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	set x; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	shift; \
+	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
+	  test -n "$$unique" || unique=$$empty_fix; \
+	  if test $$# -gt 0; then \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      "$$@" $$unique; \
+	  else \
+	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	      $$unique; \
+	  fi; \
+	fi
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
+	      END { if (nonempty) { for (i in files) print i; }; }'`; \
+	test -z "$(CTAGS_ARGS)$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && $(am__cd) $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) "$$here"
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+check-TESTS: $(TESTS)
+	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
+	srcdir=$(srcdir); export srcdir; \
+	list=' $(TESTS) '; \
+	$(am__tty_colors); \
+	if test -n "$$list"; then \
+	  for tst in $$list; do \
+	    if test -f ./$$tst; then dir=./; \
+	    elif test -f $$tst; then dir=; \
+	    else dir="$(srcdir)/"; fi; \
+	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
+	      all=`expr $$all + 1`; \
+	      case " $(XFAIL_TESTS) " in \
+	      *[\ \	]$$tst[\ \	]*) \
+		xpass=`expr $$xpass + 1`; \
+		failed=`expr $$failed + 1`; \
+		col=$$red; res=XPASS; \
+	      ;; \
+	      *) \
+		col=$$grn; res=PASS; \
+	      ;; \
+	      esac; \
+	    elif test $$? -ne 77; then \
+	      all=`expr $$all + 1`; \
+	      case " $(XFAIL_TESTS) " in \
+	      *[\ \	]$$tst[\ \	]*) \
+		xfail=`expr $$xfail + 1`; \
+		col=$$lgn; res=XFAIL; \
+	      ;; \
+	      *) \
+		failed=`expr $$failed + 1`; \
+		col=$$red; res=FAIL; \
+	      ;; \
+	      esac; \
+	    else \
+	      skip=`expr $$skip + 1`; \
+	      col=$$blu; res=SKIP; \
+	    fi; \
+	    echo "$${col}$$res$${std}: $$tst"; \
+	  done; \
+	  if test "$$all" -eq 1; then \
+	    tests="test"; \
+	    All=""; \
+	  else \
+	    tests="tests"; \
+	    All="All "; \
+	  fi; \
+	  if test "$$failed" -eq 0; then \
+	    if test "$$xfail" -eq 0; then \
+	      banner="$$All$$all $$tests passed"; \
+	    else \
+	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
+	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
+	    fi; \
+	  else \
+	    if test "$$xpass" -eq 0; then \
+	      banner="$$failed of $$all $$tests failed"; \
+	    else \
+	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
+	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
+	    fi; \
+	  fi; \
+	  dashes="$$banner"; \
+	  skipped=""; \
+	  if test "$$skip" -ne 0; then \
+	    if test "$$skip" -eq 1; then \
+	      skipped="($$skip test was not run)"; \
+	    else \
+	      skipped="($$skip tests were not run)"; \
+	    fi; \
+	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
+	      dashes="$$skipped"; \
+	  fi; \
+	  report=""; \
+	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
+	    report="Please report to $(PACKAGE_BUGREPORT)"; \
+	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
+	      dashes="$$report"; \
+	  fi; \
+	  dashes=`echo "$$dashes" | sed s/./=/g`; \
+	  if test "$$failed" -eq 0; then \
+	    echo "$$grn$$dashes"; \
+	  else \
+	    echo "$$red$$dashes"; \
+	  fi; \
+	  echo "$$banner"; \
+	  test -z "$$skipped" || echo "$$skipped"; \
+	  test -z "$$report" || echo "$$report"; \
+	  echo "$$dashes$$std"; \
+	  test "$$failed" -eq 0; \
+	else :; fi
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
+	list='$(DISTFILES)'; \
+	  dist_files=`for file in $$list; do echo $$file; done | \
+	  sed -e "s|^$$srcdirstrip/||;t" \
+	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
+	case $$dist_files in \
+	  */*) $(MKDIR_P) `echo "$$dist_files" | \
+			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
+			   sort -u` ;; \
+	esac; \
+	for file in $$dist_files; do \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  if test -d $$d/$$file; then \
+	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
+	    if test -d "$(distdir)/$$file"; then \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
+	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
+	    fi; \
+	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
+	  else \
+	    test -f "$(distdir)/$$file" \
+	    || cp -p $$d/$$file "$(distdir)/$$file" \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
+	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
+check: check-am
+all-am: Makefile
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
+	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
+	clean-libtool mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+html-am:
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-dvi: install-dvi-am
+
+install-dvi-am:
+
+install-exec-am:
+
+install-html: install-html-am
+
+install-html-am:
+
+install-info: install-info-am
+
+install-info-am:
+
+install-man:
+
+install-pdf: install-pdf-am
+
+install-pdf-am:
+
+install-ps: install-ps-am
+
+install-ps-am:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic \
+	mostlyclean-libtool
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am:
+
+.MAKE: check-am install-am install-strip
+
+.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
+	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
+	clean-libtool ctags distclean distclean-compile \
+	distclean-generic distclean-libtool distclean-tags distdir dvi \
+	dvi-am html html-am info info-am install install-am \
+	install-data install-data-am install-dvi install-dvi-am \
+	install-exec install-exec-am install-html install-html-am \
+	install-info install-info-am install-man install-pdf \
+	install-pdf-am install-ps install-ps-am install-strip \
+	installcheck installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags uninstall uninstall-am
+
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
diff --git a/mpc/tests/abs.dat b/mpc/tests/abs.dat
new file mode 100644
index 0000000..d382c06
--- /dev/null
+++ b/mpc/tests/abs.dat
@@ -0,0 +1,86 @@
+# Data file for mpc_abs.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX PREC_ROP  ROP  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND
+#
+# where op = op_re + i * op_im,
+# rop is ROP rounded to nearest to the precision of PREC_ROP
+# op_re is OP_RE rounded to nearest to the precision of PREC_OP_RE
+# op_im is OP_IM rounded to nearest to the precision of PREC_OP_IM
+# ROP is checked against abs(op) rounded to the precision PREC_ROP
+# in the direction RND
+# INEX is the ternary value with the following notation:
+# "?" ternary value not checked
+# "+" if ROP is greater than the exact mathematical result
+# "0" if ROP is exactly the mathematical result
+# "-" if ROP is less than the exact mathematical result
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
+0 53 +inf     53 -inf 53 -inf N
+0 53 +inf     53 -inf 53   -1 N
+0 53 +inf     53 -inf 53   -0 N
+0 53 +inf     53 -inf 53   +0 N
+0 53 +inf     53 -inf 53   +1 N
+0 53 +inf     53 -inf 53 +inf N
+0 53 +inf     53 -inf 53  nan N
+0 53 +inf     53   -1 53 -inf N
+0 53 +inf     53   -1 53 +inf N
+0 53  nan     53   -1 53  nan N
+0 53 +inf     53   -0 53 -inf N
+0 53   +0     53   -0 53   -0 N
+0 53   +0     53   -0 53   +0 N
+0 53 +inf     53   -0 53 +inf N
+0 53  nan     53   -0 53  nan N
+0 53 +inf     53   +0 53 -inf N
+0 53   +0     53   +0 53   -0 N
+0 53   +0     53   +0 53   +0 N
+0 53 +inf     53   +0 53 +inf N
+0 53  nan     53   +0 53  nan N
+0 53 +inf     53   +1 53 -inf N
+0 53 +inf     53   +1 53 +inf N
+0 53  nan     53   +1 53  nan N
+0 53 +inf     53 +inf 53 -inf N
+0 53 +inf     53 +inf 53   -1 N
+0 53 +inf     53 +inf 53   -0 N
+0 53 +inf     53 +inf 53   +0 N
+0 53 +inf     53 +inf 53   +1 N
+0 53 +inf     53 +inf 53 +inf N
+0 53 +inf     53 +inf 53  nan N
+0 53 +inf     53  nan 53 -inf N
+0 53  nan     53  nan 53   -1 N
+0 53  nan     53  nan 53   -0 N
+0 53  nan     53  nan 53   +0 N
+0 53  nan     53  nan 53   +1 N
+0 53 +inf     53  nan 53 +inf N
+0 53  nan     53  nan 53  nan N
+
diff --git a/mpc/tests/acos.dat b/mpc/tests/acos.dat
new file mode 100644
index 0000000..2d36a1b
--- /dev/null
+++ b/mpc/tests/acos.dat
@@ -0,0 +1,129 @@
+# Data file for mpc_acos.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# where op = op_re + i * op_im, rop = rop_re + i * rop_im,
+# rop_re is ROP_RE rounded to nearest to the precision of PREC_ROP_RE
+# rop_im is ROP_IM rounded to nearest to the precision of PREC_ROP_IM
+# op_re is OP_RE rounded to nearest to the precision of PREC_OP_RE
+# op_im is OP_IM rounded to nearest to the precision of PREC_OP_IM
+# ROP_RE is checked against Re(acos op) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(acos op) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
+- 0 53  0x12D97C7F3321D2p-51 53 +inf    53 -inf 53 -inf N N
+- 0 53  0x1921FB54442D18p-51 53 +inf    53 -inf 53   -1 N N
+- 0 53  0x1921FB54442D18p-51 53 +inf    53 -inf 53   -0 N N
+- 0 53  0x1921FB54442D18p-51 53 -inf    53 -inf 53   +0 N N
+- 0 53  0x1921FB54442D18p-51 53 -inf    53 -inf 53   +1 N N
+- 0 53  0x12D97C7F3321D2p-51 53 -inf    53 -inf 53 +inf N N
+0 0 53                   nan 53  inf    53 -inf 53  nan N N
+- 0 53  0x1921FB54442D18p-52 53 +inf    53   -6 53 -inf N N
+- 0 53  0x1921FB54442D18p-52 53 -inf    53   -6 53 +inf N N
+0 0 53                   nan 53  nan    53   -6 53  nan N N
+- 0 53  0x1921FB54442D18p-52 53 +inf    53 -0.5 53 -inf N N
+- 0 53  0x1921FB54442D18p-52 53 -inf    53 -0.5 53 +inf N N
+0 0 53                   nan 53  nan    53 -0.5 53  nan N N
+- 0 53  0x1921FB54442D18p-52 53 +inf    53   -0 53 -inf N N
+- 0 53  0x1921FB54442D18p-52 53   +0    53   -0 53   -0 N N
+- 0 53  0x1921FB54442D18p-52 53   -0    53   -0 53   +0 N N
+- 0 53  0x1921FB54442D18p-52 53 -inf    53   -0 53 +inf N N
+- 0 53  0x1921FB54442D18p-52 53  nan    53   -0 53  nan N N
+- 0 53  0x1921FB54442D18p-52 53 +inf    53   +0 53 -inf N N
+- 0 53  0x1921FB54442D18p-52 53   +0    53   +0 53   -0 N N
+- 0 53  0x1921FB54442D18p-52 53   -0    53   +0 53   +0 N N
+- 0 53  0x1921FB54442D18p-52 53 -inf    53   +0 53 +inf N N
+- 0 53  0x1921FB54442D18p-52 53  nan    53   +0 53  nan N N
+- 0 53  0x1921FB54442D18p-52 53 +inf    53 +0.5 53 -inf N N
+- 0 53  0x1921FB54442D18p-52 53 -inf    53 +0.5 53 +inf N N
+0 0 53                   nan 53  nan    53 +0.5 53  nan N N
+- 0 53  0x1921FB54442D18p-52 53 +inf    53   +6 53 -inf N N
+- 0 53  0x1921FB54442D18p-52 53 -inf    53   +6 53 +inf N N
+0 0 53                   nan 53  nan    53   +6 53  nan N N
+- 0 53  0x1921FB54442D18p-53 53 +inf    53 +inf 53 -inf N N
+0 0 53                    +0 53 +inf    53 +inf 53   -1 N N
+0 0 53                    +0 53 +inf    53 +inf 53   -0 N N
+0 0 53                    +0 53 -inf    53 +inf 53   +0 N N
+0 0 53                    +0 53 -inf    53 +inf 53   +1 N N
+- 0 53  0x1921FB54442D18p-53 53 -inf    53 +inf 53 +inf N N
+0 0 53                   nan 53  inf    53 +inf 53  nan N N
+0 0 53                   nan 53 +inf    53  nan 53 -inf N N
+0 0 53                   nan 53  nan    53  nan 53   -1 N N
+0 0 53                   nan 53  nan    53  nan 53   -0 N N
+0 0 53                   nan 53  nan    53  nan 53   +0 N N
+0 0 53                   nan 53  nan    53  nan 53   +1 N N
+0 0 53                   nan 53 -inf    53  nan 53 +inf N N
+0 0 53                   nan 53  nan    53  nan 53  nan N N
+
+# pure real argument
+- + 53  0x1921FB54442D18p-51 53  0x13D2B7539DBA4Cp-51    53   -6 53 -0 N N
+- - 53  0x1921FB54442D18p-51 53 -0x13D2B7539DBA4Cp-51    53   -6 53 +0 N N
+- + 53  0x1921FB54442D18p-51 53  0x15124271980435p-52    53   -2 53 -0 N N
+- - 53  0x1921FB54442D18p-51 53 -0x15124271980435p-52    53   -2 53 +0 N N
+- 0 53  0x1921FB54442D18p-51 53                    +0    53   -1 53 -0 N N
+- 0 53  0x1921FB54442D18p-51 53                    -0    53   -1 53 +0 N N
++ 0 53  0x10C152382D7366p-51 53                    +0    53 -0.5 53 -0 N N
++ 0 53  0x10C152382D7366p-51 53                    -0    53 -0.5 53 +0 N N
++ 0 53  0x10C152382D7366p-52 53                    -0    53 +0.5 53 +0 N N
++ 0 53  0x10C152382D7366p-52 53                    +0    53 +0.5 53 -0 N N
+0 0 53                    +0 53                    -0    53   +1 53 +0 N N
+0 0 53                    +0 53                    +0    53   +1 53 -0 N N
+0 - 53                    +0 53 -0x15124271980435p-52    53   +2 53 +0 N N
+0 + 53                    +0 53  0x15124271980435p-52    53   +2 53 -0 N N
+0 - 53                    +0 53 -0x13D2B7539DBA4Cp-51    53   +6 53 +0 N N
+0 + 53                    +0 53  0x13D2B7539DBA4Cp-51    53   +6 53 -0 N N
+
+# pure imaginary argument
+- + 53  0x1921FB54442D18p-52 53  0x1D185B507EDC0Ep-52    53 -0 53   -3 N N
+- + 53  0x1921FB54442D18p-52 53  0x1D185B507EDC0Ep-52    53 +0 53   -3 N N
+- + 53  0x1921FB54442D18p-52 53  0x1FACFB2399E637p-55    53 -0 53 -.25 N N
+- + 53  0x1921FB54442D18p-52 53  0x1FACFB2399E637p-55    53 +0 53 -.25 N N
+- - 53  0x1921FB54442D18p-52 53 -0x1FACFB2399E637p-55    53 -0 53 +.25 N N
+- - 53  0x1921FB54442D18p-52 53 -0x1FACFB2399E637p-55    53 +0 53 +.25 N N
+- - 53  0x1921FB54442D18p-52 53 -0x1D185B507EDC0Ep-52    53 -0 53   +3 N N
+- - 53  0x1921FB54442D18p-52 53 -0x1D185B507EDC0Ep-52    53 +0 53   +3 N N
+
+# regular argument for various precisions
+- + 2 0.5 2 -1 2 2 2 1 N Z
++ + 9 0x5Dp-6 9 0x9Fp-5 9 8.5 9 -71 N U
++ + 2 0x3p-9 2 1.5 2 2 2 -0x1p-7 U N
++ - 53 0x74C141310E695p-53 53 -0x1D6D2CFA9F3F11p-52 53 0x3243F6A8885A3p-48 53 0x162E42FEFA39EFp-53 N N
diff --git a/mpc/tests/acosh.dat b/mpc/tests/acosh.dat
new file mode 100644
index 0000000..49b9d3b
--- /dev/null
+++ b/mpc/tests/acosh.dat
@@ -0,0 +1,123 @@
+# Data file for mpc_acosh.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# where op = op_re + i * op_im, rop = rop_re + i * rop_im,
+# rop_re is ROP_RE rounded to nearest to the precision of PREC_ROP_RE
+# rop_im is ROP_IM rounded to nearest to the precision of PREC_ROP_IM
+# op_re is OP_RE rounded to nearest to the precision of PREC_OP_RE
+# op_im is OP_IM rounded to nearest to the precision of PREC_OP_IM
+# ROP_RE is checked against Re(acos op) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(acos op) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
+0 + 53 +inf  53 -0x12D97C7F3321D2p-51    53 -inf 53 -inf N N
+0 + 53 +inf  53 -0x1921FB54442D18p-51    53 -inf 53   -1 N N
+0 + 53 +inf  53 -0x1921FB54442D18p-51    53 -inf 53   -0 N N
+0 - 53 +inf  53  0x1921FB54442D18p-51    53 -inf 53   +0 N N
+0 - 53 +inf  53  0x1921FB54442D18p-51    53 -inf 53   +1 N N
+0 - 53 +inf  53  0x12D97C7F3321D2p-51    53 -inf 53 +inf N N
+0 0 53 +inf  53                   nan    53 -inf 53  nan N N
+0 + 53 +inf  53 -0x1921FB54442D18p-52    53   -6 53 -inf N N
+0 - 53 +inf  53  0x1921FB54442D18p-52    53   -6 53 +inf N N
+0 0 53  nan  53                   nan    53   -6 53  nan N N
+0 + 53 +inf  53 -0x1921FB54442D18p-52    53 -0.5 53 -inf N N
+0 - 53 +inf  53  0x1921FB54442D18p-52    53 -0.5 53 +inf N N
+0 0 53  nan  53                   nan    53 -0.5 53  nan N N
+0 + 53 +inf  53 -0x1921FB54442D18p-52    53   -0 53 -inf N N
+0 + 53   +0  53 -0x1921FB54442D18p-52    53   -0 53   -0 N N
+0 - 53   +0  53  0x1921FB54442D18p-52    53   -0 53   +0 N N
+0 - 53 +inf  53  0x1921FB54442D18p-52    53   -0 53 +inf N N
+0 0 53  nan  53                   nan    53   -0 53  nan N N
+0 + 53 +inf  53 -0x1921FB54442D18p-52    53   +0 53 -inf N N
+0 + 53   +0  53 -0x1921FB54442D18p-52    53   +0 53   -0 N N
+0 - 53   +0  53  0x1921FB54442D18p-52    53   +0 53   +0 N N
+0 - 53 +inf  53  0x1921FB54442D18p-52    53   +0 53 +inf N N
+0 0 53  nan  53                   nan    53   +0 53  nan N N
+0 + 53 +inf  53 -0x1921FB54442D18p-52    53   +6 53 -inf N N
+0 - 53 +inf  53  0x1921FB54442D18p-52    53   +6 53 +inf N N
+0 0 53  nan  53                   nan    53   +6 53  nan N N
+0 + 53 +inf  53 -0x1921FB54442D18p-53    53 +inf 53 -inf N N
+0 0 53 +inf  53                    -0    53 +inf 53   -1 N N
+0 0 53 +inf  53                    -0    53 +inf 53   -0 N N
+0 0 53 +inf  53                    +0    53 +inf 53   +0 N N
+0 0 53 +inf  53                    +0    53 +inf 53   +1 N N
+0 - 53 +inf  53  0x1921FB54442D18p-53    53 +inf 53 +inf N N
+0 0 53 +inf  53                   nan    53 +inf 53  nan N N
+0 0 53 +inf  53                   nan    53  nan 53 -inf N N
+0 0 53  nan  53                   nan    53  nan 53   -1 N N
+0 0 53  nan  53                   nan    53  nan 53   -0 N N
+0 0 53  nan  53                   nan    53  nan 53   +0 N N
+0 0 53  nan  53                   nan    53  nan 53   +1 N N
+0 0 53 +inf  53                   nan    53  nan 53 +inf N N
+0 0 53  nan  53                   nan    53  nan 53  nan N N
+
+# pure real argument
++ + 53  0x1C34366179D427p-51 53 -0x1921FB54442D18p-51    53  -17 53   -0 N N
++ - 53  0x1C34366179D427p-51 53  0x1921FB54442D18p-51    53  -17 53   +0 N N
+0 + 53                    +0 53 -0x1921FB54442D18p-51    53   -1 53   -0 N N
+0 - 53                    +0 53  0x1921FB54442D18p-51    53   -1 53   +0 N N
+0 - 53                    +0 53 -0x10C152382D7366p-51    53 -0.5 53   -0 N N
+0 + 53                    +0 53  0x10C152382D7366p-51    53 -0.5 53   +0 N N
+0 - 53                    +0 53 -0x10C152382D7366p-52    53 +0.5 53   -0 N N
+0 + 53                    +0 53  0x10C152382D7366p-52    53 +0.5 53   +0 N N
+0 0 53                    +0 53                    -0    53   +1 53   -0 N N
+0 0 53                    +0 53                    +0    53   +1 53   +0 N N
++ 0 53  0x1C34366179D427p-51 53                    -0    53  +17 53   -0 N N
++ 0 53  0x1C34366179D427p-51 53                    +0    53  +17 53   +0 N N
+
+# pure imaginary argument
+- + 53  0x1C37C174A83DEDp-51 53 -0x1921FB54442D18p-52    53   -0 53  -17 N N
+- + 53  0x1C37C174A83DEDp-51 53 -0x1921FB54442D18p-52    53   +0 53  -17 N N
++ + 53  0x1C34366179D427p-53 53 -0x1921FB54442D18p-52    53   -0 53   -1 N N
++ + 53  0x1C34366179D427p-53 53 -0x1921FB54442D18p-52    53   +0 53   -1 N N
++ + 53  0x1ECC2CAEC5160Ap-54 53 -0x1921FB54442D18p-52    53   -0 53 -0.5 N N
++ + 53  0x1ECC2CAEC5160Ap-54 53 -0x1921FB54442D18p-52    53   +0 53 -0.5 N N
++ - 53  0x1ECC2CAEC5160Ap-54 53  0x1921FB54442D18p-52    53   -0 53 +0.5 N N
++ - 53  0x1ECC2CAEC5160Ap-54 53  0x1921FB54442D18p-52    53   +0 53 +0.5 N N
++ - 53  0x1C34366179D427p-53 53  0x1921FB54442D18p-52    53   -0 53   +1 N N
++ - 53  0x1C34366179D427p-53 53  0x1921FB54442D18p-52    53   +0 53   +1 N N
+- - 53  0x1C37C174A83DEDp-51 53  0x1921FB54442D18p-52    53   -0 53  +17 N N
+- - 53  0x1C37C174A83DEDp-51 53  0x1921FB54442D18p-52    53   +0 53  +17 N N
+
+# IEEE-754 double precision
++ + 53 0x1D6D2CFA9F3F11p-52 53 0x74C141310E695p-53 53 0x3243F6A8885A3p-48 53 0x162E42FEFA39EFp-53 N N
diff --git a/mpc/tests/add.dat b/mpc/tests/add.dat
new file mode 100644
index 0000000..98464c1
--- /dev/null
+++ b/mpc/tests/add.dat
@@ -0,0 +1,117 @@
+# Data file for mpc_add.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE INEX_IM PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP1_RE  OP1_RE  PREC_OP1_IM  OP1_IM  PREC_OP2_RE  OP2_RE  PREC_OP2_IM  OP2_IM  RND_RE  RND_IM
+#
+# where op1 = op1_re + i * op1_im, op2 = op2_re + i * op2_im, rop = rop_re + i * rop_im,
+# The data are read from the file and stored in variables op1, op2, rop using
+# rounding to nearest when needed, for instance: rop_re is ROP_RE rounded to
+# nearest to the precision of PREC_ROP_RE.
+# ROP_RE is checked against Re(op1 + op2) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(op1 + op2) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
+0 0 53 -inf 53 -inf    53 -inf 53 -inf 53 -inf 53 -inf N Z
+0 0 53 -inf 53  nan    53 -inf 53 +inf 53   +1 53 -inf Z U
+0 0 53 +inf 53 -inf    53 +inf 53 -inf 53 +inf 53   +0 U D
+0 0 53 +inf 53 +inf    53 +inf 53 +inf 53   -0 53   -1 D N
+0 0 53 -inf 53 -inf    53 -inf 53 -inf 53   -0 53   -1 N U
+0 0 53  nan 53  nan    53 -inf 53 +inf 53 +inf 53  nan Z D # check this is true in ISO C99
+0 0 53  nan 53 -inf    53 +inf 53 -inf 53  nan 53   -1 U N
+0 0 53 +inf 53  nan    53 +inf 53 +inf 53   -0 53  nan D Z
+0 0 53  nan 53  nan    53 -inf 53 -inf 53  nan 53  nan N D
+
+0 0 53 +inf 53 -inf    53   -1 53 -inf 53 +inf 53   -1 N D
+0 0 53  nan 53   +1    53 -inf 53   +1 53 +inf 53   -0 Z N
+0 0 53   +1 53 -inf    53   +1 53 -inf 53   -0 53   +1 U Z
+0 0 53 +inf 53   +1    53 +inf 53   +1 53   -0 53   -0 D U
+0 0 53 +inf 53  nan    53   -1 53 -inf 53 +inf 53  nan N N
+0 0 53  nan 53   +2    53 -inf 53   +1 53  nan 53   +1 Z Z
+0 0 53   +1 53  nan    53   +1 53 -inf 53   -0 53  nan U U # check this
+0 0 53  nan 53  nan    53 +inf 53   +1 53  nan 53  nan D D
+
+0 0 53   -0 53  nan    53   -0 53 -inf 53   +0 53 +inf D D
+0 0 53 -inf 53   +0    53 -inf 53   +0 53   +1 53   -0 N Z
+0 0 53   +0 53 -inf    53   +0 53 -inf 53   -0 53   -0 Z U
+0 0 53  nan 53  nan    53 +inf 53   +0 53 -inf 53  nan U D # check
+0 0 53  nan 53 -inf    53   -0 53 -inf 53  nan 53   -1 D N
+0 0 53 -inf 53  nan    53 -inf 53   +0 53   +0 53  nan N U
+0 0 53  nan 53  nan    53   +0 53 -inf 53  nan 53  nan Z D
+
+0 0 53   +0 53   -0    53   +0 53   +1 53   -0 53   -1 Z D
+0 0 53   -1 53   -0    53   -1 53   -0 53   +0 53   -0 U N
+0 0 53  nan 53 +inf    53   -0 53   +1 53  nan 53 +inf D Z
+0 0 53   +0 53  nan    53   +1 53   -0 53   -1 53  nan N D
+0 0 53  nan 53   +1    53   +0 53   +1 53  nan 53   -0 Z N
+0 0 53  nan 53  nan    53   -1 53   -0 53  nan 53  nan U Z
+
+0 0 53   +0 53   +0    53   -0 53   +0 53   +0 53   -0 U Z
+0 0 53  nan 53 -inf    53   +0 53   -0 53  nan 53 -inf D U
+0 0 53   -1 53  nan    53   +0 53   +0 53   -1 53  nan N N
+0 0 53  nan 53   -0    53   -0 53   -0 53  nan 53   -0 Z Z
+0 0 53  nan 53  nan    53   -0 53   +0 53  nan 53  nan U U
+
+0 0 53  nan 53  nan    53  nan 53 -inf 53  nan 53 +inf U U # check
+0 0 53 +inf 53  nan    53 +inf 53  nan 53   -1 53  nan D D
+0 0 53  nan 53 -inf    53  nan 53 -inf 53  nan 53   -0 N Z
+0 0 53  nan 53  nan    53 -inf 53  nan 53  nan 53  nan Z U # check
+
+0 0 53  nan 53  nan    53   +1 53  nan 53  nan 53   -1 Z U
+0 0 53  nan 53  nan    53  nan 53   +1 53   -0 53  nan U D
+0 0 53  nan 53  nan    53   -1 53  nan 53  nan 53  nan D N
+
+0 0 53  nan 53  nan    53  nan 53   +0 53   +0 53  nan D N
+0 0 53  nan 53  nan    53   +0 53  nan 53  nan 53  nan N U
+
+0 0 53  nan 53  nan    53  nan 53  nan 53  nan 53  nan N U
+
+# pure real argument
++ 0 53  0x10000000000001p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-105 53 -0 N N
+- 0 53  0x10000000000000p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-105 53 -0 Z Z
++ 0 53  0x10000000000001p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-105 53 -0 U U
+- 0 53  0x10000000000000p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-105 53 -0 D D
+
+# pure imaginary argument
+0 + 53 -0 53  0x10000000000001p-52     53 -0 53 0x10000000000001p-105 53 -0 53 +1 N N
+0 - 53 +0 53  0x10000000000000p-52     53 +0 53 0x10000000000001p-105 53 -0 53 +1 Z Z
+0 + 53 +0 53  0x10000000000001p-52     53 +0 53 0x10000000000001p-105 53 -0 53 +1 U U
+0 - 53 -0 53  0x10000000000000p-52     53 -0 53 0x10000000000001p-105 53 -0 53 +1 D D
+
diff --git a/mpc/tests/add_fr.dat b/mpc/tests/add_fr.dat
new file mode 100644
index 0000000..61a574e
--- /dev/null
+++ b/mpc/tests/add_fr.dat
@@ -0,0 +1,121 @@
+# Data file for mpc_add_fr.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE INEX_IM PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP1_RE  OP1_RE  PREC_OP1_IM  OP1_IM  PREC_OP2  OP2  RND_RE  RND_IM
+#
+# where op1 = op1_re + i * op1_im, rop = rop_re + i * rop_im,
+# The data are read from the file and stored in variables op1, op2, rop using
+# rounding to nearest when needed, for instance: rop_re is ROP_RE rounded to
+# nearest to the precision of PREC_ROP_RE.
+# ROP_RE is checked against Re(op1 + op2) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(op1) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
+0 0 53 -inf 53 -inf    53 -inf 53 -inf 53 -inf N Z
+0 0 53 -inf 53 +inf    53 -inf 53 +inf 53   -1 Z U
+0 0 53 -inf 53   -0    53 -inf 53   -0 53   -0 U D
+0 0 53 -inf 53   +0    53 -inf 53   +0 53   +0 D N
+0 0 53 -inf 53   -1    53 -inf 53   -1 53   +1 N U
+0 0 53  nan 53   +1    53 -inf 53   +1 53 +inf Z D
+0 0 53  nan 53  nan    53 -inf 53  nan 53  nan U N
+
+0 0 53 -inf 53 +inf    53   -1 53 +inf 53 -inf N Z
+0 0 53   -2 53   -0    53   -1 53   -0 53   -1 Z U
+0 0 53   -1 53   +0    53   -1 53   +0 53   -0 U D
+0 0 53   -1 53   -1    53   -1 53   -1 53   +0 D N
+0 0 53   +0 53   +1    53   -1 53   +1 53   +1 N U
+0 0 53 +inf 53  nan    53   -1 53  nan 53 +inf Z D
+0 0 53  nan 53 -inf    53   -1 53 -inf 53  nan U N
+
+0 0 53 -inf 53   -0    53   -0 53   -0 53 -inf N Z
+0 0 53   -1 53   +0    53   -0 53   +0 53   -1 Z U
+0 0 53   -0 53   -1    53   -0 53   -1 53   -0 U D
+0 0 53   -0 53   +1    53   -0 53   +1 53   +0 D N
+0 0 53   +1 53  nan    53   -0 53  nan 53   +1 N U
+0 0 53 +inf 53 -inf    53   -0 53 -inf 53 +inf Z D
+0 0 53  nan 53 +inf    53   -0 53 +inf 53  nan U N
+
+0 0 53 -inf 53   +0    53   +0 53   +0 53 -inf N Z
+0 0 53   -1 53   -1    53   +0 53   -1 53   -1 Z U
+0 0 53   +0 53   +1    53   +0 53   +1 53   -0 U D
+0 0 53   +0 53  nan    53   +0 53  nan 53   +0 D N
+0 0 53   +1 53 -inf    53   +0 53 -inf 53   +1 N U
+0 0 53 +inf 53 +inf    53   +0 53 +inf 53 +inf Z D
+0 0 53  nan 53   -0    53   +0 53   -0 53  nan U N
+
+0 0 53 -inf 53   -1    53   +1 53   -1 53 -inf N Z
+0 0 53   +0 53   +1    53   +1 53   +1 53   -1 Z U
+0 0 53   +1 53  nan    53   +1 53  nan 53   -0 U D
+0 0 53   +1 53 -inf    53   +1 53 -inf 53   +0 D N
+0 0 53   +2 53 +inf    53   +1 53 +inf 53   +1 N U
+0 0 53 +inf 53   -0    53   +1 53   -0 53 +inf Z D
+0 0 53  nan 53   +0    53   +1 53   +0 53  nan U N
+
+0 0 53  nan 53   +1    53 +inf 53   +1 53 -inf N Z
+0 0 53 +inf 53  nan    53 +inf 53  nan 53   -1 Z U
+0 0 53 +inf 53 -inf    53 +inf 53 -inf 53   -0 U D
+0 0 53 +inf 53 +inf    53 +inf 53 +inf 53   +0 D N
+0 0 53 +inf 53   -0    53 +inf 53   -0 53   +1 N U
+0 0 53 +inf 53   +0    53 +inf 53   +0 53 +inf Z D
+0 0 53  nan 53   -1    53 +inf 53   -1 53  nan U N
+
+0 0 53  nan 53  nan    53  nan 53  nan 53 -inf N Z
+0 0 53  nan 53 -inf    53  nan 53 -inf 53   -1 Z U
+0 0 53  nan 53 +inf    53  nan 53 +inf 53   -0 U D
+0 0 53  nan 53   -0    53  nan 53   -0 53   +0 D N
+0 0 53  nan 53   +0    53  nan 53   +0 53   +1 N U
+0 0 53  nan 53   -1    53  nan 53   -1 53 +inf Z D
+0 0 53  nan 53   +1    53  nan 53   +1 53  nan U N
+
+# pure real argument
+- 0 53  0x10000000000000p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-106 N N
++ 0 53  0x10000000000001p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-105 N N
+- 0 53  0x10000000000001p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-104 N N
+- 0 53  0x10000000000000p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-105 Z Z
++ 0 53  0x10000000000001p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-105 U U
+- 0 53  0x10000000000000p-52  53 -0    53 +1 53 -0 53 0x10000000000001p-105 D D
+
+# pure imaginary argument
+0 0 53 +1 53 +1     53 -0 53 1 53 +1 N N
+0 0 53 +1 53 +1     53 +0 53 1 53 +1 Z Z
+0 0 53 +1 53 +1     53 +0 53 1 53 +1 U U
+0 0 53 +1 53 +1     53 -0 53 1 53 +1 D D
+
diff --git a/mpc/tests/arg.dat b/mpc/tests/arg.dat
new file mode 100644
index 0000000..a1a5be9
--- /dev/null
+++ b/mpc/tests/arg.dat
@@ -0,0 +1,76 @@
+# Data file for mpc_arg.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX  PREC_ROP  ROP  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND
+#
+# where op = op_re + i * op_im.
+# See abs.dat for other details.
+
+# special values (following ISO C99 standard)
++ 53 -0x96CBE3F9990E9p-50    53 -inf 53 -inf N
++ 53 -0x3243F6A8885A3p-48    53 -inf 53   -1 N
++ 53 -0x3243F6A8885A3p-48    53 -inf 53   -0 N
+- 53 +0x3243F6A8885A3p-48    53 -inf 53   +0 N
+- 53 +0x3243F6A8885A3p-48    53 -inf 53   +1 N
+- 53 +0x96CBE3F9990E9p-50    53 -inf 53 +inf N
+0 53                  nan    53 -inf 53  nan N
++ 53 -0x3243F6A8885A3p-49    53   -1 53 -inf N
++ 53 -0x3243F6A8885A3p-48    53   -1 53   -0 N
+- 53 +0x3243F6A8885A3p-48    53   -1 53   +0 N
+- 53 +0x3243F6A8885A3p-49    53   -1 53 +inf N
+0 53                  nan    53   -1 53  nan N
++ 53 -0x3243F6A8885A3p-49    53   -0 53 -inf N
++ 53 -0x3243F6A8885A3p-49    53   -0 53   -1 N
++ 53 -0x3243F6A8885A3p-48    53   -0 53   -0 N
+- 53 +0x3243F6A8885A3p-48    53   -0 53   +0 N
+- 53 +0x3243F6A8885A3p-49    53   -0 53   +1 N
+- 53 +0x3243F6A8885A3p-49    53   -0 53 +inf N
+0 53                  nan    53   -0 53  nan N
++ 53 -0x3243F6A8885A3p-49    53   +0 53 -inf N
++ 53 -0x3243F6A8885A3p-49    53   +0 53   -1 N
+0 53                   -0    53   +0 53   -0 N
+0 53                   +0    53   +0 53   +0 N
+- 53 +0x3243F6A8885A3p-49    53   +0 53   +1 N
+- 53 +0x3243F6A8885A3p-49    53   +0 53 +inf N
+0 53                  nan    53   +0 53  nan N
++ 53 -0x3243F6A8885A3p-49    53   +1 53 -inf N
+0 53                   -0    53   +1 53   -0 N
+0 53                   +0    53   +1 53   +0 N
+- 53 +0x3243F6A8885A3p-49    53   +1 53 +inf N
+0 53                  nan    53   +1 53  nan N
++ 53 -0x3243F6A8885A3p-50    53 +inf 53 -inf N
+0 53                   -0    53 +inf 53   -1 N
+0 53                   -0    53 +inf 53   -0 N
+0 53                   +0    53 +inf 53   +0 N
+0 53                   +0    53 +inf 53   +1 N
+- 53 +0x3243F6A8885A3p-50    53 +inf 53 +inf N
+0 53                  nan    53 +inf 53  nan N
+0 53                  nan    53  nan 53 -inf N
+0 53                  nan    53  nan 53   -1 N
+0 53                  nan    53  nan 53   -0 N
+0 53                  nan    53  nan 53   +0 N
+0 53                  nan    53  nan 53   +1 N
+0 53                  nan    53  nan 53 +inf N
+0 53                  nan    53  nan 53  nan N
+
diff --git a/mpc/tests/asin.dat b/mpc/tests/asin.dat
new file mode 100644
index 0000000..b4ddb99
--- /dev/null
+++ b/mpc/tests/asin.dat
@@ -0,0 +1,128 @@
+# Data file for mpc_asin.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# where op = op_re + i * op_im, rop = rop_re + i * rop_im,
+# rop_re is ROP_RE rounded to nearest to the precision of PREC_ROP_RE
+# rop_im is ROP_IM rounded to nearest to the precision of PREC_ROP_IM
+# op_re is OP_RE rounded to nearest to the precision of PREC_OP_RE
+# op_im is OP_IM rounded to nearest to the precision of PREC_OP_IM
+# ROP_RE is checked against Re(asin op) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(asin op) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
++ 0 53 -0x1921FB54442D18p-53 53 -inf    53 -inf 53 -inf N N
++ 0 53 -0x1921FB54442D18p-52 53 -inf    53 -inf 53   -1 N N
++ 0 53 -0x1921FB54442D18p-52 53 -inf    53 -inf 53   -0 N N
++ 0 53 -0x1921FB54442D18p-52 53 +inf    53 -inf 53   +0 N N
++ 0 53 -0x1921FB54442D18p-52 53 +inf    53 -inf 53   +1 N N
++ 0 53 -0x1921FB54442D18p-53 53 +inf    53 -inf 53 +inf N N
+0 0 53                   nan 53  inf    53 -inf 53  nan N N
+0 0 53                    -0 53 -inf    53   -6 53 -inf N N
+0 0 53                    -0 53 +inf    53   -6 53 +inf N N
+0 0 53                   nan 53  nan    53   -6 53  nan N N
+0 0 53                    -0 53 -inf    53 -0.5 53 -inf N N
+0 0 53                    -0 53 +inf    53 -0.5 53 +inf N N
+0 0 53                   nan 53  nan    53 -0.5 53  nan N N
+0 0 53                    -0 53 -inf    53   -0 53 -inf N N
+0 0 53                    -0 53   -0    53   -0 53   -0 N N
+0 0 53                    -0 53   +0    53   -0 53   +0 N N
+0 0 53                    -0 53 +inf    53   -0 53 +inf N N
+0 0 53                    -0 53  nan    53   -0 53  nan N N
+0 0 53                    +0 53 -inf    53   +0 53 -inf N N
+0 0 53                    +0 53   -0    53   +0 53   -0 N N
+0 0 53                    +0 53   +0    53   +0 53   +0 N N
+0 0 53                    +0 53 +inf    53   +0 53 +inf N N
+0 0 53                    +0 53  nan    53   +0 53  nan N N
+0 0 53                    +0 53 -inf    53 +0.5 53 -inf N N
+0 0 53                    +0 53 +inf    53 +0.5 53 +inf N N
+0 0 53                   nan 53  nan    53 +0.5 53  nan N N
+0 0 53                    +0 53 -inf    53   +6 53 -inf N N
+0 0 53                    +0 53 +inf    53   +6 53 +inf N N
+0 0 53                   nan 53  nan    53   +6 53  nan N N
+- 0 53  0x1921FB54442D18p-53 53 -inf    53 +inf 53 -inf N N
+- 0 53  0x1921FB54442D18p-52 53 -inf    53 +inf 53   -1 N N
+- 0 53  0x1921FB54442D18p-52 53 -inf    53 +inf 53   -0 N N
+- 0 53  0x1921FB54442D18p-52 53 +inf    53 +inf 53   +0 N N
+- 0 53  0x1921FB54442D18p-52 53 +inf    53 +inf 53   +1 N N
+- 0 53  0x1921FB54442D18p-53 53 +inf    53 +inf 53 +inf N N
+0 0 53                   nan 53  inf    53 +inf 53  nan N N
+0 0 53                   nan 53 -inf    53  nan 53 -inf N N
+0 0 53                   nan 53  nan    53  nan 53   -1 N N
+0 0 53                   nan 53  nan    53  nan 53   -0 N N
+0 0 53                   nan 53  nan    53  nan 53   +0 N N
+0 0 53                   nan 53  nan    53  nan 53   +1 N N
+0 0 53                   nan 53 +inf    53  nan 53 +inf N N
+0 0 53                   nan 53  nan    53  nan 53  nan N N
+
+# pure real argument
++ - 53 -0x1921FB54442D18p-52 53 -0x1ECC2CAEC5160Ap-53    53 -1.5 53   -0 N N
++ + 53 -0x1921FB54442D18p-52 53  0x1ECC2CAEC5160Ap-53    53 -1.5 53   +0 N N
++ 0 53 -0x1921FB54442D18p-52 53                    -0    53   -1 53   -0 N N
++ 0 53 -0x1921FB54442D18p-52 53                    +0    53   -1 53   +0 N N
+- 0 53 -0x10C152382D7366p-53 53                    -0    53 -0.5 53   -0 N N
+- 0 53 -0x10C152382D7366p-53 53                    +0    53 -0.5 53   +0 N N
++ 0 53  0x10C152382D7366p-53 53                    -0    53 +0.5 53   -0 N N
++ 0 53  0x10C152382D7366p-53 53                    +0    53 +0.5 53   +0 N N
+- 0 53  0x1921FB54442D18p-52 53                    -0    53   +1 53   -0 N N
+- 0 53  0x1921FB54442D18p-52 53                    +0    53   +1 53   +0 N N
+- - 53  0x1921FB54442D18p-52 53 -0x1ECC2CAEC5160Ap-53    53 +1.5 53   -0 N N
+- + 53  0x1921FB54442D18p-52 53  0x1ECC2CAEC5160Ap-53    53 +1.5 53   +0 N N
+
+# pure imaginary argument
+0 + 53                    -0 53 -0x131DC0090B63D8p-52    53   -0 53 -1.5 N N
+0 + 53                    +0 53 -0x131DC0090B63D8p-52    53   +0 53 -1.5 N N
+0 - 53                    -0 53 -0x1C34366179D427p-53    53   -0 53   -1 N N
+0 - 53                    +0 53 -0x1C34366179D427p-53    53   +0 53   -1 N N
+0 - 53                    -0 53 -0x1ECC2CAEC5160Ap-54    53   -0 53 -0.5 N N
+0 - 53                    +0 53 -0x1ECC2CAEC5160Ap-54    53   +0 53 -0.5 N N
+0 + 53                    -0 53  0x1ECC2CAEC5160Ap-54    53   -0 53 +0.5 N N
+0 + 53                    +0 53  0x1ECC2CAEC5160Ap-54    53   +0 53 +0.5 N N
+0 + 53                    -0 53  0x1C34366179D427p-53    53   -0 53   +1 N N
+0 + 53                    +0 53  0x1C34366179D427p-53    53   +0 53   +1 N N
+0 - 53                    -0 53  0x131DC0090B63D8p-52    53   -0 53 +1.5 N N
+0 - 53                    +0 53  0x131DC0090B63D8p-52    53   +0 53 +1.5 N N
+
+# IEEE-754 double precision and other precisions
++ - 53 0x189BF9EC7FCD5Bp-54 53 0x1206ECFA94614Bp-50 53 17 53 42 N N
+- + 2 1.5 2 6 2 96 2 0x1p-8 N N
+- - 8 0xC9p-7 8 0x15p-2 2 96 2 0x1p-8 N N
diff --git a/mpc/tests/asinh.dat b/mpc/tests/asinh.dat
new file mode 100644
index 0000000..8847941
--- /dev/null
+++ b/mpc/tests/asinh.dat
@@ -0,0 +1,122 @@
+# Data file for mpc_asinh.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# where op = op_re + i * op_im, rop = rop_re + i * rop_im,
+# rop_re is ROP_RE rounded to nearest to the precision of PREC_ROP_RE
+# rop_im is ROP_IM rounded to nearest to the precision of PREC_ROP_IM
+# op_re is OP_RE rounded to nearest to the precision of PREC_OP_RE
+# op_im is OP_IM rounded to nearest to the precision of PREC_OP_IM
+# ROP_RE is checked against Re(asin op) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(asin op) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
+0 + 53 -inf 53 -0x1921FB54442D18p-53    53 -inf 53 -inf N N
+0 0 53 -inf 53                    -0    53 -inf 53   -1 N N
+0 0 53 -inf 53                    -0    53 -inf 53   -0 N N
+0 0 53 -inf 53                    +0    53 -inf 53   +0 N N
+0 0 53 -inf 53                    +0    53 -inf 53   +1 N N
+0 - 53 -inf 53  0x1921FB54442D18p-53    53 -inf 53 +inf N N
+0 0 53 -inf 53                   nan    53 -inf 53  nan N N
+0 + 53 -inf 53 -0x1921FB54442D18p-52    53   -6 53 -inf N N
+0 - 53 -inf 53  0x1921FB54442D18p-52    53   -6 53 +inf N N
+0 0 53  nan 53                   nan    53   -6 53  nan N N
+0 + 53 -inf 53 -0x1921FB54442D18p-52    53   -0 53 -inf N N
+0 0 53   -0 53                    -0    53   -0 53   -0 N N
+0 0 53   -0 53                    +0    53   -0 53   +0 N N
+0 - 53 -inf 53  0x1921FB54442D18p-52    53   -0 53 +inf N N
+0 0 53  nan 53                   nan    53   -0 53  nan N N
+0 + 53 +inf 53 -0x1921FB54442D18p-52    53   +0 53 -inf N N
+0 0 53   +0 53                    -0    53   +0 53   -0 N N
+0 0 53   +0 53                    +0    53   +0 53   +0 N N
+0 - 53 +inf 53  0x1921FB54442D18p-52    53   +0 53 +inf N N
+0 0 53  nan 53                   nan    53   +0 53  nan N N
+0 + 53 +inf 53 -0x1921FB54442D18p-52    53   +6 53 -inf N N
+0 - 53 +inf 53  0x1921FB54442D18p-52    53   +6 53 +inf N N
+0 0 53  nan 53                   nan    53   +6 53  nan N N
+0 + 53 +inf 53 -0x1921FB54442D18p-53    53 +inf 53 -inf N N
+0 0 53 +inf 53                    -0    53 +inf 53   -1 N N
+0 0 53 +inf 53                    -0    53 +inf 53   -0 N N
+0 0 53 +inf 53                    +0    53 +inf 53   +0 N N
+0 0 53 +inf 53                    +0    53 +inf 53   +1 N N
+0 - 53 +inf 53  0x1921FB54442D18p-53    53 +inf 53 +inf N N
+0 0 53 +inf 53                   nan    53 +inf 53  nan N N
+0 0 53  inf 53                   nan    53  nan 53 -inf N N
+0 0 53  nan 53                   nan    53  nan 53   -1 N N
+0 0 53  nan 53                    -0    53  nan 53   -0 N N
+0 0 53  nan 53                    +0    53  nan 53   +0 N N
+0 0 53  nan 53                   nan    53  nan 53   +1 N N
+0 0 53  inf 53                   nan    53  nan 53 +inf N N
+0 0 53  nan 53                   nan    53  nan 53  nan N N
+
+# pure real argument
++ 0 53 -0x131DC0090B63D8p-52 53                    -0    53 -1.5 53   -0 N N
++ 0 53 -0x131DC0090B63D8p-52 53                    +0    53 -1.5 53   +0 N N
+- 0 53 -0x1C34366179D427p-53 53                    -0    53   -1 53   -0 N N
+- 0 53 -0x1C34366179D427p-53 53                    +0    53   -1 53   +0 N N
+- 0 53 -0x1ECC2CAEC5160Ap-54 53                    -0    53 -0.5 53   -0 N N
+- 0 53 -0x1ECC2CAEC5160Ap-54 53                    +0    53 -0.5 53   +0 N N
++ 0 53  0x1ECC2CAEC5160Ap-54 53                    -0    53 +0.5 53   -0 N N
++ 0 53  0x1ECC2CAEC5160Ap-54 53                    +0    53 +0.5 53   +0 N N
++ 0 53  0x1C34366179D427p-53 53                    -0    53   +1 53   -0 N N
++ 0 53  0x1C34366179D427p-53 53                    +0    53   +1 53   +0 N N
+- 0 53  0x131DC0090B63D8p-52 53                    -0    53 +1.5 53   -0 N N
+- 0 53  0x131DC0090B63D8p-52 53                    +0    53 +1.5 53   +0 N N
+
+# pure imaginary argument
+- + 53 -0x1ECC2CAEC5160Ap-53 53 -0x1921FB54442D18p-52    53   -0 53 -1.5 N N
++ + 53  0x1ECC2CAEC5160Ap-53 53 -0x1921FB54442D18p-52    53   +0 53 -1.5 N N
+0 + 53                    -0 53 -0x1921FB54442D18p-52    53   -0 53   -1 N N
+0 + 53                    +0 53 -0x1921FB54442D18p-52    53   +0 53   -1 N N
+0 - 53                    -0 53 -0x10C152382D7366p-53    53   -0 53 -0.5 N N
+0 - 53                    +0 53 -0x10C152382D7366p-53    53   +0 53 -0.5 N N
+0 + 53                    -0 53  0x10C152382D7366p-53    53   -0 53 +0.5 N N
+0 + 53                    +0 53  0x10C152382D7366p-53    53   +0 53 +0.5 N N
+0 - 53                    -0 53  0x1921FB54442D18p-52    53   -0 53   +1 N N
+0 - 53                    +0 53  0x1921FB54442D18p-52    53   +0 53   +1 N N
+- - 53 -0x1ECC2CAEC5160Ap-53 53  0x1921FB54442D18p-52    53   -0 53 +1.5 N N
++ - 53  0x1ECC2CAEC5160Ap-53 53  0x1921FB54442D18p-52    53   +0 53 +1.5 N N
+
+# regular arguments
++ + 53 0x1E20C7792ECE6Bp-52 53 0x3526776219EEBp-52 53 0x3243F6A8885A3p-48 53 0x162E42FEFA39EFp-53 N N
+
+
diff --git a/mpc/tests/atan.dat b/mpc/tests/atan.dat
new file mode 100644
index 0000000..0cf3413
--- /dev/null
+++ b/mpc/tests/atan.dat
@@ -0,0 +1,144 @@
+# Data file for mpc_atan.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# where op = op_re + i * op_im, rop = rop_re + i * rop_im,
+# rop_re is ROP_RE rounded to nearest to the precision of PREC_ROP_RE
+# rop_im is ROP_IM rounded to nearest to the precision of PREC_ROP_IM
+# op_re is OP_RE rounded to nearest to the precision of PREC_OP_RE
+# op_im is OP_IM rounded to nearest to the precision of PREC_OP_IM
+# ROP_RE is checked against Re(atan op) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(atan op) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
++ 0 53 -0x1921FB54442D18p-52 53   -0    53 -inf 53 -inf N N
++ 0 53 -0x1921FB54442D18p-52 53   -0    53 -inf 53   -1 N N
++ 0 53 -0x1921FB54442D18p-52 53   -0    53 -inf 53   -0 N N
++ 0 53 -0x1921FB54442D18p-52 53   +0    53 -inf 53   +0 N N
++ 0 53 -0x1921FB54442D18p-52 53   +0    53 -inf 53   +1 N N
++ 0 53 -0x1921FB54442D18p-52 53   +0    53 -inf 53 +inf N N
++ 0 53 -0x1921FB54442D18p-52 53    0    53 -inf 53  nan N N
++ 0 53 -0x1921FB54442D18p-52 53   -0    53   -6 53 -inf N N
++ 0 53 -0x1921FB54442D18p-52 53   +0    53   -6 53 +inf N N
+0 0 53                   nan 53  nan    53   -6 53  nan N N
++ 0 53 -0x1921FB54442D18p-52 53   -0    53   -0 53 -inf N N
+0 0 53                    -0 53   -0    53   -0 53   -0 N N
+0 0 53                    -0 53   +0    53   -0 53   +0 N N
++ 0 53 -0x1921FB54442D18p-52 53   +0    53   -0 53 +inf N N
+0 0 53                   nan 53  nan    53   -0 53  nan N N
+- 0 53 +0x1921FB54442D18p-52 53   -0    53   +0 53 -inf N N
+0 0 53                    +0 53   -0    53   +0 53   -0 N N
+0 0 53                    +0 53   +0    53   +0 53   +0 N N
+- 0 53 +0x1921FB54442D18p-52 53   +0    53   +0 53 +inf N N
+0 0 53                   nan 53  nan    53   +0 53  nan N N
+- 0 53 +0x1921FB54442D18p-52 53   -0    53   +6 53 -inf N N
+- 0 53 +0x1921FB54442D18p-52 53   +0    53   +6 53 +inf N N
+0 0 53                   nan 53  nan    53   +6 53  nan N N
+- 0 53 +0x1921FB54442D18p-52 53   -0    53 +inf 53 -inf N N
+- 0 53 +0x1921FB54442D18p-52 53   -0    53 +inf 53   -1 N N
+- 0 53 +0x1921FB54442D18p-52 53   -0    53 +inf 53   -0 N N
+- 0 53 +0x1921FB54442D18p-52 53   +0    53 +inf 53   +0 N N
+- 0 53 +0x1921FB54442D18p-52 53   +0    53 +inf 53   +1 N N
+- 0 53 +0x1921FB54442D18p-52 53   +0    53 +inf 53 +inf N N
+- 0 53 +0x1921FB54442D18p-52 53    0    53 +inf 53  nan N N
+0 0 53                   nan 53   -0    53  nan 53 -inf N N
+0 0 53                   nan 53  nan    53  nan 53   -1 N N
+0 0 53                   nan 53   -0    53  nan 53   -0 N N
+0 0 53                   nan 53   +0    53  nan 53   +0 N N
+0 0 53                   nan 53  nan    53  nan 53   +1 N N
+0 0 53                   nan 53   +0    53  nan 53 +inf N N
+0 0 53                   nan 53  nan    53  nan 53  nan N N
+
+# pure real argument
+- 0 53 -0x16DCC57BB565FDp-52 53   -0    53     -7 53 -0 N N
+- 0 53 -0x16DCC57BB565FDp-52 53   +0    53     -7 53 +0 N N
++ 0 53 -0x1F730BD281F69Bp-53 53   -0    53   -1.5 53 -0 N N
++ 0 53 -0x1F730BD281F69Bp-53 53   +0    53   -1.5 53 +0 N N
++ 0 53 -0x1921FB54442D18p-53 53   -0    53     -1 53 -0 N N
++ 0 53 -0x1921FB54442D18p-53 53   +0    53     -1 53 +0 N N
+- 0 53 -0x1700A7C5784634p-53 53   -0    53 -0.875 53 -0 N N
+- 0 53 -0x1700A7C5784634p-53 53   +0    53 -0.875 53 +0 N N
+- 0 53 -0x1FD5BA9AAC2F6Ep-56 53   -0    53 -0.125 53 -0 N N
+- 0 53 -0x1FD5BA9AAC2F6Ep-56 53   +0    53 -0.125 53 +0 N N
++ 0 53 +0x1FD5BA9AAC2F6Ep-56 53   +0    53 +0.125 53 +0 N N
++ 0 53 +0x1FD5BA9AAC2F6Ep-56 53   -0    53 +0.125 53 -0 N N
++ 0 53 +0x1700A7C5784634p-53 53   +0    53 +0.875 53 +0 N N
++ 0 53 +0x1700A7C5784634p-53 53   -0    53 +0.875 53 -0 N N
+- 0 53 +0x1921FB54442D18p-53 53   +0    53     +1 53 +0 N N
+- 0 53 +0x1921FB54442D18p-53 53   -0    53     +1 53 -0 N N
+- 0 53 +0x1F730BD281F69Bp-53 53   +0    53   +1.5 53 +0 N N
+- 0 53 +0x1F730BD281F69Bp-53 53   -0    53   +1.5 53 -0 N N
++ 0 53 +0x16DCC57BB565FDp-52 53   +0    53     +7 53 +0 N N
++ 0 53 +0x16DCC57BB565FDp-52 53   -0    53     +7 53 -0 N N
+
+# pure imaginary argument
++ + 53 -0x1921FB54442D18p-52 53 -0x1269621134DB92p-55    53 -0 53     -7 N N
+- + 53 +0x1921FB54442D18p-52 53 -0x1269621134DB92p-55    53 +0 53     -7 N N
++ + 53 -0x1921FB54442D18p-52 53 -0x19C041F7ED8D33p-53    53 -0 53   -1.5 N N
+- + 53 +0x1921FB54442D18p-52 53 -0x19C041F7ED8D33p-53    53 +0 53   -1.5 N N
+0 0 53                   nan 53                  -inf    53 -0 53     -1 N N
+0 0 53                   nan 53                  -inf    53 +0 53     -1 N N
+0 + 53                    -0 53 -0x15AA16394D481Fp-52    53 -0 53 -0.875 N N
+0 + 53                    +0 53 -0x15AA16394D481Fp-52    53 +0 53 -0.875 N N
+0 + 53                    -0 53 -0x1015891C9EAEF7p-55    53 -0 53 -0.125 N N
+0 + 53                    +0 53 -0x1015891C9EAEF7p-55    53 +0 53 -0.125 N N
+0 - 53                    +0 53 +0x1015891C9EAEF7p-55    53 +0 53 +0.125 N N
+0 - 53                    -0 53 +0x1015891C9EAEF7p-55    53 -0 53 +0.125 N N
+0 - 53                    +0 53 +0x15AA16394D481Fp-52    53 +0 53 +0.875 N N
+0 - 53                    -0 53 +0x15AA16394D481Fp-52    53 -0 53 +0.875 N N
+0 0 53                   nan 53                  +inf    53 +0 53     +1 N N
+0 0 53                   nan 53                  +inf    53 -0 53     +1 N N
+- - 53 +0x1921FB54442D18p-52 53 +0x19C041F7ED8D33p-53    53 +0 53   +1.5 N N
++ - 53 -0x1921FB54442D18p-52 53 +0x19C041F7ED8D33p-53    53 -0 53   +1.5 N N
+- - 53 +0x1921FB54442D18p-52 53 +0x1269621134DB92p-55    53 +0 53     +7 N N
++ - 53 -0x1921FB54442D18p-52 53 +0x1269621134DB92p-55    53 -0 53     +7 N N
+0 + 53                    +0 53  0x1FFFFFFFFFFF82p-52    53 +0 53 0x1ED9505E1BC3C2p-53 N N
+0 0 53                   nan 53                  -inf    53 +0 53     -1 N N
+0 0 53                   nan 53                  +inf    53 +0 53     +1 N N
++ - 512 0x6487ED5110B4611A62633145C06E0E68948127044533E63A0105DF531D89CD9128A5043CC71A026EF7CA8CD9E69D218D98158536F92F8A1BA7F09AB6B6A8E123p-510 512 0x5D137113B914461DA3202D77346EE4980DA5FD0BAD68F5A7928DCA9F632750D9BFFA00654C523929F15DED554EC6BC476DB2C46FA433E569227085E0BDEA86FFp-509 512 0 512 0x1018734E311AB77B710F9212969B3C86E8F388BB7DA5BAF74ADE078F43D96456D088C8A0B2A370159DFB8D4A4BC51BCDA91F2DCD01B2EC610C62AA33FAD1688p-504 N Z
++ - 12 0xC91p-11 12 0x6F1p-50 12 +0 12 0x9380000000 N N
+
+# general inputs
++ - 72 0x91EA521228BFC46ACAp-118 72 -0x9E96A01DBAD6470974p-73   72 0x84C3E02A5C6DEE8410p-118 72 -0x99B43C52A95A21C220p-73 U N
++ - 156 -0xC90FDAA22167B20DB08A0C3B1FF415CABE49624p-155 156 0xEA84E971BD52E49CCEE036E303D5ECB2D9D9B9Ap-222   156 -0xF0CE58073F866A53F25DB85DE8D503FBDD81051p-109 156  0xCF81D7C76BB9754A52056CB0F144B0C6700CC8Cp-128 N N
+- - 2 0.75 2 -3 2 0x1p-7 2 -1 N N
+- + 2 0.75 2 3 2 0x1p-7 2 1 N N
diff --git a/mpc/tests/atanh.dat b/mpc/tests/atanh.dat
new file mode 100644
index 0000000..97019e6
--- /dev/null
+++ b/mpc/tests/atanh.dat
@@ -0,0 +1,113 @@
+# Data file for mpc_atanh.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# where op = op_re + i * op_im, rop = rop_re + i * rop_im,
+# rop_re is ROP_RE rounded to nearest to the precision of PREC_ROP_RE
+# rop_im is ROP_IM rounded to nearest to the precision of PREC_ROP_IM
+# op_re is OP_RE rounded to nearest to the precision of PREC_OP_RE
+# op_im is OP_IM rounded to nearest to the precision of PREC_OP_IM
+# ROP_RE is checked against Re(atan op) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(atan op) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
+0 + 53   -0 53 -0x1921FB54442D18p-52    53 -inf 53 -inf N N
+0 + 53   -0 53 -0x1921FB54442D18p-52    53 -inf 53   -1 N N
+0 + 53   -0 53 -0x1921FB54442D18p-52    53 -inf 53   -0 N N
+0 - 53   -0 53 +0x1921FB54442D18p-52    53 -inf 53   +0 N N
+0 - 53   -0 53 +0x1921FB54442D18p-52    53 -inf 53   +1 N N
+0 - 53   -0 53 +0x1921FB54442D18p-52    53 -inf 53 +inf N N
+0 0 53   -0 53                   nan    53 -inf 53  nan N N
+0 + 53   -0 53 -0x1921FB54442D18p-52    53   -6 53 -inf N N
+0 - 53   -0 53 +0x1921FB54442D18p-52    53   -6 53 +inf N N
+0 0 53  nan 53                   nan    53   -6 53  nan N N
+0 + 53   -0 53 -0x1921FB54442D18p-52    53   -0 53 -inf N N
+0 0 53   -0 53                    -0    53   -0 53   -0 N N
+0 0 53   -0 53                    +0    53   -0 53   +0 N N
+0 - 53   -0 53 +0x1921FB54442D18p-52    53   -0 53 +inf N N
+0 0 53   -0 53                   nan    53   -0 53  nan N N
+0 + 53   +0 53 -0x1921FB54442D18p-52    53   +0 53 -inf N N
+0 0 53   +0 53                    -0    53   +0 53   -0 N N
+0 0 53   +0 53                    +0    53   +0 53   +0 N N
+0 - 53   +0 53 +0x1921FB54442D18p-52    53   +0 53 +inf N N
+0 0 53   +0 53                   nan    53   +0 53  nan N N
+0 + 53   +0 53 -0x1921FB54442D18p-52    53   +6 53 -inf N N
+0 - 53   +0 53 +0x1921FB54442D18p-52    53   +6 53 +inf N N
+0 0 53  nan 53                   nan    53   +6 53  nan N N
+0 + 53   +0 53 -0x1921FB54442D18p-52    53 +inf 53 -inf N N
+0 + 53   +0 53 -0x1921FB54442D18p-52    53 +inf 53   -1 N N
+0 + 53   +0 53 -0x1921FB54442D18p-52    53 +inf 53   -0 N N
+0 - 53   +0 53 +0x1921FB54442D18p-52    53 +inf 53   +0 N N
+0 - 53   +0 53 +0x1921FB54442D18p-52    53 +inf 53   +1 N N
+0 - 53   +0 53 +0x1921FB54442D18p-52    53 +inf 53 +inf N N
+0 0 53   +0 53                   nan    53 +inf 53  nan N N
+0 + 53    0 53 -0x1921FB54442D18p-52    53  nan 53 -inf N N
+0 0 53  nan 53                   nan    53  nan 53   -1 N N
+0 0 53  nan 53                   nan    53  nan 53   -0 N N
+0 0 53  nan 53                   nan    53  nan 53   +0 N N
+0 0 53  nan 53                   nan    53  nan 53   +1 N N
+0 - 53    0 53 +0x1921FB54442D18p-52    53  nan 53 +inf N N
+0 0 53  nan 53                   nan    53  nan 53  nan N N
+
+# pure real argument
+- + 53 -0x1E27076E2AF2E6p-57 53 -0x1921FB54442D18p-52    53  -17 53   -0 N N
+- - 53 -0x1E27076E2AF2E6p-57 53 +0x1921FB54442D18p-52    53  -17 53   +0 N N
++ + 53 +0x1E27076E2AF2E6p-57 53 -0x1921FB54442D18p-52    53  +17 53   -0 N N
++ - 53 +0x1E27076E2AF2E6p-57 53 +0x1921FB54442D18p-52    53  +17 53   +0 N N
++ 0 53 -0x1F2272AE325A57p-53 53                    -0    53 -.75 53   -0 N N
++ 0 53 -0x1F2272AE325A57p-53 53                    +0    53 -.75 53   +0 N N
+- 0 53 +0x1F2272AE325A57p-53 53                    -0    53 +.75 53   -0 N N
+- 0 53 +0x1F2272AE325A57p-53 53                    +0    53 +.75 53   +0 N N
+- + 12 0x6F1p-50 12 0xC91p-11 12 0x9380000000 12 +0 N N
+
+# pure imaginary argument
+0 - 53   -0 53 -0x167D8863BC99BDp-52    53   -0 53   -6 N N
+0 - 53   +0 53 -0x167D8863BC99BDp-52    53   +0 53   -6 N N
+0 + 53   -0 53 +0x167D8863BC99BDp-52    53   -0 53   +6 N N
+0 + 53   +0 53 +0x167D8863BC99BDp-52    53   +0 53   +6 N N
+0 + 53   -0 53 -0x1F5B75F92C80DDp-55    53   -0 53 -.25 N N
+0 + 53   +0 53 -0x1F5B75F92C80DDp-55    53   +0 53 -.25 N N
+0 - 53   -0 53 +0x1F5B75F92C80DDp-55    53   -0 53 +.25 N N
+0 - 53   +0 53 +0x1F5B75F92C80DDp-55    53   +0 53 +.25 N N
+
+# IEEE-754 double precision
+- + 53 0x13F3F785301CE9p-54 53 0xBFA43C2A868B3p-51 53 0x3243F6A8885A3p-48 53 0x162E42FEFA39EFp-53 N N
diff --git a/mpc/tests/comparisons.c b/mpc/tests/comparisons.c
new file mode 100644
index 0000000..a7a4106
--- /dev/null
+++ b/mpc/tests/comparisons.c
@@ -0,0 +1,46 @@
+/* Comparison functions.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+/* comparisons, see description in mpc-tests.h */
+int
+same_mpfr_value (mpfr_ptr got, mpfr_ptr ref, int known_sign)
+{
+   /* The sign of zeroes and infinities is checked only when
+      known_sign is true.                                    */
+   if (mpfr_nan_p (got))
+      return mpfr_nan_p (ref);
+   if (mpfr_inf_p (got))
+      return mpfr_inf_p (ref) &&
+            (!known_sign || mpfr_signbit (got) == mpfr_signbit (ref));
+   if (mpfr_zero_p (got))
+      return mpfr_zero_p (ref) &&
+            (!known_sign || mpfr_signbit (got) == mpfr_signbit (ref));
+   return mpfr_cmp (got, ref) == 0;
+}
+
+int
+same_mpc_value (mpc_ptr got, mpc_ptr ref, known_signs_t known_signs)
+{
+   return    same_mpfr_value (MPC_RE (got), MPC_RE (ref), known_signs.re)
+          && same_mpfr_value (MPC_IM (got), MPC_IM (ref), known_signs.im);
+}
diff --git a/mpc/tests/conj.dat b/mpc/tests/conj.dat
new file mode 100644
index 0000000..3e06a58
--- /dev/null
+++ b/mpc/tests/conj.dat
@@ -0,0 +1,111 @@
+# Data file for mpc_conj.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# see sin.dat for precisions
+
+# special values (following ISO C99 standard)
+0 0 53 -inf 53 +inf    53 -inf 53 -inf  N N
+0 0 53 -inf 53   +1    53 -inf 53   -1  N N
+0 0 53 -inf 53   +0    53 -inf 53   -0  N N
+0 0 53 -inf 53   -0    53 -inf 53   +0  N N
+0 0 53 -inf 53   -1    53 -inf 53   +1  N N
+0 0 53 -inf 53 -inf    53 -inf 53 +inf  N N
+0 0 53 -inf 53  nan    53 -inf 53  nan  N N
+0 0 53   -1 53 +inf    53   -1 53 -inf  N N
+0 0 53   -1 53   +0    53   -1 53   -0  N N
+0 0 53   -1 53   -0    53   -1 53   +0  N N
+0 0 53   -1 53 -inf    53   -1 53 +inf  N N
+0 0 53   -1 53  nan    53   -1 53  nan  N N
+0 0 53   -0 53 +inf    53   -0 53 -inf  N N
+0 0 53   -0 53   +1    53   -0 53   -1  N N
+0 0 53   -0 53   +0    53   -0 53   -0  N N
+0 0 53   -0 53   -0    53   -0 53   +0  N N
+0 0 53   -0 53   -1    53   -0 53   +1  N N
+0 0 53   -0 53 -inf    53   -0 53 +inf  N N
+0 0 53   -0 53  nan    53   -0 53  nan  N N
+0 0 53   +0 53 +inf    53   +0 53 -inf  N N
+0 0 53   +0 53   +1    53   +0 53   -1  N N
+0 0 53   +0 53   +0    53   +0 53   -0  N N
+0 0 53   +0 53   -0    53   +0 53   +0  N N
+0 0 53   +0 53   -1    53   +0 53   +1  N N
+0 0 53   +0 53 -inf    53   +0 53 +inf  N N
+0 0 53   +0 53  nan    53   +0 53  nan  N N
+0 0 53   +1 53 +inf    53   +1 53 -inf  N N
+0 0 53   +1 53   +0    53   +1 53   -0  N N
+0 0 53   +1 53   -0    53   +1 53   +0  N N
+0 0 53   +1 53 -inf    53   +1 53 +inf  N N
+0 0 53   +1 53  nan    53   +1 53  nan  N N
+0 0 53 +inf 53 +inf    53 +inf 53 -inf  N N
+0 0 53 +inf 53   +1    53 +inf 53   -1  N N
+0 0 53 +inf 53   +0    53 +inf 53   -0  N N
+0 0 53 +inf 53   -0    53 +inf 53   +0  N N
+0 0 53 +inf 53   -1    53 +inf 53   +1  N N
+0 0 53 +inf 53 -inf    53 +inf 53 +inf  N N
+0 0 53 +inf 53  nan    53 +inf 53  nan  N N
+0 0 53  nan 53 +inf    53  nan 53 -inf  N N
+0 0 53  nan 53   +1    53  nan 53   -1  N N
+0 0 53  nan 53   +0    53  nan 53   -0  N N
+0 0 53  nan 53   -0    53  nan 53   +0  N N
+0 0 53  nan 53   -1    53  nan 53   +1  N N
+0 0 53  nan 53 -inf    53  nan 53 +inf  N N
+0 0 53  nan 53  nan    53  nan 53  nan  N N
+
+# pure real argument
+0 0 53  0x123456789abcdep+52  2 -0    53  0x123456789abcdep+52 17 +0 N N
+0 0 53 -0x123456789abcdep+52  3 -0    54 -0x123456789abcdep+52 16 +0 Z N
+0 0 53  0x123456789abcdep+52  4 +0    55  0x123456789abcdep+52 15 -0 U N
+0 0 53 -0x123456789abcdep+52  5 +0    56 -0x123456789abcdep+52 14 -0 D N
+0 0 53  0x123456789abcdep+52  6 -0    57  0x123456789abcdep+52 13 +0 Z Z
+0 0 53 -0x123456789abcdep+52  7 -0    58 -0x123456789abcdep+52 12 +0 U Z
+0 0 53  0x123456789abcdep+52  8 +0    59  0x123456789abcdep+52 11 -0 D Z
+0 0 53 -0x123456789abcdep+52  9 +0    60 -0x123456789abcdep+52 10 -0 N Z
+0 0 53  0x123456789abcdep+52 10 -0    61  0x123456789abcdep+52  9 +0 U U
+0 0 53 -0x123456789abcdep+52 11 -0    62 -0x123456789abcdep+52  8 +0 D U
+0 0 53  0x123456789abcdep+52 12 +0    63  0x123456789abcdep+52  7 -0 N U
+0 0 53 -0x123456789abcdep+52 13 +0    64 -0x123456789abcdep+52  6 -0 Z U
+0 0 53  0x123456789abcdep+52 14 -0    65  0x123456789abcdep+52  5 +0 D D
+0 0 53 -0x123456789abcdep+52 15 -0    66 -0x123456789abcdep+52  4 +0 N D
+0 0 53  0x123456789abcdep+52 16 +0    67  0x123456789abcdep+52  3 -0 Z D
+0 0 53 -0x123456789abcdep+52 17 +0    68 -0x123456789abcdep+52  2 -0 U D
+
+# pure imaginary argument
+0 0 53 +0 53 -0x123456789abcdep+52    53 +0 53  0x123456789abcdep+52 N N
+0 0 53 -0 53 -0x123456789abcdep+52    51 -0 54  0x123456789abcdep+52 Z N
+0 0 53 +0 53  0x123456789abcdep+52    49 +0 55 -0x123456789abcdep+52 U N
+0 0 53 -0 53  0x123456789abcdep+52    47 -0 56 -0x123456789abcdep+52 D N
+0 0 53 +0 53 -0x123456789abcdep+52    45 +0 57  0x123456789abcdep+52 Z Z
+0 0 53 -0 53 -0x123456789abcdep+52    43 -0 58  0x123456789abcdep+52 U Z
+0 0 53 +0 53  0x123456789abcdep+52    41 +0 59 -0x123456789abcdep+52 D Z
+0 0 53 -0 53  0x123456789abcdep+52    39 -0 60 -0x123456789abcdep+52 N Z
+0 0 53 +0 53 -0x123456789abcdep+52    37 +0 61  0x123456789abcdep+52 U U
+0 0 53 -0 53 -0x123456789abcdep+52    35 -0 62  0x123456789abcdep+52 D U
+0 0 53 +0 53  0x123456789abcdep+52    33 +0 63 -0x123456789abcdep+52 N U
+0 0 53 -0 53  0x123456789abcdep+52    31 -0 64 -0x123456789abcdep+52 Z U
+0 0 53 +0 53 -0x123456789abcdep+52    29 +0 65  0x123456789abcdep+52 D D
+0 0 53 -0 53 -0x123456789abcdep+52    27 -0 66  0x123456789abcdep+52 N D
+0 0 53 +0 53  0x123456789abcdep+52    25 +0 67 -0x123456789abcdep+52 Z D
+0 0 53 -0 53  0x123456789abcdep+52    23 -0 68 -0x123456789abcdep+52 U D
+
diff --git a/mpc/tests/cos.dat b/mpc/tests/cos.dat
new file mode 100644
index 0000000..bd2e063
--- /dev/null
+++ b/mpc/tests/cos.dat
@@ -0,0 +1,87 @@
+# Data file for mpc_cos.
+#
+# Copyright (C) INRIA, 2008, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see sin.dat.
+
+# special values (following ISO C99 standard)
+0 0 7  inf 7  NaN   7 -inf 7 -inf N N
+0 0 7  NaN 7  NaN   7 -inf 7   -1 N N
+0 0 7  NaN 7    0   7 -inf 7   -0 N N
+0 0 7  NaN 7    0   7 -inf 7   +0 N N
+0 0 7  NaN 7  NaN   7 -inf 7    1 N N
+0 0 7  inf 7  NaN   7 -inf 7 +inf N N
+0 0 7  NaN 7  NaN   7 -inf 7  NaN N N
+0 0 7 +inf 7 -inf   7   -1 7 -inf N N
+0 0 7 +inf 7 +inf   7   -1 7 +inf N N
+0 0 7  NaN 7  NaN   7   -1 7  NaN N N
+0 0 7 +inf 7   -0   7   -0 7 -inf N N
+0 0 7   1  7   -0   7   -0 7   -0 N N
+0 0 7   1  7   +0   7   -0 7   +0 N N
+0 0 7 +inf 7   +0   7   -0 7 +inf N N
+0 0 7  NaN 7    0   7   -0 7  NaN N N
+0 0 7 +inf 7   +0   7   +0 7 -inf N N
+0 0 7    1 7   +0   7   +0 7   -0 N N
+0 0 7    1 7   -0   7   +0 7   +0 N N
+0 0 7 +inf 7   -0   7   +0 7 +inf N N
+0 0 7  NaN 7    0   7   +0 7  NaN N N
+0 0 7 +inf 7 +inf   7    1 7 -inf N N
+0 0 7 +inf 7 -inf   7    1 7 +inf N N
+0 0 7  NaN 7  NaN   7    1 7  NaN N N
+0 0 7  inf 7  NaN   7 +inf 7 -inf N N
+0 0 7  NaN 7  NaN   7 +inf 7   -1 N N
+0 0 7  NaN 7    0   7 +inf 7   -0 N N
+0 0 7  NaN 7    0   7 +inf 7   +0 N N
+0 0 7  NaN 7  NaN   7 +inf 7    1 N N
+0 0 7  inf 7  NaN   7 +inf 7 +inf N N
+0 0 7  NaN 7  NaN   7 +inf 7  NaN N N
+0 0 7 +inf 7  NaN   7  NaN 7 -inf N N
+0 0 7  NaN 7  NaN   7  NaN 7   -1 N N
+0 0 7  NaN 7    0   7  NaN 7   -0 N N
+0 0 7  NaN 7    0   7  NaN 7   +0 N N
+0 0 7  NaN 7  NaN   7  NaN 7    1 N N
+0 0 7 +inf 7  NaN   7  NaN 7 +inf N N
+0 0 7  NaN 7  NaN   7  NaN 7  NaN N N
+
+# purely real argument
+- 0 50 0x8a51407da8344p-52 50 -0   7 -1 7 -0 N N
+- 0 50 0x8a51407da8344p-52 50 +0   7 -1 7 +0 N N
+- 0 50 0x8a51407da8344p-52 50 +0   7  1 7 -0 N N
+- 0 50 0x8a51407da8344p-52 50 -0   7  1 7 +0 N N
+
+# purely imaginary argument
+- 0 50 0x18b07551d9f55p-48 50 -0   7   -0 7 -1 N N
+- 0 50 0x18b07551d9f55p-48 50 +0   7   -0 7  1 N N
+- 0 50 0x18b07551d9f55p-48 50 +0   7   +0 7 -1 N N
+- 0 50 0x18b07551d9f55p-48 50 -0   7   +0 7  1 N N
+
+# values with +1 and -1
+- + 50 0xd56f54b7a1accp-52 50 -0xfd28666957478p-52   7 -1 7 -1 N N
+- - 50 0xd56f54b7a1accp-52 50  0xfd28666957478p-52   7 -1 7  1 N N
+- - 50 0xd56f54b7a1accp-52 50  0xfd28666957478p-52   7  1 7 -1 N N
+- + 50 0xd56f54b7a1accp-52 50 -0xfd28666957478p-52   7  1 7  1 N N
+
+# IEEE-754 double precision
++ 0 53 514                  53 -0   53 +0 53 0x1BBDD1808C59A3p-50 N N
+- 0 53 0x100FFFFFFFFFFFp-43 53 -0   53 +0 53 0x1BBDD1808C59A3p-50 D D
+
+# huge values
+- + 53 -inf 53 +inf 53 0x4580CBF242683p-3 53 -0x1B3E8A3660D279p-3 N N
++ + 53 +inf 53 +inf 53 -0x1B3E8A3660D279p-3 53 0x4580CBF242683p-3 N N
diff --git a/mpc/tests/cosh.dat b/mpc/tests/cosh.dat
new file mode 100644
index 0000000..f048073
--- /dev/null
+++ b/mpc/tests/cosh.dat
@@ -0,0 +1,135 @@
+# Data test file for mpc_cosh.
+
+# Copyright (C) INRIA, 2008, 2010
+
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+
+# See file sin.dat for the format description.
+
+# Special values, following ISO C99 standard, Annex G,
+# more precisely Section G.6.2.4 "The ccosh functions".
+
+# Rule [conj]: cosh(conj(z)) = conj(cosh(z))
+# Rule [even]: cosh(-z)      = cosh(z)
+
+# cosh(+0 + i*0) = 1 + i*0
+0 0 2 1 2 +0   2 +0 2 +0 N N
+# [conj]: cosh(+0 - i*0) = 1 - i*0
+0 0 2 1 2 -0   2 +0 2 -0 N N
+# [even]: cosh(-0 - i*0) = 1 + i*0
+0 0 2 1 2 +0   2 -0 2 -0 N N
+# [even+conj]: cosh(-0 + i*0) = 1 - i*0
+0 0 2 1 2 -0   2 -0 2 +0 N N
+
+# cosh(+0 + i*inf) = nan + i*0 (C99 says that the sign of the imaginary part
+# is left unspecified)
+0 0 2 nan 2 0   2 +0 2 +inf N N
+# [conj]: cosh(+0 - i*inf) = nan - i*0
+0 0 2 nan 2 0   2 +0 2 -inf N N
+# [even]: cosh(-0 - i*inf) = nan + i*0
+0 0 2 nan 2 0   2 -0 2 -inf N N
+# [even+conj]: cosh(-0 + i*inf) = nan - i*0
+0 0 2 nan 2 0   2 -0 2 +inf N N
+
+# cosh(+0 +i*nan) = nan + i*0 (C99 says that the sign of the imaginary part
+# is left unspecified)
+0 0 2 nan 2 0   2 +0 2 nan N N
+# [even]: cosh(-0 + i*nan) = nan + i*0
+0 0 2 nan 2 0   2 -0 2 nan N N
+
+# cosh(x + i*inf) = nan + i*nan for finite nonzero x
+0 0 2 nan 2 nan   2  1 2 inf N N
+0 0 2 nan 2 nan   2 -1 2 inf N N
+# [conj]: cosh(x - i*inf) = nan + i*nan
+0 0 2 nan 2 nan   2  1 2 -inf N N
+0 0 2 nan 2 nan   2 -1 2 -inf N N
+# [even] and [even+conj] are already considered for x=-1 < 0
+
+# cosh(x + i*nan) = nan + i*nan for finite nonzero x
+0 0 2 nan 2 nan   2  1 2 nan N N
+0 0 2 nan 2 nan   2 -1 2 nan N N
+# [conj] makes no sense since nan has no sign
+# [even] is already considered for x=-1 < 0
+
+# cosh(+inf + i*0) = +inf + i*0
+0 0 2 +inf 2 +0   2 +inf 2 +0   N N
+# [conj]: cosh(+inf - i*0) = +inf - i*0
+0 0 2 +inf 2 -0   2 +inf 2 -0   N N
+# [even]: cosh(-inf - i*0) = +inf + i*0
+0 0 2 +inf 2 +0   2 -inf 2 -0   N N
+# [even+conj]: cosh(-inf + i*0) = +inf - i*0
+0 0 2 +inf 2 -0   2 -inf 2 +0   N N
+
+# cosh(+inf + i*y) = +inf * (cos(y) + i*sin(y)) for finite non-zero y
+0 0 2 +inf 2 +inf   2 +inf 2 1    N N
+0 0 2 -inf 2 +inf   2 +inf 2 2    N N
+0 0 2 -inf 2 -inf   2 +inf 2 4    N N
+0 0 2 +inf 2 -inf   2 +inf 2 1024 N N
+# [conj]
+0 0 2 +inf 2 -inf   2 +inf 2 -1    N N
+0 0 2 -inf 2 -inf   2 +inf 2 -2    N N
+0 0 2 -inf 2 +inf   2 +inf 2 -4    N N
+0 0 2 +inf 2 +inf   2 +inf 2 -1024 N N
+# [even]
+0 0 2 +inf 2 +inf   2 -inf 2 -1    N N
+0 0 2 -inf 2 +inf   2 -inf 2 -2    N N
+0 0 2 -inf 2 -inf   2 -inf 2 -4    N N
+0 0 2 +inf 2 -inf   2 -inf 2 -1024 N N
+# [even+conj]
+0 0 2 +inf 2 -inf   2 -inf 2 1    N N
+0 0 2 -inf 2 -inf   2 -inf 2 2    N N
+0 0 2 -inf 2 +inf   2 -inf 2 4    N N
+0 0 2 +inf 2 +inf   2 -inf 2 1024 N N
+
+# cosh(+inf + i*inf) = +inf + i*nan (C99 leaves unspecified the sign of the
+# real part)
+0 0 2 inf 2 nan   2 +inf 2 +inf   N N
+# [conj]: cosh(+inf - i*inf) = +inf + i*nan
+0 0 2 inf 2 nan   2 +inf 2 -inf   N N
+# [even]: cosh(-inf - i*inf) = +inf + i*nan
+0 0 2 inf 2 nan   2 -inf 2 -inf   N N
+# [even+conj]: cosh(-inf + i*inf) = +inf + i*nan
+0 0 2 inf 2 nan   2 -inf 2 +inf   N N
+
+# cosh(+inf + i*nan) = +inf + i*nan
+0 0 2 +inf 2 nan   2 +inf 2 nan   N N
+# [conj] makes no sense since NaN has no sign
+# [even]: cosh(-inf + i*nan) = +inf + i*nan
+0 0 2 +inf 2 nan   2 -inf 2 nan   N N
+
+# cosh(nan + i*0) = nan - i*0 (C99 leaves unspecified the sign of the
+# imaginary part)
+0 0 2 nan 2 0   2 nan 2 +0   N N
+# [conj]: cosh(nan - i*0) = nan + i*0
+0 0 2 nan 2 0   2 nan 2 -0   N N
+
+# cosh(nan + i*y) = nan + i*nan for all nonzero y (including +/-inf)
+0 0 2 nan 2 nan   2 nan 2  1   N N
+0 0 2 nan 2 nan   2 nan 2 -1   N N
+0 0 2 nan 2 nan   2 nan 2 +inf   N N
+0 0 2 nan 2 nan   2 nan 2 -inf   N N
+
+# cosh(nan + i*nan) = nan + i*nan
+0 0 2 nan 2 nan   2 nan 2 nan   N N
+
++ + 53 0x10000000000001p-53 53 0x10000000000001p-52   53 0x1DA2E1BD2C9EBCp-53 53 0x138AADEA15829Fp-52 N N
+
+
+# huge values
++ - 53 +inf 53 -inf 53 0x4580CBF242683p-3 53 -0x1B3E8A3660D279p-3 N N
+- - 53 -inf 53 -inf 53 -0x1B3E8A3660D279p-3 53 0x4580CBF242683p-3 N N
diff --git a/mpc/tests/div.dat b/mpc/tests/div.dat
new file mode 100644
index 0000000..d3c7ceb
--- /dev/null
+++ b/mpc/tests/div.dat
@@ -0,0 +1,2430 @@
+# Data file for mpc_div.
+#
+# Copyright (C) INRIA, 2008, 2009, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see add.dat.
+
+# special values
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   -1 7 -inf N N
+0 0 7 +inf 7  nan   7 -inf 7 -inf  7   -1 7   -1 N N
+0 0 7 +inf 7 +inf   7 -inf 7 -inf  7   -1 7   -0 N N
+0 0 7 +inf 7 +inf   7 -inf 7 -inf  7   -1 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7 -inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   -0 7 -inf N N
+0 0 7 +inf 7 -inf   7 -inf 7 -inf  7   -0 7   -1 N N
+0 0 7 +inf 7 +inf   7 -inf 7 -inf  7   -0 7   -0 N N
+0 0 7 +inf 7 +inf   7 -inf 7 -inf  7   -0 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf 7 -inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   +0 7 -inf N N
+0 0 7 +inf 7 -inf   7 -inf 7 -inf  7   +0 7   -1 N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7   +0 7   -0 N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7   +0 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf 7 -inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7    1 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7 -inf  7    1 7   -1 N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7    1 7   -0 N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7    1 7   +0 N N
+0 0 7 -inf 7  nan   7 -inf 7 -inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   -1 7 -inf N N
+0 0 7 +inf 7 -inf   7 -inf 7   -1  7   -1 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf 7   -1  7   -1 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf 7   -1  7   -1 7   +0 N N
+0 0 7 +inf 7 +inf   7 -inf 7   -1  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   -0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7   -1  7   -0 7   -1 N N
+0 0 7 +inf 7 +inf   7 -inf 7   -1  7   -0 7   -0 N N
+0 0 7 +inf 7 +inf   7 -inf 7   -1  7   -0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7   -1  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   +0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7   -1  7   +0 7   -1 N N
+0 0 7 -inf 7 -inf   7 -inf 7   -1  7   +0 7   -0 N N
+0 0 7 -inf 7 -inf   7 -inf 7   -1  7   +0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7   -1  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7    1 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf 7   -1  7    1 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf 7   -1  7    1 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf 7   -1  7    1 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf 7   -1  7    1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7    1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   -1 7 -inf N N
+0 0 7 +inf 7 -inf   7 -inf 7   -0  7   -1 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf 7   -0  7   -1 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf 7   -0  7   -1 7   +0 N N
+0 0 7 +inf 7 +inf   7 -inf 7   -0  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   -0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7   -0  7   -0 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf 7   -0  7   -0 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf 7   -0  7   -0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7   -0  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   +0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7   -0  7   +0 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf 7   -0  7   +0 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf 7   -0  7   +0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7   -0  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7    1 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf 7   -0  7    1 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf 7   -0  7    1 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf 7   -0  7    1 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf 7   -0  7    1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7    1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   -1 7 -inf N N
+0 0 7 +inf 7 -inf   7 -inf 7   +0  7   -1 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf 7   +0  7   -1 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf 7   +0  7   -1 7   +0 N N
+0 0 7 +inf 7 +inf   7 -inf 7   +0  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   -0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7   +0  7   -0 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf 7   +0  7   -0 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf 7   +0  7   -0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7   +0  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   +0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7   +0  7   +0 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf 7   +0  7   +0 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf 7   +0  7   +0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7   +0  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7    1 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf 7   +0  7    1 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf 7   +0  7    1 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf 7   +0  7    1 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf 7   +0  7    1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7    1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   -1 7 -inf N N
+0 0 7 +inf 7 -inf   7 -inf 7    1  7   -1 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf 7    1  7   -1 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf 7    1  7   -1 7   +0 N N
+0 0 7 +inf 7 +inf   7 -inf 7    1  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   -0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7    1  7   -0 7   -1 N N
+0 0 7 +inf 7 -inf   7 -inf 7    1  7   -0 7   -0 N N
+0 0 7 +inf 7 -inf   7 -inf 7    1  7   -0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7    1  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   +0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7    1  7   +0 7   -1 N N
+0 0 7 -inf 7 +inf   7 -inf 7    1  7   +0 7   -0 N N
+0 0 7 -inf 7 +inf   7 -inf 7    1  7   +0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7    1  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7    1  7    1 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf 7    1  7    1 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf 7    1  7    1 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf 7    1  7    1 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf 7    1  7    1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7    1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   -1 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7 +inf  7   -1 7   -1 N N
+0 0 7 +inf 7 -inf   7 -inf 7 +inf  7   -1 7   -0 N N
+0 0 7 +inf 7 -inf   7 -inf 7 +inf  7   -1 7   +0 N N
+0 0 7 +inf 7  nan   7 -inf 7 +inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   -0 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf 7 +inf  7   -0 7   -1 N N
+0 0 7 +inf 7 -inf   7 -inf 7 +inf  7   -0 7   -0 N N
+0 0 7 +inf 7 -inf   7 -inf 7 +inf  7   -0 7   +0 N N
+0 0 7 +inf 7 +inf   7 -inf 7 +inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   +0 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf 7 +inf  7   +0 7   -1 N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7   +0 7   -0 N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7   +0 7   +0 N N
+0 0 7 +inf 7 +inf   7 -inf 7 +inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7    1 7 -inf N N
+0 0 7 -inf 7  nan   7 -inf 7 +inf  7    1 7   -1 N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7    1 7   -0 N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7    1 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7 +inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   -1 7 -inf N N
+0 0 7 +inf 7 -inf   7 -inf 7  nan  7   -1 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf 7  nan  7   -1 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf 7  nan  7   -1 7   +0 N N
+0 0 7 +inf 7 +inf   7 -inf 7  nan  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   -0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7  nan  7   -0 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf 7  nan  7   -0 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf 7  nan  7   -0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7  nan  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   +0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf 7  nan  7   +0 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7   +0 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7   +0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf 7  nan  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7    1 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf 7  nan  7    1 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7    1 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7    1 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf 7  nan  7    1 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7    1 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   -1 7 -inf N N
+0 0 7 +inf 7 +inf   7   -1 7 -inf  7   -1 7   -1 N N
+0 0 7  nan 7 +inf   7   -1 7 -inf  7   -1 7   -0 N N
+0 0 7  nan 7 +inf   7   -1 7 -inf  7   -1 7   +0 N N
+0 0 7 -inf 7 +inf   7   -1 7 -inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   -0 7 -inf N N
+0 0 7 +inf 7  nan   7   -1 7 -inf  7   -0 7   -1 N N
+0 0 7 +inf 7 +inf   7   -1 7 -inf  7   -0 7   -0 N N
+0 0 7 +inf 7 +inf   7   -1 7 -inf  7   -0 7   +0 N N
+0 0 7 -inf 7  nan   7   -1 7 -inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   +0 7 -inf N N
+0 0 7 +inf 7  nan   7   -1 7 -inf  7   +0 7   -1 N N
+0 0 7 -inf 7 -inf   7   -1 7 -inf  7   +0 7   -0 N N
+0 0 7 -inf 7 -inf   7   -1 7 -inf  7   +0 7   +0 N N
+0 0 7 -inf 7  nan   7   -1 7 -inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7    1 7 -inf N N
+0 0 7 +inf 7 -inf   7   -1 7 -inf  7    1 7   -1 N N
+0 0 7  nan 7 -inf   7   -1 7 -inf  7    1 7   -0 N N
+0 0 7  nan 7 -inf   7   -1 7 -inf  7    1 7   +0 N N
+0 0 7 -inf 7 -inf   7   -1 7 -inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan 7  nan N N
+0 0 7   +0 7   +0   7   -1 7   -1  7 -inf 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7   -1  7 -inf 7   -1 N N
+0 0 7   +0 7   +0   7   -1 7   -1  7 -inf 7   -0 N N
+0 0 7   +0 7   +0   7   -1 7   -1  7 -inf 7   +0 N N
+0 0 7   +0 7   +0   7   -1 7   -1  7 -inf 7    1 N N
+0 0 7   +0 7   +0   7   -1 7   -1  7 -inf 7 +inf N N
+0 0 7   +0 7   +0   7   -1 7   -1  7 -inf 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -1  7   -1 7 -inf N N
+0 0 7   -0 7   +0   7   -1 7   -1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -1  7   -1 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -1  7   -0 7 -inf N N
+0 0 7   -0 7   +0   7   -1 7   -1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -1  7   -0 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -1  7   +0 7 -inf N N
+0 0 7   -0 7   +0   7   -1 7   -1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -1  7   +0 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -1  7    1 7 -inf N N
+0 0 7   -0 7   +0   7   -1 7   -1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -1  7    1 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -1  7 +inf 7 -inf N N
+0 0 7   -0 7   -0   7   -1 7   -1  7 +inf 7   -1 N N
+0 0 7   -0 7   -0   7   -1 7   -1  7 +inf 7   -0 N N
+0 0 7   -0 7   -0   7   -1 7   -1  7 +inf 7   +0 N N
+0 0 7   -0 7   -0   7   -1 7   -1  7 +inf 7    1 N N
+0 0 7   -0 7   +0   7   -1 7   -1  7 +inf 7 +inf N N
+0 0 7   -0 7   -0   7   -1 7   -1  7 +inf 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7   -1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7   -1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7   -1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7   -1  7  nan 7    1 N N
+0 0 7   -0 7   +0   7   -1 7   -1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -1  7  nan 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -0  7 -inf 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7   -0  7 -inf 7   -1 N N
+0 0 7   +0 7   +0   7   -1 7   -0  7 -inf 7   -0 N N
+0 0 7   +0 7   +0   7   -1 7   -0  7 -inf 7   +0 N N
+0 0 7   +0 7   +0   7   -1 7   -0  7 -inf 7    1 N N
+0 0 7   +0 7   +0   7   -1 7   -0  7 -inf 7 +inf N N
+0 0 7   +0 7   +0   7   -1 7   -0  7 -inf 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -0  7   -1 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7   -0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -0  7   -1 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -0  7   -0 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7   -0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -0  7   -0 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -0  7   +0 7 -inf N N
+0 0 7   -0 7   +0   7   -1 7   -0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -0  7   +0 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -0  7    1 7 -inf N N
+0 0 7   -0 7   +0   7   -1 7   -0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -0  7    1 7  nan N N
+0 0 7   -0 7   -0   7   -1 7   -0  7 +inf 7 -inf N N
+0 0 7   -0 7   -0   7   -1 7   -0  7 +inf 7   -1 N N
+0 0 7   -0 7   -0   7   -1 7   -0  7 +inf 7   -0 N N
+0 0 7   -0 7   +0   7   -1 7   -0  7 +inf 7   +0 N N
+0 0 7   -0 7   +0   7   -1 7   -0  7 +inf 7    1 N N
+0 0 7   -0 7   +0   7   -1 7   -0  7 +inf 7 +inf N N
+0 0 7   -0 7   +0   7   -1 7   -0  7 +inf 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   -0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7   -0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7   -0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7   -0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7   -0  7  nan 7    1 N N
+0 0 7   -0 7   +0   7   -1 7   -0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   -0  7  nan 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   +0  7 -inf 7 -inf N N
+0 0 7   +0 7   -0   7   -1 7   +0  7 -inf 7   -1 N N
+0 0 7   +0 7   -0   7   -1 7   +0  7 -inf 7   -0 N N
+0 0 7   +0 7   +0   7   -1 7   +0  7 -inf 7   +0 N N
+0 0 7   +0 7   +0   7   -1 7   +0  7 -inf 7    1 N N
+0 0 7   +0 7   +0   7   -1 7   +0  7 -inf 7 +inf N N
+0 0 7   +0 7   +0   7   -1 7   +0  7 -inf 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   +0  7   -1 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7   +0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   +0  7   -1 7  nan N N
+0 0 7   +0 7   -0   7   -1 7   +0  7   -0 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7   +0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   +0  7   -0 7  nan N N
+0 0 7   -0 7   -0   7   -1 7   +0  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7   +0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   +0  7   +0 7  nan N N
+0 0 7   -0 7   -0   7   -1 7   +0  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7   +0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   +0  7    1 7  nan N N
+0 0 7   -0 7   -0   7   -1 7   +0  7 +inf 7 -inf N N
+0 0 7   -0 7   +0   7   -1 7   +0  7 +inf 7   -1 N N
+0 0 7   -0 7   +0   7   -1 7   +0  7 +inf 7   -0 N N
+0 0 7   -0 7   +0   7   -1 7   +0  7 +inf 7   +0 N N
+0 0 7   -0 7   +0   7   -1 7   +0  7 +inf 7    1 N N
+0 0 7   -0 7   +0   7   -1 7   +0  7 +inf 7 +inf N N
+0 0 7   -0 7   +0   7   -1 7   +0  7 +inf 7  nan N N
+0 0 7   -0 7   -0   7   -1 7   +0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7   +0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7   +0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7   +0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7   +0  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   -1 7   +0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7   +0  7  nan 7  nan N N
+0 0 7   +0 7   -0   7   -1 7    1  7 -inf 7 -inf N N
+0 0 7   +0 7   -0   7   -1 7    1  7 -inf 7   -1 N N
+0 0 7   +0 7   -0   7   -1 7    1  7 -inf 7   -0 N N
+0 0 7   +0 7   -0   7   -1 7    1  7 -inf 7   +0 N N
+0 0 7   +0 7   -0   7   -1 7    1  7 -inf 7    1 N N
+0 0 7   +0 7   +0   7   -1 7    1  7 -inf 7 +inf N N
+0 0 7   +0 7   -0   7   -1 7    1  7 -inf 7  nan N N
+0 0 7   -0 7   -0   7   -1 7    1  7   -1 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7    1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7    1  7   -1 7  nan N N
+0 0 7   -0 7   -0   7   -1 7    1  7   -0 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7    1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7    1  7   -0 7  nan N N
+0 0 7   -0 7   -0   7   -1 7    1  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7    1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7    1  7   +0 7  nan N N
+0 0 7   -0 7   -0   7   -1 7    1  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   -1 7    1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7    1  7    1 7  nan N N
+0 0 7   -0 7   +0   7   -1 7    1  7 +inf 7 -inf N N
+0 0 7   -0 7   +0   7   -1 7    1  7 +inf 7   -1 N N
+0 0 7   -0 7   +0   7   -1 7    1  7 +inf 7   -0 N N
+0 0 7   -0 7   +0   7   -1 7    1  7 +inf 7   +0 N N
+0 0 7   -0 7   +0   7   -1 7    1  7 +inf 7    1 N N
+0 0 7   +0 7   +0   7   -1 7    1  7 +inf 7 +inf N N
+0 0 7   -0 7   +0   7   -1 7    1  7 +inf 7  nan N N
+0 0 7   -0 7   -0   7   -1 7    1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7    1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7    1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7    1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7    1  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   -1 7    1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7    1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   -1 7 -inf N N
+0 0 7 -inf 7 -inf   7   -1 7 +inf  7   -1 7   -1 N N
+0 0 7  nan 7 -inf   7   -1 7 +inf  7   -1 7   -0 N N
+0 0 7  nan 7 -inf   7   -1 7 +inf  7   -1 7   +0 N N
+0 0 7 +inf 7 -inf   7   -1 7 +inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   -0 7 -inf N N
+0 0 7 -inf 7  nan   7   -1 7 +inf  7   -0 7   -1 N N
+0 0 7 +inf 7 -inf   7   -1 7 +inf  7   -0 7   -0 N N
+0 0 7 +inf 7 -inf   7   -1 7 +inf  7   -0 7   +0 N N
+0 0 7 +inf 7  nan   7   -1 7 +inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   +0 7 -inf N N
+0 0 7 -inf 7  nan   7   -1 7 +inf  7   +0 7   -1 N N
+0 0 7 -inf 7 +inf   7   -1 7 +inf  7   +0 7   -0 N N
+0 0 7 -inf 7 +inf   7   -1 7 +inf  7   +0 7   +0 N N
+0 0 7 +inf 7  nan   7   -1 7 +inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7    1 7 -inf N N
+0 0 7 -inf 7 +inf   7   -1 7 +inf  7    1 7   -1 N N
+0 0 7  nan 7 +inf   7   -1 7 +inf  7    1 7   -0 N N
+0 0 7  nan 7 +inf   7   -1 7 +inf  7    1 7   +0 N N
+0 0 7 +inf 7 +inf   7   -1 7 +inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -0 7   -1 N N
+0 0 7 +inf 7  nan   7   -1 7  nan  7   -0 7   -0 N N
+0 0 7 +inf 7  nan   7   -1 7  nan  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   +0 7   -1 N N
+0 0 7 -inf 7  nan   7   -1 7  nan  7   +0 7   -0 N N
+0 0 7 -inf 7  nan   7   -1 7  nan  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   -1 7  nan  7    1 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7    1 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7    1 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7    1 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7    1 7    1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7    1 7  nan N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   -1 7 -inf N N
+0 0 7 +inf 7 +inf   7   -0 7 -inf  7   -1 7   -1 N N
+0 0 7  nan 7 +inf   7   -0 7 -inf  7   -1 7   -0 N N
+0 0 7  nan 7 +inf   7   -0 7 -inf  7   -1 7   +0 N N
+0 0 7 -inf 7 +inf   7   -0 7 -inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   -0 7 -inf N N
+0 0 7 +inf 7  nan   7   -0 7 -inf  7   -0 7   -1 N N
+0 0 7  nan 7 +inf   7   -0 7 -inf  7   -0 7   -0 N N
+0 0 7  nan 7 +inf   7   -0 7 -inf  7   -0 7   +0 N N
+0 0 7 -inf 7  nan   7   -0 7 -inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   +0 7 -inf N N
+0 0 7 +inf 7  nan   7   -0 7 -inf  7   +0 7   -1 N N
+0 0 7  nan 7 -inf   7   -0 7 -inf  7   +0 7   -0 N N
+0 0 7  nan 7 -inf   7   -0 7 -inf  7   +0 7   +0 N N
+0 0 7 -inf 7  nan   7   -0 7 -inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7    1 7 -inf N N
+0 0 7 +inf 7 -inf   7   -0 7 -inf  7    1 7   -1 N N
+0 0 7  nan 7 -inf   7   -0 7 -inf  7    1 7   -0 N N
+0 0 7  nan 7 -inf   7   -0 7 -inf  7    1 7   +0 N N
+0 0 7 -inf 7 -inf   7   -0 7 -inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan 7  nan N N
+0 0 7   +0 7   +0   7   -0 7   -1  7 -inf 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7   -1  7 -inf 7   -1 N N
+0 0 7   +0 7   +0   7   -0 7   -1  7 -inf 7   -0 N N
+0 0 7   +0 7   +0   7   -0 7   -1  7 -inf 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   -1  7 -inf 7    1 N N
+0 0 7   -0 7   +0   7   -0 7   -1  7 -inf 7 +inf N N
+0 0 7   +0 7   +0   7   -0 7   -1  7 -inf 7  nan N N
+0 0 7   +0 7   +0   7   -0 7   -1  7   -1 7 -inf N N
+0 0 7   -0 7   +0   7   -0 7   -1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -1  7   -1 7  nan N N
+0 0 7   +0 7   +0   7   -0 7   -1  7   -0 7 -inf N N
+0 0 7   -0 7   +0   7   -0 7   -1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -1  7   -0 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   -1  7   +0 7 -inf N N
+0 0 7   -0 7   +0   7   -0 7   -1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -1  7   +0 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   -1  7    1 7 -inf N N
+0 0 7   -0 7   +0   7   -0 7   -1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -1  7    1 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   -1  7 +inf 7 -inf N N
+0 0 7   +0 7   -0   7   -0 7   -1  7 +inf 7   -1 N N
+0 0 7   +0 7   -0   7   -0 7   -1  7 +inf 7   -0 N N
+0 0 7   -0 7   -0   7   -0 7   -1  7 +inf 7   +0 N N
+0 0 7   -0 7   -0   7   -0 7   -1  7 +inf 7    1 N N
+0 0 7   -0 7   -0   7   -0 7   -1  7 +inf 7 +inf N N
+0 0 7   -0 7   -0   7   -0 7   -1  7 +inf 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   -1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7   -1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7   -1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7   -1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7   -1  7  nan 7    1 N N
+0 0 7   -0 7   +0   7   -0 7   -1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -1  7  nan 7  nan N N
+0 0 7   +0 7   +0   7   -0 7   -0  7 -inf 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7   -0  7 -inf 7   -1 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7 -inf 7   -0 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7 -inf 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7 -inf 7    1 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7 -inf 7 +inf N N
+0 0 7   +0 7   +0   7   -0 7   -0  7 -inf 7  nan N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -1 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   -1 7  nan N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -0 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   -0 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   -0  7   +0 7 -inf N N
+0 0 7   -0 7   +0   7   -0 7   -0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   +0 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   -0  7    1 7 -inf N N
+0 0 7   -0 7   +0   7   -0 7   -0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -0  7    1 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   -0  7 +inf 7 -inf N N
+0 0 7   +0 7   -0   7   -0 7   -0  7 +inf 7   -1 N N
+0 0 7   +0 7   -0   7   -0 7   -0  7 +inf 7   -0 N N
+0 0 7   -0 7   +0   7   -0 7   -0  7 +inf 7   +0 N N
+0 0 7   -0 7   +0   7   -0 7   -0  7 +inf 7    1 N N
+0 0 7   -0 7   +0   7   -0 7   -0  7 +inf 7 +inf N N
+0 0 7   -0 7   +0   7   -0 7   -0  7 +inf 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   -0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7   -0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7   -0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7   -0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7   -0  7  nan 7    1 N N
+0 0 7   -0 7   +0   7   -0 7   -0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   -0  7  nan 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   +0  7 -inf 7 -inf N N
+0 0 7   +0 7   -0   7   -0 7   +0  7 -inf 7   -1 N N
+0 0 7   +0 7   -0   7   -0 7   +0  7 -inf 7   -0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7 -inf 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7 -inf 7    1 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7 -inf 7 +inf N N
+0 0 7   +0 7   +0   7   -0 7   +0  7 -inf 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   +0  7   -1 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7   +0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   -1 7  nan N N
+0 0 7   +0 7   -0   7   -0 7   +0  7   -0 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7   +0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   -0 7  nan N N
+0 0 7   -0 7   +0   7   -0 7   +0  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7   +0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   +0 7  nan N N
+0 0 7   -0 7   +0   7   -0 7   +0  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7   +0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   +0  7    1 7  nan N N
+0 0 7   -0 7   +0   7   -0 7   +0  7 +inf 7 -inf N N
+0 0 7   -0 7   +0   7   -0 7   +0  7 +inf 7   -1 N N
+0 0 7   -0 7   +0   7   -0 7   +0  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7 +inf 7    1 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7   -0 7   +0  7 +inf 7  nan N N
+0 0 7   -0 7   +0   7   -0 7   +0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7   +0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7   +0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7   +0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7   +0  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7   +0  7  nan 7  nan N N
+0 0 7   -0 7   -0   7   -0 7    1  7 -inf 7 -inf N N
+0 0 7   +0 7   -0   7   -0 7    1  7 -inf 7   -1 N N
+0 0 7   +0 7   -0   7   -0 7    1  7 -inf 7   -0 N N
+0 0 7   +0 7   -0   7   -0 7    1  7 -inf 7   +0 N N
+0 0 7   +0 7   -0   7   -0 7    1  7 -inf 7    1 N N
+0 0 7   +0 7   -0   7   -0 7    1  7 -inf 7 +inf N N
+0 0 7   +0 7   -0   7   -0 7    1  7 -inf 7  nan N N
+0 0 7   -0 7   -0   7   -0 7    1  7   -1 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7    1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7    1  7   -1 7  nan N N
+0 0 7   -0 7   -0   7   -0 7    1  7   -0 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7    1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7    1  7   -0 7  nan N N
+0 0 7   -0 7   +0   7   -0 7    1  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7    1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7    1  7   +0 7  nan N N
+0 0 7   -0 7   +0   7   -0 7    1  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   -0 7    1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7    1  7    1 7  nan N N
+0 0 7   -0 7   +0   7   -0 7    1  7 +inf 7 -inf N N
+0 0 7   -0 7   +0   7   -0 7    1  7 +inf 7   -1 N N
+0 0 7   -0 7   +0   7   -0 7    1  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7   -0 7    1  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7    1  7 +inf 7    1 N N
+0 0 7   +0 7   +0   7   -0 7    1  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7   -0 7    1  7 +inf 7  nan N N
+0 0 7   -0 7   +0   7   -0 7    1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7    1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7    1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7    1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7    1  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   -0 7    1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7    1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   -1 7 -inf N N
+0 0 7 -inf 7 -inf   7   -0 7 +inf  7   -1 7   -1 N N
+0 0 7  nan 7 -inf   7   -0 7 +inf  7   -1 7   -0 N N
+0 0 7  nan 7 -inf   7   -0 7 +inf  7   -1 7   +0 N N
+0 0 7 +inf 7 -inf   7   -0 7 +inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   -0 7 -inf N N
+0 0 7 -inf 7  nan   7   -0 7 +inf  7   -0 7   -1 N N
+0 0 7  nan 7 -inf   7   -0 7 +inf  7   -0 7   -0 N N
+0 0 7  nan 7 -inf   7   -0 7 +inf  7   -0 7   +0 N N
+0 0 7 +inf 7  nan   7   -0 7 +inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   +0 7 -inf N N
+0 0 7 -inf 7  nan   7   -0 7 +inf  7   +0 7   -1 N N
+0 0 7  nan 7 +inf   7   -0 7 +inf  7   +0 7   -0 N N
+0 0 7  nan 7 +inf   7   -0 7 +inf  7   +0 7   +0 N N
+0 0 7 +inf 7  nan   7   -0 7 +inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7    1 7 -inf N N
+0 0 7 -inf 7 +inf   7   -0 7 +inf  7    1 7   -1 N N
+0 0 7  nan 7 +inf   7   -0 7 +inf  7    1 7   -0 N N
+0 0 7  nan 7 +inf   7   -0 7 +inf  7    1 7   +0 N N
+0 0 7 +inf 7 +inf   7   -0 7 +inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   -0 7  nan  7    1 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7    1 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7    1 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7    1 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7    1 7    1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7    1 7  nan N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   -1 7 -inf N N
+0 0 7 +inf 7 +inf   7   +0 7 -inf  7   -1 7   -1 N N
+0 0 7  nan 7 +inf   7   +0 7 -inf  7   -1 7   -0 N N
+0 0 7  nan 7 +inf   7   +0 7 -inf  7   -1 7   +0 N N
+0 0 7 -inf 7 +inf   7   +0 7 -inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   -0 7 -inf N N
+0 0 7 +inf 7  nan   7   +0 7 -inf  7   -0 7   -1 N N
+0 0 7  nan 7 +inf   7   +0 7 -inf  7   -0 7   -0 N N
+0 0 7  nan 7 +inf   7   +0 7 -inf  7   -0 7   +0 N N
+0 0 7 -inf 7  nan   7   +0 7 -inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   +0 7 -inf N N
+0 0 7 +inf 7  nan   7   +0 7 -inf  7   +0 7   -1 N N
+0 0 7  nan 7 -inf   7   +0 7 -inf  7   +0 7   -0 N N
+0 0 7  nan 7 -inf   7   +0 7 -inf  7   +0 7   +0 N N
+0 0 7 -inf 7  nan   7   +0 7 -inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7    1 7 -inf N N
+0 0 7 +inf 7 -inf   7   +0 7 -inf  7    1 7   -1 N N
+0 0 7  nan 7 -inf   7   +0 7 -inf  7    1 7   -0 N N
+0 0 7  nan 7 -inf   7   +0 7 -inf  7    1 7   +0 N N
+0 0 7 -inf 7 -inf   7   +0 7 -inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -1  7 -inf 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7   -1  7 -inf 7   -1 N N
+0 0 7   +0 7   +0   7   +0 7   -1  7 -inf 7   -0 N N
+0 0 7   -0 7   +0   7   +0 7   -1  7 -inf 7   +0 N N
+0 0 7   -0 7   +0   7   +0 7   -1  7 -inf 7    1 N N
+0 0 7   -0 7   +0   7   +0 7   -1  7 -inf 7 +inf N N
+0 0 7   -0 7   +0   7   +0 7   -1  7 -inf 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -1  7   -1 7 -inf N N
+0 0 7   -0 7   +0   7   +0 7   -1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -1  7   -1 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -1  7   -0 7 -inf N N
+0 0 7   -0 7   +0   7   +0 7   -1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -1  7   -0 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -1  7   +0 7 -inf N N
+0 0 7   -0 7   -0   7   +0 7   -1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -1  7   +0 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -1  7    1 7 -inf N N
+0 0 7   -0 7   -0   7   +0 7   -1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -1  7    1 7  nan N N
+0 0 7   +0 7   -0   7   +0 7   -1  7 +inf 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7   -1  7 +inf 7   -1 N N
+0 0 7   +0 7   -0   7   +0 7   -1  7 +inf 7   -0 N N
+0 0 7   +0 7   -0   7   +0 7   -1  7 +inf 7   +0 N N
+0 0 7   +0 7   -0   7   +0 7   -1  7 +inf 7    1 N N
+0 0 7   -0 7   -0   7   +0 7   -1  7 +inf 7 +inf N N
+0 0 7   +0 7   -0   7   +0 7   -1  7 +inf 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7   -1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7   -1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7   -1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7   -1  7  nan 7    1 N N
+0 0 7   -0 7   -0   7   +0 7   -1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -1  7  nan 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -0  7 -inf 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7   -0  7 -inf 7   -1 N N
+0 0 7   +0 7   +0   7   +0 7   -0  7 -inf 7   -0 N N
+0 0 7   -0 7   +0   7   +0 7   -0  7 -inf 7   +0 N N
+0 0 7   -0 7   +0   7   +0 7   -0  7 -inf 7    1 N N
+0 0 7   -0 7   +0   7   +0 7   -0  7 -inf 7 +inf N N
+0 0 7   -0 7   +0   7   +0 7   -0  7 -inf 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -0  7   -1 7 -inf N N
+0 0 7   -0 7   +0   7   +0 7   -0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   -1 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -0  7   -0 7 -inf N N
+0 0 7   -0 7   +0   7   +0 7   -0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   -0 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -0  7   +0 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7   -0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   +0 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -0  7    1 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7   -0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -0  7    1 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -0  7 +inf 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7   -0  7 +inf 7   -1 N N
+0 0 7   +0 7   +0   7   +0 7   -0  7 +inf 7   -0 N N
+0 0 7   +0 7   -0   7   +0 7   -0  7 +inf 7   +0 N N
+0 0 7   +0 7   -0   7   +0 7   -0  7 +inf 7    1 N N
+0 0 7   +0 7   -0   7   +0 7   -0  7 +inf 7 +inf N N
+0 0 7   +0 7   -0   7   +0 7   -0  7 +inf 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   -0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7   -0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7   -0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7   -0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7   -0  7  nan 7    1 N N
+0 0 7   +0 7   -0   7   +0 7   -0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   -0  7  nan 7  nan N N
+0 0 7   -0 7   +0   7   +0 7   +0  7 -inf 7 -inf N N
+0 0 7   -0 7   +0   7   +0 7   +0  7 -inf 7   -1 N N
+0 0 7   -0 7   +0   7   +0 7   +0  7 -inf 7   -0 N N
+0 0 7   +0 7   -0   7   +0 7   +0  7 -inf 7   +0 N N
+0 0 7   +0 7   -0   7   +0 7   +0  7 -inf 7    1 N N
+0 0 7   +0 7   -0   7   +0 7   +0  7 -inf 7 +inf N N
+0 0 7   +0 7   -0   7   +0 7   +0  7 -inf 7  nan N N
+0 0 7   -0 7   +0   7   +0 7   +0  7   -1 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7   +0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   -1 7  nan N N
+0 0 7   -0 7   +0   7   +0 7   +0  7   -0 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7   +0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   -0 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   +0  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7   +0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   +0 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   +0  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7   +0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   +0  7    1 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   +0  7 +inf 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7   +0  7 +inf 7   -1 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7 +inf 7    1 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7   +0 7   +0  7 +inf 7  nan N N
+0 0 7   +0 7   +0   7   +0 7   +0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7   +0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7   +0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7   +0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7   +0  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7   +0  7  nan 7  nan N N
+0 0 7   -0 7   -0   7   +0 7    1  7 -inf 7 -inf N N
+0 0 7   -0 7   -0   7   +0 7    1  7 -inf 7   -1 N N
+0 0 7   -0 7   -0   7   +0 7    1  7 -inf 7   -0 N N
+0 0 7   +0 7   -0   7   +0 7    1  7 -inf 7   +0 N N
+0 0 7   +0 7   -0   7   +0 7    1  7 -inf 7    1 N N
+0 0 7   +0 7   -0   7   +0 7    1  7 -inf 7 +inf N N
+0 0 7   +0 7   -0   7   +0 7    1  7 -inf 7  nan N N
+0 0 7   -0 7   +0   7   +0 7    1  7   -1 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7    1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7    1  7   -1 7  nan N N
+0 0 7   -0 7   +0   7   +0 7    1  7   -0 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7    1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7    1  7   -0 7  nan N N
+0 0 7   -0 7   +0   7   +0 7    1  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7    1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7    1  7   +0 7  nan N N
+0 0 7   -0 7   +0   7   +0 7    1  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7    1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7    1  7    1 7  nan N N
+0 0 7   -0 7   +0   7   +0 7    1  7 +inf 7 -inf N N
+0 0 7   +0 7   +0   7   +0 7    1  7 +inf 7   -1 N N
+0 0 7   +0 7   +0   7   +0 7    1  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7   +0 7    1  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7   +0 7    1  7 +inf 7    1 N N
+0 0 7   +0 7   +0   7   +0 7    1  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7   +0 7    1  7 +inf 7  nan N N
+0 0 7   -0 7   +0   7   +0 7    1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7    1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7    1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7    1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7    1  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   +0 7    1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7    1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   -1 7 -inf N N
+0 0 7 -inf 7 -inf   7   +0 7 +inf  7   -1 7   -1 N N
+0 0 7  nan 7 -inf   7   +0 7 +inf  7   -1 7   -0 N N
+0 0 7  nan 7 -inf   7   +0 7 +inf  7   -1 7   +0 N N
+0 0 7 +inf 7 -inf   7   +0 7 +inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   -0 7 -inf N N
+0 0 7 -inf 7  nan   7   +0 7 +inf  7   -0 7   -1 N N
+0 0 7  nan 7 -inf   7   +0 7 +inf  7   -0 7   -0 N N
+0 0 7  nan 7 -inf   7   +0 7 +inf  7   -0 7   +0 N N
+0 0 7 +inf 7  nan   7   +0 7 +inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   +0 7 -inf N N
+0 0 7 -inf 7  nan   7   +0 7 +inf  7   +0 7   -1 N N
+0 0 7  nan 7 +inf   7   +0 7 +inf  7   +0 7   -0 N N
+0 0 7  nan 7 +inf   7   +0 7 +inf  7   +0 7   +0 N N
+0 0 7 +inf 7  nan   7   +0 7 +inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7    1 7 -inf N N
+0 0 7 -inf 7 +inf   7   +0 7 +inf  7    1 7   -1 N N
+0 0 7  nan 7 +inf   7   +0 7 +inf  7    1 7   -0 N N
+0 0 7  nan 7 +inf   7   +0 7 +inf  7    1 7   +0 N N
+0 0 7 +inf 7 +inf   7   +0 7 +inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -1 7    1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -1 7  nan N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -0 7    1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -0 7  nan N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   +0 7    1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   +0 7  nan N N
+0 0 7  nan 7  nan   7   +0 7  nan  7    1 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7    1 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7    1 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7    1 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7    1 7    1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7    1 7  nan N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan 7    1 N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan 7  nan N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   -1 7 -inf N N
+0 0 7 +inf 7 +inf   7    1 7 -inf  7   -1 7   -1 N N
+0 0 7  nan 7 +inf   7    1 7 -inf  7   -1 7   -0 N N
+0 0 7  nan 7 +inf   7    1 7 -inf  7   -1 7   +0 N N
+0 0 7 -inf 7 +inf   7    1 7 -inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   -0 7 -inf N N
+0 0 7 +inf 7  nan   7    1 7 -inf  7   -0 7   -1 N N
+0 0 7 -inf 7 +inf   7    1 7 -inf  7   -0 7   -0 N N
+0 0 7 -inf 7 +inf   7    1 7 -inf  7   -0 7   +0 N N
+0 0 7 -inf 7  nan   7    1 7 -inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   +0 7 -inf N N
+0 0 7 +inf 7  nan   7    1 7 -inf  7   +0 7   -1 N N
+0 0 7 +inf 7 -inf   7    1 7 -inf  7   +0 7   -0 N N
+0 0 7 +inf 7 -inf   7    1 7 -inf  7   +0 7   +0 N N
+0 0 7 -inf 7  nan   7    1 7 -inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7    1 7 -inf  7    1 7 -inf N N
+0 0 7 +inf 7 -inf   7    1 7 -inf  7    1 7   -1 N N
+0 0 7  nan 7 -inf   7    1 7 -inf  7    1 7   -0 N N
+0 0 7  nan 7 -inf   7    1 7 -inf  7    1 7   +0 N N
+0 0 7 -inf 7 -inf   7    1 7 -inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -1  7 -inf 7 -inf N N
+0 0 7   -0 7   +0   7    1 7   -1  7 -inf 7   -1 N N
+0 0 7   -0 7   +0   7    1 7   -1  7 -inf 7   -0 N N
+0 0 7   -0 7   +0   7    1 7   -1  7 -inf 7   +0 N N
+0 0 7   -0 7   +0   7    1 7   -1  7 -inf 7    1 N N
+0 0 7   -0 7   +0   7    1 7   -1  7 -inf 7 +inf N N
+0 0 7   -0 7   +0   7    1 7   -1  7 -inf 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -1  7   -1 7 -inf N N
+0 0 7   -0 7   -0   7    1 7   -1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -1  7   -1 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -1  7   -0 7 -inf N N
+0 0 7   -0 7   -0   7    1 7   -1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -1  7   -0 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -1  7   +0 7 -inf N N
+0 0 7   -0 7   -0   7    1 7   -1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -1  7   +0 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -1  7    1 7 -inf N N
+0 0 7   -0 7   -0   7    1 7   -1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -1  7    1 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -1  7 +inf 7 -inf N N
+0 0 7   +0 7   -0   7    1 7   -1  7 +inf 7   -1 N N
+0 0 7   +0 7   -0   7    1 7   -1  7 +inf 7   -0 N N
+0 0 7   +0 7   -0   7    1 7   -1  7 +inf 7   +0 N N
+0 0 7   +0 7   -0   7    1 7   -1  7 +inf 7    1 N N
+0 0 7   +0 7   -0   7    1 7   -1  7 +inf 7 +inf N N
+0 0 7   +0 7   -0   7    1 7   -1  7 +inf 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7    1 7   -1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7    1 7   -1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7    1 7   -1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7    1 7   -1  7  nan 7    1 N N
+0 0 7   -0 7   -0   7    1 7   -1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -1  7  nan 7  nan N N
+0 0 7   -0 7   +0   7    1 7   -0  7 -inf 7 -inf N N
+0 0 7   -0 7   +0   7    1 7   -0  7 -inf 7   -1 N N
+0 0 7   -0 7   +0   7    1 7   -0  7 -inf 7   -0 N N
+0 0 7   -0 7   +0   7    1 7   -0  7 -inf 7   +0 N N
+0 0 7   -0 7   +0   7    1 7   -0  7 -inf 7    1 N N
+0 0 7   -0 7   -0   7    1 7   -0  7 -inf 7 +inf N N
+0 0 7   -0 7   +0   7    1 7   -0  7 -inf 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -0  7   -1 7 -inf N N
+0 0 7   -0 7   -0   7    1 7   -0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -0  7   -1 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -0  7   -0 7 -inf N N
+0 0 7   -0 7   -0   7    1 7   -0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -0  7   -0 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -0  7   +0 7 -inf N N
+0 0 7   +0 7   -0   7    1 7   -0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -0  7   +0 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -0  7    1 7 -inf N N
+0 0 7   +0 7   -0   7    1 7   -0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -0  7    1 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -0  7 +inf 7 -inf N N
+0 0 7   +0 7   +0   7    1 7   -0  7 +inf 7   -1 N N
+0 0 7   +0 7   +0   7    1 7   -0  7 +inf 7   -0 N N
+0 0 7   +0 7   -0   7    1 7   -0  7 +inf 7   +0 N N
+0 0 7   +0 7   -0   7    1 7   -0  7 +inf 7    1 N N
+0 0 7   +0 7   -0   7    1 7   -0  7 +inf 7 +inf N N
+0 0 7   +0 7   -0   7    1 7   -0  7 +inf 7  nan N N
+0 0 7   +0 7   +0   7    1 7   -0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7    1 7   -0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7    1 7   -0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7    1 7   -0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7    1 7   -0  7  nan 7    1 N N
+0 0 7   +0 7   -0   7    1 7   -0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   -0  7  nan 7  nan N N
+0 0 7   -0 7   +0   7    1 7   +0  7 -inf 7 -inf N N
+0 0 7   -0 7   +0   7    1 7   +0  7 -inf 7   -1 N N
+0 0 7   -0 7   +0   7    1 7   +0  7 -inf 7   -0 N N
+0 0 7   -0 7   -0   7    1 7   +0  7 -inf 7   +0 N N
+0 0 7   -0 7   -0   7    1 7   +0  7 -inf 7    1 N N
+0 0 7   -0 7   -0   7    1 7   +0  7 -inf 7 +inf N N
+0 0 7   -0 7   -0   7    1 7   +0  7 -inf 7  nan N N
+0 0 7   -0 7   +0   7    1 7   +0  7   -1 7 -inf N N
+0 0 7   +0 7   -0   7    1 7   +0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   +0  7   -1 7  nan N N
+0 0 7   -0 7   +0   7    1 7   +0  7   -0 7 -inf N N
+0 0 7   +0 7   -0   7    1 7   +0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   +0  7   -0 7  nan N N
+0 0 7   +0 7   +0   7    1 7   +0  7   +0 7 -inf N N
+0 0 7   +0 7   -0   7    1 7   +0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   +0  7   +0 7  nan N N
+0 0 7   +0 7   +0   7    1 7   +0  7    1 7 -inf N N
+0 0 7   +0 7   -0   7    1 7   +0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   +0  7    1 7  nan N N
+0 0 7   +0 7   +0   7    1 7   +0  7 +inf 7 -inf N N
+0 0 7   +0 7   +0   7    1 7   +0  7 +inf 7   -1 N N
+0 0 7   +0 7   +0   7    1 7   +0  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7    1 7   +0  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7    1 7   +0  7 +inf 7    1 N N
+0 0 7   +0 7   -0   7    1 7   +0  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7    1 7   +0  7 +inf 7  nan N N
+0 0 7   +0 7   +0   7    1 7   +0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7    1 7   +0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7    1 7   +0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7    1 7   +0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7    1 7   +0  7  nan 7    1 N N
+0 0 7   +0 7   -0   7    1 7   +0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7    1 7   +0  7  nan 7  nan N N
+0 0 7   -0 7   +0   7    1 7    1  7 -inf 7 -inf N N
+0 0 7   -0 7   -0   7    1 7    1  7 -inf 7   -1 N N
+0 0 7   -0 7   -0   7    1 7    1  7 -inf 7   -0 N N
+0 0 7   -0 7   -0   7    1 7    1  7 -inf 7   +0 N N
+0 0 7   -0 7   -0   7    1 7    1  7 -inf 7    1 N N
+0 0 7   +0 7   -0   7    1 7    1  7 -inf 7 +inf N N
+0 0 7   -0 7   -0   7    1 7    1  7 -inf 7  nan N N
+0 0 7   -0 7   +0   7    1 7    1  7   -1 7 -inf N N
+0 0 7   +0 7   -0   7    1 7    1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7    1  7   -1 7  nan N N
+0 0 7   -0 7   +0   7    1 7    1  7   -0 7 -inf N N
+0 0 7   +0 7   -0   7    1 7    1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7    1  7   -0 7  nan N N
+0 0 7   -0 7   +0   7    1 7    1  7   +0 7 -inf N N
+0 0 7   +0 7   -0   7    1 7    1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7    1  7   +0 7  nan N N
+0 0 7   -0 7   +0   7    1 7    1  7    1 7 -inf N N
+0 0 7   +0 7   -0   7    1 7    1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7    1  7    1 7  nan N N
+0 0 7   +0 7   +0   7    1 7    1  7 +inf 7 -inf N N
+0 0 7   +0 7   +0   7    1 7    1  7 +inf 7   -1 N N
+0 0 7   +0 7   +0   7    1 7    1  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7    1 7    1  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7    1 7    1  7 +inf 7    1 N N
+0 0 7   +0 7   +0   7    1 7    1  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7    1 7    1  7 +inf 7  nan N N
+0 0 7   -0 7   +0   7    1 7    1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7    1 7    1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7    1 7    1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7    1 7    1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7    1 7    1  7  nan 7    1 N N
+0 0 7   +0 7   -0   7    1 7    1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7    1 7    1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   -1 7 -inf N N
+0 0 7 -inf 7 -inf   7    1 7 +inf  7   -1 7   -1 N N
+0 0 7  nan 7 -inf   7    1 7 +inf  7   -1 7   -0 N N
+0 0 7  nan 7 -inf   7    1 7 +inf  7   -1 7   +0 N N
+0 0 7 +inf 7 -inf   7    1 7 +inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   -0 7 -inf N N
+0 0 7 -inf 7  nan   7    1 7 +inf  7   -0 7   -1 N N
+0 0 7 -inf 7 -inf   7    1 7 +inf  7   -0 7   -0 N N
+0 0 7 -inf 7 -inf   7    1 7 +inf  7   -0 7   +0 N N
+0 0 7 +inf 7  nan   7    1 7 +inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   +0 7 -inf N N
+0 0 7 -inf 7  nan   7    1 7 +inf  7   +0 7   -1 N N
+0 0 7 +inf 7 +inf   7    1 7 +inf  7   +0 7   -0 N N
+0 0 7 +inf 7 +inf   7    1 7 +inf  7   +0 7   +0 N N
+0 0 7 +inf 7  nan   7    1 7 +inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7    1 7 +inf  7    1 7 -inf N N
+0 0 7 -inf 7 +inf   7    1 7 +inf  7    1 7   -1 N N
+0 0 7  nan 7 +inf   7    1 7 +inf  7    1 7   -0 N N
+0 0 7  nan 7 +inf   7    1 7 +inf  7    1 7   +0 N N
+0 0 7 +inf 7 +inf   7    1 7 +inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7    1 7  nan  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -1 7    1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -1 7  nan N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -0 7   -1 N N
+0 0 7 -inf 7  nan   7    1 7  nan  7   -0 7   -0 N N
+0 0 7 -inf 7  nan   7    1 7  nan  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -0 7    1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7   -0 7  nan N N
+0 0 7  nan 7  nan   7    1 7  nan  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7   +0 7   -1 N N
+0 0 7 +inf 7  nan   7    1 7  nan  7   +0 7   -0 N N
+0 0 7 +inf 7  nan   7    1 7  nan  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7   +0 7    1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7   +0 7  nan N N
+0 0 7  nan 7  nan   7    1 7  nan  7    1 7 -inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7    1 7   -1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7    1 7   -0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7    1 7   +0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7    1 7    1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7    1 7 +inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7    1 7  nan N N
+0 0 7  nan 7  nan   7    1 7  nan  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan 7    1 N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   -1 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7 -inf  7   -1 7   -1 N N
+0 0 7 -inf 7 +inf   7 +inf 7 -inf  7   -1 7   -0 N N
+0 0 7 -inf 7 +inf   7 +inf 7 -inf  7   -1 7   +0 N N
+0 0 7 -inf 7  nan   7 +inf 7 -inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   -0 7 -inf N N
+0 0 7 +inf 7 +inf   7 +inf 7 -inf  7   -0 7   -1 N N
+0 0 7 -inf 7 +inf   7 +inf 7 -inf  7   -0 7   -0 N N
+0 0 7 -inf 7 +inf   7 +inf 7 -inf  7   -0 7   +0 N N
+0 0 7 -inf 7 -inf   7 +inf 7 -inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   +0 7 -inf N N
+0 0 7 +inf 7 +inf   7 +inf 7 -inf  7   +0 7   -1 N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7   +0 7   -0 N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7   +0 7   +0 N N
+0 0 7 -inf 7 -inf   7 +inf 7 -inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7    1 7 -inf N N
+0 0 7 +inf 7  nan   7 +inf 7 -inf  7    1 7   -1 N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7    1 7   -0 N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7    1 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7 -inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   -1 7 -inf N N
+0 0 7 -inf 7 +inf   7 +inf 7   -1  7   -1 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf 7   -1  7   -1 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf 7   -1  7   -1 7   +0 N N
+0 0 7 -inf 7 -inf   7 +inf 7   -1  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   -0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7   -1  7   -0 7   -1 N N
+0 0 7 -inf 7 +inf   7 +inf 7   -1  7   -0 7   -0 N N
+0 0 7 -inf 7 +inf   7 +inf 7   -1  7   -0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7   -1  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   +0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7   -1  7   +0 7   -1 N N
+0 0 7 +inf 7 -inf   7 +inf 7   -1  7   +0 7   -0 N N
+0 0 7 +inf 7 -inf   7 +inf 7   -1  7   +0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7   -1  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7    1 7 -inf N N
+0 0 7 +inf 7 +inf   7 +inf 7   -1  7    1 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf 7   -1  7    1 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf 7   -1  7    1 7   +0 N N
+0 0 7 +inf 7 -inf   7 +inf 7   -1  7    1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7    1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   -1 7 -inf N N
+0 0 7 -inf 7 +inf   7 +inf 7   -0  7   -1 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf 7   -0  7   -1 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf 7   -0  7   -1 7   +0 N N
+0 0 7 -inf 7 -inf   7 +inf 7   -0  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   -0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7   -0  7   -0 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf 7   -0  7   -0 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf 7   -0  7   -0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7   -0  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   +0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7   -0  7   +0 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf 7   -0  7   +0 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf 7   -0  7   +0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7   -0  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7    1 7 -inf N N
+0 0 7 +inf 7 +inf   7 +inf 7   -0  7    1 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf 7   -0  7    1 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf 7   -0  7    1 7   +0 N N
+0 0 7 +inf 7 -inf   7 +inf 7   -0  7    1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7    1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   -1 7 -inf N N
+0 0 7 -inf 7 +inf   7 +inf 7   +0  7   -1 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf 7   +0  7   -1 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf 7   +0  7   -1 7   +0 N N
+0 0 7 -inf 7 -inf   7 +inf 7   +0  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   -0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7   +0  7   -0 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf 7   +0  7   -0 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf 7   +0  7   -0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7   +0  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   +0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7   +0  7   +0 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf 7   +0  7   +0 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf 7   +0  7   +0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7   +0  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7    1 7 -inf N N
+0 0 7 +inf 7 +inf   7 +inf 7   +0  7    1 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf 7   +0  7    1 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf 7   +0  7    1 7   +0 N N
+0 0 7 +inf 7 -inf   7 +inf 7   +0  7    1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7    1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   -1 7 -inf N N
+0 0 7 -inf 7 +inf   7 +inf 7    1  7   -1 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf 7    1  7   -1 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf 7    1  7   -1 7   +0 N N
+0 0 7 -inf 7 -inf   7 +inf 7    1  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   -0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7    1  7   -0 7   -1 N N
+0 0 7 -inf 7 -inf   7 +inf 7    1  7   -0 7   -0 N N
+0 0 7 -inf 7 -inf   7 +inf 7    1  7   -0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7    1  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   +0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7    1  7   +0 7   -1 N N
+0 0 7 +inf 7 +inf   7 +inf 7    1  7   +0 7   -0 N N
+0 0 7 +inf 7 +inf   7 +inf 7    1  7   +0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7    1  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7    1  7    1 7 -inf N N
+0 0 7 +inf 7 +inf   7 +inf 7    1  7    1 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf 7    1  7    1 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf 7    1  7    1 7   +0 N N
+0 0 7 +inf 7 -inf   7 +inf 7    1  7    1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7    1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   -1 7 -inf N N
+0 0 7 -inf 7  nan   7 +inf 7 +inf  7   -1 7   -1 N N
+0 0 7 -inf 7 -inf   7 +inf 7 +inf  7   -1 7   -0 N N
+0 0 7 -inf 7 -inf   7 +inf 7 +inf  7   -1 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7 +inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   -0 7 -inf N N
+0 0 7 -inf 7 +inf   7 +inf 7 +inf  7   -0 7   -1 N N
+0 0 7 -inf 7 -inf   7 +inf 7 +inf  7   -0 7   -0 N N
+0 0 7 -inf 7 -inf   7 +inf 7 +inf  7   -0 7   +0 N N
+0 0 7 +inf 7 -inf   7 +inf 7 +inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   +0 7 -inf N N
+0 0 7 -inf 7 +inf   7 +inf 7 +inf  7   +0 7   -1 N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7   +0 7   -0 N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7   +0 7   +0 N N
+0 0 7 +inf 7 -inf   7 +inf 7 +inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7    1 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7 +inf  7    1 7   -1 N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7    1 7   -0 N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7    1 7   +0 N N
+0 0 7 +inf 7  nan   7 +inf 7 +inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   -1 7 -inf N N
+0 0 7 -inf 7 +inf   7 +inf 7  nan  7   -1 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf 7  nan  7   -1 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf 7  nan  7   -1 7   +0 N N
+0 0 7 -inf 7 -inf   7 +inf 7  nan  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   -0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7  nan  7   -0 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf 7  nan  7   -0 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf 7  nan  7   -0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7  nan  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   +0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf 7  nan  7   +0 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7   +0 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7   +0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf 7  nan  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7    1 7 -inf N N
+0 0 7 +inf 7 +inf   7 +inf 7  nan  7    1 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7    1 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7    1 7   +0 N N
+0 0 7 +inf 7 -inf   7 +inf 7  nan  7    1 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7    1 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   -1 7 -inf N N
+0 0 7 +inf 7 +inf   7  nan 7 -inf  7   -1 7   -1 N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7   -1 7   -0 N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7   -1 7   +0 N N
+0 0 7 -inf 7 +inf   7  nan 7 -inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   -0 7 -inf N N
+0 0 7 +inf 7  nan   7  nan 7 -inf  7   -0 7   -1 N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7   -0 7   -0 N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7   -0 7   +0 N N
+0 0 7 -inf 7  nan   7  nan 7 -inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   +0 7 -inf N N
+0 0 7 +inf 7  nan   7  nan 7 -inf  7   +0 7   -1 N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7   +0 7   -0 N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7   +0 7   +0 N N
+0 0 7 -inf 7  nan   7  nan 7 -inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7    1 7 -inf N N
+0 0 7 +inf 7 -inf   7  nan 7 -inf  7    1 7   -1 N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7    1 7   -0 N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7    1 7   +0 N N
+0 0 7 -inf 7 -inf   7  nan 7 -inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -0 7   -1 N N
+0 0 7  nan 7 +inf   7  nan 7   -1  7   -0 7   -0 N N
+0 0 7  nan 7 +inf   7  nan 7   -1  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   -0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   +0 7   -1 N N
+0 0 7  nan 7 -inf   7  nan 7   -1  7   +0 7   -0 N N
+0 0 7  nan 7 -inf   7  nan 7   -1  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   +0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7   +0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -1  7    1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7    1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7    1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7    1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7    1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7    1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   +0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   +0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -0  7    1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7    1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7    1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7    1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7    1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7    1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   +0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   +0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   +0  7    1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7    1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7    1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7    1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7    1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7    1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan 7    1 N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan 7  nan N N
+0 0 7  nan 7  nan   7  nan 7    1  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -0 7   -1 N N
+0 0 7  nan 7 -inf   7  nan 7    1  7   -0 7   -0 N N
+0 0 7  nan 7 -inf   7  nan 7    1  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7   -0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7    1  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7   +0 7   -1 N N
+0 0 7  nan 7 +inf   7  nan 7    1  7   +0 7   -0 N N
+0 0 7  nan 7 +inf   7  nan 7    1  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7   +0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7   +0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7    1  7    1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7    1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7    1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7    1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7    1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7    1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7    1  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan 7    1 N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   -1 7 -inf N N
+0 0 7 -inf 7 -inf   7  nan 7 +inf  7   -1 7   -1 N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7   -1 7   -0 N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7   -1 7   +0 N N
+0 0 7 +inf 7 -inf   7  nan 7 +inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   -0 7 -inf N N
+0 0 7 -inf 7  nan   7  nan 7 +inf  7   -0 7   -1 N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7   -0 7   -0 N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7   -0 7   +0 N N
+0 0 7 +inf 7  nan   7  nan 7 +inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   +0 7 -inf N N
+0 0 7 -inf 7  nan   7  nan 7 +inf  7   +0 7   -1 N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7   +0 7   -0 N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7   +0 7   +0 N N
+0 0 7 +inf 7  nan   7  nan 7 +inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7    1 7 -inf N N
+0 0 7 -inf 7 +inf   7  nan 7 +inf  7    1 7   -1 N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7    1 7   -0 N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7    1 7   +0 N N
+0 0 7 +inf 7 +inf   7  nan 7 +inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0 7    1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0 7  nan N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1 7    1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1 7  nan N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan 7    1 N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan 7  nan N N
+
+# finite values
+0 0 7    1 7   +0   7   -1 7   -1  7   -1 7   -1 N N
+0 0 7    1 7    1   7   -1 7   -1  7   -1 7   -0 N N
+0 0 7    1 7    1   7   -1 7   -1  7   -1 7   +0 N N
+0 0 7   +0 7    1   7   -1 7   -1  7   -1 7    1 N N
+0 0 7    1 7   -1   7   -1 7   -1  7   -0 7   -1 N N
+0 0 7 +inf 7 +inf   7   -1 7   -1  7   -0 7   -0 N N
+0 0 7 +inf 7 +inf   7   -1 7   -1  7   -0 7   +0 N N
+0 0 7   -1 7    1   7   -1 7   -1  7   -0 7    1 N N
+0 0 7    1 7   -1   7   -1 7   -1  7   +0 7   -1 N N
+0 0 7 -inf 7 -inf   7   -1 7   -1  7   +0 7   -0 N N
+0 0 7 -inf 7 -inf   7   -1 7   -1  7   +0 7   +0 N N
+0 0 7   -1 7    1   7   -1 7   -1  7   +0 7    1 N N
+0 0 7   +0 7   -1   7   -1 7   -1  7    1 7   -1 N N
+0 0 7   -1 7   -1   7   -1 7   -1  7    1 7   -0 N N
+0 0 7   -1 7   -1   7   -1 7   -1  7    1 7   +0 N N
+0 0 7   -1 7   +0   7   -1 7   -1  7    1 7    1 N N
+0 0 7  0.5 7 -0.5   7   -1 7   -0  7   -1 7   -1 N N
+0 0 7    1 7   +0   7   -1 7   -0  7   -1 7   -0 N N
+0 0 7    1 7   +0   7   -1 7   -0  7   -1 7   +0 N N
+0 0 7  0.5 7  0.5   7   -1 7   -0  7   -1 7    1 N N
+0 0 7   +0 7   -1   7   -1 7   -0  7   -0 7   -1 N N
+0 0 7 +inf 7  nan   7   -1 7   -0  7   -0 7   -0 N N
+0 0 7 +inf 7  nan   7   -1 7   -0  7   -0 7   +0 N N
+0 0 7   +0 7    1   7   -1 7   -0  7   -0 7    1 N N
+0 0 7   +0 7   -1   7   -1 7   -0  7   +0 7   -1 N N
+0 0 7 -inf 7  nan   7   -1 7   -0  7   +0 7   -0 N N
+0 0 7 -inf 7  nan   7   -1 7   -0  7   +0 7   +0 N N
+0 0 7   -0 7    1   7   -1 7   -0  7   +0 7    1 N N
+0 0 7 -0.5 7 -0.5   7   -1 7   -0  7    1 7   -1 N N
+0 0 7   -1 7   -0   7   -1 7   -0  7    1 7   -0 N N
+0 0 7   -1 7   +0   7   -1 7   -0  7    1 7   +0 N N
+0 0 7 -0.5 7  0.5   7   -1 7   -0  7    1 7    1 N N
+0 0 7  0.5 7 -0.5   7   -1 7   +0  7   -1 7   -1 N N
+0 0 7    1 7   -0   7   -1 7   +0  7   -1 7   -0 N N
+0 0 7    1 7   +0   7   -1 7   +0  7   -1 7   +0 N N
+0 0 7  0.5 7  0.5   7   -1 7   +0  7   -1 7    1 N N
+0 0 7   +0 7   -1   7   -1 7   +0  7   -0 7   -1 N N
+0 0 7 +inf 7  nan   7   -1 7   +0  7   -0 7   -0 N N
+0 0 7 +inf 7  nan   7   -1 7   +0  7   -0 7   +0 N N
+0 0 7   +0 7    1   7   -1 7   +0  7   -0 7    1 N N
+0 0 7   -0 7   -1   7   -1 7   +0  7   +0 7   -1 N N
+0 0 7 -inf 7  nan   7   -1 7   +0  7   +0 7   -0 N N
+0 0 7 -inf 7  nan   7   -1 7   +0  7   +0 7   +0 N N
+0 0 7   +0 7    1   7   -1 7   +0  7   +0 7    1 N N
+0 0 7 -0.5 7 -0.5   7   -1 7   +0  7    1 7   -1 N N
+0 0 7   -1 7   +0   7   -1 7   +0  7    1 7   -0 N N
+0 0 7   -1 7   +0   7   -1 7   +0  7    1 7   +0 N N
+0 0 7 -0.5 7  0.5   7   -1 7   +0  7    1 7    1 N N
+0 0 7   +0 7   -1   7   -1 7    1  7   -1 7   -1 N N
+0 0 7    1 7   -1   7   -1 7    1  7   -1 7   -0 N N
+0 0 7    1 7   -1   7   -1 7    1  7   -1 7   +0 N N
+0 0 7    1 7   +0   7   -1 7    1  7   -1 7    1 N N
+0 0 7   -1 7   -1   7   -1 7    1  7   -0 7   -1 N N
+0 0 7 +inf 7 -inf   7   -1 7    1  7   -0 7   -0 N N
+0 0 7 +inf 7 -inf   7   -1 7    1  7   -0 7   +0 N N
+0 0 7    1 7    1   7   -1 7    1  7   -0 7    1 N N
+0 0 7   -1 7   -1   7   -1 7    1  7   +0 7   -1 N N
+0 0 7 -inf 7 +inf   7   -1 7    1  7   +0 7   -0 N N
+0 0 7 -inf 7 +inf   7   -1 7    1  7   +0 7   +0 N N
+0 0 7    1 7    1   7   -1 7    1  7   +0 7    1 N N
+0 0 7   -1 7   +0   7   -1 7    1  7    1 7   -1 N N
+0 0 7   -1 7    1   7   -1 7    1  7    1 7   -0 N N
+0 0 7   -1 7    1   7   -1 7    1  7    1 7   +0 N N
+0 0 7   +0 7    1   7   -1 7    1  7    1 7    1 N N
+0 0 7  0.5 7  0.5   7   -0 7   -1  7   -1 7   -1 N N
+0 0 7   +0 7    1   7   -0 7   -1  7   -1 7   -0 N N
+0 0 7   +0 7    1   7   -0 7   -1  7   -1 7   +0 N N
+0 0 7 -0.5 7  0.5   7   -0 7   -1  7   -1 7    1 N N
+0 0 7    1 7   +0   7   -0 7   -1  7   -0 7   -1 N N
+0 0 7  nan 7 +inf   7   -0 7   -1  7   -0 7   -0 N N
+0 0 7  nan 7 +inf   7   -0 7   -1  7   -0 7   +0 N N
+0 0 7   -1 7   +0   7   -0 7   -1  7   -0 7    1 N N
+0 0 7    1 7   -0   7   -0 7   -1  7   +0 7   -1 N N
+0 0 7  nan 7 -inf   7   -0 7   -1  7   +0 7   -0 N N
+0 0 7  nan 7 -inf   7   -0 7   -1  7   +0 7   +0 N N
+0 0 7   -1 7   +0   7   -0 7   -1  7   +0 7    1 N N
+0 0 7  0.5 7 -0.5   7   -0 7   -1  7    1 7   -1 N N
+0 0 7   +0 7   -1   7   -0 7   -1  7    1 7   -0 N N
+0 0 7   -0 7   -1   7   -0 7   -1  7    1 7   +0 N N
+0 0 7 -0.5 7 -0.5   7   -0 7   -1  7    1 7    1 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -1 7   -1 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -1 7   -0 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -1 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -1 7    1 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   -0 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -0 7    1 N N
+0 0 7   +0 7   -0   7   -0 7   -0  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   +0 7   +0 N N
+0 0 7   -0 7   +0   7   -0 7   -0  7   +0 7    1 N N
+0 0 7   +0 7   -0   7   -0 7   -0  7    1 7   -1 N N
+0 0 7   +0 7   -0   7   -0 7   -0  7    1 7   -0 N N
+0 0 7   -0 7   +0   7   -0 7   -0  7    1 7   +0 N N
+0 0 7   -0 7   +0   7   -0 7   -0  7    1 7    1 N N
+0 0 7   +0 7   -0   7   -0 7   +0  7   -1 7   -1 N N
+0 0 7   +0 7   -0   7   -0 7   +0  7   -1 7   -0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7   -1 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7   -1 7    1 N N
+0 0 7   +0 7   -0   7   -0 7   +0  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   -0 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7   -0 7    1 N N
+0 0 7   -0 7   +0   7   -0 7   +0  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   +0 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7   +0 7    1 N N
+0 0 7   -0 7   +0   7   -0 7   +0  7    1 7   -1 N N
+0 0 7   -0 7   +0   7   -0 7   +0  7    1 7   -0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7    1 7   +0 N N
+0 0 7   +0 7   +0   7   -0 7   +0  7    1 7    1 N N
+0 0 7 -0.5 7 -0.5   7   -0 7    1  7   -1 7   -1 N N
+0 0 7   +0 7   -1   7   -0 7    1  7   -1 7   -0 N N
+0 0 7   +0 7   -1   7   -0 7    1  7   -1 7   +0 N N
+0 0 7  0.5 7 -0.5   7   -0 7    1  7   -1 7    1 N N
+0 0 7   -1 7   -0   7   -0 7    1  7   -0 7   -1 N N
+0 0 7  nan 7 -inf   7   -0 7    1  7   -0 7   -0 N N
+0 0 7  nan 7 -inf   7   -0 7    1  7   -0 7   +0 N N
+0 0 7    1 7   +0   7   -0 7    1  7   -0 7    1 N N
+0 0 7   -1 7   +0   7   -0 7    1  7   +0 7   -1 N N
+0 0 7  nan 7 +inf   7   -0 7    1  7   +0 7   -0 N N
+0 0 7  nan 7 +inf   7   -0 7    1  7   +0 7   +0 N N
+0 0 7    1 7   +0   7   -0 7    1  7   +0 7    1 N N
+0 0 7 -0.5 7  0.5   7   -0 7    1  7    1 7   -1 N N
+0 0 7   -0 7    1   7   -0 7    1  7    1 7   -0 N N
+0 0 7   +0 7    1   7   -0 7    1  7    1 7   +0 N N
+0 0 7  0.5 7  0.5   7   -0 7    1  7    1 7    1 N N
+0 0 7  0.5 7  0.5   7   +0 7   -1  7   -1 7   -1 N N
+0 0 7   +0 7    1   7   +0 7   -1  7   -1 7   -0 N N
+0 0 7   -0 7    1   7   +0 7   -1  7   -1 7   +0 N N
+0 0 7 -0.5 7  0.5   7   +0 7   -1  7   -1 7    1 N N
+0 0 7    1 7   +0   7   +0 7   -1  7   -0 7   -1 N N
+0 0 7  nan 7 +inf   7   +0 7   -1  7   -0 7   -0 N N
+0 0 7  nan 7 +inf   7   +0 7   -1  7   -0 7   +0 N N
+0 0 7   -1 7   +0   7   +0 7   -1  7   -0 7    1 N N
+0 0 7    1 7   +0   7   +0 7   -1  7   +0 7   -1 N N
+0 0 7  nan 7 -inf   7   +0 7   -1  7   +0 7   -0 N N
+0 0 7  nan 7 -inf   7   +0 7   -1  7   +0 7   +0 N N
+0 0 7   -1 7   -0   7   +0 7   -1  7   +0 7    1 N N
+0 0 7  0.5 7 -0.5   7   +0 7   -1  7    1 7   -1 N N
+0 0 7   +0 7   -1   7   +0 7   -1  7    1 7   -0 N N
+0 0 7   +0 7   -1   7   +0 7   -1  7    1 7   +0 N N
+0 0 7 -0.5 7 -0.5   7   +0 7   -1  7    1 7    1 N N
+0 0 7   +0 7   +0   7   +0 7   -0  7   -1 7   -1 N N
+0 0 7   +0 7   +0   7   +0 7   -0  7   -1 7   -0 N N
+0 0 7   -0 7   +0   7   +0 7   -0  7   -1 7   +0 N N
+0 0 7   -0 7   +0   7   +0 7   -0  7   -1 7    1 N N
+0 0 7   +0 7   +0   7   +0 7   -0  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   -0 7   +0 N N
+0 0 7   -0 7   +0   7   +0 7   -0  7   -0 7    1 N N
+0 0 7   +0 7   +0   7   +0 7   -0  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   +0 7   +0 N N
+0 0 7   +0 7   -0   7   +0 7   -0  7   +0 7    1 N N
+0 0 7   +0 7   +0   7   +0 7   -0  7    1 7   -1 N N
+0 0 7   +0 7   +0   7   +0 7   -0  7    1 7   -0 N N
+0 0 7   +0 7   -0   7   +0 7   -0  7    1 7   +0 N N
+0 0 7   +0 7   -0   7   +0 7   -0  7    1 7    1 N N
+0 0 7   -0 7   +0   7   +0 7   +0  7   -1 7   -1 N N
+0 0 7   -0 7   +0   7   +0 7   +0  7   -1 7   -0 N N
+0 0 7   +0 7   -0   7   +0 7   +0  7   -1 7   +0 N N
+0 0 7   +0 7   -0   7   +0 7   +0  7   -1 7    1 N N
+0 0 7   -0 7   +0   7   +0 7   +0  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   -0 7   +0 N N
+0 0 7   +0 7   -0   7   +0 7   +0  7   -0 7    1 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   +0 7   +0 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7   +0 7    1 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7    1 7   -1 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7    1 7   -0 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7    1 7   +0 N N
+0 0 7   +0 7   +0   7   +0 7   +0  7    1 7    1 N N
+0 0 7 -0.5 7 -0.5   7   +0 7    1  7   -1 7   -1 N N
+0 0 7   -0 7   -1   7   +0 7    1  7   -1 7   -0 N N
+0 0 7   +0 7   -1   7   +0 7    1  7   -1 7   +0 N N
+0 0 7  0.5 7 -0.5   7   +0 7    1  7   -1 7    1 N N
+0 0 7   -1 7   +0   7   +0 7    1  7   -0 7   -1 N N
+0 0 7  nan 7 -inf   7   +0 7    1  7   -0 7   -0 N N
+0 0 7  nan 7 -inf   7   +0 7    1  7   -0 7   +0 N N
+0 0 7    1 7   -0   7   +0 7    1  7   -0 7    1 N N
+0 0 7   -1 7   +0   7   +0 7    1  7   +0 7   -1 N N
+0 0 7  nan 7 +inf   7   +0 7    1  7   +0 7   -0 N N
+0 0 7  nan 7 +inf   7   +0 7    1  7   +0 7   +0 N N
+0 0 7    1 7   +0   7   +0 7    1  7   +0 7    1 N N
+0 0 7 -0.5 7  0.5   7   +0 7    1  7    1 7   -1 N N
+0 0 7   +0 7    1   7   +0 7    1  7    1 7   -0 N N
+0 0 7   +0 7    1   7   +0 7    1  7    1 7   +0 N N
+0 0 7  0.5 7  0.5   7   +0 7    1  7    1 7    1 N N
+0 0 7   +0 7    1   7    1 7   -1  7   -1 7   -1 N N
+0 0 7   -1 7    1   7    1 7   -1  7   -1 7   -0 N N
+0 0 7   -1 7    1   7    1 7   -1  7   -1 7   +0 N N
+0 0 7   -1 7   +0   7    1 7   -1  7   -1 7    1 N N
+0 0 7    1 7    1   7    1 7   -1  7   -0 7   -1 N N
+0 0 7 -inf 7 +inf   7    1 7   -1  7   -0 7   -0 N N
+0 0 7 -inf 7 +inf   7    1 7   -1  7   -0 7   +0 N N
+0 0 7   -1 7   -1   7    1 7   -1  7   -0 7    1 N N
+0 0 7    1 7    1   7    1 7   -1  7   +0 7   -1 N N
+0 0 7 +inf 7 -inf   7    1 7   -1  7   +0 7   -0 N N
+0 0 7 +inf 7 -inf   7    1 7   -1  7   +0 7   +0 N N
+0 0 7   -1 7   -1   7    1 7   -1  7   +0 7    1 N N
+0 0 7    1 7   +0   7    1 7   -1  7    1 7   -1 N N
+0 0 7    1 7   -1   7    1 7   -1  7    1 7   -0 N N
+0 0 7    1 7   -1   7    1 7   -1  7    1 7   +0 N N
+0 0 7   +0 7   -1   7    1 7   -1  7    1 7    1 N N
+0 0 7 -0.5 7  0.5   7    1 7   -0  7   -1 7   -1 N N
+0 0 7   -1 7   +0   7    1 7   -0  7   -1 7   -0 N N
+0 0 7   -1 7   +0   7    1 7   -0  7   -1 7   +0 N N
+0 0 7 -0.5 7 -0.5   7    1 7   -0  7   -1 7    1 N N
+0 0 7   +0 7    1   7    1 7   -0  7   -0 7   -1 N N
+0 0 7 -inf 7  nan   7    1 7   -0  7   -0 7   -0 N N
+0 0 7 -inf 7  nan   7    1 7   -0  7   -0 7   +0 N N
+0 0 7   -0 7   -1   7    1 7   -0  7   -0 7    1 N N
+0 0 7   +0 7    1   7    1 7   -0  7   +0 7   -1 N N
+0 0 7 +inf 7  nan   7    1 7   -0  7   +0 7   -0 N N
+0 0 7 +inf 7  nan   7    1 7   -0  7   +0 7   +0 N N
+0 0 7   +0 7   -1   7    1 7   -0  7   +0 7    1 N N
+0 0 7  0.5 7  0.5   7    1 7   -0  7    1 7   -1 N N
+0 0 7    1 7   +0   7    1 7   -0  7    1 7   -0 N N
+0 0 7    1 7   -0   7    1 7   -0  7    1 7   +0 N N
+0 0 7  0.5 7 -0.5   7    1 7   -0  7    1 7    1 N N
+0 0 7 -0.5 7  0.5   7    1 7   +0  7   -1 7   -1 N N
+0 0 7   -1 7   +0   7    1 7   +0  7   -1 7   -0 N N
+0 0 7   -1 7   -0   7    1 7   +0  7   -1 7   +0 N N
+0 0 7 -0.5 7 -0.5   7    1 7   +0  7   -1 7    1 N N
+0 0 7   -0 7    1   7    1 7   +0  7   -0 7   -1 N N
+0 0 7 -inf 7  nan   7    1 7   +0  7   -0 7   -0 N N
+0 0 7 -inf 7  nan   7    1 7   +0  7   -0 7   +0 N N
+0 0 7   +0 7   -1   7    1 7   +0  7   -0 7    1 N N
+0 0 7   +0 7    1   7    1 7   +0  7   +0 7   -1 N N
+0 0 7 +inf 7  nan   7    1 7   +0  7   +0 7   -0 N N
+0 0 7 +inf 7  nan   7    1 7   +0  7   +0 7   +0 N N
+0 0 7   +0 7   -1   7    1 7   +0  7   +0 7    1 N N
+0 0 7  0.5 7  0.5   7    1 7   +0  7    1 7   -1 N N
+0 0 7    1 7   +0   7    1 7   +0  7    1 7   -0 N N
+0 0 7    1 7   +0   7    1 7   +0  7    1 7   +0 N N
+0 0 7  0.5 7 -0.5   7    1 7   +0  7    1 7    1 N N
+0 0 7   -1 7   +0   7    1 7    1  7   -1 7   -1 N N
+0 0 7   -1 7   -1   7    1 7    1  7   -1 7   -0 N N
+0 0 7   -1 7   -1   7    1 7    1  7   -1 7   +0 N N
+0 0 7   +0 7   -1   7    1 7    1  7   -1 7    1 N N
+0 0 7   -1 7    1   7    1 7    1  7   -0 7   -1 N N
+0 0 7 -inf 7 -inf   7    1 7    1  7   -0 7   -0 N N
+0 0 7 -inf 7 -inf   7    1 7    1  7   -0 7   +0 N N
+0 0 7    1 7   -1   7    1 7    1  7   -0 7    1 N N
+0 0 7   -1 7    1   7    1 7    1  7   +0 7   -1 N N
+0 0 7 +inf 7 +inf   7    1 7    1  7   +0 7   -0 N N
+0 0 7 +inf 7 +inf   7    1 7    1  7   +0 7   +0 N N
+0 0 7    1 7   -1   7    1 7    1  7   +0 7    1 N N
+0 0 7   +0 7    1   7    1 7    1  7    1 7   -1 N N
+0 0 7    1 7    1   7    1 7    1  7    1 7   -0 N N
+0 0 7    1 7    1   7    1 7    1  7    1 7   +0 N N
+0 0 7    1 7   +0   7    1 7    1  7    1 7    1 N N
+
+# overflow (reported by Emmanuel Thome)
+- + 250 -inf 250 +inf 250 1 250 0 250 -1e-164895850 250 -1e-164895850 N N
diff --git a/mpc/tests/div_fr.dat b/mpc/tests/div_fr.dat
new file mode 100644
index 0000000..596759a
--- /dev/null
+++ b/mpc/tests/div_fr.dat
@@ -0,0 +1,370 @@
+# Data file for mpc_div_fr.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see add_fr.dat.
+
+# special values
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 -inf  N N
+0 0 7 +inf 7 +inf   7 -inf 7 -inf  7   -1  N N
+0 0 7 +inf 7 +inf   7 -inf 7 -inf  7   -0  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7   +0  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7    1  N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan  N N
+0 0 7  nan 7   +0   7 -inf 7   -1  7 -inf  N N
+0 0 7 +inf 7    1   7 -inf 7   -1  7   -1  N N
+0 0 7 +inf 7 +inf   7 -inf 7   -1  7   -0  N N
+0 0 7 -inf 7 -inf   7 -inf 7   -1  7   +0  N N
+0 0 7 -inf 7   -1   7 -inf 7   -1  7    1  N N
+0 0 7  nan 7   -0   7 -inf 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan  N N
+0 0 7  nan 7   +0   7 -inf 7   -0  7 -inf  N N
+0 0 7 +inf 7   +0   7 -inf 7   -0  7   -1  N N
+0 0 7 +inf 7  nan   7 -inf 7   -0  7   -0  N N
+0 0 7 -inf 7  nan   7 -inf 7   -0  7   +0  N N
+0 0 7 -inf 7   -0   7 -inf 7   -0  7    1  N N
+0 0 7  nan 7   -0   7 -inf 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan  N N
+0 0 7  nan 7   -0   7 -inf 7   +0  7 -inf  N N
+0 0 7 +inf 7   -0   7 -inf 7   +0  7   -1  N N
+0 0 7 +inf 7  nan   7 -inf 7   +0  7   -0  N N
+0 0 7 -inf 7  nan   7 -inf 7   +0  7   +0  N N
+0 0 7 -inf 7   +0   7 -inf 7   +0  7    1  N N
+0 0 7  nan 7   +0   7 -inf 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan  N N
+0 0 7  nan 7   -0   7 -inf 7    1  7 -inf  N N
+0 0 7 +inf 7   -1   7 -inf 7    1  7   -1  N N
+0 0 7 +inf 7 -inf   7 -inf 7    1  7   -0  N N
+0 0 7 -inf 7 +inf   7 -inf 7    1  7   +0  N N
+0 0 7 -inf 7    1   7 -inf 7    1  7    1  N N
+0 0 7  nan 7   +0   7 -inf 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan  N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 -inf  N N
+0 0 7 +inf 7 -inf   7 -inf 7 +inf  7   -1  N N
+0 0 7 +inf 7 -inf   7 -inf 7 +inf  7   -0  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7   +0  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7    1  N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf  N N
+0 0 7 +inf 7  nan   7 -inf 7  nan  7   -1  N N
+0 0 7 +inf 7  nan   7 -inf 7  nan  7   -0  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7   +0  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7    1  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan  N N
+0 0 7   +0 7  nan   7   -1 7 -inf  7 -inf  N N
+0 0 7    1 7 +inf   7   -1 7 -inf  7   -1  N N
+0 0 7 +inf 7 +inf   7   -1 7 -inf  7   -0  N N
+0 0 7 -inf 7 -inf   7   -1 7 -inf  7   +0  N N
+0 0 7   -1 7 -inf   7   -1 7 -inf  7    1  N N
+0 0 7   -0 7  nan   7   -1 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan  N N
+0 0 7   +0 7   +0   7   -1 7   -1  7 -inf  N N
+0 0 7   -0 7   -0   7   -1 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7   -1  7  nan  N N
+0 0 7   +0 7   +0   7   -1 7   -0  7 -inf  N N
+0 0 7   -0 7   -0   7   -1 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7   -0  7  nan  N N
+0 0 7   +0 7   -0   7   -1 7   +0  7 -inf  N N
+0 0 7   -0 7   +0   7   -1 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7   +0  7  nan  N N
+0 0 7   +0 7   -0   7   -1 7    1  7 -inf  N N
+0 0 7   -0 7   +0   7   -1 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7    1  7  nan  N N
+0 0 7   +0 7  nan   7   -1 7 +inf  7 -inf  N N
+0 0 7    1 7 -inf   7   -1 7 +inf  7   -1  N N
+0 0 7 +inf 7 -inf   7   -1 7 +inf  7   -0  N N
+0 0 7 -inf 7 +inf   7   -1 7 +inf  7   +0  N N
+0 0 7   -1 7 +inf   7   -1 7 +inf  7    1  N N
+0 0 7   -0 7  nan   7   -1 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan  N N
+0 0 7   +0 7  nan   7   -1 7  nan  7 -inf  N N
+0 0 7    1 7  nan   7   -1 7  nan  7   -1  N N
+0 0 7 +inf 7  nan   7   -1 7  nan  7   -0  N N
+0 0 7 -inf 7  nan   7   -1 7  nan  7   +0  N N
+0 0 7   -1 7  nan   7   -1 7  nan  7    1  N N
+0 0 7   -0 7  nan   7   -1 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan  N N
+0 0 7   +0 7  nan   7   -0 7 -inf  7 -inf  N N
+0 0 7   +0 7 +inf   7   -0 7 -inf  7   -1  N N
+0 0 7  nan 7 +inf   7   -0 7 -inf  7   -0  N N
+0 0 7  nan 7 -inf   7   -0 7 -inf  7   +0  N N
+0 0 7   -0 7 -inf   7   -0 7 -inf  7    1  N N
+0 0 7   -0 7  nan   7   -0 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan  N N
+0 0 7   +0 7   +0   7   -0 7   -1  7 -inf  N N
+0 0 7   -0 7   -0   7   -0 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7   -1  7  nan  N N
+0 0 7   +0 7   +0   7   -0 7   -0  7 -inf  N N
+0 0 7   -0 7   -0   7   -0 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7   -0  7  nan  N N
+0 0 7   +0 7   -0   7   -0 7   +0  7 -inf  N N
+0 0 7   -0 7   +0   7   -0 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7   +0  7  nan  N N
+0 0 7   +0 7   -0   7   -0 7    1  7 -inf  N N
+0 0 7   -0 7   +0   7   -0 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7    1  7  nan  N N
+0 0 7   +0 7  nan   7   -0 7 +inf  7 -inf  N N
+0 0 7   +0 7 -inf   7   -0 7 +inf  7   -1  N N
+0 0 7  nan 7 -inf   7   -0 7 +inf  7   -0  N N
+0 0 7  nan 7 +inf   7   -0 7 +inf  7   +0  N N
+0 0 7   -0 7 +inf   7   -0 7 +inf  7    1  N N
+0 0 7   -0 7  nan   7   -0 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan  N N
+0 0 7   +0 7  nan   7   -0 7  nan  7 -inf  N N
+0 0 7   +0 7  nan   7   -0 7  nan  7   -1  N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   -0  N N
+0 0 7  nan 7  nan   7   -0 7  nan  7   +0  N N
+0 0 7   -0 7  nan   7   -0 7  nan  7    1  N N
+0 0 7   -0 7  nan   7   -0 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan  N N
+0 0 7   -0 7  nan   7   +0 7 -inf  7 -inf  N N
+0 0 7   -0 7 +inf   7   +0 7 -inf  7   -1  N N
+0 0 7  nan 7 +inf   7   +0 7 -inf  7   -0  N N
+0 0 7  nan 7 -inf   7   +0 7 -inf  7   +0  N N
+0 0 7   +0 7 -inf   7   +0 7 -inf  7    1  N N
+0 0 7   +0 7  nan   7   +0 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan  N N
+0 0 7   -0 7   +0   7   +0 7   -1  7 -inf  N N
+0 0 7   +0 7   -0   7   +0 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7   -1  7  nan  N N
+0 0 7   -0 7   +0   7   +0 7   -0  7 -inf  N N
+0 0 7   +0 7   -0   7   +0 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7   -0  7  nan  N N
+0 0 7   -0 7   -0   7   +0 7   +0  7 -inf  N N
+0 0 7   +0 7   +0   7   +0 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7   +0  7  nan  N N
+0 0 7   -0 7   -0   7   +0 7    1  7 -inf  N N
+0 0 7   +0 7   +0   7   +0 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7    1  7  nan  N N
+0 0 7   -0 7  nan   7   +0 7 +inf  7 -inf  N N
+0 0 7   -0 7 -inf   7   +0 7 +inf  7   -1  N N
+0 0 7  nan 7 -inf   7   +0 7 +inf  7   -0  N N
+0 0 7  nan 7 +inf   7   +0 7 +inf  7   +0  N N
+0 0 7   +0 7 +inf   7   +0 7 +inf  7    1  N N
+0 0 7   +0 7  nan   7   +0 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan  N N
+0 0 7   -0 7  nan   7   +0 7  nan  7 -inf  N N
+0 0 7   -0 7  nan   7   +0 7  nan  7   -1  N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   -0  N N
+0 0 7  nan 7  nan   7   +0 7  nan  7   +0  N N
+0 0 7   +0 7  nan   7   +0 7  nan  7    1  N N
+0 0 7   +0 7  nan   7   +0 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan  N N
+0 0 7   -0 7  nan   7    1 7 -inf  7 -inf  N N
+0 0 7   -1 7 +inf   7    1 7 -inf  7   -1  N N
+0 0 7 -inf 7 +inf   7    1 7 -inf  7   -0  N N
+0 0 7 +inf 7 -inf   7    1 7 -inf  7   +0  N N
+0 0 7    1 7 -inf   7    1 7 -inf  7    1  N N
+0 0 7   +0 7  nan   7    1 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan  N N
+0 0 7   -0 7   +0   7    1 7   -1  7 -inf  N N
+0 0 7   +0 7   -0   7    1 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7   -1  7  nan  N N
+0 0 7   -0 7   +0   7    1 7   -0  7 -inf  N N
+0 0 7   +0 7   -0   7    1 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7   -0  7  nan  N N
+0 0 7   -0 7   -0   7    1 7   +0  7 -inf  N N
+0 0 7   +0 7   +0   7    1 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7   +0  7  nan  N N
+0 0 7   -0 7   -0   7    1 7    1  7 -inf  N N
+0 0 7   +0 7   +0   7    1 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7    1  7  nan  N N
+0 0 7   -0 7  nan   7    1 7 +inf  7 -inf  N N
+0 0 7   -1 7 -inf   7    1 7 +inf  7   -1  N N
+0 0 7 -inf 7 -inf   7    1 7 +inf  7   -0  N N
+0 0 7 +inf 7 +inf   7    1 7 +inf  7   +0  N N
+0 0 7    1 7 +inf   7    1 7 +inf  7    1  N N
+0 0 7   +0 7  nan   7    1 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan  N N
+0 0 7   -0 7  nan   7    1 7  nan  7 -inf  N N
+0 0 7   -1 7  nan   7    1 7  nan  7   -1  N N
+0 0 7 -inf 7  nan   7    1 7  nan  7   -0  N N
+0 0 7 +inf 7  nan   7    1 7  nan  7   +0  N N
+0 0 7    1 7  nan   7    1 7  nan  7    1  N N
+0 0 7   +0 7  nan   7    1 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan  N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 -inf  N N
+0 0 7 -inf 7 +inf   7 +inf 7 -inf  7   -1  N N
+0 0 7 -inf 7 +inf   7 +inf 7 -inf  7   -0  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7   +0  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7    1  N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan  N N
+0 0 7  nan 7   +0   7 +inf 7   -1  7 -inf  N N
+0 0 7 -inf 7    1   7 +inf 7   -1  7   -1  N N
+0 0 7 -inf 7 +inf   7 +inf 7   -1  7   -0  N N
+0 0 7 +inf 7 -inf   7 +inf 7   -1  7   +0  N N
+0 0 7 +inf 7   -1   7 +inf 7   -1  7    1  N N
+0 0 7  nan 7   -0   7 +inf 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan  N N
+0 0 7  nan 7   +0   7 +inf 7   -0  7 -inf  N N
+0 0 7 -inf 7   +0   7 +inf 7   -0  7   -1  N N
+0 0 7 -inf 7  nan   7 +inf 7   -0  7   -0  N N
+0 0 7 +inf 7  nan   7 +inf 7   -0  7   +0  N N
+0 0 7 +inf 7   -0   7 +inf 7   -0  7    1  N N
+0 0 7  nan 7   -0   7 +inf 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan  N N
+0 0 7  nan 7   -0   7 +inf 7   +0  7 -inf  N N
+0 0 7 -inf 7   -0   7 +inf 7   +0  7   -1  N N
+0 0 7 -inf 7  nan   7 +inf 7   +0  7   -0  N N
+0 0 7 +inf 7  nan   7 +inf 7   +0  7   +0  N N
+0 0 7 +inf 7   +0   7 +inf 7   +0  7    1  N N
+0 0 7  nan 7   +0   7 +inf 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan  N N
+0 0 7  nan 7   -0   7 +inf 7    1  7 -inf  N N
+0 0 7 -inf 7   -1   7 +inf 7    1  7   -1  N N
+0 0 7 -inf 7 -inf   7 +inf 7    1  7   -0  N N
+0 0 7 +inf 7 +inf   7 +inf 7    1  7   +0  N N
+0 0 7 +inf 7    1   7 +inf 7    1  7    1  N N
+0 0 7  nan 7   +0   7 +inf 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan  N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 -inf  N N
+0 0 7 -inf 7 -inf   7 +inf 7 +inf  7   -1  N N
+0 0 7 -inf 7 -inf   7 +inf 7 +inf  7   -0  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7   +0  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7    1  N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 -inf  N N
+0 0 7 -inf 7  nan   7 +inf 7  nan  7   -1  N N
+0 0 7 -inf 7  nan   7 +inf 7  nan  7   -0  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7   +0  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7    1  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan  N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 -inf  N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7   -1  N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7   -0  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7   +0  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7    1  N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan  N N
+0 0 7  nan 7   +0   7  nan 7   -1  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7   -1  7   -1  N N
+0 0 7  nan 7 +inf   7  nan 7   -1  7   -0  N N
+0 0 7  nan 7 -inf   7  nan 7   -1  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7    1  N N
+0 0 7  nan 7   -0   7  nan 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan  N N
+0 0 7  nan 7   +0   7  nan 7   -0  7 -inf  N N
+0 0 7  nan 7   +0   7  nan 7   -0  7   -1  N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   -0  N N
+0 0 7  nan 7  nan   7  nan 7   -0  7   +0  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7    1  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan  N N
+0 0 7  nan 7   -0   7  nan 7   +0  7 -inf  N N
+0 0 7  nan 7   -0   7  nan 7   +0  7   -1  N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   -0  N N
+0 0 7  nan 7  nan   7  nan 7   +0  7   +0  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7    1  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan  N N
+0 0 7  nan 7   -0   7  nan 7    1  7 -inf  N N
+0 0 7  nan 7   -1   7  nan 7    1  7   -1  N N
+0 0 7  nan 7 -inf   7  nan 7    1  7   -0  N N
+0 0 7  nan 7 +inf   7  nan 7    1  7   +0  N N
+0 0 7  nan 7    1   7  nan 7    1  7    1  N N
+0 0 7  nan 7   +0   7  nan 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan  N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 -inf  N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7   -1  N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7   -0  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7   +0  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7    1  N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan  N N
+
+# values with only 1, -1, +0, -0
+0 0 7    1 7    1   7   -1 7   -1  7   -1  N N
+0 0 7 +inf 7 +inf   7   -1 7   -1  7   -0  N N
+0 0 7 -inf 7 -inf   7   -1 7   -1  7   +0  N N
+0 0 7   -1 7   -1   7   -1 7   -1  7    1  N N
+0 0 7    1 7   +0   7   -1 7   -0  7   -1  N N
+0 0 7 +inf 7  nan   7   -1 7   -0  7   -0  N N
+0 0 7 -inf 7  nan   7   -1 7   -0  7   +0  N N
+0 0 7   -1 7   -0   7   -1 7   -0  7    1  N N
+0 0 7    1 7   -0   7   -1 7   +0  7   -1  N N
+0 0 7 +inf 7  nan   7   -1 7   +0  7   -0  N N
+0 0 7 -inf 7  nan   7   -1 7   +0  7   +0  N N
+0 0 7   -1 7   +0   7   -1 7   +0  7    1  N N
+0 0 7    1 7   -1   7   -1 7    1  7   -1  N N
+0 0 7 +inf 7 -inf   7   -1 7    1  7   -0  N N
+0 0 7 -inf 7 +inf   7   -1 7    1  7   +0  N N
+0 0 7   -1 7    1   7   -1 7    1  7    1  N N
+0 0 7   +0 7    1   7   -0 7   -1  7   -1  N N
+0 0 7  nan 7 +inf   7   -0 7   -1  7   -0  N N
+0 0 7  nan 7 -inf   7   -0 7   -1  7   +0  N N
+0 0 7   -0 7   -1   7   -0 7   -1  7    1  N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -1  N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   -0  N N
+0 0 7  nan 7  nan   7   -0 7   -0  7   +0  N N
+0 0 7   -0 7   -0   7   -0 7   -0  7    1  N N
+0 0 7   +0 7   -0   7   -0 7   +0  7   -1  N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   -0  N N
+0 0 7  nan 7  nan   7   -0 7   +0  7   +0  N N
+0 0 7   -0 7   +0   7   -0 7   +0  7    1  N N
+0 0 7   +0 7   -1   7   -0 7    1  7   -1  N N
+0 0 7  nan 7 -inf   7   -0 7    1  7   -0  N N
+0 0 7  nan 7 +inf   7   -0 7    1  7   +0  N N
+0 0 7   -0 7    1   7   -0 7    1  7    1  N N
+0 0 7   -0 7    1   7   +0 7   -1  7   -1  N N
+0 0 7  nan 7 +inf   7   +0 7   -1  7   -0  N N
+0 0 7  nan 7 -inf   7   +0 7   -1  7   +0  N N
+0 0 7   +0 7   -1   7   +0 7   -1  7    1  N N
+0 0 7   -0 7   +0   7   +0 7   -0  7   -1  N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   -0  N N
+0 0 7  nan 7  nan   7   +0 7   -0  7   +0  N N
+0 0 7   +0 7   -0   7   +0 7   -0  7    1  N N
+0 0 7   -0 7   -0   7   +0 7   +0  7   -1  N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   -0  N N
+0 0 7  nan 7  nan   7   +0 7   +0  7   +0  N N
+0 0 7   +0 7   +0   7   +0 7   +0  7    1  N N
+0 0 7   -0 7   -1   7   +0 7    1  7   -1  N N
+0 0 7  nan 7 -inf   7   +0 7    1  7   -0  N N
+0 0 7  nan 7 +inf   7   +0 7    1  7   +0  N N
+0 0 7   +0 7    1   7   +0 7    1  7    1  N N
+0 0 7   -1 7    1   7    1 7   -1  7   -1  N N
+0 0 7 -inf 7 +inf   7    1 7   -1  7   -0  N N
+0 0 7 +inf 7 -inf   7    1 7   -1  7   +0  N N
+0 0 7    1 7   -1   7    1 7   -1  7    1  N N
+0 0 7   -1 7   +0   7    1 7   -0  7   -1  N N
+0 0 7 -inf 7  nan   7    1 7   -0  7   -0  N N
+0 0 7 +inf 7  nan   7    1 7   -0  7   +0  N N
+0 0 7    1 7   -0   7    1 7   -0  7    1  N N
+0 0 7   -1 7   -0   7    1 7   +0  7   -1  N N
+0 0 7 -inf 7  nan   7    1 7   +0  7   -0  N N
+0 0 7 +inf 7  nan   7    1 7   +0  7   +0  N N
+0 0 7    1 7   +0   7    1 7   +0  7    1  N N
+0 0 7   -1 7   -1   7    1 7    1  7   -1  N N
+0 0 7 -inf 7 -inf   7    1 7    1  7   -0  N N
+0 0 7 +inf 7 +inf   7    1 7    1  7   +0  N N
+0 0 7    1 7    1   7    1 7    1  7    1  N N
+
diff --git a/mpc/tests/exp.dat b/mpc/tests/exp.dat
new file mode 100644
index 0000000..1f0d95e
--- /dev/null
+++ b/mpc/tests/exp.dat
@@ -0,0 +1,120 @@
+# Data file for mpc_exp.
+#
+# Copyright (C) INRIA, 2008, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# see sin.dat for precisions
+
+# special values (following ISO C99 standard)
+0 0 53                     0 53                    0     53 -inf 53 -inf N N
+0 0 53                    +0 53                   +0     53 -inf 53   -6 N N
+0 0 53                    -0 53                   +0     53 -inf 53   -4 N N
+0 0 53                    -0 53                   -0     53 -inf 53   -2 N N
+0 0 53                    +0 53                   -0     53 -inf 53   -1 N N
+0 0 53                    +0 53                   -0     53 -inf 53   -0 N N
+0 0 53                    +0 53                   +0     53 -inf 53   +0 N N
+0 0 53                    +0 53                   +0     53 -inf 53   +1 N N
+0 0 53                    -0 53                   +0     53 -inf 53   +2 N N
+0 0 53                    -0 53                   -0     53 -inf 53   +4 N N
+0 0 53                    +0 53                   -0     53 -inf 53   +6 N N
+0 0 53                     0 53                    0     53 -inf 53 +inf N N
+0 0 53                     0 53                    0     53 -inf 53  nan N N
+0 0 53                   nan 53                  nan     53   -1 53 -inf N N
+0 0 53                   nan 53                  nan     53   -1 53 +inf N N
+0 0 53                   nan 53                  nan     53   -1 53  nan N N
+0 0 53                   nan 53                  nan     53   -0 53 -inf N N
+0 0 53                    +1 53                   -0     53   -0 53   -0 N N
+0 0 53                    +1 53                   +0     53   -0 53   +0 N N
+0 0 53                   nan 53                  nan     53   -0 53 +inf N N
+0 0 53                   nan 53                  nan     53   -0 53  nan N N
+0 0 53                   nan 53                  nan     53   +0 53 -inf N N
+0 0 53                    +1 53                   -0     53   +0 53   -0 N N
+0 0 53                    +1 53                   +0     53   +0 53   +0 N N
+0 0 53                   nan 53                  nan     53   +0 53 +inf N N
+0 0 53                   nan 53                  nan     53   +0 53  nan N N
+0 0 53                   nan 53                  nan     53   +1 53 -inf N N
+0 0 53                   nan 53                  nan     53   +1 53 +inf N N
+0 0 53                   nan 53                  nan     53   +1 53  nan N N
+0 0 53                   inf 53                  nan     53 +inf 53 -inf N N
+0 0 53                  +inf 53                 +inf     53 +inf 53   -6 N N
+0 0 53                  -inf 53                 +inf     53 +inf 53   -4 N N
+0 0 53                  -inf 53                 -inf     53 +inf 53   -2 N N
+0 0 53                  +inf 53                 -inf     53 +inf 53   -1 N N
+0 0 53                  +inf 53                   -0     53 +inf 53   -0 N N
+0 0 53                  +inf 53                   +0     53 +inf 53   +0 N N
+0 0 53                  +inf 53                 +inf     53 +inf 53   +1 N N
+0 0 53                  -inf 53                 +inf     53 +inf 53   +2 N N
+0 0 53                  -inf 53                 -inf     53 +inf 53   +4 N N
+0 0 53                  +inf 53                 -inf     53 +inf 53   +6 N N
+0 0 53                   inf 53                  nan     53 +inf 53 +inf N N
+0 0 53                   inf 53                  nan     53 +inf 53  nan N N
+0 0 53                   nan 53                  nan     53  nan 53 -inf N N
+0 0 53                   nan 53                  nan     53  nan 53   -1 N N
+0 0 53                   nan 53                   -0     53  nan 53   -0 N N
+0 0 53                   nan 53                   +0     53  nan 53   +0 N N
+0 0 53                   nan 53                  nan     53  nan 53   +1 N N
+0 0 53                   nan 53                  nan     53  nan 53 +inf N N
+0 0 53                   nan 53                  nan     53  nan 53  nan N N
+
+# purely real argument
+- 0 53 0x1936dc5690c08fp-44  2 +0    53  6 17 +0 N N
+- 0 53 0x4b0556e084f3d0p-60  3 +0    54 -4 16 +0 Z N
++ 0 53 0xec7325c6a6ed70p-53  4 -0    55  2 15 -0 U N
+- 0 53 0x178b56362cef37p-54  5 -0    56 -1 14 -0 D N
+- 0 53 0x3699205c4e74b0p-48  6 +0    57  4 13 +0 Z Z
++ 0 53 0x454aaa8efe0730p-57  7 +0    58 -2 12 +0 U Z
+- 0 53 0x15bf0a8b145769p-51  8 -0    59  1 11 -0 D Z
++ 0 53 0xa2728f889ea6b0p-64  9 -0    60 -6 10 -0 N Z
++ 0 53 0xec7325c6a6ed70p-53 10 +0    61  2  9 +0 U U
+- 0 53 0x178b56362cef37p-54 11 +0    62 -1  8 +0 D U
+- 0 53 0x1936dc5690c08fp-44 12 -0    63  6  7 -0 N U
+- 0 53 0x4b0556e084f3d0p-60 13 -0    64 -4  6 -0 Z U
+- 0 53 0x15bf0a8b145769p-51 14 +0    65  1  5 +0 D D
++ 0 53 0xa2728f889ea6b0p-64 15 +0    66 -6  4 +0 N D
+- 0 53 0x3699205c4e74b0p-48 16 -0    67  4  3 -0 Z D
++ 0 53 0x454aaa8efe0730p-57 17 -0    68 -2  2 -0 U D
+
+# purely imaginary argument
+- + 53  0x1eb9b7097822f5p-53 53 -0x4787c62ac28b0p-52     53 +0 53  6 N N
++ + 53 -0x53aa981b6c9300p-55 53 -0xc1bdceeee0f57p-52     51 -0 54  4 Z N
++ - 53 -0x6a88995d4dc810p-56 53 -0xe8c7b7568da23p-52     49 +0 55 -2 U N
+- + 53  0x114a280fb5068bp-53 53 -0xd76aa47848677p-52     47 -0 56 -1 D N
++ + 53 -0x53aa981b6c9300p-55 53 -0xc1bdceeee0f57p-52     45 +0 57  4 Z Z
++ - 53 -0x6a88995d4dc810p-56 53  0x1d18f6ead1b445p-53    43 -0 58  2 U Z
+- + 53  0x114a280fb5068bp-53 53 -0xd76aa47848677p-52     41 +0 59 -1 D Z
+- - 53  0x1eb9b7097822f5p-53 53  0x4787c62ac28b0p-52     39 -0 60 -6 N Z
++ + 53 -0x6a88995d4dc810p-56 53  0xe8c7b7568da23p-52     37 +0 61  2 U U
+- + 53  0x114a280fb5068bp-53 53  0x1aed548f090cefp-53    35 -0 62  1 D U
+- + 53  0x1eb9b7097822f5p-53 53  0x11e1f18ab0a2c1p-54    33 +0 63 -6 N U
++ + 53 -0x53aa981b6c9300p-55 53  0x1837b9dddc1eafp-53    31 -0 64 -4 Z U
+- - 53  0x114a280fb5068bp-53 53  0xd76aa47848677p-52     29 +0 65  1 D D
+- - 53  0x1eb9b7097822f5p-53 53 -0x11e1f18ab0a2c1p-54    27 -0 66  6 N D
++ - 53 -0x53aa981b6c9300p-55 53  0xc1bdceeee0f57p-52     25 +0 67 -4 Z D
++ - 53 -0x6a88995d4dc810p-56 53 -0xe8c7b7568da23p-52     23 -0 68 -2 U D
+
+# overflow
+- - 2 -inf 2 -inf  53 0x3312ae437f94441ec@-9 53 0xe45f7bab0595dd700@-10 N N
+
+# input close to 0
+? ? 53 1 53 0x5D7A2148071Fp-7213522 53 0x1E02AE0D0F6Fp-7213521 53 0x5D7A2148071Fp-7213522 N N
diff --git a/mpc/tests/fma.dat b/mpc/tests/fma.dat
new file mode 100644
index 0000000..ae67031
--- /dev/null
+++ b/mpc/tests/fma.dat
@@ -0,0 +1,29 @@
+# Data file for mpc_exp.
+#
+# Copyright (C) INRIA, 2008, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP1_RE  OP1_RE  PREC_OP1_IM  OP1_IM  PREC_OP2_RE  OP2_RE  PREC_OP2_IM  OP2_IM  PREC_OP3_RE  OP3_RE  PREC_OP3_IM  OP3_IM  RND_RE  RND_IM
+#
+# see sin.dat for precisions
+
++ - 53 -0x189281b52abc03p-55 53 0x178a1d3cd134e5p-49 53 0x16A09E667F3BCDp-52 53 0x9CC470A049097p-50 53 0x23C6EF372FE95p-48 53 0x9CC470A049097p-50 53 0xA953FD4E97C75p-50 53 0x16A09E667F3BCDp-51 N N
diff --git a/mpc/tests/fr_div.dat b/mpc/tests/fr_div.dat
new file mode 100644
index 0000000..1e2d3df
--- /dev/null
+++ b/mpc/tests/fr_div.dat
@@ -0,0 +1,383 @@
+# Data file for mpc_fr_div.
+#
+# Copyright (C) INRIA, 2008, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see add.dat, and take into
+# account the necessary modifications for one real argument.
+
+# special values
+0 0 7  nan 7  nan   7 -inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf  7   -1 7 -inf N N
+0 0 7 +inf 7 -inf   7 -inf  7   -1 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf  7   -1 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf  7   -1 7   +0 N N
+0 0 7 +inf 7 +inf   7 -inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 -inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 -inf  7   -0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf  7   -0 7   -1 N N
+0 0 7 +inf 7  nan   7 -inf  7   -0 7   -0 N N
+0 0 7 +inf 7  nan   7 -inf  7   -0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 -inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 -inf  7   +0 7 -inf N N
+0 0 7  nan 7 -inf   7 -inf  7   +0 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf  7   +0 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf  7   +0 7   +0 N N
+0 0 7  nan 7 +inf   7 -inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 -inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 -inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 -inf  7    1 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf  7    1 7   -1 N N
+0 0 7 -inf 7  nan   7 -inf  7    1 7   -0 N N
+0 0 7 -inf 7  nan   7 -inf  7    1 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7 -inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 -inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7 -inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 -inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 -inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 -inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 -inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 -inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 -inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 -inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 -inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 -inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 -inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 -inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 -inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 -inf  7  nan 7  nan N N
+0 0 7   +0 7   -0   7   -1  7 -inf 7 -inf N N
+0 0 7   +0 7   -0   7   -1  7 -inf 7   -1 N N
+0 0 7   +0 7   -0   7   -1  7 -inf 7   -0 N N
+0 0 7   +0 7   +0   7   -1  7 -inf 7   +0 N N
+0 0 7   +0 7   +0   7   -1  7 -inf 7    1 N N
+0 0 7   +0 7   +0   7   -1  7 -inf 7 +inf N N
+0 0 7   +0 7   +0   7   -1  7 -inf 7  nan N N
+0 0 7   +0 7   -0   7   -1  7   -1 7 -inf N N
+0 0 7   +0 7   +0   7   -1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -1  7   -1 7  nan N N
+0 0 7   +0 7   -0   7   -1  7   -0 7 -inf N N
+0 0 7   +0 7   +0   7   -1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -1  7   -0 7  nan N N
+0 0 7   -0 7   -0   7   -1  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   -1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -1  7   +0 7  nan N N
+0 0 7   -0 7   -0   7   -1  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   -1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -1  7    1 7  nan N N
+0 0 7   -0 7   -0   7   -1  7 +inf 7 -inf N N
+0 0 7   -0 7   +0   7   -1  7 +inf 7   -1 N N
+0 0 7   -0 7   +0   7   -1  7 +inf 7   -0 N N
+0 0 7   -0 7   +0   7   -1  7 +inf 7   +0 N N
+0 0 7   -0 7   +0   7   -1  7 +inf 7    1 N N
+0 0 7   -0 7   +0   7   -1  7 +inf 7 +inf N N
+0 0 7   -0 7   +0   7   -1  7 +inf 7  nan N N
+0 0 7   -0 7   -0   7   -1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -1  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   -1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -1  7  nan 7  nan N N
+0 0 7   +0 7   -0   7   -0  7 -inf 7 -inf N N
+0 0 7   +0 7   -0   7   -0  7 -inf 7   -1 N N
+0 0 7   +0 7   -0   7   -0  7 -inf 7   -0 N N
+0 0 7   +0 7   +0   7   -0  7 -inf 7   +0 N N
+0 0 7   +0 7   +0   7   -0  7 -inf 7    1 N N
+0 0 7   +0 7   +0   7   -0  7 -inf 7 +inf N N
+0 0 7   +0 7   +0   7   -0  7 -inf 7  nan N N
+0 0 7   +0 7   -0   7   -0  7   -1 7 -inf N N
+0 0 7   +0 7   +0   7   -0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   -0  7   -1 7  nan N N
+0 0 7   +0 7   -0   7   -0  7   -0 7 -inf N N
+0 0 7   +0 7   +0   7   -0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   -0  7   -0 7  nan N N
+0 0 7   -0 7   +0   7   -0  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   -0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   -0  7   +0 7  nan N N
+0 0 7   -0 7   +0   7   -0  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   -0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   -0  7    1 7  nan N N
+0 0 7   -0 7   +0   7   -0  7 +inf 7 -inf N N
+0 0 7   -0 7   +0   7   -0  7 +inf 7   -1 N N
+0 0 7   -0 7   +0   7   -0  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7   -0  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7   -0  7 +inf 7    1 N N
+0 0 7   +0 7   +0   7   -0  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7   -0  7 +inf 7  nan N N
+0 0 7   -0 7   +0   7   -0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   -0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   -0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   -0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   -0  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   -0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   -0  7  nan 7  nan N N
+0 0 7   -0 7   +0   7   +0  7 -inf 7 -inf N N
+0 0 7   -0 7   +0   7   +0  7 -inf 7   -1 N N
+0 0 7   -0 7   +0   7   +0  7 -inf 7   -0 N N
+0 0 7   +0 7   -0   7   +0  7 -inf 7   +0 N N
+0 0 7   +0 7   -0   7   +0  7 -inf 7    1 N N
+0 0 7   +0 7   -0   7   +0  7 -inf 7 +inf N N
+0 0 7   +0 7   -0   7   +0  7 -inf 7  nan N N
+0 0 7   -0 7   +0   7   +0  7   -1 7 -inf N N
+0 0 7   +0 7   -0   7   +0  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7   +0  7   -1 7  nan N N
+0 0 7   -0 7   +0   7   +0  7   -0 7 -inf N N
+0 0 7   +0 7   -0   7   +0  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7   +0  7   -0 7  nan N N
+0 0 7   +0 7   +0   7   +0  7   +0 7 -inf N N
+0 0 7   +0 7   +0   7   +0  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7   +0  7   +0 7  nan N N
+0 0 7   +0 7   +0   7   +0  7    1 7 -inf N N
+0 0 7   +0 7   +0   7   +0  7    1 7 +inf N N
+0 0 7  nan 7  nan   7   +0  7    1 7  nan N N
+0 0 7   +0 7   +0   7   +0  7 +inf 7 -inf N N
+0 0 7   +0 7   +0   7   +0  7 +inf 7   -1 N N
+0 0 7   +0 7   +0   7   +0  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7   +0  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7   +0  7 +inf 7    1 N N
+0 0 7   +0 7   +0   7   +0  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7   +0  7 +inf 7  nan N N
+0 0 7   +0 7   +0   7   +0  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7   +0  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7   +0  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7   +0  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7   +0  7  nan 7    1 N N
+0 0 7   +0 7   +0   7   +0  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7   +0  7  nan 7  nan N N
+0 0 7   -0 7   +0   7    1  7 -inf 7 -inf N N
+0 0 7   -0 7   +0   7    1  7 -inf 7   -1 N N
+0 0 7   -0 7   +0   7    1  7 -inf 7   -0 N N
+0 0 7   -0 7   -0   7    1  7 -inf 7   +0 N N
+0 0 7   -0 7   -0   7    1  7 -inf 7    1 N N
+0 0 7   -0 7   -0   7    1  7 -inf 7 +inf N N
+0 0 7   -0 7   -0   7    1  7 -inf 7  nan N N
+0 0 7   -0 7   +0   7    1  7   -1 7 -inf N N
+0 0 7   +0 7   -0   7    1  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7    1  7   -1 7  nan N N
+0 0 7   -0 7   +0   7    1  7   -0 7 -inf N N
+0 0 7   +0 7   -0   7    1  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7    1  7   -0 7  nan N N
+0 0 7   +0 7   +0   7    1  7   +0 7 -inf N N
+0 0 7   +0 7   -0   7    1  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7    1  7   +0 7  nan N N
+0 0 7   +0 7   +0   7    1  7    1 7 -inf N N
+0 0 7   +0 7   -0   7    1  7    1 7 +inf N N
+0 0 7  nan 7  nan   7    1  7    1 7  nan N N
+0 0 7   +0 7   +0   7    1  7 +inf 7 -inf N N
+0 0 7   +0 7   +0   7    1  7 +inf 7   -1 N N
+0 0 7   +0 7   +0   7    1  7 +inf 7   -0 N N
+0 0 7   +0 7   +0   7    1  7 +inf 7   +0 N N
+0 0 7   +0 7   +0   7    1  7 +inf 7    1 N N
+0 0 7   +0 7   -0   7    1  7 +inf 7 +inf N N
+0 0 7   +0 7   +0   7    1  7 +inf 7  nan N N
+0 0 7   +0 7   +0   7    1  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7    1  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7    1  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7    1  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7    1  7  nan 7    1 N N
+0 0 7   +0 7   -0   7    1  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7    1  7  nan 7  nan N N
+0 0 7  nan 7  nan   7 +inf  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf  7   -1 7 -inf N N
+0 0 7 -inf 7 +inf   7 +inf  7   -1 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf  7   -1 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf  7   -1 7   +0 N N
+0 0 7 -inf 7 -inf   7 +inf  7   -1 7    1 N N
+0 0 7  nan 7  nan   7 +inf  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf  7   -1 7  nan N N
+0 0 7  nan 7  nan   7 +inf  7   -0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf  7   -0 7   -1 N N
+0 0 7 -inf 7  nan   7 +inf  7   -0 7   -0 N N
+0 0 7 -inf 7  nan   7 +inf  7   -0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf  7   -0 7    1 N N
+0 0 7  nan 7  nan   7 +inf  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf  7   -0 7  nan N N
+0 0 7  nan 7  nan   7 +inf  7   +0 7 -inf N N
+0 0 7  nan 7 +inf   7 +inf  7   +0 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf  7   +0 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf  7   +0 7   +0 N N
+0 0 7  nan 7 -inf   7 +inf  7   +0 7    1 N N
+0 0 7  nan 7  nan   7 +inf  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7 +inf  7   +0 7  nan N N
+0 0 7  nan 7  nan   7 +inf  7    1 7 -inf N N
+0 0 7 +inf 7 +inf   7 +inf  7    1 7   -1 N N
+0 0 7 +inf 7  nan   7 +inf  7    1 7   -0 N N
+0 0 7 +inf 7  nan   7 +inf  7    1 7   +0 N N
+0 0 7 +inf 7 -inf   7 +inf  7    1 7    1 N N
+0 0 7  nan 7  nan   7 +inf  7    1 7 +inf N N
+0 0 7  nan 7  nan   7 +inf  7    1 7  nan N N
+0 0 7  nan 7  nan   7 +inf  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7 +inf  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7 +inf  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7 +inf  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7 +inf  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7 +inf  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7 +inf  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7 +inf  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7 +inf  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7 +inf  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7 +inf  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7 +inf  7  nan 7    1 N N
+0 0 7  nan 7  nan   7 +inf  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7 +inf  7  nan 7  nan N N
+0 0 7  nan 7  nan   7  nan  7 -inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan  7 -inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan  7 -inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan  7 -inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan  7 -inf 7    1 N N
+0 0 7  nan 7  nan   7  nan  7 -inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan  7 -inf 7  nan N N
+0 0 7  nan 7  nan   7  nan  7   -1 7 -inf N N
+0 0 7  nan 7  nan   7  nan  7   -1 7   -1 N N
+0 0 7  nan 7  nan   7  nan  7   -1 7   -0 N N
+0 0 7  nan 7  nan   7  nan  7   -1 7   +0 N N
+0 0 7  nan 7  nan   7  nan  7   -1 7    1 N N
+0 0 7  nan 7  nan   7  nan  7   -1 7 +inf N N
+0 0 7  nan 7  nan   7  nan  7   -1 7  nan N N
+0 0 7  nan 7  nan   7  nan  7   -0 7 -inf N N
+0 0 7  nan 7  nan   7  nan  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7  nan  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7  nan  7   -0 7   +0 N N
+0 0 7  nan 7  nan   7  nan  7   -0 7    1 N N
+0 0 7  nan 7  nan   7  nan  7   -0 7 +inf N N
+0 0 7  nan 7  nan   7  nan  7   -0 7  nan N N
+0 0 7  nan 7  nan   7  nan  7   +0 7 -inf N N
+0 0 7  nan 7  nan   7  nan  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7  nan  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7  nan  7   +0 7   +0 N N
+0 0 7  nan 7  nan   7  nan  7   +0 7    1 N N
+0 0 7  nan 7  nan   7  nan  7   +0 7 +inf N N
+0 0 7  nan 7  nan   7  nan  7   +0 7  nan N N
+0 0 7  nan 7  nan   7  nan  7    1 7 -inf N N
+0 0 7  nan 7  nan   7  nan  7    1 7   -1 N N
+0 0 7  nan 7  nan   7  nan  7    1 7   -0 N N
+0 0 7  nan 7  nan   7  nan  7    1 7   +0 N N
+0 0 7  nan 7  nan   7  nan  7    1 7    1 N N
+0 0 7  nan 7  nan   7  nan  7    1 7 +inf N N
+0 0 7  nan 7  nan   7  nan  7    1 7  nan N N
+0 0 7  nan 7  nan   7  nan  7 +inf 7 -inf N N
+0 0 7  nan 7  nan   7  nan  7 +inf 7   -1 N N
+0 0 7  nan 7  nan   7  nan  7 +inf 7   -0 N N
+0 0 7  nan 7  nan   7  nan  7 +inf 7   +0 N N
+0 0 7  nan 7  nan   7  nan  7 +inf 7    1 N N
+0 0 7  nan 7  nan   7  nan  7 +inf 7 +inf N N
+0 0 7  nan 7  nan   7  nan  7 +inf 7  nan N N
+0 0 7  nan 7  nan   7  nan  7  nan 7 -inf N N
+0 0 7  nan 7  nan   7  nan  7  nan 7   -1 N N
+0 0 7  nan 7  nan   7  nan  7  nan 7   -0 N N
+0 0 7  nan 7  nan   7  nan  7  nan 7   +0 N N
+0 0 7  nan 7  nan   7  nan  7  nan 7    1 N N
+0 0 7  nan 7  nan   7  nan  7  nan 7 +inf N N
+0 0 7  nan 7  nan   7  nan  7  nan 7  nan N N
+
+# finite values
+0 0 7  0.5 7 -0.5   7   -1  7   -1 7   -1 N N
+0 0 7    1 7   -0   7   -1  7   -1 7   -0 N N
+# cf line 2206 of div.dat, revision 658:
+0 0 7    1 7   +0   7   -1  7   -1 7   +0 N N
+0 0 7  0.5 7  0.5   7   -1  7   -1 7    1 N N
+# cf line 2208 of div.dat, revision 658:
+0 0 7   +0 7   -1   7   -1  7   -0 7   -1 N N
+0 0 7 +inf 7  nan   7   -1  7   -0 7   -0 N N
+0 0 7 +inf 7  nan   7   -1  7   -0 7   +0 N N
+0 0 7   +0 7    1   7   -1  7   -0 7    1 N N
+0 0 7   -0 7   -1   7   -1  7   +0 7   -1 N N
+0 0 7 -inf 7  nan   7   -1  7   +0 7   -0 N N
+0 0 7 -inf 7  nan   7   -1  7   +0 7   +0 N N
+0 0 7   +0 7    1   7   -1  7   +0 7    1 N N
+0 0 7 -0.5 7 -0.5   7   -1  7    1 7   -1 N N
+0 0 7   -1 7   +0   7   -1  7    1 7   -0 N N
+0 0 7   -1 7   +0   7   -1  7    1 7   +0 N N
+0 0 7 -0.5 7  0.5   7   -1  7    1 7    1 N N
+0 0 7    0 7   -0   7   -0  7   -1 7   -1 N N
+0 0 7   +0 7   -0   7   -0  7   -1 7   -0 N N
+# cf line 2270 of div.dat, revision 658:
+0 0 7   +0 7   +0   7   -0  7   -1 7   +0 N N
+0 0 7   +0 7    0   7   -0  7   -1 7    1 N N
+# cf line 2272 of div.dat, revision 658:
+0 0 7   +0 7   -0   7   -0  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7   -0  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7   -0  7   -0 7   +0 N N
+0 0 7   +0 7   +0   7   -0  7   -0 7    1 N N
+# cf line 2276 of div.dat, revision 658:
+0 0 7   -0 7   +0   7   -0  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7   -0  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7   -0  7   +0 7   +0 N N
+0 0 7   +0 7   +0   7   -0  7   +0 7    1 N N
+0 0 7   -0 7    0   7   -0  7    1 7   -1 N N
+0 0 7   -0 7   +0   7   -0  7    1 7   -0 N N
+# cf line 2282 of div.dat, revision 658:
+0 0 7   +0 7   +0   7   -0  7    1 7   +0 N N
+0 0 7    0 7   +0   7   -0  7    1 7    1 N N
+0 0 7   -0 7    0   7   +0  7   -1 7   -1 N N
+# cf line 2333 of div.dat, revision 658:
+0 0 7   -0 7   +0   7   +0  7   -1 7   -0 N N
+# cf line 2334 of div.dat, revision 658:
+0 0 7   +0 7   -0   7   +0  7   -1 7   +0 N N
+0 0 7    0 7   -0   7   +0  7   -1 7    1 N N
+0 0 7   -0 7   +0   7   +0  7   -0 7   -1 N N
+0 0 7  nan 7  nan   7   +0  7   -0 7   -0 N N
+0 0 7  nan 7  nan   7   +0  7   -0 7   +0 N N
+0 0 7   +0 7   -0   7   +0  7   -0 7    1 N N
+# cf line 2340 of div.dat, revision 658:
+0 0 7   +0 7   +0   7   +0  7   +0 7   -1 N N
+0 0 7  nan 7  nan   7   +0  7   +0 7   -0 N N
+0 0 7  nan 7  nan   7   +0  7   +0 7   +0 N N
+# cf line 2343 of div.dat, revision 658:
+0 0 7   +0 7   +0   7   +0  7   +0 7    1 N N
+0 0 7    0 7   +0   7   +0  7    1 7   -1 N N
+0 0 7   +0 7   +0   7   +0  7    1 7   -0 N N
+0 0 7   +0 7   +0   7   +0  7    1 7   +0 N N
+0 0 7   +0 7    0   7   +0  7    1 7    1 N N
+0 0 7 -0.5 7  0.5   7    1  7   -1 7   -1 N N
+# cf line 2397 of div.dat, revision 658:
+0 0 7   -1 7   +0   7    1  7   -1 7   -0 N N
+0 0 7   -1 7   -0   7    1  7   -1 7   +0 N N
+0 0 7 -0.5 7 -0.5   7    1  7   -1 7    1 N N
+0 0 7   -0 7    1   7    1  7   -0 7   -1 N N
+0 0 7 -inf 7  nan   7    1  7   -0 7   -0 N N
+0 0 7 -inf 7  nan   7    1  7   -0 7   +0 N N
+0 0 7   +0 7   -1   7    1  7   -0 7    1 N N
+# cf line 2404 of div.dat, revision 658:
+0 0 7   +0 7    1   7    1  7   +0 7   -1 N N
+0 0 7 +inf 7  nan   7    1  7   +0 7   -0 N N
+0 0 7 +inf 7  nan   7    1  7   +0 7   +0 N N
+0 0 7   +0 7   -1   7    1  7   +0 7    1 N N
+0 0 7  0.5 7  0.5   7    1  7    1 7   -1 N N
+0 0 7    1 7   +0   7    1  7    1 7   -0 N N
+0 0 7    1 7   +0   7    1  7    1 7   +0 N N
+0 0 7  0.5 7 -0.5   7    1  7    1 7    1 N N
+
diff --git a/mpc/tests/fr_sub.dat b/mpc/tests/fr_sub.dat
new file mode 100644
index 0000000..40d5995
--- /dev/null
+++ b/mpc/tests/fr_sub.dat
@@ -0,0 +1,370 @@
+# Data file for mpc_fr_sub.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see add_fr.dat.
+
+# special values
+0 0 7  nan 7 +inf   7 -inf 7 -inf  7 -inf  N N
+0 0 7  nan 7    1   7 -inf 7 -inf  7   -1  N N
+0 0 7  nan 7   +0   7 -inf 7 -inf  7   -0  N N
+0 0 7  nan 7   -0   7 -inf 7 -inf  7   +0  N N
+0 0 7  nan 7   -1   7 -inf 7 -inf  7    1  N N
+0 0 7  nan 7 -inf   7 -inf 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan  N N
+0 0 7 -inf 7 +inf   7 -inf 7   -1  7 -inf  N N
+0 0 7 -inf 7    1   7 -inf 7   -1  7   -1  N N
+0 0 7 -inf 7   +0   7 -inf 7   -1  7   -0  N N
+0 0 7 -inf 7   -0   7 -inf 7   -1  7   +0  N N
+0 0 7 -inf 7   -1   7 -inf 7   -1  7    1  N N
+0 0 7 -inf 7 -inf   7 -inf 7   -1  7 +inf  N N
+0 0 7 -inf 7  nan   7 -inf 7   -1  7  nan  N N
+0 0 7 -inf 7 +inf   7 -inf 7   -0  7 -inf  N N
+0 0 7 -inf 7    1   7 -inf 7   -0  7   -1  N N
+0 0 7 -inf 7   +0   7 -inf 7   -0  7   -0  N N
+0 0 7 -inf 7   -0   7 -inf 7   -0  7   +0  N N
+0 0 7 -inf 7   -1   7 -inf 7   -0  7    1  N N
+0 0 7 -inf 7 -inf   7 -inf 7   -0  7 +inf  N N
+0 0 7 -inf 7  nan   7 -inf 7   -0  7  nan  N N
+0 0 7 -inf 7 +inf   7 -inf 7   +0  7 -inf  N N
+0 0 7 -inf 7    1   7 -inf 7   +0  7   -1  N N
+0 0 7 -inf 7   +0   7 -inf 7   +0  7   -0  N N
+0 0 7 -inf 7   -0   7 -inf 7   +0  7   +0  N N
+0 0 7 -inf 7   -1   7 -inf 7   +0  7    1  N N
+0 0 7 -inf 7 -inf   7 -inf 7   +0  7 +inf  N N
+0 0 7 -inf 7  nan   7 -inf 7   +0  7  nan  N N
+0 0 7 -inf 7 +inf   7 -inf 7    1  7 -inf  N N
+0 0 7 -inf 7    1   7 -inf 7    1  7   -1  N N
+0 0 7 -inf 7   +0   7 -inf 7    1  7   -0  N N
+0 0 7 -inf 7   -0   7 -inf 7    1  7   +0  N N
+0 0 7 -inf 7   -1   7 -inf 7    1  7    1  N N
+0 0 7 -inf 7 -inf   7 -inf 7    1  7 +inf  N N
+0 0 7 -inf 7  nan   7 -inf 7    1  7  nan  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7 -inf  N N
+0 0 7 -inf 7    1   7 -inf 7 +inf  7   -1  N N
+0 0 7 -inf 7   +0   7 -inf 7 +inf  7   -0  N N
+0 0 7 -inf 7   -0   7 -inf 7 +inf  7   +0  N N
+0 0 7 -inf 7   -1   7 -inf 7 +inf  7    1  N N
+0 0 7 -inf 7 -inf   7 -inf 7 +inf  7 +inf  N N
+0 0 7 -inf 7  nan   7 -inf 7 +inf  7  nan  N N
+0 0 7  nan 7 +inf   7 -inf 7  nan  7 -inf  N N
+0 0 7  nan 7    1   7 -inf 7  nan  7   -1  N N
+0 0 7  nan 7   +0   7 -inf 7  nan  7   -0  N N
+0 0 7  nan 7   -0   7 -inf 7  nan  7   +0  N N
+0 0 7  nan 7   -1   7 -inf 7  nan  7    1  N N
+0 0 7  nan 7 -inf   7 -inf 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan  N N
+0 0 7 +inf 7 +inf   7   -1 7 -inf  7 -inf  N N
+0 0 7 +inf 7    1   7   -1 7 -inf  7   -1  N N
+0 0 7 +inf 7   +0   7   -1 7 -inf  7   -0  N N
+0 0 7 +inf 7   -0   7   -1 7 -inf  7   +0  N N
+0 0 7 +inf 7   -1   7   -1 7 -inf  7    1  N N
+0 0 7 +inf 7 -inf   7   -1 7 -inf  7 +inf  N N
+0 0 7 +inf 7  nan   7   -1 7 -inf  7  nan  N N
+0 0 7    0 7 +inf   7   -1 7   -1  7 -inf  N N
+0 0 7    0 7 -inf   7   -1 7   -1  7 +inf  N N
+0 0 7    0 7  nan   7   -1 7   -1  7  nan  N N
+0 0 7   -1 7 +inf   7   -1 7   -0  7 -inf  N N
+0 0 7   -1 7 -inf   7   -1 7   -0  7 +inf  N N
+0 0 7   -1 7  nan   7   -1 7   -0  7  nan  N N
+0 0 7   -1 7 +inf   7   -1 7   +0  7 -inf  N N
+0 0 7   -1 7 -inf   7   -1 7   +0  7 +inf  N N
+0 0 7   -1 7  nan   7   -1 7   +0  7  nan  N N
+0 0 7   -2 7 +inf   7   -1 7    1  7 -inf  N N
+0 0 7   -2 7 -inf   7   -1 7    1  7 +inf  N N
+0 0 7   -2 7  nan   7   -1 7    1  7  nan  N N
+0 0 7 -inf 7 +inf   7   -1 7 +inf  7 -inf  N N
+0 0 7 -inf 7    1   7   -1 7 +inf  7   -1  N N
+0 0 7 -inf 7   +0   7   -1 7 +inf  7   -0  N N
+0 0 7 -inf 7   -0   7   -1 7 +inf  7   +0  N N
+0 0 7 -inf 7   -1   7   -1 7 +inf  7    1  N N
+0 0 7 -inf 7 -inf   7   -1 7 +inf  7 +inf  N N
+0 0 7 -inf 7  nan   7   -1 7 +inf  7  nan  N N
+0 0 7  nan 7 +inf   7   -1 7  nan  7 -inf  N N
+0 0 7  nan 7    1   7   -1 7  nan  7   -1  N N
+0 0 7  nan 7   +0   7   -1 7  nan  7   -0  N N
+0 0 7  nan 7   -0   7   -1 7  nan  7   +0  N N
+0 0 7  nan 7   -1   7   -1 7  nan  7    1  N N
+0 0 7  nan 7 -inf   7   -1 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan  N N
+0 0 7 +inf 7 +inf   7   -0 7 -inf  7 -inf  N N
+0 0 7 +inf 7    1   7   -0 7 -inf  7   -1  N N
+0 0 7 +inf 7   +0   7   -0 7 -inf  7   -0  N N
+0 0 7 +inf 7   -0   7   -0 7 -inf  7   +0  N N
+0 0 7 +inf 7   -1   7   -0 7 -inf  7    1  N N
+0 0 7 +inf 7 -inf   7   -0 7 -inf  7 +inf  N N
+0 0 7 +inf 7  nan   7   -0 7 -inf  7  nan  N N
+0 0 7    1 7 +inf   7   -0 7   -1  7 -inf  N N
+0 0 7    1 7 -inf   7   -0 7   -1  7 +inf  N N
+0 0 7    1 7  nan   7   -0 7   -1  7  nan  N N
+0 0 7    0 7 +inf   7   -0 7   -0  7 -inf  N N
+0 0 7    0 7 -inf   7   -0 7   -0  7 +inf  N N
+0 0 7    0 7  nan   7   -0 7   -0  7  nan  N N
+0 0 7   -0 7 +inf   7   -0 7   +0  7 -inf  N N
+0 0 7   -0 7 -inf   7   -0 7   +0  7 +inf  N N
+0 0 7   -0 7  nan   7   -0 7   +0  7  nan  N N
+0 0 7   -1 7 +inf   7   -0 7    1  7 -inf  N N
+0 0 7   -1 7 -inf   7   -0 7    1  7 +inf  N N
+0 0 7   -1 7  nan   7   -0 7    1  7  nan  N N
+0 0 7 -inf 7 +inf   7   -0 7 +inf  7 -inf  N N
+0 0 7 -inf 7    1   7   -0 7 +inf  7   -1  N N
+0 0 7 -inf 7   +0   7   -0 7 +inf  7   -0  N N
+0 0 7 -inf 7   -0   7   -0 7 +inf  7   +0  N N
+0 0 7 -inf 7   -1   7   -0 7 +inf  7    1  N N
+0 0 7 -inf 7 -inf   7   -0 7 +inf  7 +inf  N N
+0 0 7 -inf 7  nan   7   -0 7 +inf  7  nan  N N
+0 0 7  nan 7 +inf   7   -0 7  nan  7 -inf  N N
+0 0 7  nan 7    1   7   -0 7  nan  7   -1  N N
+0 0 7  nan 7   +0   7   -0 7  nan  7   -0  N N
+0 0 7  nan 7   -0   7   -0 7  nan  7   +0  N N
+0 0 7  nan 7   -1   7   -0 7  nan  7    1  N N
+0 0 7  nan 7 -inf   7   -0 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan  N N
+0 0 7 +inf 7 +inf   7   +0 7 -inf  7 -inf  N N
+0 0 7 +inf 7    1   7   +0 7 -inf  7   -1  N N
+0 0 7 +inf 7   +0   7   +0 7 -inf  7   -0  N N
+0 0 7 +inf 7   -0   7   +0 7 -inf  7   +0  N N
+0 0 7 +inf 7   -1   7   +0 7 -inf  7    1  N N
+0 0 7 +inf 7 -inf   7   +0 7 -inf  7 +inf  N N
+0 0 7 +inf 7  nan   7   +0 7 -inf  7  nan  N N
+0 0 7    1 7 +inf   7   +0 7   -1  7 -inf  N N
+0 0 7    1 7 -inf   7   +0 7   -1  7 +inf  N N
+0 0 7    1 7  nan   7   +0 7   -1  7  nan  N N
+0 0 7   +0 7 +inf   7   +0 7   -0  7 -inf  N N
+0 0 7   +0 7 -inf   7   +0 7   -0  7 +inf  N N
+0 0 7   +0 7  nan   7   +0 7   -0  7  nan  N N
+0 0 7    0 7 +inf   7   +0 7   +0  7 -inf  N N
+0 0 7    0 7 -inf   7   +0 7   +0  7 +inf  N N
+0 0 7    0 7  nan   7   +0 7   +0  7  nan  N N
+0 0 7   -1 7 +inf   7   +0 7    1  7 -inf  N N
+0 0 7   -1 7 -inf   7   +0 7    1  7 +inf  N N
+0 0 7   -1 7  nan   7   +0 7    1  7  nan  N N
+0 0 7 -inf 7 +inf   7   +0 7 +inf  7 -inf  N N
+0 0 7 -inf 7    1   7   +0 7 +inf  7   -1  N N
+0 0 7 -inf 7   +0   7   +0 7 +inf  7   -0  N N
+0 0 7 -inf 7   -0   7   +0 7 +inf  7   +0  N N
+0 0 7 -inf 7   -1   7   +0 7 +inf  7    1  N N
+0 0 7 -inf 7 -inf   7   +0 7 +inf  7 +inf  N N
+0 0 7 -inf 7  nan   7   +0 7 +inf  7  nan  N N
+0 0 7  nan 7 +inf   7   +0 7  nan  7 -inf  N N
+0 0 7  nan 7    1   7   +0 7  nan  7   -1  N N
+0 0 7  nan 7   +0   7   +0 7  nan  7   -0  N N
+0 0 7  nan 7   -0   7   +0 7  nan  7   +0  N N
+0 0 7  nan 7   -1   7   +0 7  nan  7    1  N N
+0 0 7  nan 7 -inf   7   +0 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan  N N
+0 0 7 +inf 7 +inf   7    1 7 -inf  7 -inf  N N
+0 0 7 +inf 7    1   7    1 7 -inf  7   -1  N N
+0 0 7 +inf 7   +0   7    1 7 -inf  7   -0  N N
+0 0 7 +inf 7   -0   7    1 7 -inf  7   +0  N N
+0 0 7 +inf 7   -1   7    1 7 -inf  7    1  N N
+0 0 7 +inf 7 -inf   7    1 7 -inf  7 +inf  N N
+0 0 7 +inf 7  nan   7    1 7 -inf  7  nan  N N
+0 0 7    2 7 +inf   7    1 7   -1  7 -inf  N N
+0 0 7    2 7 -inf   7    1 7   -1  7 +inf  N N
+0 0 7    2 7  nan   7    1 7   -1  7  nan  N N
+0 0 7    1 7 +inf   7    1 7   -0  7 -inf  N N
+0 0 7    1 7 -inf   7    1 7   -0  7 +inf  N N
+0 0 7    1 7  nan   7    1 7   -0  7  nan  N N
+0 0 7    1 7 +inf   7    1 7   +0  7 -inf  N N
+0 0 7    1 7 -inf   7    1 7   +0  7 +inf  N N
+0 0 7    1 7  nan   7    1 7   +0  7  nan  N N
+0 0 7    0 7 +inf   7    1 7    1  7 -inf  N N
+0 0 7    0 7 -inf   7    1 7    1  7 +inf  N N
+0 0 7    0 7  nan   7    1 7    1  7  nan  N N
+0 0 7 -inf 7 +inf   7    1 7 +inf  7 -inf  N N
+0 0 7 -inf 7    1   7    1 7 +inf  7   -1  N N
+0 0 7 -inf 7   +0   7    1 7 +inf  7   -0  N N
+0 0 7 -inf 7   -0   7    1 7 +inf  7   +0  N N
+0 0 7 -inf 7   -1   7    1 7 +inf  7    1  N N
+0 0 7 -inf 7 -inf   7    1 7 +inf  7 +inf  N N
+0 0 7 -inf 7  nan   7    1 7 +inf  7  nan  N N
+0 0 7  nan 7 +inf   7    1 7  nan  7 -inf  N N
+0 0 7  nan 7    1   7    1 7  nan  7   -1  N N
+0 0 7  nan 7   +0   7    1 7  nan  7   -0  N N
+0 0 7  nan 7   -0   7    1 7  nan  7   +0  N N
+0 0 7  nan 7   -1   7    1 7  nan  7    1  N N
+0 0 7  nan 7 -inf   7    1 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan  N N
+0 0 7 +inf 7 +inf   7 +inf 7 -inf  7 -inf  N N
+0 0 7 +inf 7    1   7 +inf 7 -inf  7   -1  N N
+0 0 7 +inf 7   +0   7 +inf 7 -inf  7   -0  N N
+0 0 7 +inf 7   -0   7 +inf 7 -inf  7   +0  N N
+0 0 7 +inf 7   -1   7 +inf 7 -inf  7    1  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7 +inf  N N
+0 0 7 +inf 7  nan   7 +inf 7 -inf  7  nan  N N
+0 0 7 +inf 7 +inf   7 +inf 7   -1  7 -inf  N N
+0 0 7 +inf 7    1   7 +inf 7   -1  7   -1  N N
+0 0 7 +inf 7   +0   7 +inf 7   -1  7   -0  N N
+0 0 7 +inf 7   -0   7 +inf 7   -1  7   +0  N N
+0 0 7 +inf 7   -1   7 +inf 7   -1  7    1  N N
+0 0 7 +inf 7 -inf   7 +inf 7   -1  7 +inf  N N
+0 0 7 +inf 7  nan   7 +inf 7   -1  7  nan  N N
+0 0 7 +inf 7 +inf   7 +inf 7   -0  7 -inf  N N
+0 0 7 +inf 7    1   7 +inf 7   -0  7   -1  N N
+0 0 7 +inf 7   +0   7 +inf 7   -0  7   -0  N N
+0 0 7 +inf 7   -0   7 +inf 7   -0  7   +0  N N
+0 0 7 +inf 7   -1   7 +inf 7   -0  7    1  N N
+0 0 7 +inf 7 -inf   7 +inf 7   -0  7 +inf  N N
+0 0 7 +inf 7  nan   7 +inf 7   -0  7  nan  N N
+0 0 7 +inf 7 +inf   7 +inf 7   +0  7 -inf  N N
+0 0 7 +inf 7    1   7 +inf 7   +0  7   -1  N N
+0 0 7 +inf 7   +0   7 +inf 7   +0  7   -0  N N
+0 0 7 +inf 7   -0   7 +inf 7   +0  7   +0  N N
+0 0 7 +inf 7   -1   7 +inf 7   +0  7    1  N N
+0 0 7 +inf 7 -inf   7 +inf 7   +0  7 +inf  N N
+0 0 7 +inf 7  nan   7 +inf 7   +0  7  nan  N N
+0 0 7 +inf 7 +inf   7 +inf 7    1  7 -inf  N N
+0 0 7 +inf 7    1   7 +inf 7    1  7   -1  N N
+0 0 7 +inf 7   +0   7 +inf 7    1  7   -0  N N
+0 0 7 +inf 7   -0   7 +inf 7    1  7   +0  N N
+0 0 7 +inf 7   -1   7 +inf 7    1  7    1  N N
+0 0 7 +inf 7 -inf   7 +inf 7    1  7 +inf  N N
+0 0 7 +inf 7  nan   7 +inf 7    1  7  nan  N N
+0 0 7  nan 7 +inf   7 +inf 7 +inf  7 -inf  N N
+0 0 7  nan 7    1   7 +inf 7 +inf  7   -1  N N
+0 0 7  nan 7   +0   7 +inf 7 +inf  7   -0  N N
+0 0 7  nan 7   -0   7 +inf 7 +inf  7   +0  N N
+0 0 7  nan 7   -1   7 +inf 7 +inf  7    1  N N
+0 0 7  nan 7 -inf   7 +inf 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan  N N
+0 0 7  nan 7 +inf   7 +inf 7  nan  7 -inf  N N
+0 0 7  nan 7    1   7 +inf 7  nan  7   -1  N N
+0 0 7  nan 7   +0   7 +inf 7  nan  7   -0  N N
+0 0 7  nan 7   -0   7 +inf 7  nan  7   +0  N N
+0 0 7  nan 7   -1   7 +inf 7  nan  7    1  N N
+0 0 7  nan 7 -inf   7 +inf 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7 -inf  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7 -inf  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7 -inf  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7 -inf  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7   -1  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7   -1  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7   -1  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7   -1  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7   -0  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7   -0  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7   -0  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7   -0  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7   +0  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7   +0  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7   +0  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7   +0  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7    1  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7    1  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7    1  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7    1  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7    1  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7 +inf  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7 +inf  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7 +inf  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7 +inf  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7  nan  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7  nan  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7  nan  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7  nan  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7  nan  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan  N N
+
+# values with only 1, -1, +0, -0
+0 0 7    0 7    1   7   -1 7   -1  7   -1  N N
+0 0 7    0 7   +0   7   -1 7   -1  7   -0  N N
+0 0 7    0 7   -0   7   -1 7   -1  7   +0  N N
+0 0 7    0 7   -1   7   -1 7   -1  7    1  N N
+0 0 7   -1 7    1   7   -1 7   -0  7   -1  N N
+0 0 7   -1 7   +0   7   -1 7   -0  7   -0  N N
+0 0 7   -1 7   -0   7   -1 7   -0  7   +0  N N
+0 0 7   -1 7   -1   7   -1 7   -0  7    1  N N
+0 0 7   -1 7    1   7   -1 7   +0  7   -1  N N
+0 0 7   -1 7   +0   7   -1 7   +0  7   -0  N N
+0 0 7   -1 7   -0   7   -1 7   +0  7   +0  N N
+0 0 7   -1 7   -1   7   -1 7   +0  7    1  N N
+0 0 7   -2 7    1   7   -1 7    1  7   -1  N N
+0 0 7   -2 7   +0   7   -1 7    1  7   -0  N N
+0 0 7   -2 7   -0   7   -1 7    1  7   +0  N N
+0 0 7   -2 7   -1   7   -1 7    1  7    1  N N
+0 0 7    1 7    1   7   -0 7   -1  7   -1  N N
+0 0 7    1 7   +0   7   -0 7   -1  7   -0  N N
+0 0 7    1 7   -0   7   -0 7   -1  7   +0  N N
+0 0 7    1 7   -1   7   -0 7   -1  7    1  N N
+0 0 7    0 7    1   7   -0 7   -0  7   -1  N N
+0 0 7    0 7   +0   7   -0 7   -0  7   -0  N N
+0 0 7    0 7   -0   7   -0 7   -0  7   +0  N N
+0 0 7    0 7   -1   7   -0 7   -0  7    1  N N
+0 0 7   -0 7    1   7   -0 7   +0  7   -1  N N
+0 0 7   -0 7   +0   7   -0 7   +0  7   -0  N N
+0 0 7   -0 7   -0   7   -0 7   +0  7   +0  N N
+0 0 7   -0 7   -1   7   -0 7   +0  7    1  N N
+0 0 7   -1 7    1   7   -0 7    1  7   -1  N N
+0 0 7   -1 7   +0   7   -0 7    1  7   -0  N N
+0 0 7   -1 7   -0   7   -0 7    1  7   +0  N N
+0 0 7   -1 7   -1   7   -0 7    1  7    1  N N
+0 0 7    1 7    1   7   +0 7   -1  7   -1  N N
+0 0 7    1 7   +0   7   +0 7   -1  7   -0  N N
+0 0 7    1 7   -0   7   +0 7   -1  7   +0  N N
+0 0 7    1 7   -1   7   +0 7   -1  7    1  N N
+0 0 7   +0 7    1   7   +0 7   -0  7   -1  N N
+0 0 7   +0 7   +0   7   +0 7   -0  7   -0  N N
+0 0 7   +0 7   -0   7   +0 7   -0  7   +0  N N
+0 0 7   +0 7   -1   7   +0 7   -0  7    1  N N
+0 0 7    0 7    1   7   +0 7   +0  7   -1  N N
+0 0 7    0 7   +0   7   +0 7   +0  7   -0  N N
+0 0 7    0 7   -0   7   +0 7   +0  7   +0  N N
+0 0 7    0 7   -1   7   +0 7   +0  7    1  N N
+0 0 7   -1 7    1   7   +0 7    1  7   -1  N N
+0 0 7   -1 7   +0   7   +0 7    1  7   -0  N N
+0 0 7   -1 7   -0   7   +0 7    1  7   +0  N N
+0 0 7   -1 7   -1   7   +0 7    1  7    1  N N
+0 0 7    2 7    1   7    1 7   -1  7   -1  N N
+0 0 7    2 7   +0   7    1 7   -1  7   -0  N N
+0 0 7    2 7   -0   7    1 7   -1  7   +0  N N
+0 0 7    2 7   -1   7    1 7   -1  7    1  N N
+0 0 7    1 7    1   7    1 7   -0  7   -1  N N
+0 0 7    1 7   +0   7    1 7   -0  7   -0  N N
+0 0 7    1 7   -0   7    1 7   -0  7   +0  N N
+0 0 7    1 7   -1   7    1 7   -0  7    1  N N
+0 0 7    1 7    1   7    1 7   +0  7   -1  N N
+0 0 7    1 7   +0   7    1 7   +0  7   -0  N N
+0 0 7    1 7   -0   7    1 7   +0  7   +0  N N
+0 0 7    1 7   -1   7    1 7   +0  7    1  N N
+0 0 7    0 7    1   7    1 7    1  7   -1  N N
+0 0 7    0 7   +0   7    1 7    1  7   -0  N N
+0 0 7    0 7   -0   7    1 7    1  7   +0  N N
+0 0 7    0 7   -1   7    1 7    1  7    1  N N
+
diff --git a/mpc/tests/inp_str.dat b/mpc/tests/inp_str.dat
new file mode 100644
index 0000000..bff682c
--- /dev/null
+++ b/mpc/tests/inp_str.dat
@@ -0,0 +1,165 @@
+# Data file for mpc_inp_str.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The format respects the parameter order in function prototype as follow:
+#
+# INEX_RE INEX_IM PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  SIZE  BASE  RND_RE  RND_IM  "STRING"
+#
+# The string STRING is considered as a complex number rop = rop1 + i*rop2
+# written in base BASE as "rop1 " if rop is real or "(rop1 rop2)". Notice that
+# a least one whitespace is required after real part
+#
+# ROP_RE is checked against rop1 rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against rop2 rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "!" function should return error indicator -1
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# invalid strings
+! ! 53  nan 53  nan      3 10 N N  "non "
+! ! 53  nan 53  nan      4 10 N N  " NON "
+! ! 53  nan 53  nan      5 10 N N  "nan(0 1) " #invalid space in brackets
+! ! 53  nan 53  nan      5 10 N N  "nan(0-1) " #invalid char in brackets
+! ! 53  nan 53  nan      4 10 N N  "NaN((keepout)) " #two levels of parenthesis
+! ! 53  nan 53  nan      4 10 N N  "(1e1) " #one part missing
+! ! 53  nan 53  nan      1 10 N N  ". "     #no digit
+! ! 53  nan 53  nan      2  2 N N  "+3 "    #invalid binary digit
+! ! 53  nan 53  nan      6 10 N N  "( +INF) " #one part missing
+! ! 53  nan 53  nan      2 10 N N  "(1(1))" #too many levels of parentheses
+! ! 53  nan 53  nan      3 10 N N  "(1 (1 (1 0)))"
+! ! 53  nan 53  nan      1 10 N N  "((1 1)) "
+! ! 53  nan 53  nan      6 10 N N  "(1 +1 " #closing parenthesis missing
+! ! 53  nan 53  nan      4 10 N N  "(1+1) " #space needed
+! ! 53  nan 53  nan      5 10 N N  "(1 + 1) " #space after sign
+! ! 53  nan 53  nan     17 10 N N  "(@nan@(quiet)  0 " #closing parenthesis missing
+! ! 53  nan 53  nan      4 10 N N  "zero "  #invalid digits
+! ! 53  nan 53  nan      3 10 N N  "&^+ "   #invalid digits
+! ! 53  nan 53  nan      1 18 N N  "i "     #invalid digit
+! ! 53  nan 53  nan      1 18 N N  "I "     #invalid digit
+! ! 53  nan 53  nan      1 35 N N  "z "     #invalid digit
+! ! 53  nan 53  nan      1 35 N N  "Z "     #invalid digit
+! ! 53  nan 53  nan      5 18 N N  "(i 0) " #invalid digit
+! ! 53  nan 53  nan      5 18 N N  "(I 0) " #invalid digit
+! ! 53  nan 53  nan      5 35 N N  "(z 0) " #invalid digit
+! ! 53  nan 53  nan      5 35 N N  "(Z 0) " #invalid digit
+! ! 53  nan 53  nan      5 18 N N  "(0 i) " #invalid digit
+! ! 53  nan 53  nan      5 18 N N  "(0 I) " #invalid digit
+! ! 53  nan 53  nan      5 35 N N  "(0 z) " #invalid digit
+! ! 53  nan 53  nan      5 35 N N  "(0 Z) " #invalid digit
+! ! 53  nan 53  nan      7 10 N N  "-25p+32 " #invalid exponent char in base 10
+! ! 53  nan 53  nan      6 10 N N  "0xabcd  " #invalid prefix in base 10
+! ! 53  nan 53  nan      6 10 N N  "+0b010 "  #invalid prefix in base 10
+
+# special values
+0 0 53  nan 53   +0      3 10 N N  "nan "
+0 0 53  nan 53   +0      4 10 N N  "+NAN "
+0 0 53  nan 53   +0      5 10 N N  "@NAN@ "
+0 0 53  nan 53  nan     18 10 N N  "(@nan@(QUIET) nan) "
+0 0 53  nan 53   +0      5 10 N N  "@nan@ "
+0 0 53  nan 53   +0     12 10 N N  "NaN(keepout) "
+0 0 53  nan 53   +0    122 10 N N  "Nan(very_long_suffix_oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo) "
+0 0 53  nan 53   +0      8 10 N N  "nan(0_1) "
+0 0 53  nan 53   +0      3 10 N N  "nan "
+0 0 53  inf 53   +0      3 10 N N  "inf "
+0 0 53 -inf 53   +0      4 10 N N  "-inf "
+0 0 53 +inf 53   +0      8 10 N N  "infinity "
+0 0 53 +inf 53   +0      4 10 N N  "+INF "
+0 0 53   +0 53 +inf      8 10 N N  "(0 +inf) "
+0 0 53   +0 53 +inf     12 10 N N  "(+0     INF) "
+0 0 53   +0 53 -inf     13 10 N N  "(0 -infinity) "
+0 0 53   +0 53 -inf      9 10 N N  "(+0 -INF) "
+0 0 53 -inf 53   -0     11 10 N N  "(-@inf@ -0) "
+0 0 53 +inf 53  nan     17 10 N N  "(+inf nan(9u137)) "
+0 0 53  nan 53 +inf     12 10 N N  "(NaN  +inf ) "
+
+# pure real argument
+0 0 53                     +0 53 +0       1 10 N N  "0 "
+0 0 53                     +0 53 +0       5 10 N N  "00000 "
+0 0 53                     +0 53 +0       2 10 N N  "+0 "
+0 0 53                     -0 53 +0       2 10 N N  "-0 "
+0 0 53                     +1 53 +0       1 10 N N  "1 "
+0 0 53                     +1 53 +0       3 10 N N  "001 "
+0 0 53                     +1 53 +0       6 10 N N  "1.0000 "
+0 0 53                     +1 53 +0       2 10 N N  "+1) "
+- 0 53   +0x9D70A3D70A3D7p-51 53 +0      11 10 N N  "(+1.23 0.0) "
+0 0 53                    -10 53 +0      11 10 N N  "(-10. 0000) "
+0 0 53                +0x5p-3 53 -0      12 10 N N  "( .625  -0 )"
+- 0 53 +0x14E718D7D7625Ap+612 53 +0      10 10 N N  "(1e200  0) "
++ 0 53 +0x14E718D7D7625Bp+612 53 +0      10 10 U N  "(1e200  0) "
+- 0 53 +0x14E718D7D7625Ap+612 53 +0      10 10 D N  "(1e200  0) "
+0 0 53                +0x7530 53 +0       8 10 N N  "(3e+4 0) "
+- 0 53  +0x10C6F7A0B5ED8Dp-73 53 +0       5 10 N N  ".5e-6 "
+- 0 53  +0x1B1C1E0D914133p-83 53 +0      12 10 N N  "(7.89E-10 0) "
++ 0 53  -0x7B426FAB61F00Cp+56 53 +0       7 10 N N  "-25@+32 "
+0 0 53                 +43981 53 +0       6 16 N N  "0xabcd "
+0 0 53                     +2 53 +0       6  2 N N  "+0b010 "
+0 0 53                    +18 53 +0       1 20 N N  "i "
+0 0 53                    +18 53 +0       1 19 N N  "i "
+0 0 53                    +35 53 +0       1 36 N N  "z "
+0 0 53                    +35 53 +0       1 36 N N  "Z "
+
+# pure imaginary argument
+0 0 53 +0 53                     +1       5 10 N N  "(0 1) "
+0 0 53 +0 53                     +1       6 20 N N  "(0 +1) "
+0 0 53 -0 53                     -1       7 10 N N  "(-0 -1) "
+0 0 53 -0 53                     -2       7 10 N N  "(-0 -2) "
+0 0 53 +0 53                     +2       6 10 N N  "(+0 2) "
+0 0 53 +0 53                    +17       5 20 N N  "(0 h) "
+0 0 53 +0 53                    +18       5 20 N N  "(0 i) "
+0 + 53 +0 53  -0x14F800008637BDp-44      19 10 N Z  "(0 -33.55000005e+1) "
+0 + 53 +0 53  -0xA1765976008AFp-401      18 10 N U  "(+0 -.550000E-105) "
+0 0 53 +0 53                    +18       5 19 N N  "(0 i) "
+0 0 53 +0 53                    +18       5 19 N N  "(0 I) "
+0 0 53 +0 53                    +35       5 36 N N  "(0 z) "
+0 0 53 +0 53                    +35       5 36 N N  "(0 Z) "
+
+# complex argument
+0 0 53            +1 53          +1      10 10 N N  "(  1   +1) "
+0 0 53            +1 53          +1       8 10 N N  "(1   +1) "
+0 0 53            +7 53         +14       7 10 N N  "(7  14) "
+0 0 53           +17 53          +1       7 10 N N  "(+17 1) "
+0 0 53           +27 53          +1       8 20 N N  "(+17 +1) "
+0 0 53           -18 53          -1       7 20 N N  "(-i -1) "
+0 0 53           +18 53          -1       6 20 N N  "(i -1) "
+0 0 53           -18 53          +1       7 20 N N  "(-i +1) "
+0 0 53           +18 53         +18       6 20 N N  "(i +i) "
+0 0 53        -14643 53      +20328      10 36 N N  "(-bar foo) "
+0 0 53      -1647190 53     -512315      13 36 N N  "(-zaza -azaz) "
+0 0 53       +0b1010 53     +0xabcd      16  0 N N  "(0b1010 +0xabcd) "
+0 0 53       +0xabcd 53     +0b1010      22  0 N N  "(+0xa.bcd@+3 0b.101p4) "
+
+# white space before the closing ')'
+0 0 53            +1 53          +1      13 10 N N  "(  1   +1   ) "
diff --git a/mpc/tests/log.dat b/mpc/tests/log.dat
new file mode 100644
index 0000000..f5d2722
--- /dev/null
+++ b/mpc/tests/log.dat
@@ -0,0 +1,163 @@
+# Data test file for mpc_log.
+
+# Copyright (C) INRIA, 2008, 2009, 2010
+
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+
+# See file sin.dat for the format description.
+
+# Special values, following ISO C99 standard, Annex G,
+# more precisely Section G.6.3.2 "The clog functions".
+
+# Rule [conj]: log(conj(z)) = conj(log(z))
+
+# log(-0 + i*0) = -inf + i*pi
+0 - 2 -inf 53 +0x3243F6A8885A3p-48   2 -0 2 +0     N N
+0 + 2 -inf 53 -0x3243F6A8885A3p-48   2 -0 2 -0     N N
+0 - 2 -inf 53 +0x3243F6A8885A3p-48   2 -0 2 +0     N D
+0 - 2 -inf 53 -0x3243F6A8885A32p-52  2 -0 2 -0     N D
+
+# log(+0 + i*0) = -inf + i*0
+0 0 2 -inf 2 +0                      2 +0 2 +0    N N
+0 0 2 -inf 2 -0                      2 +0 2 -0    N N
+
+# log(+1 +- i*0) = +0 +- i*0
+0 0 2 +0 2 +0                      2 1 2 +0    N N
+0 0 2 +0 2 -0                      2 1 2 -0    N N
+
+# log(-1 +- i*0) = +0 +- i*pi
+0 - 2 +0 53 +0x3243F6A8885A3p-48   2 -1 2 +0     N N
+0 + 2 +0 53 -0x3243F6A8885A3p-48   2 -1 2 -0     N N
+
+# log(x + i*inf) = +inf + i*pi/2 for finite x
+0 - 2 +inf 53 +0x3243F6A8885A3p-49  2  1 2 +inf   N N
+0 - 2 +inf 53 +0x3243F6A8885A3p-49  2 +0 2 +inf   N N
+0 - 2 +inf 53 +0x3243F6A8885A3p-49  2 -0 2 +inf   N N
+0 - 2 +inf 53 +0x3243F6A8885A3p-49  2 -1 2 +inf   N N
+# by [conj]: log(x - i*inf) = +inf - i*pi/2 for finite x
+0 + 2 +inf 53 -0x3243F6A8885A3p-49  2  1 2 -inf  N N
+0 + 2 +inf 53 -0x3243F6A8885A3p-49  2 +0 2 -inf  N N
+0 + 2 +inf 53 -0x3243F6A8885A3p-49  2 -0 2 -inf  N N
+0 + 2 +inf 53 -0x3243F6A8885A3p-49  2 -1 2 -inf  N N
+
+# log(x + i*nan) = nan+i*nan for finite x
+0 0 2 nan 2 nan                    2  1 2 nan    N N
+0 0 2 nan 2 nan                    2 +0 2 nan    N N
+0 0 2 nan 2 nan                    2 -0 2 nan    N N
+0 0 2 nan 2 nan                    2 -1 2 nan    N N
+
+# log(-inf + i*y) = +inf + i*pi for finite positive-signed y
+0 - 2 +inf 53 0x3243F6A8885A3p-48  2 -inf 2  1   N N
+0 - 2 +inf 53 0x3243F6A8885A3p-48  2 -inf 2 +0   N N
+# by [conj]: log(-inf + i*y) = +inf - i*pi for finite negative-signed y
+0 + 2 +inf 53 -0x3243F6A8885A3p-48  2 -inf 2 -1  N N
+0 + 2 +inf 53 -0x3243F6A8885A3p-48  2 -inf 2 -0  N N
+
+# log(+inf + i*y) = +inf + i*0 for finite positive-signed y
+0 0 2 +inf 2 +0                    2 +inf 2  1   N N
+0 0 2 +inf 2 +0                    2 +inf 2 +0   N N
+# by [conj]: log(+inf + i*y) = +inf - i*0 for finite negative-signed y
+0 0 2 +inf 2 -0                    2 +inf 2 -1   N N
+0 0 2 +inf 2 -0                    2 +inf 2 -0   N N
+
+# log(-inf + i*inf) = +inf + i*(3*pi/4)
+0 - 2 +inf 53 0x96CBE3F9990E9p-50  2 -inf 2 +inf N N
+# by [conj]: log(-inf - i*inf) = +inf - i*(3*pi/4)
+0 + 2 +inf 53 -0x96CBE3F9990E9p-50 2 -inf 2 -inf N N
+
+# log(+inf + i*inf) = +inf + i*(pi/4)
+0 - 2 +inf 53 0x3243F6A8885A3p-50  2 +inf 2 +inf N N
+# by [conj]: log(+inf - i*inf) = +inf - i*(pi/4)
+0 + 2 +inf 53 -0x3243F6A8885A3p-50 2 +inf 2 -inf N N
+
+# log(+/-inf + i*nan) = +inf + i*nan
+0 0 2 +inf 2 nan                   2 +inf 2 nan  N N
+0 0 2 +inf 2 nan                   2 -inf 2 nan  N N
+
+# log(nan + i*y) = nan + i*nan for finite y
+0 0 2 nan 2 nan                    2 nan 2  1    N N
+0 0 2 nan 2 nan                    2 nan 2 +0    N N
+0 0 2 nan 2 nan                    2 nan 2 -0    N N
+0 0 2 nan 2 nan                    2 nan 2 -1    N N
+
+# log(nan + i*inf) = +inf + i*nan
+0 0 2 +inf 2 nan                   2 nan 2 +inf  N N
+
+# log(nan + i*nan) = nan + i*nan
+0 0 2 nan 2 nan                    2 nan 2 nan   N N
+
+# log(x + i*y) with either x or y zero and the other non-zero
++ 0 53 0xB5535E0FD3FBDp-50  2                    0     5  0x11 2     0 N N
++ - 53 0xB5535E0FD3FBDp-50 53  0x3243F6A8885A3p-49     2     0 5  0x11 N N
+- - 53 0x5E38D81812CCBp-49 53  0x3243F6A8885A3p-48     5 -0x13 2    +0 N N
+- + 53 0x5E38D81812CCBp-49 53 -0x3243F6A8885A3p-48     5 -0x13 2    -0 N N
+- + 53 0x5E38D81812CCBp-49 53 -0x3243F6A8885A3p-49     2     0 5 -0x13 N N
+
+- + 53 0x19157DFDD1B3Fp-47  53  0x1921FB54442D19p-51   5 -0x17 2    +0 Z U
+- - 53 0x19157DFDD1B3Fp-47  53 -0x1921FB54442D19p-51   5 -0x17 2    -0 N D
++ - 53 0x19157DFDD1B3F1p-51 53  0x3243F6A8885A3p-48    5 -0x17 2    +0 U Z
+- + 53 0x19157DFDD1B3Fp-47  53 -0x3243F6A8885A3p-48    5 -0x17 2    -0 D N
+- - 53 0x8611A6D2511D3p-49  53  0x3243F6A8885A3p-48    7 -0x42 2    +0 Z D
+- + 53 0x8611A6D2511D3p-49  53 -0x3243F6A8885A3p-48    7 -0x42 2    -0 N Z
++ - 53 0x10C234DA4A23A7p-50 53  0x3243F6A8885A3p-48    7 -0x42 2    +0 U N
+- + 53 0x8611A6D2511D3p-49  53 -0x3243F6A8885A3p-48    7 -0x42 2    -0 D U
+
+# huge values
++ 0 53 0x162E42FEFA39Fp-39  2   0                   2 0x1p1024 2    +0 U U
++ 0 53 0x162E42FEFA39Fp-38  2   0                   2 0x1p2048 2    +0 U U
++ 0 53 0x162E42FEFA39Fp-37  2   0                   2 0x1p4096 2    +0 U U
++ 0 53 0x162E42FEFA39Fp-36  2   0                   2 0x1p8192 2    +0 U U
++ 0 53 0x162E42FEFA39Fp-35  2   0                   2 0x1p16384 2   +0 U U
++ 0 53 0x162E42FEFA39Fp-34  2   0                   2 0x1p32768 2   +0 U U
++ 0 53 0x162E42FEFA39Fp-33  2   0                   2 0x1p65536 2   +0 U U
++ 0 53 0x162E42FEFA39Fp-32  2   0                   2 0x1p131072 2  +0 U U
++ 0 53 0x162E42FEFA39Fp-31  2   0                   2 0x1p262144 2  +0 U U
++ 0 53 0x162E42FEFA39Fp-30  2   0                   2 0x1p524288 2  +0 U U
++ 0 53 0x162E42FEFA39Fp-29  2   0                   2 0x1p1048576 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-28  2   0                   2 0x1p2097152 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-27  2   0                   2 0x1p4194304 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-26  2   0                   2 0x1p8388608 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-25  2   0                  2 0x1p16777216 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-24  2   0                  2 0x1p33554432 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-23  2   0                  2 0x1p67108864 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-22  2   0                 2 0x1p134217728 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-21  2   0                 2 0x1p268435456 2 +0 U U
++ 0 53 0x162E42FEFA39Fp-20  2   0                 2 0x1p536870912 2 +0 U U
++ + 53 0x163108C75A1937p-43 53 0x1921FB54442D19p-53 2 0x1p1024 2 0x1p1024 U U
++ + 53 0x162FA5E32A2993p-42 53 0x1921FB54442D19p-53 2 0x1p2048 2 0x1p2048 U U
++ + 53 0xB177A388918E1p-40  53 0x1921FB54442D19p-53 2 0x1p4096 2 0x1p4096 U U
++ + 53 0x162E9BB80635D9p-40 53 0x1921FB54442D19p-53 2 0x1p8192 2 0x1p8192 U U
++ + 53 0x58B9BD6E00DF9p-37  53 0x1921FB54442D19p-53 2 0x1p16384 2 0x1p16384 U U
++ + 53 0xB172C969E9C75p-37  53 0x1921FB54442D19p-53 2 0x1p32768 2 0x1p32768 U U
++ + 53 0x162E4E161BB96Dp-37 53 0x1921FB54442D19p-53 2 0x1p65536 2 0x1p65536 U U
++ + 53 0xB172445457CD7p-35   2  0x1p0             2 0x1p131072 2 0x1p131072 U U
++ + 53 0x162E45C4C299CFp-35  2  0x1p0             2 0x1p262144 2 0x1p262144 U U
++ + 53 0x162E4461DE69DFp-34  2  0x1p0             2 0x1p524288 2 0x1p524288 U U
++ + 53 0x2C5C8760D8A3Dp-30   2  0x1p0           2 0x1p1048576 2 0x1p1048576 U U
++ + 53 0x58B90D5ECD17Bp-30   2  0x1p0           2 0x1p2097152 2 0x1p2097152 U U
++ + 53 0xB172195AB5FF7p-30   2  0x1p0           2 0x1p4194304 2 0x1p4194304 U U
++ + 53 0x162E4315287CEFp-30  2  0x1p0           2 0x1p8388608 2 0x1p8388608 U U
++ + 53 0x162E430A115B6Fp-29  2  0x1p0         2 0x1p16777216 2 0x1p16777216 U U
++ + 53 0x162E430485CAAFp-28  2  0x1p0         2 0x1p33554432 2 0x1p33554432 U U
++ + 53 0x162E4301C0025p-23   2  0x1p0         2 0x1p67108864 2 0x1p67108864 U U
++ + 53 0xB1721802E8F1p-21    2  0x1p0       2 0x1p134217728 2 0x1p134217728 U U
++ + 53 0x2C5C85FF57581p-22   2  0x1p0       2 0x1p268435456 2 0x1p268435456 U U
+# Due to intermediate overflow, the following result has real part infinity
+# instead of the correct result. Since this may happen in other parts of the
+# library as well, we do not consider it a bug for the moment.
+# + + 53 0x58B90BFD4BCBFp-22   2  0x1p0       2 0x1p536870912 2 0x1p536870912 U U
diff --git a/mpc/tests/memory.c b/mpc/tests/memory.c
new file mode 100644
index 0000000..babf393
--- /dev/null
+++ b/mpc/tests/memory.c
@@ -0,0 +1,198 @@
+/* Memory allocation used during tests.
+
+Copyright (C) 2001, 2002, 2003, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.
+Contributed by the Arenaire and Cacao projects, INRIA.
+
+This file is part of the GNU MPFR Library (version 2.4.1).
+
+The GNU MPFR Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The GNU MPFR Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the GNU MPFR Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
+MA 02110-1301, USA. */
+
+/* Note: this file comes from GMP's tests/memory.c */
+
+#include <stdio.h>
+#include <stdlib.h>  /* for abort */
+#include <limits.h>
+#include "gmp.h"
+
+#define __gmp_default_allocate malloc
+#define __gmp_default_reallocate(p,old,new) realloc(p,new)
+#define __gmp_default_free(p,size) free(p)
+
+#include "mpc-tests.h"
+
+/* Each block allocated is a separate malloc, for the benefit of a redzoning
+   malloc debugger during development or when bug hunting.
+
+   Sizes passed when reallocating or freeing are checked (the default
+   routines don't care about these).
+
+   Memory leaks are checked by requiring that all blocks have been freed
+   when tests_memory_end() is called.  Test programs must be sure to have
+   "clear"s for all temporary variables used.  */
+
+struct header {
+  void           *ptr;
+  size_t         size;
+  struct header  *next;
+};
+
+static struct header  *tests_memory_list;
+
+/* Return a pointer to a pointer to the found block (so it can be updated
+   when unlinking). */
+static struct header **
+tests_memory_find (void *ptr)
+{
+  struct header  **hp;
+
+  for (hp = &tests_memory_list; *hp != NULL; hp = &((*hp)->next))
+    if ((*hp)->ptr == ptr)
+      return hp;
+
+  return NULL;
+}
+
+/*
+static int
+tests_memory_valid (void *ptr)
+{
+  return (tests_memory_find (ptr) != NULL);
+}
+*/
+
+static void *
+tests_allocate (size_t size)
+{
+  struct header  *h;
+
+  if (size == 0)
+    {
+      printf ("tests_allocate(): attempt to allocate 0 bytes\n");
+      abort ();
+    }
+
+  h = (struct header *) __gmp_default_allocate (sizeof (*h));
+  h->next = tests_memory_list;
+  tests_memory_list = h;
+
+  h->size = size;
+  h->ptr = __gmp_default_allocate (size);
+  return h->ptr;
+}
+
+static void *
+tests_reallocate (void *ptr, size_t old_size, size_t new_size)
+{
+  struct header  **hp, *h;
+
+  if (new_size == 0)
+    {
+      printf ("tests_reallocate(): attempt to reallocate 0x%lX to 0 bytes\n",
+              (unsigned long) ptr);
+      abort ();
+    }
+
+  hp = tests_memory_find (ptr);
+  if (hp == NULL)
+    {
+      printf ("tests_reallocate(): attempt to reallocate bad pointer 0x%lX\n",
+              (unsigned long) ptr);
+      abort ();
+    }
+  h = *hp;
+
+  if (h->size != old_size)
+    {
+      /* Note: we should use the standard %zu to print sizes, but
+         this is not supported by old C implementations. */
+      printf ("tests_reallocate(): bad old size %lu, should be %lu\n",
+              (unsigned long) old_size, (unsigned long) h->size);
+      abort ();
+    }
+
+  h->size = new_size;
+  h->ptr = __gmp_default_reallocate (ptr, old_size, new_size);
+  return h->ptr;
+}
+
+static struct header **
+tests_free_find (void *ptr)
+{
+  struct header  **hp = tests_memory_find (ptr);
+  if (hp == NULL)
+    {
+      printf ("tests_free(): attempt to free bad pointer 0x%lX\n",
+              (unsigned long) ptr);
+      abort ();
+    }
+  return hp;
+}
+
+static void
+tests_free_nosize (void *ptr)
+{
+  struct header  **hp = tests_free_find (ptr);
+  struct header  *h = *hp;
+
+  *hp = h->next;  /* unlink */
+
+  __gmp_default_free (ptr, h->size);
+  __gmp_default_free (h, sizeof (*h));
+}
+
+static void
+tests_free (void *ptr, size_t size)
+{
+  struct header  **hp = tests_free_find (ptr);
+  struct header  *h = *hp;
+
+  if (h->size != size)
+    {
+      /* Note: we should use the standard %zu to print sizes, but
+         this is not supported by old C implementations. */
+      printf ("tests_free(): bad size %lu, should be %lu\n",
+              (unsigned long) size, (unsigned long) h->size);
+      abort ();
+    }
+
+  tests_free_nosize (ptr);
+}
+
+void
+tests_memory_start (void)
+{
+  tests_memory_list = NULL;
+  mp_set_memory_functions (tests_allocate, tests_reallocate, tests_free);
+}
+
+void
+tests_memory_end (void)
+{
+  if (tests_memory_list != NULL)
+    {
+      struct header  *h;
+      unsigned  count;
+
+      printf ("tests_memory_end(): not all memory freed\n");
+
+      count = 0;
+      for (h = tests_memory_list; h != NULL; h = h->next)
+        count++;
+
+      printf ("    %u blocks remaining\n", count);
+      abort ();
+    }
+}
diff --git a/mpc/tests/mpc-tests.h b/mpc/tests/mpc-tests.h
new file mode 100644
index 0000000..5903399
--- /dev/null
+++ b/mpc/tests/mpc-tests.h
@@ -0,0 +1,204 @@
+/* Tests helper functions.
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#ifndef MPC_TESTS_H
+#define MPC_TESTS_H
+
+#include <stdio.h>
+#include <ctype.h>
+
+#include "mpc-impl.h"
+
+/** OUTPUT HELPER MACROS */
+#define MPFR_OUT(X) \
+  printf (#X" [%ld]=", mpfr_get_prec (X));\
+  mpfr_out_str (stdout, 2, 0, (X), GMP_RNDN);\
+  printf ("\n");
+
+
+#define MPC_INEX_STR(inex)                      \
+  (inex) == 0 ? "(0, 0)"                        \
+    : (inex) == 1 ? "(+1, 0)"                   \
+    : (inex) == 2 ? "(-1, 0)"                   \
+    : (inex) == 4 ? "(0, +1)"                   \
+    : (inex) == 5 ? "(+1, +1)"                  \
+    : (inex) == 6 ? "(-1, +1)"                  \
+    : (inex) == 8 ? "(0, -1)"                   \
+    : (inex) == 9 ? "(+1, -1)"                  \
+    : (inex) == 10 ? "(-1, -1)" : "unknown"
+
+#define TEST_FAILED(func,op,got,expected,rnd)			\
+  do {								\
+    printf ("%s(op) failed [rnd=%d]\n with", func, rnd);	\
+    MPC_OUT (op);						\
+    printf ("     ");						\
+    MPC_OUT (got);						\
+    MPC_OUT (expected);						\
+    exit (1);							\
+  } while (0)
+
+#define QUOTE(X) NAME(X)
+#define NAME(X) #X
+
+/** RANDOM FUNCTIONS **/
+/* the 3 following functions handle seed for random numbers. Usage:
+   - add test_start at the beginning of your test function
+   - use test_default_random (or use your random functions with
+   gmp_randstate_t rands) in your tests
+   - add test_end at the end the test function */
+extern gmp_randstate_t  rands;
+extern char             rands_initialized;
+
+extern void test_start (void);
+extern void test_end (void);
+
+extern void test_default_random (mpc_ptr, mp_exp_t, mp_exp_t, unsigned int, unsigned int);
+extern unsigned long urandomm_ui (unsigned long);
+
+
+/** COMPARISON FUNCTIONS **/
+/* some sign are unspecified in ISO C99, thus we record in struct known_signs_t
+   whether the sign has to be checked */
+typedef struct
+{
+  int re;  /* boolean value */
+  int im;  /* boolean value */
+} known_signs_t;
+
+/* same_mpfr_value returns 1:
+   - if got and ref have the same value and known_sign is true,
+   or
+   - if they have the same absolute value, got = 0 or got = inf, and known_sign is
+   false.
+   returns 0 in other cases.
+   Unlike mpfr_cmp, same_mpfr_value(got, ref, x) return 1 when got and
+   ref are both NaNs. */
+extern int same_mpfr_value (mpfr_ptr got, mpfr_ptr ref, int known_sign);
+extern int same_mpc_value (mpc_ptr got, mpc_ptr ref, known_signs_t known_signs);
+
+
+/** GENERIC TESTS **/
+
+typedef int (*CC_func_ptr) (mpc_t, mpc_srcptr, mpc_rnd_t);
+typedef int (*C_CC_func_ptr) (mpc_t, mpc_srcptr, mpc_srcptr, mpc_rnd_t);
+typedef int (*CCCC_func_ptr) (mpc_t, mpc_srcptr, mpc_srcptr, mpc_srcptr,
+			      mpc_rnd_t);
+typedef int (*CCU_func_ptr) (mpc_t, mpc_srcptr, unsigned long, mpc_rnd_t);
+typedef int (*CCS_func_ptr) (mpc_t, mpc_srcptr, long, mpc_rnd_t);
+typedef int (*CCI_func_ptr) (mpc_t, mpc_srcptr, int, mpc_rnd_t);
+typedef int (*CCF_func_ptr) (mpc_t, mpc_srcptr, mpfr_srcptr, mpc_rnd_t);
+typedef int (*CFC_func_ptr) (mpc_t, mpfr_srcptr, mpc_srcptr, mpc_rnd_t);
+typedef int (*CUC_func_ptr) (mpc_t, unsigned long, mpc_srcptr, mpc_rnd_t);
+typedef int (*CUUC_func_ptr) (mpc_t, unsigned long, unsigned long, mpc_srcptr,
+                              mpc_rnd_t);
+typedef int (*FC_func_ptr) (mpfr_t, mpc_srcptr, mpfr_rnd_t);
+typedef int (*CC_C_func_ptr) (mpc_t, mpc_t, mpc_srcptr, mpc_rnd_t, mpc_rnd_t);
+
+typedef union {
+   FC_func_ptr FC;     /* output: mpfr_t, input: mpc_t */
+   CC_func_ptr CC;     /* output: mpc_t, input: mpc_t */
+   C_CC_func_ptr C_CC; /* output: mpc_t, inputs: (mpc_t, mpc_t) */
+   CCCC_func_ptr CCCC; /* output: mpc_t, inputs: (mpc_t, mpc_t, mpc_t) */
+   CCU_func_ptr CCU;   /* output: mpc_t, inputs: (mpc_t, unsigned long) */
+   CCS_func_ptr CCS;   /* output: mpc_t, inputs: (mpc_t, long) */
+   CCI_func_ptr CCI;   /* output: mpc_t, inputs: (mpc_t, int) */
+   CCF_func_ptr CCF;   /* output: mpc_t, inputs: (mpc_t, mpfr_t) */
+   CFC_func_ptr CFC;   /* output: mpc_t, inputs: (mpfr_t, mpc_t) */
+   CUC_func_ptr CUC;   /* output: mpc_t, inputs: (unsigned long, mpc_t) */
+   CUUC_func_ptr CUUC; /* output: mpc_t, inputs: (ulong, ulong, mpc_t) */
+   CC_C_func_ptr CC_C;   /* outputs: (mpc_t, mpc_t), input: mpc_t */
+} func_ptr;
+
+/* the rounding mode is implicit */
+typedef enum {
+   FC,   /* output: mpfr_t, input: mpc_t */
+   CC,   /* output: mpc_t, input: mpc_t */
+   C_CC, /* output: mpc_t, inputs: (mpc_t, mpc_t) */
+   CCCC, /* output: mpc_t, inputs: (mpc_t, mpc_t, mpc_t) */
+   CCU,  /* output: mpc_t, inputs: (mpc_t, unsigned long) */
+   CCS,  /* output: mpc_t, inputs: (mpc_t, long) */
+   CCI,  /* output: mpc_t, inputs: (mpc_t, int) */
+   CCF,  /* output: mpc_t, inputs: (mpc_t, mpfr_t) */
+   CFC,  /* output: mpc_t, inputs: (mpfr_t, mpc_t) */
+   CUC,  /* output: mpc_t, inputs: (unsigned long, mpc_t) */
+   CUUC, /* output: mpc_t, inputs: (ulong, ulong, mpc_t) */
+   CC_C  /* outputs: (mpc_t, mpc_t), input: mpc_t */
+} func_type;
+
+/* properties */
+#define FUNC_PROP_NONE     0
+#define FUNC_PROP_SYMETRIC 1
+
+typedef struct
+{
+  func_ptr     pointer;
+  func_type    type;
+  const char * name;
+  int          properties;
+} mpc_function;
+
+#define DECL_FUNC(_ftype, _fvar, _func)         \
+  mpc_function _fvar;                           \
+  _fvar.pointer._ftype = _func;                 \
+  _fvar.type = _ftype;                          \
+  _fvar.name = QUOTE (_func);                   \
+  _fvar.properties = FUNC_PROP_NONE;
+
+
+/* tgeneric(mpc_function, prec_min, prec_max, step, exp_max) checks rounding
+ with random numbers:
+ - with precision ranging from prec_min to prec_max with an increment of
+   step,
+ - with exponent between -exp_max and exp_max.
+
+ It also checks parameter reuse (it is assumed here that either two mpc_t
+ variables are equal or they are different, in the sense that the real part of
+ one of them cannot be the imaginary part of the other). */
+void tgeneric (mpc_function, mpfr_prec_t, mpfr_prec_t, mpfr_prec_t, mp_exp_t);
+
+
+/** READ FILE WITH TEST DATA SET **/
+/* data_check (function, "data_file_name") checks function results against
+   precomputed data in a file.*/
+extern void data_check (mpc_function, const char *);
+
+extern FILE * open_data_file (const char *file_name);
+extern void close_data_file (FILE *fp);
+
+/* helper file reading functions */
+extern void skip_whitespace_comments (FILE *fp);
+extern void read_ternary (FILE *fp, int* ternary);
+extern void read_mpfr_rounding_mode (FILE *fp, mpfr_rnd_t* rnd);
+extern void read_mpc_rounding_mode (FILE *fp, mpc_rnd_t* rnd);
+extern mpfr_prec_t read_mpfr_prec (FILE *fp);
+extern void read_int (FILE *fp, int *n, const char *name);
+extern size_t read_string (FILE *fp, char **buffer_ptr, size_t buffer_length, const char *name);
+extern void read_mpfr (FILE *fp, mpfr_ptr x, int *known_sign);
+extern void read_mpc (FILE *fp, mpc_ptr z, known_signs_t *ks);
+extern void tests_memory_start (void);
+extern void tests_memory_end (void);
+
+#define TERNARY_NOT_CHECKED 255
+   /* special value to indicate that the ternary value is not checked */
+#define TERNARY_ERROR 254
+   /* special value to indicate that an error occurred in an mpc function */
+
+#endif /* MPC_TESTS_H */
diff --git a/mpc/tests/mul.dat b/mpc/tests/mul.dat
new file mode 100755
index 0000000..1267b5c
--- /dev/null
+++ b/mpc/tests/mul.dat
@@ -0,0 +1,144 @@
+# Data file for mpc_mul
+#
+# Copyright (C) INRIA, 2008, 2010, 2011
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP1_RE  OP1_RE  PREC_OP1_IM  OP1_IM  PREC_OP2_RE  OP2_RE  PREC_OP2_IM  OP2_IM  RND_RE  RND_IM
+#
+# See add.dat for more details.
+
+# special values (following ISO C99 standard, G.5.1)
+0 0 53  nan 53 +inf    53 -inf 53 -inf 53 -inf 53 -inf N Z
+0 0 53  nan 53 +inf    53 -inf 53 +inf 53   +1 53 -inf Z U
+0 0 53 +inf 53 -inf    53 +inf 53 -inf 53 +inf 53   +0 U D
+0 0 53 +inf 53 -inf    53 +inf 53 +inf 53   -0 53   -1 D N
+0 0 53 -inf 53 +inf    53 -inf 53 -inf 53   -0 53   -1 N U
+0 0 53 -inf 53 +inf    53 -inf 53 +inf 53 +inf 53  nan Z D
+0 0 53 -inf 53 -inf    53 +inf 53 -inf 53  nan 53   -1 U N
+0 0 53  nan 53  nan    53 +inf 53 +inf 53   -0 53  nan D Z
+0 0 53  nan 53  nan    53 -inf 53 -inf 53  nan 53  nan N D
+
+0 0 53 -inf 53 -inf    53   -1 53 -inf 53 +inf 53   -1 N D
+0 0 53 -inf 53  nan    53 -inf 53   +1 53 +inf 53   -0 Z N
+0 0 53 +inf 53  nan    53   +1 53 -inf 53   -0 53   +1 U Z
+0 0 53  nan 53  nan    53 +inf 53   +1 53   -0 53   -0 D U
+0 0 53  nan 53 -inf    53   -1 53 -inf 53 +inf 53  nan N N
+0 0 53  nan 53 -inf    53 -inf 53   +1 53  nan 53   +1 Z Z
+0 0 53  nan 53  nan    53   +1 53 -inf 53   -0 53  nan U U
+0 0 53  nan 53  nan    53 +inf 53   +1 53  nan 53  nan D D
+
+0 0 53 +inf 53  nan    53   -0 53 -inf 53   +0 53 +inf D D
+0 0 53 -inf 53  nan    53 -inf 53   +0 53   +1 53   -0 N Z
+0 0 53  nan 53  nan    53   +0 53 -inf 53   -0 53   -0 Z U
+0 0 53 -inf 53  nan    53 +inf 53   +0 53 -inf 53  nan U D
+0 0 53 -inf 53  nan    53   -0 53 -inf 53  nan 53   -1 D N
+0 0 53  nan 53  nan    53 -inf 53   +0 53   +0 53  nan N U
+0 0 53  nan 53  nan    53   +0 53 -inf 53  nan 53  nan Z D
+
+0 0 53   +1 53   -0    53   +0 53   +1 53   -0 53   -1 Z D
+0 0 53   -0 53   +0    53   -1 53   -0 53   +0 53   -0 U N
+0 0 53 -inf 53  nan    53   -0 53   +1 53  nan 53 +inf D Z
+0 0 53  nan 53  nan    53   +1 53   -0 53   -1 53  nan N D
+0 0 53  nan 53  nan    53   +0 53   +1 53  nan 53   -0 Z N
+0 0 53  nan 53  nan    53   -1 53   -0 53  nan 53  nan U Z
+
+0 0 53   +0 53   +0    53   -0 53   +0 53   +0 53   -0 U Z
+0 0 53  nan 53  nan    53   +0 53   -0 53  nan 53 -inf D U
+0 0 53  nan 53  nan    53   +0 53   +0 53   -1 53  nan N N
+0 0 53  nan 53  nan    53   -0 53   -0 53  nan 53   -0 Z Z
+0 0 53  nan 53  nan    53   -0 53   +0 53  nan 53  nan U U
+
+0 0 53 +inf 53  nan    53  nan 53 -inf 53  nan 53 +inf U U
+0 0 53 -inf 53  nan    53 +inf 53  nan 53   -1 53  nan D D
+0 0 53  nan 53  nan    53  nan 53 -inf 53  nan 53   -0 N Z
+0 0 53  nan 53  nan    53 -inf 53  nan 53  nan 53  nan Z U
+
+0 0 53  nan 53  nan    53   +1 53  nan 53  nan 53   -1 Z U
+0 0 53  nan 53  nan    53  nan 53   +1 53   -0 53  nan U D
+0 0 53  nan 53  nan    53   -1 53  nan 53  nan 53  nan D N
+
+0 0 53  nan 53  nan    53  nan 53   +0 53   +0 53  nan D N
+0 0 53  nan 53  nan    53   +0 53  nan 53  nan 53  nan N U
+
+0 0 53  nan 53  nan    53  nan 53  nan 53  nan 53  nan N U
+
+# pure real arguments
+0 0 53  0x10000000000001p-52 53 -0    53 +1 53 -0 53 0x10000000000001p-52 53 -0 N N
+0 0 53  0x10000000000001p-52 53 -0    53 +1 53 -0 53 0x10000000000001p-52 53 -0 Z Z
+0 0 53  0x10000000000001p-52 53 -0    53 +1 53 -0 53 0x10000000000001p-52 53 -0 U U
+0 0 53 -0x10000000000001p-52 53 -0    53 -1 53 -0 53 0x10000000000001p-52 53 -0 D D
+
+# one pure real argument
+0 0 53  0x10000000000001p-52 53  0x10000000000001p-52    53 +1 53 +1 53 0x10000000000001p-52 53 -0 N N
+0 0 53  0x10000000000001p-52 53 -0x10000000000001p-51    53 +1 53 -2 53 0x10000000000001p-52 53 -0 Z Z
+- + 53 -0x30000000000004p-52 53  0x30000000000004p-52    53 -3 53 +3 53 0x10000000000001p-52 53 +0 N N
++ - 53 -0x30000000000002p-52 53  0x30000000000002p-52    53 -3 53 +3 53 0x10000000000001p-52 53 +0 Z Z
++ + 53 -0x30000000000002p-52 53  0x30000000000004p-52    53 -3 53 +3 53 0x10000000000001p-52 53 +0 U U
+- - 53 -0x30000000000004p-52 53  0x30000000000002p-52    53 -3 53 +3 53 0x10000000000001p-52 53 +0 D D
+0 0 53 -0x10000000000001p-52 53 -0x10000000000001p-50    53 -1 53 -4 53 0x10000000000001p-52 53 +0 D D
+0 0 53                    +0 53                    +0    53 +0 53 +0 53 0x10000000000001p-52 53 -1 N N
+0 0 53                    +0 53                    -0    53 +0 53 -0 53 0x10000000000001p-52 53 -2 Z Z
+0 0 53                    +0 53                    +0    53 +0 53 +0 53 0x10000000000001p-52 53 +3 U U
+0 0 53                    -0 53                    -0    53 -0 53 -0 53 0x10000000000001p-52 53 +4 D D
+
+# pure imaginary arguments
+0 0 53 -0x10000000000001p-52 53 -0     53 -0 53 0x10000000000001p-52 53 -0 53 +1 N N
+0 0 53 -0x10000000000001p-52 53 +0     53 +0 53 0x10000000000001p-52 53 -0 53 +1 Z Z
+0 0 53 -0x10000000000001p-52 53 +0     53 +0 53 0x10000000000001p-52 53 -0 53 +1 U U
+0 0 53 -0x10000000000001p-52 53 -0     53 -0 53 0x10000000000001p-52 53 -0 53 +1 D D
+
+# one pure imaginary argument
+0 0 53 -0x10000000000001p-52 53 -0x10000000000001p-52   53 -0 53 0x10000000000001p-52 53 -1 53 +1 N N
+0 0 53 +0x10000000000001p-52 53 -0x10000000000001p-51   53 +0 53 0x10000000000001p-52 53 -2 53 -1 Z Z
++ - 53  0x30000000000004p-52 53 -0x30000000000004p-52   53 +0 53 0x10000000000001p-52 53 -3 53 -3 N N
+- + 53  0x30000000000002p-52 53 -0x30000000000002p-52   53 +0 53 0x10000000000001p-52 53 -3 53 -3 Z Z
++ + 53  0x30000000000004p-52 53 -0x30000000000002p-52   53 +0 53 0x10000000000001p-52 53 -3 53 -3 U U
+- - 53  0x30000000000002p-52 53 -0x30000000000004p-52   53 +0 53 0x10000000000001p-52 53 -3 53 -3 D D
+0 0 53 +0x10000000000001p-52 53 -0x10000000000001p-50   53 -0 53 0x10000000000001p-52 53 -4 53 -1 D D
+
+# big precision uses Karatsuba method
+0 0 4096 0x1420176785BD601FC018AD36471p-96 4096 -0x1ECCDBDA38B2611A32848E7ADF43p-100    53  0x6B2E363676587p-44 53  0x1AC20AAC49ED37p-47 53  0x12264C57B44C6Bp-53 53 -0x138639A4B8D8B3p-50 N N
+
+# Karatsuba case where x=0 since ad=bc: (1+i)^2 at artificially high
+# precision so that Karatsuba is actually used.
+0 0 4096 0 4096 2    4096 1 4096 1  4096 1 4096 1  N N
+# trigger the line reducing prec_x to prec_u
+0 0 4096 0 4096 2    40960 1 40960 1  40960 1 40960 1  N N
+# another particular cases
++ + 6 -0x9p-497 6 0x33p-315    6 -0x1dp-73 6  0x3p148   6  0x11p-463 6 0x3p-645  N N
++ - 6 0x33p-315 6 0x9p-497     6   0x3p148 6  0x1dp-73  6  0x11p-463 6 0x3p-645  N N
+0 0 4 0x1p-1902 4 0x3p-1085    4 -0x1p-892 4 -0x3p-75   4 -0x1p-1010 4 0         N N
+
+# a few values, previously hard-coded in tmul.c
+0 0 8 10 8 -5  8 4 8 3  8 1 8 -2 N N
++ + 27 0b1.10110000001100010010000000e-3 27 0b1.00111100000010100001011001e-1  27 0b1.11111011011000010101000000e-2 27 0b1.11010001010110111001110001e-3  27 0b1.10100101110110011011100100e-1 27 0b1.10111100011000001100110011e-1 N N
+
+# check squares, copied from sqr.dat
++ - 53  0xfdbac097c8dc58p+2096 53 -0x7f6e5d4c3b2a2p+1036   53 -0xfedcba9876543p+1024 53  0x10000000000001p-42  53 -0xfedcba9876543p+1024 53  0x10000000000001p-42  U D
++ 0 30 309485009533114692573069312 30 18889465966662952943616  30 17592186044416 30 536870913 30 17592186044416 30 536870913 N N
+0 0 4 0 4 2  4 1 4 1 4 1 4 1 N N
++ + 8 0b1.1000111e-3 8 0b1.1100111e-3  27 0b1.11111011011000010101000000e-2 27 0b1.11010001010110111001110001e-3 27 0b1.11111011011000010101000000e-2 27 0b1.11010001010110111001110001e-3 N N
+? + 3464 inf 3464 inf  866 -0x2.5763c6519ef1510f8afa101a210b8030b1909cc17004db561a25d9b53e2c08c41c01e8bbac5af6299b9d8786030aa14943d841798c8c369287942e4d4cec42a60ab0922af931159805e631128e97f973754ad53972d5d320a651a3b4a667f0ef2b92dbd698d159c3642675140@192158913 866 -0xd.15f2d530934dd930d66e89d70762d2337a8f973dd6915eb6b532fd372fcc955df1d852632d4e46fe64154ceda991a1302caf1b0ec622497e3e5724dd05b1c89a06e28d7e18e8af58f5ff4c9998cb31714688867524f41e0b31e847c1bf40de5127f858069998efd7c3e599080@192158893 866 -0x2.5763c6519ef1510f8afa101a210b8030b1909cc17004db561a25d9b53e2c08c41c01e8bbac5af6299b9d8786030aa14943d841798c8c369287942e4d4cec42a60ab0922af931159805e631128e97f973754ad53972d5d320a651a3b4a667f0ef2b92dbd698d159c3642675140@192158913 866 -0xd.15f2d530934dd930d66e89d70762d2337a8f973dd6915eb6b532fd372fcc955df1d852632d4e46fe64154ceda991a1302caf1b0ec622497e3e5724dd05b1c89a06e28d7e18e8af58f5ff4c9998cb31714688867524f41e0b31e847c1bf40de5127f858069998efd7c3e599080@192158893 N N
+? + 2256 0 2256 -0  564 0xc.87999bfd1cb1a64288881e214b7cf1af979863b23c030b79c4a8bebb39177967608388a2e4df527977e7755a25df8af8f72fdd6dd2f42bd00de83088b4e9b59ce85caf2e6b0c0@-184298749 564 -0x2.5109af459d4daf357e09475ec991cdc9b02c8f7dfacdc060d2a24710d09c997f8aea6dbd46f10828c30b583fdcc90d7dcbb895689d594d3813db40784d2309e450d1fb6e38da8@-184298726 564 0xc.87999bfd1cb1a64288881e214b7cf1af979863b23c030b79c4a8bebb39177967608388a2e4df527977e7755a25df8af8f72fdd6dd2f42bd00de83088b4e9b59ce85caf2e6b0c0@-184298749 564 -0x2.5109af459d4daf357e09475ec991cdc9b02c8f7dfacdc060d2a24710d09c997f8aea6dbd46f10828c30b583fdcc90d7dcbb895689d594d3813db40784d2309e450d1fb6e38da8@-184298726 N N
+
+# intermediate overflow
+#- + 100 -inf 100 inf  100 0x1@125000750 100 0x3@125000750  100 0x1@225000750 100 0x2@225000750 N N
diff --git a/mpc/tests/mul_fr.dat b/mpc/tests/mul_fr.dat
new file mode 100644
index 0000000..059e5fa
--- /dev/null
+++ b/mpc/tests/mul_fr.dat
@@ -0,0 +1,370 @@
+# Data file for mpc_mul_fr.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see add_fr.dat.
+
+# special values
+0 0 7 +inf 7 +inf   7 -inf 7 -inf  7 -inf  N N
+0 0 7 +inf 7 +inf   7 -inf 7 -inf  7   -1  N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   -0  N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7   +0  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7    1  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7 -inf  7  nan  N N
+0 0 7 +inf 7 +inf   7 -inf 7   -1  7 -inf  N N
+0 0 7 +inf 7    1   7 -inf 7   -1  7   -1  N N
+0 0 7  nan 7   +0   7 -inf 7   -1  7   -0  N N
+0 0 7  nan 7   -0   7 -inf 7   -1  7   +0  N N
+0 0 7 -inf 7   -1   7 -inf 7   -1  7    1  N N
+0 0 7 -inf 7 -inf   7 -inf 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7   -1  7  nan  N N
+0 0 7 +inf 7  nan   7 -inf 7   -0  7 -inf  N N
+0 0 7 +inf 7   +0   7 -inf 7   -0  7   -1  N N
+0 0 7  nan 7   +0   7 -inf 7   -0  7   -0  N N
+0 0 7  nan 7   -0   7 -inf 7   -0  7   +0  N N
+0 0 7 -inf 7   -0   7 -inf 7   -0  7    1  N N
+0 0 7 -inf 7  nan   7 -inf 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7   -0  7  nan  N N
+0 0 7 +inf 7  nan   7 -inf 7   +0  7 -inf  N N
+0 0 7 +inf 7   -0   7 -inf 7   +0  7   -1  N N
+0 0 7  nan 7   -0   7 -inf 7   +0  7   -0  N N
+0 0 7  nan 7   +0   7 -inf 7   +0  7   +0  N N
+0 0 7 -inf 7   +0   7 -inf 7   +0  7    1  N N
+0 0 7 -inf 7  nan   7 -inf 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7   +0  7  nan  N N
+0 0 7 +inf 7 -inf   7 -inf 7    1  7 -inf  N N
+0 0 7 +inf 7   -1   7 -inf 7    1  7   -1  N N
+0 0 7  nan 7   -0   7 -inf 7    1  7   -0  N N
+0 0 7  nan 7   +0   7 -inf 7    1  7   +0  N N
+0 0 7 -inf 7    1   7 -inf 7    1  7    1  N N
+0 0 7 -inf 7 +inf   7 -inf 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7    1  7  nan  N N
+0 0 7 +inf 7 -inf   7 -inf 7 +inf  7 -inf  N N
+0 0 7 +inf 7 -inf   7 -inf 7 +inf  7   -1  N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   -0  N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7   +0  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7    1  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7 +inf  7  nan  N N
+0 0 7 +inf 7  nan   7 -inf 7  nan  7 -inf  N N
+0 0 7 +inf 7  nan   7 -inf 7  nan  7   -1  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   -0  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7   +0  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7    1  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan  N N
+0 0 7 +inf 7 +inf   7   -1 7 -inf  7 -inf  N N
+0 0 7    1 7 +inf   7   -1 7 -inf  7   -1  N N
+0 0 7   +0 7  nan   7   -1 7 -inf  7   -0  N N
+0 0 7   -0 7  nan   7   -1 7 -inf  7   +0  N N
+0 0 7   -1 7 -inf   7   -1 7 -inf  7    1  N N
+0 0 7 -inf 7 -inf   7   -1 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7 -inf  7  nan  N N
+0 0 7 +inf 7 +inf   7   -1 7   -1  7 -inf  N N
+0 0 7 -inf 7 -inf   7   -1 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7   -1  7  nan  N N
+0 0 7 +inf 7  nan   7   -1 7   -0  7 -inf  N N
+0 0 7 -inf 7  nan   7   -1 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7   -0  7  nan  N N
+0 0 7 +inf 7  nan   7   -1 7   +0  7 -inf  N N
+0 0 7 -inf 7  nan   7   -1 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7   +0  7  nan  N N
+0 0 7 +inf 7 -inf   7   -1 7    1  7 -inf  N N
+0 0 7 -inf 7 +inf   7   -1 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7    1  7  nan  N N
+0 0 7 +inf 7 -inf   7   -1 7 +inf  7 -inf  N N
+0 0 7    1 7 -inf   7   -1 7 +inf  7   -1  N N
+0 0 7   +0 7  nan   7   -1 7 +inf  7   -0  N N
+0 0 7   -0 7  nan   7   -1 7 +inf  7   +0  N N
+0 0 7   -1 7 +inf   7   -1 7 +inf  7    1  N N
+0 0 7 -inf 7 +inf   7   -1 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7 +inf  7  nan  N N
+0 0 7 +inf 7  nan   7   -1 7  nan  7 -inf  N N
+0 0 7    1 7  nan   7   -1 7  nan  7   -1  N N
+0 0 7   +0 7  nan   7   -1 7  nan  7   -0  N N
+0 0 7   -0 7  nan   7   -1 7  nan  7   +0  N N
+0 0 7   -1 7  nan   7   -1 7  nan  7    1  N N
+0 0 7 -inf 7  nan   7   -1 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan  N N
+0 0 7  nan 7 +inf   7   -0 7 -inf  7 -inf  N N
+0 0 7   +0 7 +inf   7   -0 7 -inf  7   -1  N N
+0 0 7   +0 7  nan   7   -0 7 -inf  7   -0  N N
+0 0 7   -0 7  nan   7   -0 7 -inf  7   +0  N N
+0 0 7   -0 7 -inf   7   -0 7 -inf  7    1  N N
+0 0 7  nan 7 -inf   7   -0 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7 -inf  7  nan  N N
+0 0 7  nan 7 +inf   7   -0 7   -1  7 -inf  N N
+0 0 7  nan 7 -inf   7   -0 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7   -1  7  nan  N N
+0 0 7  nan 7  nan   7   -0 7   -0  7 -inf  N N
+0 0 7  nan 7  nan   7   -0 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7   -0  7  nan  N N
+0 0 7  nan 7  nan   7   -0 7   +0  7 -inf  N N
+0 0 7  nan 7  nan   7   -0 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7   +0  7  nan  N N
+0 0 7  nan 7 -inf   7   -0 7    1  7 -inf  N N
+0 0 7  nan 7 +inf   7   -0 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7    1  7  nan  N N
+0 0 7  nan 7 -inf   7   -0 7 +inf  7 -inf  N N
+0 0 7   +0 7 -inf   7   -0 7 +inf  7   -1  N N
+0 0 7   +0 7  nan   7   -0 7 +inf  7   -0  N N
+0 0 7   -0 7  nan   7   -0 7 +inf  7   +0  N N
+0 0 7   -0 7 +inf   7   -0 7 +inf  7    1  N N
+0 0 7  nan 7 +inf   7   -0 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7 +inf  7  nan  N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 -inf  N N
+0 0 7   +0 7  nan   7   -0 7  nan  7   -1  N N
+0 0 7   +0 7  nan   7   -0 7  nan  7   -0  N N
+0 0 7   -0 7  nan   7   -0 7  nan  7   +0  N N
+0 0 7   -0 7  nan   7   -0 7  nan  7    1  N N
+0 0 7  nan 7  nan   7   -0 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan  N N
+0 0 7  nan 7 +inf   7   +0 7 -inf  7 -inf  N N
+0 0 7   -0 7 +inf   7   +0 7 -inf  7   -1  N N
+0 0 7   -0 7  nan   7   +0 7 -inf  7   -0  N N
+0 0 7   +0 7  nan   7   +0 7 -inf  7   +0  N N
+0 0 7   +0 7 -inf   7   +0 7 -inf  7    1  N N
+0 0 7  nan 7 -inf   7   +0 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7 -inf  7  nan  N N
+0 0 7  nan 7 +inf   7   +0 7   -1  7 -inf  N N
+0 0 7  nan 7 -inf   7   +0 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7   -1  7  nan  N N
+0 0 7  nan 7  nan   7   +0 7   -0  7 -inf  N N
+0 0 7  nan 7  nan   7   +0 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7   -0  7  nan  N N
+0 0 7  nan 7  nan   7   +0 7   +0  7 -inf  N N
+0 0 7  nan 7  nan   7   +0 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7   +0  7  nan  N N
+0 0 7  nan 7 -inf   7   +0 7    1  7 -inf  N N
+0 0 7  nan 7 +inf   7   +0 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7    1  7  nan  N N
+0 0 7  nan 7 -inf   7   +0 7 +inf  7 -inf  N N
+0 0 7   -0 7 -inf   7   +0 7 +inf  7   -1  N N
+0 0 7   -0 7  nan   7   +0 7 +inf  7   -0  N N
+0 0 7   +0 7  nan   7   +0 7 +inf  7   +0  N N
+0 0 7   +0 7 +inf   7   +0 7 +inf  7    1  N N
+0 0 7  nan 7 +inf   7   +0 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7 +inf  7  nan  N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 -inf  N N
+0 0 7   -0 7  nan   7   +0 7  nan  7   -1  N N
+0 0 7   -0 7  nan   7   +0 7  nan  7   -0  N N
+0 0 7   +0 7  nan   7   +0 7  nan  7   +0  N N
+0 0 7   +0 7  nan   7   +0 7  nan  7    1  N N
+0 0 7  nan 7  nan   7   +0 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan  N N
+0 0 7 -inf 7 +inf   7    1 7 -inf  7 -inf  N N
+0 0 7   -1 7 +inf   7    1 7 -inf  7   -1  N N
+0 0 7   -0 7  nan   7    1 7 -inf  7   -0  N N
+0 0 7   +0 7  nan   7    1 7 -inf  7   +0  N N
+0 0 7    1 7 -inf   7    1 7 -inf  7    1  N N
+0 0 7 +inf 7 -inf   7    1 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7 -inf  7  nan  N N
+0 0 7 -inf 7 +inf   7    1 7   -1  7 -inf  N N
+0 0 7 +inf 7 -inf   7    1 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7   -1  7  nan  N N
+0 0 7 -inf 7  nan   7    1 7   -0  7 -inf  N N
+0 0 7 +inf 7  nan   7    1 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7   -0  7  nan  N N
+0 0 7 -inf 7  nan   7    1 7   +0  7 -inf  N N
+0 0 7 +inf 7  nan   7    1 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7   +0  7  nan  N N
+0 0 7 -inf 7 -inf   7    1 7    1  7 -inf  N N
+0 0 7 +inf 7 +inf   7    1 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7    1  7  nan  N N
+0 0 7 -inf 7 -inf   7    1 7 +inf  7 -inf  N N
+0 0 7   -1 7 -inf   7    1 7 +inf  7   -1  N N
+0 0 7   -0 7  nan   7    1 7 +inf  7   -0  N N
+0 0 7   +0 7  nan   7    1 7 +inf  7   +0  N N
+0 0 7    1 7 +inf   7    1 7 +inf  7    1  N N
+0 0 7 +inf 7 +inf   7    1 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7 +inf  7  nan  N N
+0 0 7 -inf 7  nan   7    1 7  nan  7 -inf  N N
+0 0 7   -1 7  nan   7    1 7  nan  7   -1  N N
+0 0 7   -0 7  nan   7    1 7  nan  7   -0  N N
+0 0 7   +0 7  nan   7    1 7  nan  7   +0  N N
+0 0 7    1 7  nan   7    1 7  nan  7    1  N N
+0 0 7 +inf 7  nan   7    1 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan  N N
+0 0 7 -inf 7 +inf   7 +inf 7 -inf  7 -inf  N N
+0 0 7 -inf 7 +inf   7 +inf 7 -inf  7   -1  N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   -0  N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7   +0  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7    1  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7 -inf  7  nan  N N
+0 0 7 -inf 7 +inf   7 +inf 7   -1  7 -inf  N N
+0 0 7 -inf 7    1   7 +inf 7   -1  7   -1  N N
+0 0 7  nan 7   +0   7 +inf 7   -1  7   -0  N N
+0 0 7  nan 7   -0   7 +inf 7   -1  7   +0  N N
+0 0 7 +inf 7   -1   7 +inf 7   -1  7    1  N N
+0 0 7 +inf 7 -inf   7 +inf 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7   -1  7  nan  N N
+0 0 7 -inf 7  nan   7 +inf 7   -0  7 -inf  N N
+0 0 7 -inf 7   +0   7 +inf 7   -0  7   -1  N N
+0 0 7  nan 7   +0   7 +inf 7   -0  7   -0  N N
+0 0 7  nan 7   -0   7 +inf 7   -0  7   +0  N N
+0 0 7 +inf 7   -0   7 +inf 7   -0  7    1  N N
+0 0 7 +inf 7  nan   7 +inf 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7   -0  7  nan  N N
+0 0 7 -inf 7  nan   7 +inf 7   +0  7 -inf  N N
+0 0 7 -inf 7   -0   7 +inf 7   +0  7   -1  N N
+0 0 7  nan 7   -0   7 +inf 7   +0  7   -0  N N
+0 0 7  nan 7   +0   7 +inf 7   +0  7   +0  N N
+0 0 7 +inf 7   +0   7 +inf 7   +0  7    1  N N
+0 0 7 +inf 7  nan   7 +inf 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7   +0  7  nan  N N
+0 0 7 -inf 7 -inf   7 +inf 7    1  7 -inf  N N
+0 0 7 -inf 7   -1   7 +inf 7    1  7   -1  N N
+0 0 7  nan 7   -0   7 +inf 7    1  7   -0  N N
+0 0 7  nan 7   +0   7 +inf 7    1  7   +0  N N
+0 0 7 +inf 7    1   7 +inf 7    1  7    1  N N
+0 0 7 +inf 7 +inf   7 +inf 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7    1  7  nan  N N
+0 0 7 -inf 7 -inf   7 +inf 7 +inf  7 -inf  N N
+0 0 7 -inf 7 -inf   7 +inf 7 +inf  7   -1  N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   -0  N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7   +0  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7    1  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7 +inf  7  nan  N N
+0 0 7 -inf 7  nan   7 +inf 7  nan  7 -inf  N N
+0 0 7 -inf 7  nan   7 +inf 7  nan  7   -1  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   -0  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7   +0  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7    1  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7 -inf  N N
+0 0 7  nan 7 +inf   7  nan 7 -inf  7   -1  N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   -0  N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7   +0  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7 -inf  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7   -1  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7   -1  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7   -1  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7   -1  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7   -1  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   -1  7  nan  N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 -inf  N N
+0 0 7  nan 7   +0   7  nan 7   -0  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7   -0  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7   +0  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7    1  N N
+0 0 7  nan 7  nan   7  nan 7   -0  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   -0  7  nan  N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 -inf  N N
+0 0 7  nan 7   -0   7  nan 7   +0  7   -1  N N
+0 0 7  nan 7   -0   7  nan 7   +0  7   -0  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7   +0  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7    1  N N
+0 0 7  nan 7  nan   7  nan 7   +0  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7   +0  7  nan  N N
+0 0 7  nan 7 -inf   7  nan 7    1  7 -inf  N N
+0 0 7  nan 7   -1   7  nan 7    1  7   -1  N N
+0 0 7  nan 7   -0   7  nan 7    1  7   -0  N N
+0 0 7  nan 7   +0   7  nan 7    1  7   +0  N N
+0 0 7  nan 7    1   7  nan 7    1  7    1  N N
+0 0 7  nan 7 +inf   7  nan 7    1  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7    1  7  nan  N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7 -inf  N N
+0 0 7  nan 7 -inf   7  nan 7 +inf  7   -1  N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   -0  N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7   +0  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7    1  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7 +inf  7  nan  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan  N N
+
+# values with only 1, -1, +0, -0
+0 0 7    1 7    1   7   -1 7   -1  7   -1  N N
+0 0 7   +0 7   +0   7   -1 7   -1  7   -0  N N
+0 0 7   -0 7   -0   7   -1 7   -1  7   +0  N N
+0 0 7   -1 7   -1   7   -1 7   -1  7    1  N N
+0 0 7    1 7   +0   7   -1 7   -0  7   -1  N N
+0 0 7   +0 7   +0   7   -1 7   -0  7   -0  N N
+0 0 7   -0 7   -0   7   -1 7   -0  7   +0  N N
+0 0 7   -1 7   -0   7   -1 7   -0  7    1  N N
+0 0 7    1 7   -0   7   -1 7   +0  7   -1  N N
+0 0 7   +0 7   -0   7   -1 7   +0  7   -0  N N
+0 0 7   -0 7   +0   7   -1 7   +0  7   +0  N N
+0 0 7   -1 7   +0   7   -1 7   +0  7    1  N N
+0 0 7    1 7   -1   7   -1 7    1  7   -1  N N
+0 0 7   +0 7   -0   7   -1 7    1  7   -0  N N
+0 0 7   -0 7   +0   7   -1 7    1  7   +0  N N
+0 0 7   -1 7    1   7   -1 7    1  7    1  N N
+0 0 7   +0 7    1   7   -0 7   -1  7   -1  N N
+0 0 7   +0 7   +0   7   -0 7   -1  7   -0  N N
+0 0 7   -0 7   -0   7   -0 7   -1  7   +0  N N
+0 0 7   -0 7   -1   7   -0 7   -1  7    1  N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -1  N N
+0 0 7   +0 7   +0   7   -0 7   -0  7   -0  N N
+0 0 7   -0 7   -0   7   -0 7   -0  7   +0  N N
+0 0 7   -0 7   -0   7   -0 7   -0  7    1  N N
+0 0 7   +0 7   -0   7   -0 7   +0  7   -1  N N
+0 0 7   +0 7   -0   7   -0 7   +0  7   -0  N N
+0 0 7   -0 7   +0   7   -0 7   +0  7   +0  N N
+0 0 7   -0 7   +0   7   -0 7   +0  7    1  N N
+0 0 7   +0 7   -1   7   -0 7    1  7   -1  N N
+0 0 7   +0 7   -0   7   -0 7    1  7   -0  N N
+0 0 7   -0 7   +0   7   -0 7    1  7   +0  N N
+0 0 7   -0 7    1   7   -0 7    1  7    1  N N
+0 0 7   -0 7    1   7   +0 7   -1  7   -1  N N
+0 0 7   -0 7   +0   7   +0 7   -1  7   -0  N N
+0 0 7   +0 7   -0   7   +0 7   -1  7   +0  N N
+0 0 7   +0 7   -1   7   +0 7   -1  7    1  N N
+0 0 7   -0 7   +0   7   +0 7   -0  7   -1  N N
+0 0 7   -0 7   +0   7   +0 7   -0  7   -0  N N
+0 0 7   +0 7   -0   7   +0 7   -0  7   +0  N N
+0 0 7   +0 7   -0   7   +0 7   -0  7    1  N N
+0 0 7   -0 7   -0   7   +0 7   +0  7   -1  N N
+0 0 7   -0 7   -0   7   +0 7   +0  7   -0  N N
+0 0 7   +0 7   +0   7   +0 7   +0  7   +0  N N
+0 0 7   +0 7   +0   7   +0 7   +0  7    1  N N
+0 0 7   -0 7   -1   7   +0 7    1  7   -1  N N
+0 0 7   -0 7   -0   7   +0 7    1  7   -0  N N
+0 0 7   +0 7   +0   7   +0 7    1  7   +0  N N
+0 0 7   +0 7    1   7   +0 7    1  7    1  N N
+0 0 7   -1 7    1   7    1 7   -1  7   -1  N N
+0 0 7   -0 7   +0   7    1 7   -1  7   -0  N N
+0 0 7   +0 7   -0   7    1 7   -1  7   +0  N N
+0 0 7    1 7   -1   7    1 7   -1  7    1  N N
+0 0 7   -1 7   +0   7    1 7   -0  7   -1  N N
+0 0 7   -0 7   +0   7    1 7   -0  7   -0  N N
+0 0 7   +0 7   -0   7    1 7   -0  7   +0  N N
+0 0 7    1 7   -0   7    1 7   -0  7    1  N N
+0 0 7   -1 7   -0   7    1 7   +0  7   -1  N N
+0 0 7   -0 7   -0   7    1 7   +0  7   -0  N N
+0 0 7   +0 7   +0   7    1 7   +0  7   +0  N N
+0 0 7    1 7   +0   7    1 7   +0  7    1  N N
+0 0 7   -1 7   -1   7    1 7    1  7   -1  N N
+0 0 7   -0 7   -0   7    1 7    1  7   -0  N N
+0 0 7   +0 7   +0   7    1 7    1  7   +0  N N
+0 0 7    1 7    1   7    1 7    1  7    1  N N
+
diff --git a/mpc/tests/neg.dat b/mpc/tests/neg.dat
new file mode 100644
index 0000000..fa30dbc
--- /dev/null
+++ b/mpc/tests/neg.dat
@@ -0,0 +1,111 @@
+# Data file for mpc_neg. 
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# see sin.dat for precisions
+
+# special values (following ISO C99 standard)
+0 0 53 +inf 53 +inf    53 -inf 53 -inf  N N
+0 0 53 +inf 53   +1    53 -inf 53   -1  N N
+0 0 53 +inf 53   +0    53 -inf 53   -0  N N
+0 0 53 +inf 53   -0    53 -inf 53   +0  N N
+0 0 53 +inf 53   -1    53 -inf 53   +1  N N
+0 0 53 +inf 53 -inf    53 -inf 53 +inf  N N
+0 0 53 +inf 53  nan    53 -inf 53  nan  N N
+0 0 53   +1 53 +inf    53   -1 53 -inf  N N
+0 0 53   +1 53   +0    53   -1 53   -0  N N
+0 0 53   +1 53   -0    53   -1 53   +0  N N
+0 0 53   +1 53 -inf    53   -1 53 +inf  N N
+0 0 53   +1 53  nan    53   -1 53  nan  N N
+0 0 53   +0 53 +inf    53   -0 53 -inf  N N
+0 0 53   +0 53   +1    53   -0 53   -1  N N
+0 0 53   +0 53   +0    53   -0 53   -0  N N
+0 0 53   +0 53   -0    53   -0 53   +0  N N
+0 0 53   +0 53   -1    53   -0 53   +1  N N
+0 0 53   +0 53 -inf    53   -0 53 +inf  N N
+0 0 53   +0 53  nan    53   -0 53  nan  N N
+0 0 53   -0 53 +inf    53   +0 53 -inf  N N
+0 0 53   -0 53   +1    53   +0 53   -1  N N
+0 0 53   -0 53   +0    53   +0 53   -0  N N
+0 0 53   -0 53   -0    53   +0 53   +0  N N
+0 0 53   -0 53   -1    53   +0 53   +1  N N
+0 0 53   -0 53 -inf    53   +0 53 +inf  N N
+0 0 53   -0 53  nan    53   +0 53  nan  N N
+0 0 53   -1 53 +inf    53   +1 53 -inf  N N
+0 0 53   -1 53   +0    53   +1 53   -0  N N
+0 0 53   -1 53   -0    53   +1 53   +0  N N
+0 0 53   -1 53 -inf    53   +1 53 +inf  N N
+0 0 53   -1 53  nan    53   +1 53  nan  N N
+0 0 53 -inf 53 +inf    53 +inf 53 -inf  N N
+0 0 53 -inf 53   +1    53 +inf 53   -1  N N
+0 0 53 -inf 53   +0    53 +inf 53   -0  N N
+0 0 53 -inf 53   -0    53 +inf 53   +0  N N
+0 0 53 -inf 53   -1    53 +inf 53   +1  N N
+0 0 53 -inf 53 -inf    53 +inf 53 +inf  N N
+0 0 53 -inf 53  nan    53 +inf 53  nan  N N
+0 0 53  nan 53 +inf    53  nan 53 -inf  N N
+0 0 53  nan 53   +1    53  nan 53   -1  N N
+0 0 53  nan 53   +0    53  nan 53   -0  N N
+0 0 53  nan 53   -0    53  nan 53   +0  N N
+0 0 53  nan 53   -1    53  nan 53   +1  N N
+0 0 53  nan 53 -inf    53  nan 53 +inf  N N
+0 0 53  nan 53  nan    53  nan 53  nan  N N
+
+# pure real argument
+0 0 53 -0x123456789abcdep+52  2 -0    53  0x123456789abcdep+52 17 +0 N N
+0 0 53  0x123456789abcdep+52  3 -0    54 -0x123456789abcdep+52 16 +0 Z N
+0 0 53 -0x123456789abcdep+52  4 +0    55  0x123456789abcdep+52 15 -0 U N
+0 0 53  0x123456789abcdep+52  5 +0    56 -0x123456789abcdep+52 14 -0 D N
+0 0 53 -0x123456789abcdep+52  6 -0    57  0x123456789abcdep+52 13 +0 Z Z
+0 0 53  0x123456789abcdep+52  7 -0    58 -0x123456789abcdep+52 12 +0 U Z
+0 0 53 -0x123456789abcdep+52  8 +0    59  0x123456789abcdep+52 11 -0 D Z
+0 0 53  0x123456789abcdep+52  9 +0    60 -0x123456789abcdep+52 10 -0 N Z
+0 0 53 -0x123456789abcdep+52 10 -0    61  0x123456789abcdep+52  9 +0 U U
+0 0 53  0x123456789abcdep+52 11 -0    62 -0x123456789abcdep+52  8 +0 D U
+0 0 53 -0x123456789abcdep+52 12 +0    63  0x123456789abcdep+52  7 -0 N U
+0 0 53  0x123456789abcdep+52 13 +0    64 -0x123456789abcdep+52  6 -0 Z U
+0 0 53 -0x123456789abcdep+52 14 -0    65  0x123456789abcdep+52  5 +0 D D
+0 0 53  0x123456789abcdep+52 15 -0    66 -0x123456789abcdep+52  4 +0 N D
+0 0 53 -0x123456789abcdep+52 16 +0    67  0x123456789abcdep+52  3 -0 Z D
+0 0 53  0x123456789abcdep+52 17 +0    68 -0x123456789abcdep+52  2 -0 U D
+
+# pure imaginary argument
+0 0 53 -0 53 -0x123456789abcdep+52    53 +0 53  0x123456789abcdep+52 N N
+0 0 53 +0 53 -0x123456789abcdep+52    51 -0 54  0x123456789abcdep+52 Z N
+0 0 53 -0 53  0x123456789abcdep+52    49 +0 55 -0x123456789abcdep+52 U N
+0 0 53 +0 53  0x123456789abcdep+52    47 -0 56 -0x123456789abcdep+52 D N
+0 0 53 -0 53 -0x123456789abcdep+52    45 +0 57  0x123456789abcdep+52 Z Z
+0 0 53 +0 53 -0x123456789abcdep+52    43 -0 58  0x123456789abcdep+52 U Z
+0 0 53 -0 53  0x123456789abcdep+52    41 +0 59 -0x123456789abcdep+52 D Z
+0 0 53 +0 53  0x123456789abcdep+52    39 -0 60 -0x123456789abcdep+52 N Z
+0 0 53 -0 53 -0x123456789abcdep+52    37 +0 61  0x123456789abcdep+52 U U
+0 0 53 +0 53 -0x123456789abcdep+52    35 -0 62  0x123456789abcdep+52 D U
+0 0 53 -0 53  0x123456789abcdep+52    33 +0 63 -0x123456789abcdep+52 N U
+0 0 53 +0 53  0x123456789abcdep+52    31 -0 64 -0x123456789abcdep+52 Z U
+0 0 53 -0 53 -0x123456789abcdep+52    29 +0 65  0x123456789abcdep+52 D D
+0 0 53 +0 53 -0x123456789abcdep+52    27 -0 66  0x123456789abcdep+52 N D
+0 0 53 -0 53  0x123456789abcdep+52    25 +0 67 -0x123456789abcdep+52 Z D
+0 0 53 +0 53  0x123456789abcdep+52    23 -0 68 -0x123456789abcdep+52 U D
+
diff --git a/mpc/tests/norm.dat b/mpc/tests/norm.dat
new file mode 100644
index 0000000..94cfb85
--- /dev/null
+++ b/mpc/tests/norm.dat
@@ -0,0 +1,81 @@
+# Data file for mpc_norm.
+#
+# Copyright (C) INRIA, 2008, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see abs.dat.
+
+# special values
+0 7 +inf   7 -inf 7 -inf N
+0 7 +inf   7 -inf 7   -1 N
+0 7 +inf   7 -inf 7   -0 N
+0 7 +inf   7 -inf 7   +0 N
+0 7 +inf   7 -inf 7    1 N
+0 7 +inf   7 -inf 7 +inf N
+0 7 +inf   7 -inf 7  nan N
+0 7 +inf   7   -1 7 -inf N
+0 7 +inf   7   -1 7 +inf N
+0 7  nan   7   -1 7  nan N
+0 7 +inf   7   -0 7 -inf N
+0 7 +inf   7   -0 7 +inf N
+0 7  nan   7   -0 7  nan N
+0 7 +inf   7   +0 7 -inf N
+0 7 +inf   7   +0 7 +inf N
+0 7  nan   7   +0 7  nan N
+0 7 +inf   7    1 7 -inf N
+0 7 +inf   7    1 7 +inf N
+0 7  nan   7    1 7  nan N
+0 7 +inf   7 +inf 7 -inf N
+0 7 +inf   7 +inf 7   -1 N
+0 7 +inf   7 +inf 7   -0 N
+0 7 +inf   7 +inf 7   +0 N
+0 7 +inf   7 +inf 7    1 N
+0 7 +inf   7 +inf 7 +inf N
+0 7 +inf   7 +inf 7  nan N
+0 7 +inf   7  nan 7 -inf N
+0 7  nan   7  nan 7   -1 N
+0 7  nan   7  nan 7   -0 N
+0 7  nan   7  nan 7   +0 N
+0 7  nan   7  nan 7    1 N
+0 7 +inf   7  nan 7 +inf N
+0 7  nan   7  nan 7  nan N
+
+# values with only 1, -1, +0, -0
+0 7    2   7   -1 7   -1 N
+0 7    1   7   -1 7   -0 N
+0 7    1   7   -1 7   +0 N
+0 7    2   7   -1 7    1 N
+0 7    1   7   -0 7   -1 N
+0 7   +0   7   -0 7   -0 N
+0 7   +0   7   -0 7   +0 N
+0 7    1   7   -0 7    1 N
+0 7    1   7   +0 7   -1 N
+0 7   +0   7   +0 7   -0 N
+0 7   +0   7   +0 7   +0 N
+0 7    1   7   +0 7    1 N
+0 7    2   7    1 7   -1 N
+0 7    1   7    1 7   -0 N
+0 7    1   7    1 7   +0 N
+0 7    2   7    1 7    1 N
+
+# overflow
++ 53 +inf  2 0x1p536870912 2 0x1p536870912 U
+
+# infinite loop reported by E. Thome
+- 250 +0 250 -0xf.fdda3457c3e69e5841461d505b42987feb42867a4a2d2872179c4efa20054c0@-136943039 250 -0xc.670d1beda685fdd771b6246e32ff49ec4fd70aec25367444e00933e6965d3c0@-136943040 N
diff --git a/mpc/tests/pow.dat b/mpc/tests/pow.dat
new file mode 100644
index 0000000..b746c9f
--- /dev/null
+++ b/mpc/tests/pow.dat
@@ -0,0 +1,440 @@
+# Data file for mpc_pow.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see add.dat.
+
+0 0 53   +1 53    0    53  nan 53   +0  53   +0 53   +0 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53   +0 53   +1 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53   +0 53   -1 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53   +1 53   +0 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53   +1 53   +1 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53   -1 53   +0 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53  nan 53   +0 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53 +inf 53   +0 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53 +inf 53   +1 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53 +inf 53   -1 N N 
+0 0 53  nan 53  nan    53  nan 53   +0  53 -inf 53   +0 N N 
+0 0 53  nan 53  nan    53 +inf 53   +0  53   +0 53   +1 N N 
+0 0 53  nan 53  nan    53 +inf 53   +0  53   +0 53   -1 N N 
+0 0 53  inf 53  nan    53 +inf 53   +0  53   +1 53   +0 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +0  53   +1 53   +1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +0  53   +1 53   -1 N N 
+0 0 53    0 53    0    53 +inf 53   +0  53   -1 53   +0 N N 
+0 0 53    0 53    0    53 +inf 53   +0  53   -1 53   +1 N N 
+0 0 53    0 53    0    53 +inf 53   +0  53   -1 53   -1 N N 
+0 0 53  nan 53  nan    53 +inf 53   +0  53  nan 53   +0 N N 
+0 0 53  nan 53  nan    53 +inf 53   +0  53  nan 53   +1 N N 
+0 0 53  nan 53  nan    53 +inf 53   +0  53  nan 53   -1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +0  53 +inf 53   +0 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +0  53 +inf 53   +1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +0  53 +inf 53   -1 N N 
+0 0 53    0 53    0    53 +inf 53   +0  53 -inf 53   +0 N N 
+0 0 53    0 53    0    53 +inf 53   +0  53 -inf 53   +1 N N 
+0 0 53    0 53    0    53 +inf 53   +0  53 -inf 53   -1 N N 
+0 0 53  nan 53  nan    53 +inf 53   +1  53   +0 53   +1 N N 
+0 0 53  nan 53  nan    53 +inf 53   +1  53   +0 53   -1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +1  53   +1 53   +0 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +1  53   +1 53   +1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +1  53   +1 53   -1 N N 
+0 0 53    0 53    0    53 +inf 53   +1  53   -1 53   +0 N N 
+0 0 53    0 53    0    53 +inf 53   +1  53   -1 53   +1 N N 
+0 0 53    0 53    0    53 +inf 53   +1  53   -1 53   -1 N N 
+0 0 53  nan 53  nan    53 +inf 53   +1  53  nan 53   +0 N N 
+0 0 53  nan 53  nan    53 +inf 53   +1  53  nan 53   +1 N N 
+0 0 53  nan 53  nan    53 +inf 53   +1  53  nan 53   -1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +1  53 +inf 53   +0 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +1  53 +inf 53   +1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   +1  53 +inf 53   -1 N N 
+0 0 53    0 53    0    53 +inf 53   +1  53 -inf 53   +0 N N 
+0 0 53    0 53    0    53 +inf 53   +1  53 -inf 53   +1 N N 
+0 0 53    0 53    0    53 +inf 53   +1  53 -inf 53   -1 N N 
+0 0 53  nan 53  nan    53 +inf 53   -1  53   +0 53   +1 N N 
+0 0 53  nan 53  nan    53 +inf 53   -1  53   +0 53   -1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   -1  53   +1 53   +0 N N 
+0 0 53 +inf 53  nan    53 +inf 53   -1  53   +1 53   +1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   -1  53   +1 53   -1 N N 
+0 0 53    0 53    0    53 +inf 53   -1  53   -1 53   +0 N N 
+0 0 53    0 53    0    53 +inf 53   -1  53   -1 53   +1 N N 
+0 0 53    0 53    0    53 +inf 53   -1  53   -1 53   -1 N N 
+0 0 53  nan 53  nan    53 +inf 53   -1  53  nan 53   +0 N N 
+0 0 53  nan 53  nan    53 +inf 53   -1  53  nan 53   +1 N N 
+0 0 53  nan 53  nan    53 +inf 53   -1  53  nan 53   -1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   -1  53 +inf 53   +0 N N 
+0 0 53 +inf 53  nan    53 +inf 53   -1  53 +inf 53   +1 N N 
+0 0 53 +inf 53  nan    53 +inf 53   -1  53 +inf 53   -1 N N 
+0 0 53    0 53    0    53 +inf 53   -1  53 -inf 53   +0 N N 
+0 0 53    0 53    0    53 +inf 53   -1  53 -inf 53   +1 N N 
+0 0 53    0 53    0    53 +inf 53   -1  53 -inf 53   -1 N N 
+0 0 53  nan 53  nan    53 -inf 53   +0  53   +0 53   +1 N N 
+0 0 53  nan 53  nan    53 -inf 53   +0  53   +0 53   -1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +0  53   +1 53   +0 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +0  53   +1 53   +1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +0  53   +1 53   -1 N N 
+0 0 53    0 53    0    53 -inf 53   +0  53   -1 53   +0 N N 
+0 0 53    0 53    0    53 -inf 53   +0  53   -1 53   +1 N N 
+0 0 53    0 53    0    53 -inf 53   +0  53   -1 53   -1 N N 
+0 0 53  nan 53  nan    53 -inf 53   +0  53  nan 53   +0 N N 
+0 0 53  nan 53  nan    53 -inf 53   +0  53  nan 53   +1 N N 
+0 0 53  nan 53  nan    53 -inf 53   +0  53  nan 53   -1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +0  53 +inf 53   +0 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +0  53 +inf 53   +1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +0  53 +inf 53   -1 N N 
+0 0 53    0 53    0    53 -inf 53   +0  53 -inf 53   +0 N N 
+0 0 53    0 53    0    53 -inf 53   +0  53 -inf 53   +1 N N 
+0 0 53    0 53    0    53 -inf 53   +0  53 -inf 53   -1 N N 
+0 0 53  nan 53  nan    53 -inf 53   +1  53   +0 53   +1 N N 
+0 0 53  nan 53  nan    53 -inf 53   +1  53   +0 53   -1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +1  53   +1 53   +0 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +1  53   +1 53   +1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +1  53   +1 53   -1 N N 
+0 0 53    0 53    0    53 -inf 53   +1  53   -1 53   +0 N N 
+0 0 53    0 53    0    53 -inf 53   +1  53   -1 53   +1 N N 
+0 0 53    0 53    0    53 -inf 53   +1  53   -1 53   -1 N N 
+0 0 53  nan 53  nan    53 -inf 53   +1  53  nan 53   +0 N N 
+0 0 53  nan 53  nan    53 -inf 53   +1  53  nan 53   +1 N N 
+0 0 53  nan 53  nan    53 -inf 53   +1  53  nan 53   -1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +1  53 +inf 53   +0 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +1  53 +inf 53   +1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   +1  53 +inf 53   -1 N N 
+0 0 53    0 53    0    53 -inf 53   +1  53 -inf 53   +0 N N 
+0 0 53    0 53    0    53 -inf 53   +1  53 -inf 53   +1 N N 
+0 0 53    0 53    0    53 -inf 53   +1  53 -inf 53   -1 N N 
+0 0 53  nan 53  nan    53 -inf 53   -1  53   +0 53   +1 N N 
+0 0 53  nan 53  nan    53 -inf 53   -1  53   +0 53   -1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   -1  53   +1 53   +0 N N 
+0 0 53 +inf 53  nan    53 -inf 53   -1  53   +1 53   +1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   -1  53   +1 53   -1 N N 
+0 0 53    0 53    0    53 -inf 53   -1  53   -1 53   +0 N N 
+0 0 53    0 53    0    53 -inf 53   -1  53   -1 53   +1 N N 
+0 0 53    0 53    0    53 -inf 53   -1  53   -1 53   -1 N N 
+0 0 53  nan 53  nan    53 -inf 53   -1  53  nan 53   +0 N N 
+0 0 53  nan 53  nan    53 -inf 53   -1  53  nan 53   +1 N N 
+0 0 53  nan 53  nan    53 -inf 53   -1  53  nan 53   -1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   -1  53 +inf 53   +0 N N 
+0 0 53 +inf 53  nan    53 -inf 53   -1  53 +inf 53   +1 N N 
+0 0 53 +inf 53  nan    53 -inf 53   -1  53 +inf 53   -1 N N 
+0 0 53    0 53    0    53 -inf 53   -1  53 -inf 53   +0 N N 
+0 0 53    0 53    0    53 -inf 53   -1  53 -inf 53   +1 N N 
+0 0 53    0 53    0    53 -inf 53   -1  53 -inf 53   -1 N N 
+
+0 0 53  nan 53  nan    53   +0 53   +0  53   +0 53   +0 N N 
+0 0 53  nan 53  nan    53   +0 53   +0  53   +0 53   +1 N N 
+0 0 53  nan 53  nan    53   +0 53   +0  53   +0 53   -1 N N 
+0 0 53    0 53    0    53   +0 53   +0  53   +1 53   +0 N N 
+0 0 53    0 53    0    53   +0 53   +0  53   +1 53   +1 N N 
+0 0 53    0 53    0    53   +0 53   +0  53   +1 53   -1 N N 
+0 0 53 +inf 53  nan    53   +0 53   +0  53   -1 53   +0 N N 
+0 0 53 +inf 53  nan    53   +0 53   +0  53   -1 53   +1 N N 
+0 0 53 +inf 53  nan    53   +0 53   +0  53   -1 53   -1 N N 
+0 0 53  nan 53  nan    53   +0 53   +0  53  nan 53   +0 N N 
+0 0 53  nan 53  nan    53   +0 53   +0  53  nan 53   +1 N N 
+0 0 53  nan 53  nan    53   +0 53   +0  53  nan 53   -1 N N 
+0 0 53    0 53    0    53   +0 53   +0  53 +inf 53   +0 N N 
+0 0 53    0 53    0    53   +0 53   +0  53 +inf 53   +1 N N 
+0 0 53    0 53    0    53   +0 53   +0  53 +inf 53   -1 N N 
+0 0 53 +inf 53  nan    53   +0 53   +0  53 -inf 53   +0 N N 
+0 0 53 +inf 53  nan    53   +0 53   +0  53 -inf 53   +1 N N 
+0 0 53 +inf 53  nan    53   +0 53   +0  53 -inf 53   -1 N N 
+
+# zeros with determined sign, see algorithms.tex
+# x^0 = +1 +sign(Im(x))*sign(Re(y))*0i when |x|=1
+0 0 53   +1 53   +0    53   +0 53   +1  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53   +0 53   +1  53   +0 53   +0 N D #round toward -oo
+0 0 53   +1 53   +0    53   -0 53   +1  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   -1 53   +0  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53   -1 53   -0  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53   -0 53   -1  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53   +0 53   -1  53   +0 53   +0 N N
+
+0 0 53   +1 53   +0    53   +0 53   +1  53   +0 53   -0 N N
+0 0 53   +1 53   +0    53   -0 53   +1  53   +0 53   -0 N N
+0 0 53   +1 53   +0    53   -1 53   +0  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53   -1 53   -0  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53   -0 53   -1  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53   +0 53   -1  53   +0 53   -0 N N
+
+0 0 53   +1 53   -0    53   +0 53   +1  53   -0 53   +0 N N
+0 0 53   +1 53   -0    53   -0 53   +1  53   -0 53   +0 N N
+0 0 53   +1 53   -0    53   -1 53   +0  53   -0 53   +0 N N
+0 0 53   +1 53   +0    53   -1 53   -0  53   -0 53   +0 N N
+0 0 53   +1 53   +0    53   -0 53   -1  53   -0 53   +0 N N
+0 0 53   +1 53   +0    53   +0 53   -1  53   -0 53   +0 N N
+
+0 0 53   +1 53   -0    53   +0 53   +1  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53   -0 53   +1  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53   -1 53   +0  53   -0 53   -0 N N
+0 0 53   +1 53   +0    53   -1 53   -0  53   -0 53   -0 N N
+0 0 53   +1 53   +0    53   -0 53   -1  53   -0 53   -0 N N
+0 0 53   +1 53   +0    53   +0 53   -1  53   -0 53   -0 N N
+
+# x^0 = +1 +sign(Im(y))*0i when |x| > 1
+0 0 53   +1 53   +0    53 +inf 53   +2  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53 +inf 53   -0  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   +2 53 +inf  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   +2 53   +0  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   +0 53   +2  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   +0 53 +inf  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   -0 53   +2  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   -0 53 +inf  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   -5 53 +inf  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53   -2 53   +0  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53 -inf 53   +0  53   +0 53   +0 N N
+0 0 53   +1 53   +0    53 -inf 53   +3  53   +0 53   +0 N N
+
+0 0 53   +1 53   -0    53 +inf 53 -inf  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53 +inf 53   +0  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53 +inf 53   -2  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53   +2 53   -5  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53   +5 53   +0  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53   +0 53 -inf  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53   -0 53 -inf  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53   -5 53   -0  53   +0 53   -0 N N 
+0 0 53   +1 53   -0    53 +inf 53   -0  53   +0 53   -0 N N
+0 0 53   +1 53   -0    53 +inf 53   -2  53   +0 53   -0 N N
+
+0 0 53   +1 53   +0    53 -inf 53 -inf  53   -0 53   +0 N N
+0 0 53   +1 53   +0    53 +inf 53   +0  53   -0 53   +0 N N
+0 0 53   +1 53   +0    53   +2 53   -5  53   -0 53   +0 N N
+0 0 53   +1 53   +0    53   +5 53   +0  53   -0 53   +0 N N 
+0 0 53   +1 53   +0    53   +5 53   -0  53   -0 53   +0 N N 
+0 0 53   +1 53   +0    53   +0 53   -2  53   -0 53   +0 N N
+0 0 53   +1 53   +0    53   -0 53   -2  53   -0 53   +0 N N
+0 0 53   +1 53   +0    53   -5 53   -0  53   -0 53   +0 N N 
+0 0 53   +1 53   +0    53 -inf 53   -0  53   -0 53   +0 N N
+
+0 0 53   +1 53   -0    53 +inf 53 +inf  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53   +2 53   +5  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53   +2 53   +0  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53   +2 53   -0  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53   +0 53   +2  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53   -0 53   +2  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53   -5 53   +2  53   -0 53   -0 N N 
+0 0 53   +1 53   -0    53   -5 53   +0  53   -0 53   -0 N N 
+0 0 53   +1 53   -0    53 -inf 53 +inf  53   -0 53   -0 N N
+0 0 53   +1 53   -0    53 -inf 53 +inf  53   -0 53   -0 N N
+
+# x^0 = +1 -sign(Im(y))*0i when 1 > |x| > 0
+0 0 53   +1 53   -0    53 +0.5 53 -0.5  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53 +0.5 53   +0  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53 +0.5 53   -0  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53 -0.5 53   -0  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53   +0 53 -0.5  53   +0 53   +0 N N
+0 0 53   +1 53   -0    53   -0 53 -0.5  53   +0 53   +0 N N
+
+0 0 53   +1 53   +0    53 +0.5 53 +0.5  53   +0 53   -0 N N
+0 0 53   +1 53   +0    53 +0.5 53   +0  53   +0 53   -0 N N
+0 0 53   +1 53   +0    53 +0.5 53   -0  53   +0 53   -0 N N
+0 0 53   +1 53   +0    53 -0.5 53   +0  53   +0 53   -0 N N
+0 0 53   +1 53   +0    53   +0 53 +0.5  53   +0 53   -0 N N
+0 0 53   +1 53   +0    53   -0 53 +0.5  53   +0 53   -0 N N
+
+0 0 53   +1 53   -0    53 +0.5 53 +0.5  53   -0 53   +0 N N
+0 0 53   +1 53   -0    53 +0.5 53   +0  53   -0 53   +0 N N
+0 0 53   +1 53   -0    53 +0.5 53   -0  53   -0 53   +0 N N
+0 0 53   +1 53   -0    53 -0.5 53   -0  53   -0 53   +0 N N
+0 0 53   +1 53   -0    53   +0 53 +0.5  53   -0 53   +0 N N
+0 0 53   +1 53   -0    53   -0 53 +0.5  53   -0 53   +0 N N
+
+0 0 53   +1 53   +0    53 +0.5 53 -0.5  53   -0 53   -0 N N
+0 0 53   +1 53   +0    53 +0.5 53   +0  53   -0 53   -0 N N
+0 0 53   +1 53   +0    53 +0.5 53   -0  53   -0 53   -0 N N
+0 0 53   +1 53   +0    53 -0.5 53   -0  53   -0 53   -0 N N
+0 0 53   +1 53   +0    53   +0 53 -0.5  53   -0 53   -0 N N
+0 0 53   +1 53   +0    53   -0 53 -0.5  53   -0 53   -0 N N
+
+# determined sign of imaginary part in pure real powers
+0 0 53   +9 53   +0    53   +3 53   +0  53   +2 53   +0 N N
+0 0 53   +9 53   -0    53   +3 53   -0  53   +2 53   -0 N N
+0 0 53 0.25 53   +0    53   +2 53   -0  53   -2 53   +0 N N
+0 0 53 0.25 53   -0    53   +2 53   +0  53   -2 53   -0 N N
+0 0 53   +1 53   +0    53   +1 53   +0  53   +4 53   +0 N N
+0 0 53   +1 53   +0    53   +1 53   +0  53   +4 53   -0 N N
+0 0 53   +1 53   -0    53   +1 53   -0  53   +4 53   +0 N N
+0 0 53   +1 53   -0    53   +1 53   -0  53   +4 53   -0 N N
+0 0 53   +1 53   +0    53   +1 53   -0  53   -4 53   +0 N N
+0 0 53   +1 53   +0    53   +1 53   -0  53   -4 53   -0 N N
+0 0 53   +1 53   -0    53   +1 53   +0  53   -4 53   +0 N N
+0 0 53   +1 53   -0    53   +1 53   +0  53   -4 53   -0 N N
+0 0 53 0.25 53   +0    53 +0.5 53   +0  53   +2 53   -0 N N
+0 0 53 0.25 53   -0    53 +0.5 53   -0  53   +2 53   +0 N N
+0 0 53   +4 53   +0    53 +0.5 53   -0  53   -2 53   -0 N N
+0 0 53   +4 53   -0    53 +0.5 53   +0  53   -2 53   +0 N N
+
+
+# pure real power with nondetermined sign in imaginary part
+0 0 53    1 53    0    53   +2 53   -1  53   +0 53   +0 N N
+0 0 53    1 53    0    53   -2 53   -1  53   +0 53   +0 N N
+0 0 53    1 53    0    53   -2 53   -0  53   +0 53   +0 N N
+0 0 53    1 53    0    53 +0.5 53 +0.5  53   +0 53   +0 N N
+0 0 53    1 53    0    53 -0.5 53 +0.5  53   +0 53   +0 N N
+0 0 53    1 53    0    53 -0.5 53   +0  53   +0 53   +0 N N
+0 0 53    1 53    0    53   +0 53 +0.5  53   +0 53   +0 N N
+0 0 53    1 53    0    53   -0 53 +0.5  53   +0 53   +0 N N
+0 0 53    1 53    0    53   -0 53   -4  53   +0 53   +0 N N
+0 0 53    1 53    0    53   +0 53   -4  53   +0 53   +0 N N
+0 0 53    1 53    0    53   -1 53   -0  53   +0 53   +0 N N
+0 0 53    1 53    0    53   -1 53   +0  53   +0 53   +0 N N
+0 0 53    1 53    0    53   +2 53   -1  53   -0 53   -0 N N
+0 0 53    1 53    0    53   -2 53   -1  53   -0 53   -0 N N
+0 0 53    1 53    0    53   -2 53   -0  53   -0 53   -0 N N
+0 0 53    1 53    0    53 +0.5 53 +0.5  53   -0 53   -0 N N
+0 0 53    1 53    0    53 -0.5 53 +0.5  53   -0 53   -0 N N
+0 0 53    1 53    0    53 -0.5 53   +0  53   -0 53   -0 N N
+0 0 53    1 53    0    53   +0 53 +0.5  53   -0 53   -0 N N
+0 0 53    1 53    0    53   -0 53 +0.5  53   -0 53   -0 N N
+0 0 53    1 53    0    53   -0 53   -4  53   -0 53   -0 N N
+0 0 53    1 53    0    53   +0 53   -4  53   -0 53   -0 N N
+0 0 53    1 53    0    53   -1 53   -0  53   -0 53   -0 N N
+0 0 53    1 53    0    53   -1 53   +0  53   -0 53   -0 N N
+0 0 53    1 53    0    53   +2 53   +1  53   -0 53   +0 N N
+0 0 53    1 53    0    53   -2 53   +1  53   -0 53   +0 N N
+0 0 53    1 53    0    53   -2 53   +0  53   -0 53   +0 N N
+0 0 53    1 53    0    53 +0.5 53 -0.5  53   -0 53   +0 N N
+0 0 53    1 53    0    53 -0.5 53 -0.5  53   -0 53   +0 N N
+0 0 53    1 53    0    53 -0.5 53   -0  53   -0 53   +0 N N
+0 0 53    1 53    0    53   +0 53   +5  53   -0 53   +0 N N
+0 0 53    1 53    0    53   -0 53   +5  53   -0 53   +0 N N
+0 0 53    1 53    0    53   -0 53 -0.5  53   -0 53   +0 N N
+0 0 53    1 53    0    53   +0 53 -0.5  53   -0 53   +0 N N
+0 0 53    1 53    0    53   -1 53   -0  53   -0 53   +0 N N
+0 0 53    1 53    0    53   -1 53   +0  53   -0 53   +0 N N
+0 0 53    1 53    0    53   +2 53   +1  53   +0 53   -0 N N
+0 0 53    1 53    0    53   -2 53   +1  53   +0 53   -0 N N
+0 0 53    1 53    0    53   -2 53   +0  53   +0 53   -0 N N
+0 0 53    1 53    0    53 +0.5 53 -0.5  53   +0 53   -0 N N
+0 0 53    1 53    0    53 -0.5 53 -0.5  53   +0 53   -0 N N
+0 0 53    1 53    0    53 -0.5 53   -0  53   +0 53   -0 N N
+0 0 53    1 53    0    53   +0 53   +5  53   +0 53   -0 N N
+0 0 53    1 53    0    53   -0 53   +5  53   +0 53   -0 N N
+0 0 53    1 53    0    53   -0 53 -0.5  53   +0 53   -0 N N
+0 0 53    1 53    0    53   +0 53 -0.5  53   +0 53   -0 N N
+0 0 53    1 53    0    53   -1 53   -0  53   +0 53   -0 N N
+0 0 53    1 53    0    53   -1 53   +0  53   +0 53   -0 N N
+
+0 0 53    4 53    0    53   +2 53   -0  53   +2 53   +0 N N
+0 0 53    1 53    0    53   +1 53   +0  53   +2 53   +0 N N
+0 0 53    1 53    0    53   +1 53   +0  53   +2 53   -0 N N
+0 0 53    4 53    0    53   +2 53   +0  53   +2 53   -0 N N
+0 0 53    1 53    0    53   +1 53   -0  53   +2 53   +0 N N
+0 0 53    1 53    0    53   +1 53   -0  53   +2 53   -0 N N
+0 0 53 +.25 53    0    53   +2 53   +0  53   -2 53   +0 N N
+0 0 53    1 53    0    53   +1 53   +0  53   -2 53   +0 N N
+0 0 53    1 53    0    53   +1 53   +0  53   -2 53   -0 N N
+0 0 53 +.25 53    0    53   +2 53   -0  53   -2 53   -0 N N
+0 0 53    1 53    0    53   +1 53   -0  53   -2 53   +0 N N
+0 0 53    1 53    0    53   +1 53   -0  53   -2 53   -0 N N
+
+# when (+/-1 +/-0i)^y is pure real
+0 0 53                     1 53  0      53 +1 53 -0    53 -2 53 +1 N N
+0 0 53                     1 53  0      53 +1 53 -0    53 -1 53 +2 N N
+0 0 53                     1 53  0      53 +1 53 -0    53 -0 53 +1 N N
+- 0 53 +0x10BBEEE9177E19p-43 53  0      53 -1 53 -0    53 -0 53 +2 N N
++ 0 53 +0x1E989F5D6DFF5Cp-62 53  0      53 -1 53 +0    53 +0 53 +2 N N
+0 0 53                     1 53  0      53 +1 53 +0    53 +0 53 +2 N N
+0 0 53                     1 53  0      53 +1 53 +0    53 +2 53 +2 N N
+0 0 53                     1 53  0      53 +1 53 +0    53 +0 53 +2 N N
+0 0 53                     1 53  0      53 +1 53 +0    53 -1 53 -1 N N
+0 0 53                     1 53  0      53 +1 53 +0    53 -0 53 -1 N N
++ 0 53 +0x1724046EB0933Ap-48 53  0      53 -1 53 +0    53 -0 53 -1 N N
+0 0 53                     1 53  0      53 +1 53 -0    53 +0 53 -1 N N
++ 0 53 +0x1620227B598EF9p-57 53  0      53 -1 53 -0    53 +0 53 -1 N N
+0 0 53                     1 53  0      53 +1 53 -0    53 +2 53 -3 N N
++ 0 53 +0x1D4102BC3F7D4Cp-71 53  0      53 -1 53 +0    53 +0 53 +4 N N
++ 0 53 +0x1724046EB0933Ap-48 53  0      53 -1 53 -0    53 -0 53 +1 N N
+
+# when (0 +/-i)^y is pure real
++ 0 53 +0x1724046EB0933Ap-48 53  0      53 -0 53 -1    53 -0 53 +2 N N
+- 0 53 +0x1BD4567B975381p-46 53  0      53 +0 53 -1    53 -0 53 +3 N N
++ 0 53 +0x1620227B598EF9p-57 53  0      53 +0 53 +1    53 +0 53 +2 N N
+- 0 53 +0x1265D4E92B6B9Bp-59 53  0      53 -0 53 +1    53 +0 53 +3 N N
++ 0 53 +0x1724046EB0933Ap-48 53  0      53 +0 53 +1    53 -0 53 -2 N N
+- 0 53 +0x1BD4567B975381p-46 53  0      53 -0 53 +1    53 -0 53 -3 N N
+- 0 53 +0x1A9BCC46F767DFp-55 53  0      53 +0 53 -1    53 +0 53 -1 N N
++ 0 53 +0x1620227B598EF9p-57 53  0      53 -0 53 -1    53 +0 53 -2 N N
+
+# exact cases
+# (-4)^(1/4) = 1+i
+0 0 2 1 2 1 2 -4 2 0 2 0x1p-2 2 0 N N
+# for an odd positive integer n, a positive integer m and an integer e:
+# (-4 m^4 16^e)^(n/4) = (1+i)^n m^n 2^(e n)
+# m=3 e=5 n=7
+0 0 12 0x88Bp38 12 -0x88Bp38 7 -0x51p22 7 0 3 0x7p-2 3 0 N N
+# (-4 16^e)^(-n/4)    = (1-i)^n 2^(- (e+1) n)
+# e=3 n=5
+0 0 2 -0x1p-18 2 0x1p-18 2 -0x1p14 2 0 3 -0x5p-2 3 0 N N
+# e=2 n=5
+0 0 2 -0x1p-13 2 0x1p-13 2 -0x1p10 2 0 3 -0x5p-2 3 0 N N
+# (+2 +0)^(-3 -0) -> (-1/8 -0)
+# x = 2 + epsilon*i, y = -3 - delta*i
+# log(x) = log(2) + epsilon/2*i + O(epsilon^2)
+# y*log(x) = [-3*log(2) + o(1)] + [-3*epsilon/2-delta*log(2)]*i
+0 0    2 0x1p-3 2 -0    2 2 2 +0    2 -3 2 -0    N N
+# (-2 -0)^(3 +0) -> (-8 -0)
+# x = -2 - epsilon*i, y = 3 + delta*i
+# log(x) = log(2) - [Pi-epsilon/2]*i + O(epsilon^2)
+# y*log(x) ~ 3*log(2) + [-3*Pi+3*epsilon/2+delta*log(2)]*i
+0 0    2 -8 2 -0    2 -2 2 -0    2 3 2 +0    N N
+# (-2 -0)^(-3 -0) -> (-1/8 +0)
+# x = -2 - epsilon*i, y = -3 - delta*i
+# log(x) = log(2) - [Pi-epsilon/2]*i + O(epsilon^2)
+# y*log(x) ~ -3*log(2) + [3*Pi-3*epsilon/2-delta*log(2)]*i
+0 0  2              -0x1p-3  2                    +0      2 -2  2                  -0   2           -3  2 -0 N N
+0 0  2                   +0  2                    -2      2 +0  2              0x1p-1   2           -1  2 -0 N N
+0 0  2                   +0  2                    -2      2 +0  2              0x1p-1   65           -1  2 -0 N N
++ + 2 -0x3p-64 2 -2  2 +0 2 0x1p-1  65 -0x10000000000000001p-64 2 -0  N N
+
+0 -  2                   +0  3                    -5      2 +0 53 0xCCCCCCCCCCCCDp-54   2           -1  2 -0 N N
+# undefined zero sign in result
+- 0  5                  -25  2                     0      2 +0 53 0xCCCCCCCCCCCCDp-54   2           -2  2 -0 N N
+
+- - 53 -0x85649E3220691p-63 53 -0x14A25D455A9D0Dp-60      3  5  2                   3   2           -3  2 +0 N N
++ 0 53  0xABCC77118461Dp-74  2                    +0      3  5  3                   5   2           -8  2 +0 N N
+
++ 0 53 -0x127DB86014739Dp-93 2                    -0      2 -1  2                  -0   2            1  4 -9 N N
++ + 24  0xC1F98Dp-21        24           0x12FF89p-2     24 -7 24                  +0  24 0xCFFFF3p-21 24 +0 N N
+# underflow case
+- - 24 +0 24 +0 24 2 24 0x44CCCDp-20 24 -0x7FFFF200 24 -0x7FFFF200 N N
+- 0 53 0x14D55AFA6E0BB0p210433620 53 0 53 +0 53 0x44CCCCFFFFFFFp-48 53 0x5F5E100 53 +0 N N
+- 0 53 0x14D55B174EE67Ep210433620 53 0 53 +0 53 0x44CCCDp-20 53 0x5F5E100 53 +0 N N
+0 0 24 -10 24 198 24 5 24 3 24 3 24 +0 N N
++ - 113 0x1731C86FF8E8C7D80C8F1C83460B7p-38951 113 0x1CE5ECB8E88C769AF45FA662568CFp-38950 113 2 113 0x11333333333333333333333333333p-110 113 -10000 113 10000 N N
+- - 652 0x8E0380781E0124C92903E153123260CEF2C8821EDEC1D518A270FD55720DB5114D3D72CEE0E51CCEAA532FC6DA983707E66AE0E1A5E116D72AF5F2420D8402BE3E7FF03658E7ADFE2667C67291D74877383p-651 652 -0xB5FECD07C42E7AEE5A3489729B566DB4C6284C575E281585B0BFA711859D178BD8B07352B58BF615DD2DEC68798F0D2A644D5D18149D12BC53F851C5908F1EDE1C71F2B8D4934B1CE932AB94C0B8AE54C73p-665 163 0x5E9BDCC756D1E864413EA56F2A35C6D7D58DD117Bp-158 163 -0xE6BCC7A0E6EC5F2B1CBCF2707D829C2CB1A56FCFp-164 163 0x21A13BA8E157F23649FC27B031EAA12B826FB7E9Dp-166 163 0 N N
+0 0 2 0 2 1 2 -1 2 0 2 0x1p-1 2 0 N N
++ + 2 -0x3p-65 2 1 2 -1 2 0 65 0x10000000000000001p-65 2 0 N N
+0 0 2 1 2 +0 65 0x10000000000000001p-64 2 +0 2 +0 2 +0 N N
+0 0 2 1 2 -0 65 0xFFFFFFFFFFFFFFFFp-64 2 +0 2 +0 2 +0 N N
+0 + 2 +0 2 0.75 2 -0.5 2 0 2 0.5 2 0 N N
+0 0 2 0 2 2 2 1 2 1 2 2 2 +0 N N
+# I^2 = -1
+0 0 2 -1 2 +0 2 +0 2 1 2 2 2 +0 N N
++ 0 2 -1 2 +0 2 +0 65 0x10000000000000001p-64 2 2 2 +0 N N
+
+# overflow cases
+- - 2 -inf 2 -inf 2 3 2 1 28 744261116 2 +0 N N
+- + 2 -inf 2 +inf 2 3 2 -1 28 744261116 2 +0 N N
++ + 2 +inf 2 +inf 2 4 2 3 28 744261116 2 +0 N N
++ - 2 +inf 2 -inf 2 4 2 -3 28 744261116 2 +0 N N
+
+# underflow cases
++ - 2 -0 2 +0 2 3 2 1 28 -744261116 2 +0 N N
++ + 2 -0 2 -0 2 3 2 -1 28 -744261116 2 +0 N N
+- + 2 +0 2 -0 2 4 2 3 28 -744261116 2 +0 N N
+- - 2 +0 2 +0 2 4 2 -3 28 -744261116 2 +0 N N
diff --git a/mpc/tests/pow_ui.dat b/mpc/tests/pow_ui.dat
new file mode 100644
index 0000000..e961051
--- /dev/null
+++ b/mpc/tests/pow_ui.dat
@@ -0,0 +1,97 @@
+# Data file for mpc_pow_ui.
+#
+# Copyright (C) INRIA, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE INEX_IM PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP1_RE  OP1_RE  PREC_OP1_IM  OP1_IM  OP2  RND_RE  RND_IM
+#
+# For further details, see add_fr.dat.
+
+# special cases, copied from pow.dat
+0 0 53   +1 53    0    53  nan 53   +0  +0 N N
+0 0 53  nan 53  nan    53  nan 53   +0  +1 N N
+0 0 53  inf 53  nan    53 +inf 53   +0  +1 N N
+0 0 53 +inf 53  nan    53 +inf 53   +1  +1 N N
+0 0 53 +inf 53  nan    53 +inf 53   -1  +1 N N
+0 0 53 +inf 53  nan    53 -inf 53   +0  +1 N N
+0 0 53 +inf 53  nan    53 -inf 53   +1  +1 N N
+0 0 53 +inf 53  nan    53 -inf 53   -1  +1 N N
+
+0 0 53  nan 53  nan    53   +0 53   +0  +0 N N
+0 0 53    0 53    0    53   +0 53   +0  +1 N N
+
+0 0 53   +1 53   +0    53   +0 53   +1  +0 N N
+0 0 53   +1 53   -0    53   +0 53   +1  +0 N D
+0 0 53   +1 53   +0    53   -0 53   +1  +0 N N
+0 0 53   +1 53   +0    53   -1 53   +0  +0 N N
+0 0 53   +1 53   -0    53   -1 53   -0  +0 N N
+0 0 53   +1 53   -0    53   -0 53   -1  +0 N N
+0 0 53   +1 53   -0    53   +0 53   -1  +0 N N
+
+0 0 53   +1 53   +0    53 +inf 53   +2  +0 N N
+0 0 53   +1 53   +0    53 +inf 53   -0  +0 N N
+0 0 53   +1 53   +0    53   +2 53 +inf  +0 N N
+0 0 53   +1 53   +0    53   +2 53   +0  +0 N N
+0 0 53   +1 53   +0    53   +0 53   +2  +0 N N
+0 0 53   +1 53   +0    53   +0 53 +inf  +0 N N
+0 0 53   +1 53   +0    53   -0 53   +2  +0 N N
+0 0 53   +1 53   +0    53   -0 53 +inf  +0 N N
+0 0 53   +1 53   +0    53   -5 53 +inf  +0 N N
+0 0 53   +1 53   +0    53   -2 53   +0  +0 N N
+0 0 53   +1 53   +0    53 -inf 53   +0  +0 N N
+0 0 53   +1 53   +0    53 -inf 53   +3  +0 N N
+0 0 53   +1 53   -0    53 +0.5 53 -0.5  +0 N N
+0 0 53   +1 53   -0    53 +0.5 53   +0  +0 N N
+0 0 53   +1 53   -0    53 +0.5 53   -0  +0 N N
+0 0 53   +1 53   -0    53 -0.5 53   -0  +0 N N
+0 0 53   +1 53   -0    53   +0 53 -0.5  +0 N N
+0 0 53   +1 53   -0    53   -0 53 -0.5  +0 N N
+0 0 53   +9 53   +0    53   +3 53   +0  +2 N N
+0 0 53   +1 53   +0    53   +1 53   +0  +4 N N
+0 0 53   +1 53   -0    53   +1 53   -0  +4 N N
+0 0 53 0.25 53   -0    53 +0.5 53   -0  +2 N N
+
+0 0 53    1 53    0    53   +2 53   -1  +0 N N
+0 0 53    1 53    0    53   -2 53   -1  +0 N N
+0 0 53    1 53    0    53   -2 53   -0  +0 N N
+0 0 53    1 53    0    53 +0.5 53 +0.5  +0 N N
+0 0 53    1 53    0    53 -0.5 53 +0.5  +0 N N
+0 0 53    1 53    0    53 -0.5 53   +0  +0 N N
+0 0 53    1 53    0    53   +0 53 +0.5  +0 N N
+0 0 53    1 53    0    53   -0 53 +0.5  +0 N N
+0 0 53    1 53    0    53   -0 53   -4  +0 N N
+0 0 53    1 53    0    53   +0 53   -4  +0 N N
+0 0 53    1 53    0    53   -1 53   -0  +0 N N
+0 0 53    1 53    0    53   -1 53   +0  +0 N N
+
+0 0 53    4 53    0    53   +2 53   -0  +2 N N
+0 0 53    1 53    0    53   +1 53   +0  +2 N N
+0 0 53    1 53    0    53   +1 53   -0  +2 N N
+
+# overflow
+? ? 53 +inf 53 +inf    53 1e100000000  53 1e100000000   1000000000 N N
+# underflow
+? ? 53    0 53    0    53 1e-100000000 53 1e-100000000  1000000000 N N
+# cannot round after one loop
+? ? 420  -0x1.c3fb41a71665f9a144927e70cbc2dc899e9e30880c0b5aa924ad8a538b4cd06e503f38bdbb7cfcfded29f7504fe0c91ecd4230984@-187 420 -0xc.82a09ac98133eb05b2643c98eb1c8e1a1609e75f682b14098176abd6c8b4b3c6c72dadaf8929f9bd87f8c78d03361bacb9fb13140@-292  420 0x1.cf13ce58adc4e639fd1c3063ffc9291433647999951bc04ba6797ec4de0335336ad0a28df18573d3b6322ebab662c08eadaed4a8e@-8 420 0x3.cf71d602ca6f754ebd6af522154f3ee1c46da0a52deb1f60016fca4b1e0b4b447b752169e837bb1866aa3734850cd158a7e3ca33c@-9  24 N N
+# exact result
+0 0  5 -9 5 46  5 3 5 2  3 D U
diff --git a/mpc/tests/proj.dat b/mpc/tests/proj.dat
new file mode 100644
index 0000000..e5b1727
--- /dev/null
+++ b/mpc/tests/proj.dat
@@ -0,0 +1,75 @@
+# Data file for mpc_proj.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_RE  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# see sin.dat for precisions
+
+# special values (following ISO C99 standard)
+0 0 53 +inf 53   -0    53 -inf 53 -inf  N N
+0 0 53 +inf 53   -0    53 -inf 53   -1  N N
+0 0 53 +inf 53   -0    53 -inf 53   -0  N N
+0 0 53 +inf 53   +0    53 -inf 53   +0  N N
+0 0 53 +inf 53   +0    53 -inf 53   +1  N N
+0 0 53 +inf 53   +0    53 -inf 53 +inf  N N
+0 0 53 +inf 53    0    53 -inf 53  nan  N N
+0 0 53 +inf 53   -0    53   -1 53 -inf  N N
+0 0 53   -1 53   -0    53   -1 53   -0  N N
+0 0 53   -1 53   +0    53   -1 53   +0  N N
+0 0 53 +inf 53   +0    53   -1 53 +inf  N N
+0 0 53   -1 53  nan    53   -1 53  nan  N N
+0 0 53 +inf 53   -0    53   -0 53 -inf  N N
+0 0 53   -0 53   -1    53   -0 53   -1  N N
+0 0 53   -0 53   -0    53   -0 53   -0  N N
+0 0 53   -0 53   +0    53   -0 53   +0  N N
+0 0 53   -0 53   +1    53   -0 53   +1  N N
+0 0 53 +inf 53   +0    53   -0 53 +inf  N N
+0 0 53   -0 53  nan    53   -0 53  nan  N N
+0 0 53 +inf 53   -0    53   +0 53 -inf  N N
+0 0 53   +0 53   -1    53   +0 53   -1  N N
+0 0 53   +0 53   -0    53   +0 53   -0  N N
+0 0 53   +0 53   +0    53   +0 53   +0  N N
+0 0 53   +0 53   +1    53   +0 53   +1  N N
+0 0 53 +inf 53   +0    53   +0 53 +inf  N N
+0 0 53   +0 53  nan    53   +0 53  nan  N N
+0 0 53 +inf 53   -0    53   +1 53 -inf  N N
+0 0 53   +1 53   -0    53   +1 53   -0  N N
+0 0 53   +1 53   +0    53   +1 53   +0  N N
+0 0 53 +inf 53   +0    53   +1 53 +inf  N N
+0 0 53   +1 53  nan    53   +1 53  nan  N N
+0 0 53 +inf 53   -0    53 +inf 53 -inf  N N
+0 0 53 +inf 53   -0    53 +inf 53   -1  N N
+0 0 53 +inf 53   -0    53 +inf 53   -0  N N
+0 0 53 +inf 53   +0    53 +inf 53   +0  N N
+0 0 53 +inf 53   +0    53 +inf 53   +1  N N
+0 0 53 +inf 53   +0    53 +inf 53 +inf  N N
+0 0 53 +inf 53    0    53 +inf 53  nan  N N
+0 0 53 +inf 53   -0    53  nan 53 -inf  N N
+0 0 53  nan 53   -1    53  nan 53   -1  N N
+0 0 53  nan 53   -0    53  nan 53   -0  N N
+0 0 53  nan 53   +0    53  nan 53   +0  N N
+0 0 53  nan 53   +1    53  nan 53   +1  N N
+0 0 53 +inf 53   +0    53  nan 53 +inf  N N
+0 0 53  nan 53  nan    53  nan 53  nan  N N
+
diff --git a/mpc/tests/random.c b/mpc/tests/random.c
new file mode 100644
index 0000000..3bd9694
--- /dev/null
+++ b/mpc/tests/random.c
@@ -0,0 +1,165 @@
+/* Handle seed for random numbers.
+
+Copyright (C) INRIA, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+/* Put test_start at the beginning of your test function and
+   test_end at the end.
+   These are an adaptation of those of MPFR. */
+
+#include <stdlib.h>
+
+#include "mpc-tests.h"
+
+#include "config.h"
+
+#ifdef TIME_WITH_SYS_TIME
+# include <sys/time.h>
+# include <time.h>
+#else
+# ifdef HAVE_SYS_TIME_H
+#  include <sys/time.h>
+# else
+#  include <time.h>
+# endif
+#endif
+
+gmp_randstate_t  rands;
+char             rands_initialized;
+
+void
+test_start (void)
+{
+  char *environment_seed;
+  unsigned long seed;
+
+  tests_memory_start ();
+
+  if (rands_initialized)
+    {
+      fprintf (stderr,
+               "Put test_start at the beginning of your test function.\n");
+      exit (1);
+    }
+
+  gmp_randinit_default (rands);
+  rands_initialized = 1;
+
+  environment_seed = getenv ("GMP_CHECK_RANDOMIZE");
+  if (environment_seed == NULL)
+      gmp_randseed_ui (rands, 0xfac11e);
+  else
+    {
+      seed = (unsigned long int) atoi (environment_seed);
+      if (seed == 0 || seed == 1)
+        {
+#if defined HAVE_GETTIMEOFDAY
+          struct timeval  tv;
+          gettimeofday (&tv, NULL);
+          seed = (unsigned long int) (tv.tv_sec + tv.tv_usec);
+#else
+          time_t  tv;
+          time (&tv);
+          seed = (unsigned long int) tv;
+#endif
+          gmp_randseed_ui (rands, seed);
+          printf ("Seed GMP_CHECK_RANDOMIZE=%lu "
+                  "(include this in bug reports)\n", seed);
+        }
+      else
+        {
+          printf ("Re-seeding with GMP_CHECK_RANDOMIZE=%lu\n", seed);
+          gmp_randseed_ui (rands, seed);
+        }
+    }
+}
+
+void
+test_end (void)
+{
+  if (rands_initialized)
+    {
+      rands_initialized = 0;
+      gmp_randclear (rands);
+    }
+  mpfr_free_cache ();
+  tests_memory_end ();
+}
+
+/* Set z to a non zero value random value with absolute values of Re(z) and
+   Im(z) either zero (but not both in the same time) or otherwise greater than
+   or equal to 2^{emin-1} and less than 2^emax.
+   Each part is negative with probability equal to NEGATIVE_PROBABILITY / 256.
+   The result has one zero part (but never the two of them) with probability
+   equal to ZERO_PROBABILITY / 256.
+*/
+void
+test_default_random (mpc_ptr z, mpfr_exp_t emin, mpfr_exp_t emax,
+                     unsigned int negative_probability,
+                     unsigned int zero_probability)
+{
+  const unsigned long range = (unsigned long int) (emax - emin) + 1;
+  unsigned long r;
+
+  if (!rands_initialized)
+    {
+      fprintf (stderr,
+               "Put test_start at the beginning of your test function.\n");
+      exit (1);
+    }
+
+  do
+    {
+      mpc_urandom (z, rands);
+    } while (mpfr_zero_p (MPC_RE (z)) || mpfr_zero_p (MPC_IM (z)));
+
+  if (zero_probability > 256)
+    zero_probability = 256;
+  r = gmp_urandomb_ui (rands, 19);
+  if ((r & 0x1FF) < zero_probability
+      || ((r >> 9) & 0x1FF) < zero_probability)
+    {
+      int zero_re_p = (r & 0x1FF) < zero_probability;
+      int zero_im_p = ((r >> 9) & 0x1FF) < zero_probability;
+
+      if (zero_re_p && zero_im_p)
+        {
+          /* we just want one zero part. */
+          zero_re_p = (r >> 18) & 1;
+          zero_im_p = !zero_re_p;
+        }
+      if (zero_re_p)
+        mpfr_set_ui (MPC_RE (z), 0, GMP_RNDN);
+      if (zero_im_p)
+        mpfr_set_ui (MPC_IM (z), 0, GMP_RNDN);
+    }
+  if (!mpfr_zero_p (MPC_RE (z)))
+    mpfr_set_exp (MPC_RE (z), (mpfr_exp_t) gmp_urandomm_ui (rands, range) + emin);
+
+  if (!mpfr_zero_p (MPC_IM (z)))
+    mpfr_set_exp (MPC_IM (z), (mpfr_exp_t) gmp_urandomm_ui (rands, range) + emin);
+
+  if (negative_probability > 256)
+    negative_probability = 256;
+  r = gmp_urandomb_ui (rands, 16);
+  if ((r & 0xFF) < negative_probability)
+    mpfr_neg (MPC_RE (z), MPC_RE (z), GMP_RNDN);
+  if (((r>>8) & 0xFF) < negative_probability)
+    mpfr_neg (MPC_IM (z), MPC_IM (z), GMP_RNDN);
+}
diff --git a/mpc/tests/read_data.c b/mpc/tests/read_data.c
new file mode 100644
index 0000000..3d70589
--- /dev/null
+++ b/mpc/tests/read_data.c
@@ -0,0 +1,889 @@
+/* Read data file and check function.
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include <string.h>
+#include "mpc-tests.h"
+
+char *pathname;
+unsigned long line_number;
+   /* file name with complete path and currently read line;
+      kept globally to simplify parameter passing */
+unsigned long test_line_number;
+   /* start line of data test (which may extend over several lines) */
+int nextchar;
+   /* character appearing next in the file, may be EOF */
+
+#define MPC_INEX_CMP(r, i, c)                                 \
+  (((r) == TERNARY_NOT_CHECKED || (r) == MPC_INEX_RE(c))      \
+   && ((i) == TERNARY_NOT_CHECKED || (i) == MPC_INEX_IM (c)))
+
+#define MPFR_INEX_STR(inex)                     \
+  (inex) == TERNARY_NOT_CHECKED ? "?"           \
+    : (inex) == +1 ? "+1"                       \
+    : (inex) == -1 ? "-1" : "0"
+
+static const char *mpfr_rnd_mode [] =
+  { "GMP_RNDN", "GMP_RNDZ", "GMP_RNDU", "GMP_RNDD" };
+
+const char *rnd_mode[] =
+  { "MPC_RNDNN", "MPC_RNDZN", "MPC_RNDUN", "MPC_RNDDN",
+    "undefined", "undefined", "undefined", "undefined", "undefined",
+    "undefined", "undefined", "undefined", "undefined", "undefined",
+    "undefined", "undefined",
+    "MPC_RNDNZ", "MPC_RNDZZ", "MPC_RNDUZ", "MPC_RNDDZ",
+    "undefined", "undefined", "undefined", "undefined", "undefined",
+    "undefined", "undefined", "undefined", "undefined", "undefined",
+    "undefined", "undefined",
+    "MPC_RNDNU", "MPC_RNDZU", "MPC_RNDUU", "MPC_RNDDU",
+    "undefined", "undefined", "undefined", "undefined", "undefined",
+    "undefined", "undefined", "undefined", "undefined", "undefined",
+    "undefined", "undefined",
+    "MPC_RNDND", "MPC_RNDZD", "MPC_RNDUD", "MPC_RNDDD",
+    "undefined", "undefined", "undefined", "undefined", "undefined",
+    "undefined", "undefined", "undefined", "undefined", "undefined",
+    "undefined", "undefined",
+  };
+
+/* file functions */
+FILE *
+open_data_file (const char *file_name)
+{
+  FILE *fp;
+  char *src_dir;
+  char default_srcdir[] = ".";
+
+  src_dir = getenv ("srcdir");
+  if (src_dir == NULL)
+    src_dir = default_srcdir;
+
+  pathname = (char *) malloc ((strlen (src_dir)) + strlen (file_name) + 2);
+  if (pathname == NULL)
+    {
+      printf ("Cannot allocate memory\n");
+      exit (1);
+    }
+  sprintf (pathname, "%s/%s", src_dir, file_name);
+  fp = fopen (pathname, "r");
+  if (fp == NULL)
+    {
+      fprintf (stderr, "Unable to open %s\n", pathname);
+      exit (1);
+    }
+
+  return fp;
+}
+
+void
+close_data_file (FILE *fp)
+{
+  free (pathname);
+  fclose (fp);
+}
+
+/* read primitives */
+static void
+skip_line (FILE *fp)
+   /* skips characters until reaching '\n' or EOF; */
+   /* '\n' is skipped as well                      */
+{
+   while (nextchar != EOF && nextchar != '\n')
+     nextchar = getc (fp);
+   if (nextchar != EOF)
+     {
+       line_number ++;
+       nextchar = getc (fp);
+     }
+}
+
+static void
+skip_whitespace (FILE *fp)
+   /* skips over whitespace if any until reaching EOF */
+   /* or non-whitespace                               */
+{
+   while (isspace (nextchar))
+     {
+       if (nextchar == '\n')
+         line_number ++;
+       nextchar = getc (fp);
+     }
+}
+
+void
+skip_whitespace_comments (FILE *fp)
+   /* skips over all whitespace and comments, if any */
+{
+   skip_whitespace (fp);
+   while (nextchar == '#') {
+      skip_line (fp);
+      if (nextchar != EOF)
+         skip_whitespace (fp);
+   }
+}
+
+
+size_t
+read_string (FILE *fp, char **buffer_ptr, size_t buffer_length, const char *name)
+{
+  size_t pos;
+  char *buffer;
+
+  pos = 0;
+  buffer = *buffer_ptr;
+
+  if (nextchar == '"')
+    nextchar = getc (fp);
+  else
+    goto error;
+
+  while (nextchar != EOF && nextchar != '"')
+    {
+      if (nextchar == '\n')
+        line_number ++;
+      if (pos + 1 > buffer_length)
+        {
+          buffer = (char *) realloc (buffer, 2 * buffer_length);
+          if (buffer == NULL)
+            {
+              printf ("Cannot allocate memory\n");
+              exit (1);
+            }
+          buffer_length *= 2;
+        }
+      buffer[pos++] = (char) nextchar;
+      nextchar = getc (fp);
+    }
+
+  if (nextchar != '"')
+    goto error;
+
+  if (pos + 1 > buffer_length)
+    {
+      buffer = (char *) realloc (buffer, buffer_length + 1);
+      if (buffer == NULL)
+        {
+          printf ("Cannot allocate memory\n");
+          exit (1);
+        }
+      buffer_length *= 2;
+    }
+  buffer[pos] = '\0';
+
+  nextchar = getc (fp);
+  skip_whitespace_comments (fp);
+
+  buffer_ptr = &buffer;
+
+  return buffer_length;
+
+ error:
+  printf ("Error: Unable to read %s in file '%s' line '%lu'\n",
+          name, pathname, line_number);
+  exit (1);
+}
+
+/* All following read routines skip over whitespace and comments; */
+/* so after calling them, nextchar is either EOF or the beginning */
+/* of a non-comment token.                                        */
+void
+read_ternary (FILE *fp, int* ternary)
+{
+  switch (nextchar)
+    {
+    case '!':
+      *ternary = TERNARY_ERROR;
+      break;
+    case '?':
+      *ternary = TERNARY_NOT_CHECKED;
+      break;
+    case '+':
+      *ternary = +1;
+      break;
+    case '0':
+      *ternary = 0;
+      break;
+    case '-':
+      *ternary = -1;
+      break;
+    default:
+      printf ("Error: Unexpected ternary value '%c' in file '%s' line %lu\n",
+              nextchar, pathname, line_number);
+      exit (1);
+    }
+
+  nextchar = getc (fp);
+  skip_whitespace_comments (fp);
+}
+
+void
+read_mpfr_rounding_mode (FILE *fp, mpfr_rnd_t* rnd)
+{
+  switch (nextchar)
+    {
+    case 'n': case 'N':
+      *rnd = GMP_RNDN;
+      break;
+    case 'z': case 'Z':
+      *rnd = GMP_RNDZ;
+      break;
+    case 'u': case 'U':
+      *rnd = GMP_RNDU;
+      break;
+    case 'd': case 'D':
+      *rnd = GMP_RNDD;
+      break;
+    default:
+      printf ("Error: Unexpected rounding mode '%c' in file '%s' line %lu\n",
+              nextchar, pathname, line_number);
+      exit (1);
+    }
+
+    nextchar = getc (fp);
+    if (nextchar != EOF && !isspace (nextchar)) {
+      printf ("Error: Rounding mode not followed by white space in file "
+              "'%s' line %lu\n",
+              pathname, line_number);
+      exit (1);
+    }
+    skip_whitespace_comments (fp);
+}
+
+void
+read_mpc_rounding_mode (FILE *fp, mpc_rnd_t* rnd)
+{
+   mpfr_rnd_t re, im;
+   read_mpfr_rounding_mode (fp, &re);
+   read_mpfr_rounding_mode (fp, &im);
+   *rnd = RNDC (re, im);
+}
+
+void
+read_int (FILE *fp, int *nread, const char *name)
+{
+  int n = 0;
+
+  if (nextchar == EOF)
+    {
+      printf ("Error: Unexpected EOF when reading int "
+              "in file '%s' line %lu\n",
+              pathname, line_number);
+      exit (1);
+    }
+  ungetc (nextchar, fp);
+  n = fscanf (fp, "%i", nread);
+  if (ferror (fp) || n == 0 || n == EOF)
+    {
+      printf ("Error: Cannot read %s in file '%s' line %lu\n",
+              name, pathname, line_number);
+      exit (1);
+    }
+  nextchar = getc (fp);
+  skip_whitespace_comments (fp);
+}
+
+static void
+read_uint (FILE *fp, unsigned long int *ui)
+{
+  int n = 0;
+
+  if (nextchar == EOF)
+    {
+      printf ("Error: Unexpected EOF when reading uint "
+              "in file '%s' line %lu\n",
+              pathname, line_number);
+      exit (1);
+    }
+  ungetc (nextchar, fp);
+  n = fscanf (fp, "%lu", ui);
+  if (ferror (fp) || n == 0 || n == EOF)
+    {
+      printf ("Error: Cannot read uint in file '%s' line %lu\n",
+              pathname, line_number);
+      exit (1);
+    }
+  nextchar = getc (fp);
+  skip_whitespace_comments (fp);
+}
+
+mpfr_prec_t
+read_mpfr_prec (FILE *fp)
+{
+   unsigned long prec;
+   int n;
+
+   if (nextchar == EOF) {
+      printf ("Error: Unexpected EOF when reading mpfr precision "
+              "in file '%s' line %lu\n",
+              pathname, line_number);
+      exit (1);
+   }
+   ungetc (nextchar, fp);
+   n = fscanf (fp, "%lu", &prec);
+   if (ferror (fp)) /* then also n == EOF */
+      perror ("Error when reading mpfr precision");
+   if (n == 0 || n == EOF || prec < MPFR_PREC_MIN || prec > MPFR_PREC_MAX) {
+      printf ("Error: Impossible mpfr precision in file '%s' line %lu\n",
+              pathname, line_number);
+      exit (1);
+   }
+   nextchar = getc (fp);
+   skip_whitespace_comments (fp);
+   return (mpfr_prec_t) prec;
+}
+
+static void
+read_mpfr_mantissa (FILE *fp, mpfr_ptr x)
+{
+   if (nextchar == EOF) {
+      printf ("Error: Unexpected EOF when reading mpfr mantissa "
+              "in file '%s' line %lu\n",
+              pathname, line_number);
+      exit (1);
+   }
+   ungetc (nextchar, fp);
+   if (mpfr_inp_str (x, fp, 0, GMP_RNDN) == 0) {
+      printf ("Error: Impossible to read mpfr mantissa "
+              "in file '%s' line %lu\n",
+              pathname, line_number);
+      exit (1);
+   }
+   nextchar = getc (fp);
+   skip_whitespace_comments (fp);
+}
+
+void
+read_mpfr (FILE *fp, mpfr_ptr x, int *known_sign)
+{
+   int sign;
+   mpfr_set_prec (x, read_mpfr_prec (fp));
+   sign = nextchar;
+   read_mpfr_mantissa (fp, x);
+
+   /* the sign always matters for regular values ('+' is implicit),
+      but when no sign appears before 0 or Inf in the data file, it means
+      that only absolute value must be checked. */
+   if (known_sign != NULL)
+     *known_sign =
+       (!mpfr_zero_p (x) && !mpfr_inf_p (x))
+       || sign == '+' || sign == '-';
+}
+
+void
+read_mpc (FILE *fp, mpc_ptr z, known_signs_t *ks)
+{
+  read_mpfr (fp, MPC_RE (z), ks == NULL ? NULL : &ks->re);
+  read_mpfr (fp, MPC_IM (z), ks == NULL ? NULL : &ks->im);
+}
+
+static void
+check_compatible (int inex, mpfr_t expected, mpfr_rnd_t rnd, const char *s)
+{
+  if ((rnd == GMP_RNDU && inex == -1) ||
+      (rnd == GMP_RNDD && inex == +1) ||
+      (rnd == GMP_RNDZ && mpfr_signbit (expected) == 0 && inex == +1) ||
+      (rnd == GMP_RNDZ && mpfr_signbit (expected) == 1 && inex == -1))
+    {
+      if (s != NULL)
+        printf ("Incompatible ternary value '%c' (%s part) in file '%s' line %lu\n",
+              (inex == 1) ? '+' : '-', s, pathname, test_line_number);
+      else
+        printf ("Incompatible ternary value '%c' in file '%s' line %lu\n",
+              (inex == 1) ? '+' : '-', pathname, test_line_number);
+    }
+}
+
+/* read lines of data */
+static void
+read_cc (FILE *fp, int *inex_re, int *inex_im, mpc_ptr expected,
+         known_signs_t *signs, mpc_ptr op, mpc_rnd_t *rnd)
+{
+  test_line_number = line_number;
+  read_ternary (fp, inex_re);
+  read_ternary (fp, inex_im);
+  read_mpc (fp, expected, signs);
+  read_mpc (fp, op, NULL);
+  read_mpc_rounding_mode (fp, rnd);
+  check_compatible (*inex_re, MPC_RE(expected), MPC_RND_RE(*rnd), "real");
+  check_compatible (*inex_im, MPC_IM(expected), MPC_RND_IM(*rnd), "imag");
+}
+
+static void
+read_fc (FILE *fp, int *inex, mpfr_ptr expected, int *sign, mpc_ptr op,
+         mpfr_rnd_t *rnd)
+{
+  test_line_number = line_number;
+  read_ternary (fp, inex);
+  read_mpfr (fp, expected, sign);
+  read_mpc (fp, op, NULL);
+  read_mpfr_rounding_mode (fp, rnd);
+  check_compatible (*inex, expected, *rnd, NULL);
+}
+
+static void
+read_ccc (FILE *fp, int *inex_re, int *inex_im, mpc_ptr expected,
+          known_signs_t *signs, mpc_ptr op1, mpc_ptr op2, mpc_rnd_t *rnd)
+{
+  test_line_number = line_number;
+  read_ternary (fp, inex_re);
+  read_ternary (fp, inex_im);
+  read_mpc (fp, expected, signs);
+  read_mpc (fp, op1, NULL);
+  read_mpc (fp, op2, NULL);
+  read_mpc_rounding_mode (fp, rnd);
+  check_compatible (*inex_re, MPC_RE(expected), MPC_RND_RE(*rnd), "real");
+  check_compatible (*inex_im, MPC_IM(expected), MPC_RND_IM(*rnd), "imag");
+}
+
+/* read lines of data for function with three mpc_t inputs and one mpc_t
+   output like mpc_fma */
+static void
+read_cccc (FILE *fp, int *inex_re, int *inex_im, mpc_ptr expected,
+	   known_signs_t *signs, mpc_ptr op1, mpc_ptr op2, mpc_ptr op3,
+	   mpc_rnd_t *rnd)
+{
+  test_line_number = line_number;
+  read_ternary (fp, inex_re);
+  read_ternary (fp, inex_im);
+  read_mpc (fp, expected, signs);
+  read_mpc (fp, op1, NULL);
+  read_mpc (fp, op2, NULL);
+  read_mpc (fp, op3, NULL);
+  read_mpc_rounding_mode (fp, rnd);
+  check_compatible (*inex_re, MPC_RE(expected), MPC_RND_RE(*rnd), "real");
+  check_compatible (*inex_im, MPC_IM(expected), MPC_RND_IM(*rnd), "imag");
+}
+
+static void
+read_cfc (FILE *fp, int *inex_re, int *inex_im, mpc_ptr expected,
+          known_signs_t *signs, mpfr_ptr op1, mpc_ptr op2, mpc_rnd_t *rnd)
+{
+  test_line_number = line_number;
+  read_ternary (fp, inex_re);
+  read_ternary (fp, inex_im);
+  read_mpc (fp, expected, signs);
+  read_mpfr (fp, op1, NULL);
+  read_mpc (fp, op2, NULL);
+  read_mpc_rounding_mode (fp, rnd);
+  check_compatible (*inex_re, MPC_RE(expected), MPC_RND_RE(*rnd), "real");
+  check_compatible (*inex_im, MPC_IM(expected), MPC_RND_IM(*rnd), "imag");
+}
+
+static void
+read_ccf (FILE *fp, int *inex_re, int *inex_im, mpc_ptr expected,
+          known_signs_t *signs, mpc_ptr op1, mpfr_ptr op2, mpc_rnd_t *rnd)
+{
+  test_line_number = line_number;
+  read_ternary (fp, inex_re);
+  read_ternary (fp, inex_im);
+  read_mpc (fp, expected, signs);
+  read_mpc (fp, op1, NULL);
+  read_mpfr (fp, op2, NULL);
+  read_mpc_rounding_mode (fp, rnd);
+  check_compatible (*inex_re, MPC_RE(expected), MPC_RND_RE(*rnd), "real");
+  check_compatible (*inex_im, MPC_IM(expected), MPC_RND_IM(*rnd), "imag");
+}
+
+static void
+read_ccu (FILE *fp, int *inex_re, int *inex_im, mpc_ptr expected,
+          known_signs_t *signs, mpc_ptr op1, unsigned long int *op2, mpc_rnd_t *rnd)
+{
+  test_line_number = line_number;
+  read_ternary (fp, inex_re);
+  read_ternary (fp, inex_im);
+  read_mpc (fp, expected, signs);
+  read_mpc (fp, op1, NULL);
+  read_uint (fp, op2);
+  read_mpc_rounding_mode (fp, rnd);
+  check_compatible (*inex_re, MPC_RE(expected), MPC_RND_RE(*rnd), "real");
+  check_compatible (*inex_im, MPC_IM(expected), MPC_RND_IM(*rnd), "imag");
+}
+
+/* data_check (function, data_file_name) checks function results against
+ precomputed data in a file.*/
+void
+data_check (mpc_function function, const char *file_name)
+{
+  FILE *fp;
+
+  int inex_re;
+  mpfr_t x1, x2;
+  mpfr_rnd_t mpfr_rnd = GMP_RNDN;
+  int sign_real;
+
+  int inex_im;
+  mpc_t z1, z2, z3, z4, z5;
+  mpc_rnd_t rnd = MPC_RNDNN;
+
+  unsigned long int ui;
+
+  known_signs_t signs;
+  int inex = 0;
+
+  fp = open_data_file (file_name);
+
+  /* 1. init needed variables */
+  mpc_init2 (z1, 2);
+  switch (function.type)
+    {
+    case FC:
+      mpfr_init (x1);
+      mpfr_init (x2);
+      break;
+    case CC: case CCU:
+      mpc_init2 (z2, 2);
+      mpc_init2 (z3, 2);
+      break;
+    case C_CC:
+      mpc_init2 (z2, 2);
+      mpc_init2 (z3, 2);
+      mpc_init2 (z4, 2);
+      break;
+    case CCCC:
+      mpc_init2 (z2, 2);
+      mpc_init2 (z3, 2);
+      mpc_init2 (z4, 2);
+      mpc_init2 (z5, 2);
+      break;
+    case CFC: case CCF:
+      mpfr_init (x1);
+      mpc_init2 (z2, 2);
+      mpc_init2 (z3, 2);
+      break;
+    default:
+      ;
+    }
+
+  /* 2. read data file */
+  line_number = 1;
+  nextchar = getc (fp);
+  skip_whitespace_comments (fp);
+  while (nextchar != EOF) {
+      /* for each kind of function prototype: */
+      /* 3.1 read a line of data: expected result, parameters, rounding mode */
+      /* 3.2 compute function at the same precision as the expected result */
+      /* 3.3 compare this result with the expected one */
+      switch (function.type)
+        {
+        case FC: /* example mpc_norm */
+          read_fc (fp, &inex_re, x1, &sign_real, z1, &mpfr_rnd);
+          mpfr_set_prec (x2, mpfr_get_prec (x1));
+          inex = function.pointer.FC (x2, z1, mpfr_rnd);
+          if ((inex_re != TERNARY_NOT_CHECKED && inex_re != inex)
+              || !same_mpfr_value (x1, x2, sign_real))
+            {
+              mpfr_t got, expected;
+              mpc_t op;
+              op[0] = z1[0];
+              got[0] = x2[0];
+              expected[0] = x1[0];
+              printf ("%s(op) failed (%s:%lu)\nwith rounding mode %s\n",
+                      function.name, file_name, test_line_number,
+                      mpfr_rnd_mode[mpfr_rnd]);
+              if (inex_re != TERNARY_NOT_CHECKED && inex_re != inex)
+                printf("ternary value: got %s, expected %s\n",
+                       MPFR_INEX_STR (inex), MPFR_INEX_STR (inex_re));
+              MPC_OUT (op);
+              printf ("     ");
+              MPFR_OUT (got);
+              MPFR_OUT (expected);
+
+              exit (1);
+            }
+          break;
+
+        case CC: /* example mpc_log */
+          read_cc (fp, &inex_re, &inex_im, z1, &signs, z2, &rnd);
+          mpfr_set_prec (MPC_RE (z3), MPC_PREC_RE (z1));
+          mpfr_set_prec (MPC_IM (z3), MPC_PREC_IM (z1));
+          inex = function.pointer.CC (z3, z2, rnd);
+          if (!MPC_INEX_CMP (inex_re, inex_im, inex)
+              || !same_mpc_value (z3, z1, signs))
+            {
+              mpc_t op, got, expected; /* display sensible variable names */
+              op[0] = z2[0];
+              expected[0]= z1[0];
+              got[0] = z3[0];
+              printf ("%s(op) failed (line %lu)\nwith rounding mode %s\n",
+                      function.name, test_line_number, rnd_mode[rnd]);
+              if (!MPC_INEX_CMP (inex_re, inex_im, inex))
+                printf("ternary value: got %s, expected (%s, %s)\n",
+                       MPC_INEX_STR (inex),
+                       MPFR_INEX_STR (inex_re), MPFR_INEX_STR (inex_im));
+              MPC_OUT (op);
+              printf ("     ");
+              MPC_OUT (got);
+              MPC_OUT (expected);
+
+              exit (1);
+            }
+          break;
+
+        case C_CC: /* example mpc_mul */
+          read_ccc (fp, &inex_re, &inex_im, z1, &signs, z2, z3, &rnd);
+          mpfr_set_prec (MPC_RE(z4), MPC_PREC_RE (z1));
+          mpfr_set_prec (MPC_IM(z4), MPC_PREC_IM (z1));
+          inex = function.pointer.C_CC (z4, z2, z3, rnd);
+          if (!MPC_INEX_CMP (inex_re, inex_im, inex)
+              || !same_mpc_value (z4, z1, signs))
+            {
+              /* display sensible variable names */
+              mpc_t op1, op2, got, expected;
+              op1[0] = z2[0];
+              op2[0] = z3[0];
+              expected[0]= z1[0];
+              got[0] = z4[0];
+              printf ("%s(op) failed (line %lu)\nwith rounding mode %s\n",
+                      function.name, test_line_number, rnd_mode[rnd]);
+              if (!MPC_INEX_CMP (inex_re, inex_im, inex))
+                printf("ternary value: got %s, expected (%s, %s)\n",
+                       MPC_INEX_STR (inex),
+                       MPFR_INEX_STR (inex_re), MPFR_INEX_STR (inex_im));
+              MPC_OUT (op1);
+              MPC_OUT (op2);
+              printf ("     ");
+              MPC_OUT (got);
+              MPC_OUT (expected);
+
+              exit (1);
+            }
+          if (function.properties & FUNC_PROP_SYMETRIC)
+            {
+              inex = function.pointer.C_CC (z4, z3, z2, rnd);
+              if (!MPC_INEX_CMP (inex_re, inex_im, inex)
+              || !same_mpc_value (z4, z1, signs))
+                {
+                  /* display sensible variable names */
+                  mpc_t op1, op2, got, expected;
+                  op1[0] = z3[0];
+                  op2[0] = z2[0];
+                  expected[0]= z1[0];
+                  got[0] = z4[0];
+                  printf ("%s(op) failed (line %lu/symetric test)\n"
+                          "with rounding mode %s\n",
+                          function.name, test_line_number, rnd_mode[rnd]);
+                  if (!MPC_INEX_CMP (inex_re, inex_im, inex))
+                    printf("ternary value: got %s, expected (%s, %s)\n",
+                           MPC_INEX_STR (inex),
+                           MPFR_INEX_STR (inex_re), MPFR_INEX_STR (inex_im));
+                  MPC_OUT (op1);
+                  MPC_OUT (op2);
+                  printf ("     ");
+                  MPC_OUT (got);
+                  MPC_OUT (expected);
+
+                  exit (1);
+                }
+            }
+          break;
+
+        case CCCC: /* example mpc_fma */
+          read_cccc (fp, &inex_re, &inex_im, z1, &signs, z2, z3, z4, &rnd);
+	  /* z1 is the expected value, z2, z3, z4 are the inputs, and z5 is
+	     the computed value */
+          mpfr_set_prec (MPC_RE(z5), MPC_PREC_RE (z1));
+          mpfr_set_prec (MPC_IM(z5), MPC_PREC_IM (z1));
+          inex = function.pointer.CCCC (z5, z2, z3, z4, rnd);
+          if (!MPC_INEX_CMP (inex_re, inex_im, inex)
+              || !same_mpc_value (z5, z1, signs))
+            {
+              /* display sensible variable names */
+              mpc_t op1, op2, op3, got, expected;
+              op1[0] = z2[0];
+              op2[0] = z3[0];
+              op3[0] = z4[0];
+              expected[0]= z1[0];
+              got[0] = z5[0];
+              printf ("%s(op) failed (line %lu)\nwith rounding mode %s\n",
+                      function.name, test_line_number, rnd_mode[rnd]);
+              if (!MPC_INEX_CMP (inex_re, inex_im, inex))
+                printf("ternary value: got %s, expected (%s, %s)\n",
+                       MPC_INEX_STR (inex),
+                       MPFR_INEX_STR (inex_re), MPFR_INEX_STR (inex_im));
+              MPC_OUT (op1);
+              MPC_OUT (op2);
+              MPC_OUT (op3);
+              printf ("     ");
+              MPC_OUT (got);
+              MPC_OUT (expected);
+
+              exit (1);
+            }
+          if (function.properties & FUNC_PROP_SYMETRIC)
+            {
+              inex = function.pointer.CCCC (z5, z3, z2, z4, rnd);
+              if (!MPC_INEX_CMP (inex_re, inex_im, inex)
+              || !same_mpc_value (z5, z1, signs))
+                {
+                  /* display sensible variable names */
+                  mpc_t op1, op2, op3, got, expected;
+                  op1[0] = z3[0];
+                  op2[0] = z2[0];
+		  op3[0] = z4[0];
+                  expected[0]= z1[0];
+                  got[0] = z5[0];
+                  printf ("%s(op) failed (line %lu/symetric test)\n"
+                          "with rounding mode %s\n",
+                          function.name, test_line_number, rnd_mode[rnd]);
+                  if (!MPC_INEX_CMP (inex_re, inex_im, inex))
+                    printf("ternary value: got %s, expected (%s, %s)\n",
+                           MPC_INEX_STR (inex),
+                           MPFR_INEX_STR (inex_re), MPFR_INEX_STR (inex_im));
+                  MPC_OUT (op1);
+                  MPC_OUT (op2);
+		  MPC_OUT (op3);
+                  printf ("     ");
+                  MPC_OUT (got);
+                  MPC_OUT (expected);
+
+                  exit (1);
+                }
+            }
+          break;
+
+        case CFC: /* example mpc_fr_div */
+          read_cfc (fp, &inex_re, &inex_im, z1, &signs, x1, z2, &rnd);
+          mpfr_set_prec (MPC_RE(z3), MPC_PREC_RE (z1));
+          mpfr_set_prec (MPC_IM(z3), MPC_PREC_IM (z1));
+          inex = function.pointer.CFC (z3, x1, z2, rnd);
+          if (!MPC_INEX_CMP (inex_re, inex_im, inex)
+              || !same_mpc_value (z3, z1, signs))
+            {
+              /* display sensible variable names */
+              mpc_t op2, got, expected;
+              mpfr_t op1;
+              op1[0] = x1[0];
+              op2[0] = z2[0];
+              expected[0]= z1[0];
+              got[0] = z3[0];
+              printf ("%s(op) failed (line %lu)\nwith rounding mode %s\n",
+                      function.name, test_line_number, rnd_mode[rnd]);
+              if (!MPC_INEX_CMP (inex_re, inex_im, inex))
+                printf("ternary value: got %s, expected (%s, %s)\n",
+                       MPC_INEX_STR (inex),
+                       MPFR_INEX_STR (inex_re), MPFR_INEX_STR (inex_im));
+              MPFR_OUT (op1);
+              MPC_OUT (op2);
+              printf ("     ");
+              MPC_OUT (got);
+              MPC_OUT (expected);
+
+              exit (1);
+            }
+          break;
+
+        case CCF: /* example mpc_mul_fr */
+          read_ccf (fp, &inex_re, &inex_im, z1, &signs, z2, x1, &rnd);
+          mpfr_set_prec (MPC_RE(z3), MPC_PREC_RE (z1));
+          mpfr_set_prec (MPC_IM(z3), MPC_PREC_IM (z1));
+          inex = function.pointer.CCF (z3, z2, x1, rnd);
+          if (!MPC_INEX_CMP (inex_re, inex_im, inex)
+              || !same_mpc_value (z3, z1, signs))
+            {
+              /* display sensible variable names */
+              mpc_t op1, got, expected;
+              mpfr_t op2;
+              op1[0] = z2[0];
+              op2[0] = x1[0];
+              expected[0]= z1[0];
+              got[0] = z3[0];
+              printf ("%s(op) failed (line %lu)\nwith rounding mode %s\n",
+                      function.name, test_line_number, rnd_mode[rnd]);
+              if (!MPC_INEX_CMP (inex_re, inex_im, inex))
+                printf("ternary value: got %s, expected (%s, %s)\n",
+                       MPC_INEX_STR (inex),
+                       MPFR_INEX_STR (inex_re), MPFR_INEX_STR (inex_im));
+              MPC_OUT (op1);
+              MPFR_OUT (op2);
+              printf ("     ");
+              MPC_OUT (got);
+              MPC_OUT (expected);
+
+              exit (1);
+            }
+          break;
+
+        case CCU: /* example mpc_pow_ui */
+          read_ccu (fp, &inex_re, &inex_im, z1, &signs, z2, &ui, &rnd);
+          mpfr_set_prec (MPC_RE(z3), MPC_PREC_RE (z1));
+          mpfr_set_prec (MPC_IM(z3), MPC_PREC_IM (z1));
+          inex = function.pointer.CCU (z3, z2, ui, rnd);
+          if (!MPC_INEX_CMP (inex_re, inex_im, inex)
+              || !same_mpc_value (z3, z1, signs))
+            {
+              /* display sensible variable names */
+              mpc_t op1, got, expected;
+              op1[0] = z2[0];
+              expected[0]= z1[0];
+              got[0] = z3[0];
+              printf ("%s(op) failed (line %lu)\nwith rounding mode %s\n",
+                      function.name, test_line_number, rnd_mode[rnd]);
+              if (!MPC_INEX_CMP (inex_re, inex_im, inex))
+                printf("ternary value: got %s, expected (%s, %s)\n",
+                       MPC_INEX_STR (inex),
+                       MPFR_INEX_STR (inex_re), MPFR_INEX_STR (inex_im));
+              MPC_OUT (op1);
+              printf ("op2 %lu\n     ", ui);
+              MPC_OUT (got);
+              MPC_OUT (expected);
+
+              exit (1);
+            }
+          break;
+
+        default:
+          ;
+        }
+    }
+
+  /* 3. Clear used variables */
+  mpc_clear (z1);
+  switch (function.type)
+    {
+    case FC:
+      mpfr_clear (x1);
+      mpfr_clear (x2);
+      break;
+    case CC: case CCU:
+      mpc_clear (z2);
+      mpc_clear (z3);
+      break;
+    case C_CC:
+      mpc_clear (z2);
+      mpc_clear (z3);
+      mpc_clear (z4);
+      break;
+    case CCCC:
+      mpc_clear (z2);
+      mpc_clear (z3);
+      mpc_clear (z4);
+      mpc_clear (z5);
+      break;
+    case CFC: case CCF:
+      mpfr_clear (x1);
+      mpc_clear (z2);
+      mpc_clear (z3);
+      break;
+    default:
+      ;
+    }
+
+  close_data_file (fp);
+}
diff --git a/mpc/tests/sin.dat b/mpc/tests/sin.dat
new file mode 100644
index 0000000..512759f
--- /dev/null
+++ b/mpc/tests/sin.dat
@@ -0,0 +1,165 @@
+# Data file for mpc_sin.
+#
+# Copyright (C) INRIA, 2008, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# where op = op_re + i * op_im, rop = rop_re + i * rop_im,
+# rop_re is ROP_RE rounded to nearest to the precision of PREC_ROP_RE
+# rop_im is ROP_IM rounded to nearest to the precision of PREC_ROP_IM
+# op_re is OP_RE rounded to nearest to the precision of PREC_OP_RE
+# op_im is OP_IM rounded to nearest to the precision of PREC_OP_IM
+# ROP_RE is checked against Re(sin op) rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against Im(sin op) rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# special values (following ISO C99 standard)
+0 0 53  nan 53  inf    53 -inf 53 -inf N N
+0 0 53  nan 53  nan    53 -inf 53   -1 N N
+0 0 53  nan 53    0    53 -inf 53   -0 N N
+0 0 53  nan 53    0    53 -inf 53   +0 N N
+0 0 53  nan 53  nan    53 -inf 53   +1 N N
+0 0 53  nan 53  inf    53 -inf 53 +inf N N
+0 0 53  nan 53  nan    53 -inf 53  nan N N
+0 0 53 +inf 53 -inf    53   -6 53 -inf N N
+0 0 53 +inf 53 +inf    53   -6 53 +inf N N
+0 0 53  nan 53  nan    53   -6 53  nan N N
+0 0 53 +inf 53 +inf    53   -4 53 -inf N N
+0 0 53 +inf 53 -inf    53   -4 53 +inf N N
+0 0 53  nan 53  nan    53   -4 53  nan N N
+0 0 53 -inf 53 +inf    53   -2 53 -inf N N
+0 0 53 -inf 53 -inf    53   -2 53 +inf N N
+0 0 53  nan 53  nan    53   -2 53  nan N N
+0 0 53 -inf 53 -inf    53   -1 53 -inf N N
+0 0 53 -inf 53 +inf    53   -1 53 +inf N N
+0 0 53  nan 53  nan    53   -1 53  nan N N
+0 0 53   -0 53 -inf    53   -0 53 -inf N N
+0 0 53   -0 53   -0    53   -0 53   -0 N N
+0 0 53   -0 53   +0    53   -0 53   +0 N N
+0 0 53   -0 53 +inf    53   -0 53 +inf N N
+0 0 53   -0 53  nan    53   -0 53  nan N N
+0 0 53   +0 53 -inf    53   +0 53 -inf N N
+0 0 53   +0 53   -0    53   +0 53   -0 N N
+0 0 53   +0 53   +0    53   +0 53   +0 N N
+0 0 53   +0 53 +inf    53   +0 53 +inf N N
+0 0 53   +0 53  nan    53   +0 53  nan N N
+0 0 53 +inf 53 -inf    53   +1 53 -inf N N
+0 0 53 +inf 53 +inf    53   +1 53 +inf N N
+0 0 53  nan 53  nan    53   +1 53  nan N N
+0 0 53 +inf 53 +inf    53   +2 53 -inf N N
+0 0 53 +inf 53 -inf    53   +2 53 +inf N N
+0 0 53  nan 53  nan    53   +2 53  nan N N
+0 0 53 -inf 53 +inf    53   +4 53 -inf N N
+0 0 53 -inf 53 -inf    53   +4 53 +inf N N
+0 0 53  nan 53  nan    53   +4 53  nan N N
+0 0 53 -inf 53 -inf    53   +6 53 -inf N N
+0 0 53 -inf 53 +inf    53   +6 53 +inf N N
+0 0 53  nan 53  nan    53   +6 53  nan N N
+0 0 53  nan 53  inf    53 +inf 53 -inf N N
+0 0 53  nan 53  nan    53 +inf 53   -1 N N
+0 0 53  nan 53    0    53 +inf 53   -0 N N
+0 0 53  nan 53    0    53 +inf 53   +0 N N
+0 0 53  nan 53  nan    53 +inf 53   +1 N N
+0 0 53  nan 53  inf    53 +inf 53 +inf N N
+0 0 53  nan 53  nan    53 +inf 53  nan N N
+0 0 53  nan 53  inf    53  nan 53 -inf N N
+0 0 53  nan 53  nan    53  nan 53   -1 N N
+0 0 53  nan 53    0    53  nan 53   -0 N N
+0 0 53  nan 53    0    53  nan 53   +0 N N
+0 0 53  nan 53  nan    53  nan 53   +1 N N
+0 0 53  nan 53  inf    53  nan 53 +inf N N
+0 0 53  nan 53  nan    53  nan 53  nan N N
+
+# pure real argument
+- 0 53  0x4787C62AC28Bp-48  53 -0    53 -6 53 -0 N N
+- 0 53  0x4787C62AC28Bp-48  53 +0    53 -6 53 +0 N N
+- 0 53  0xC1BDCEEEE0F57p-52 53 +0    53 -4 53 -0 N N
+- 0 53  0xC1BDCEEEE0F57p-52 53 -0    53 -4 53 +0 N N
+- 0 53 -0xE8C7B7568DA23p-52 53 +0    53 -2 53 -0 N N
+- 0 53 -0xE8C7B7568DA23p-52 53 -0    53 -2 53 +0 N N
++ 0 53 -0xD76AA47848677p-52 53 -0    53 -1 53 -0 N N
++ 0 53 -0xD76AA47848677p-52 53 +0    53 -1 53 +0 N N
+- 0 53  0xD76AA47848677p-52 53 -0    53 +1 53 -0 N N
+- 0 53  0xD76AA47848677p-52 53 +0    53 +1 53 +0 N N
++ 0 53  0xE8C7B7568DA23p-52 53 +0    53 +2 53 -0 N N
++ 0 53  0xE8C7B7568DA23p-52 53 -0    53 +2 53 +0 N N
++ 0 53 -0xC1BDCEEEE0F57p-52 53 +0    53 +4 53 -0 N N
++ 0 53 -0xC1BDCEEEE0F57p-52 53 -0    53 +4 53 +0 N N
++ 0 53 -0x4787C62AC28Bp-48  53 -0    53 +6 53 -0 N N
++ 0 53 -0x4787C62AC28Bp-48  53 +0    53 +6 53 +0 N N
+
+# pure imaginary argument
+0 + 53 -0 53 -0x1936D22F67C805p-45    53 -0 53 -6 N N
+0 + 53 +0 53 -0x1936D22F67C805p-45    53 +0 53 -6 N N
+0 - 53 -0 53 -0x1B4A3803703631p-48    53 -0 53 -4 N N
+0 - 53 +0 53 -0x1B4A3803703631p-48    53 +0 53 -4 N N
+0 + 53 -0 53 -0x1D03CF63B6E19Fp-51    53 -0 53 -2 N N
+0 + 53 +0 53 -0x1D03CF63B6E19Fp-51    53 +0 53 -2 N N
+0 + 53 -0 53 -0x966CFE2275CC1p-51     53 -0 53 -1 N N
+0 + 53 +0 53 -0x966CFE2275CC1p-51     53 +0 53 -1 N N
+0 - 53 -0 53  0x966CFE2275CC1p-51     53 -0 53 +1 N N
+0 - 53 +0 53  0x966CFE2275CC1p-51     53 +0 53 +1 N N
+0 - 53 -0 53  0x1D03CF63B6E19Fp-51    53 -0 53 +2 N N
+0 - 53 +0 53  0x1D03CF63B6E19Fp-51    53 +0 53 +2 N N
+0 + 53 -0 53  0x1B4A3803703631p-48    53 -0 53 +4 N N
+0 + 53 +0 53  0x1B4A3803703631p-48    53 +0 53 +4 N N
+0 - 53 -0 53  0x1936D22F67C805p-45    53 -0 53 +6 N N
+0 - 53 +0 53  0x1936D22F67C805p-45    53 +0 53 +6 N N
+
+# IEEE-754 double precision
++ + 53 514                  53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 N N
++ + 53 514                  53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 N Z
++ + 53 514                  53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 N U
++ - 53 514                  53 -0x8DBE5135A8CA9p-96     53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 N D
+- + 53 0x100FFFFFFFFFFFp-43 53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 Z N
+- + 53 0x100FFFFFFFFFFFp-43 53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 Z Z
+- + 53 0x100FFFFFFFFFFFp-43 53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 Z U
+- - 53 0x100FFFFFFFFFFFp-43 53 -0x8DBE5135A8CA9p-96     53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 Z D
++ + 53 514                  53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 U N
++ + 53 514                  53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 U Z
++ + 53 514                  53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 U U
++ - 53 514                  53 -0x8DBE5135A8CA9p-96     53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 U D
+- + 53 0x100FFFFFFFFFFFp-43 53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 D N
+- + 53 0x100FFFFFFFFFFFp-43 53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 D Z
+- + 53 0x100FFFFFFFFFFFp-43 53 -0x11B7CA26B51951p-97    53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 D U
+- - 53 0x100FFFFFFFFFFFp-43 53 -0x8DBE5135A8CA9p-96     53 0x3243F6A8885A3p-49 53 -0x1BBDD1808C59A3p-50 D D
+
+# huge values
++ + 53 +inf 53 +inf 53 0x4580CBF242683p-3 53 -0x1B3E8A3660D279p-3 N N
+- + 53 -inf 53 +inf 53 -0x1B3E8A3660D279p-3 53 0x4580CBF242683p-3 N N
diff --git a/mpc/tests/sinh.dat b/mpc/tests/sinh.dat
new file mode 100644
index 0000000..8e97505
--- /dev/null
+++ b/mpc/tests/sinh.dat
@@ -0,0 +1,86 @@
+# Data file for mpc_sinh.
+#
+# Copyright (C) INRIA, 2008, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see sin.dat.
+
+# special values (following ISO C99 standard)
+0 0 7  inf 7  NaN   7 -inf 7 -inf N N
+0 0 7 -inf 7 -inf   7 -inf 7   -1 N N
+0 0 7 -inf 7   -0   7 -inf 7   -0 N N
+0 0 7 -inf 7   +0   7 -inf 7   +0 N N
+0 0 7 -inf 7 +inf   7 -inf 7    1 N N
+0 0 7  inf 7  NaN   7 -inf 7 +inf N N
+0 0 7  inf 7  NaN   7 -inf 7  NaN N N
+0 0 7  NaN 7  NaN   7   -1 7 -inf N N
+0 0 7  NaN 7  NaN   7   -1 7 +inf N N
+0 0 7  NaN 7  NaN   7   -1 7  NaN N N
+0 0 7    0 7  NaN   7   -0 7 -inf N N
+0 0 7   -0 7   -0   7   -0 7   -0 N N
+0 0 7   -0 7   +0   7   -0 7   +0 N N
+0 0 7    0 7  NaN   7   -0 7 +inf N N
+0 0 7    0 7  NaN   7   -0 7  NaN N N
+0 0 7    0 7  NaN   7   +0 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7   -0 N N
+0 0 7   +0 7   +0   7   +0 7   +0 N N
+0 0 7    0 7  NaN   7   +0 7 +inf N N
+0 0 7    0 7  NaN   7   +0 7  NaN N N
+0 0 7  NaN 7  NaN   7    1 7 -inf N N
+0 0 7  NaN 7  NaN   7    1 7 +inf N N
+0 0 7  NaN 7  NaN   7    1 7  NaN N N
+0 0 7  inf 7  NaN   7 +inf 7 -inf N N
+0 0 7 +inf 7 -inf   7 +inf 7   -1 N N
+0 0 7 +inf 7   -0   7 +inf 7   -0 N N
+0 0 7 +inf 7   +0   7 +inf 7   +0 N N
+0 0 7 +inf 7 +inf   7 +inf 7    1 N N
+0 0 7  inf 7  NaN   7 +inf 7 +inf N N
+0 0 7  inf 7  NaN   7 +inf 7  NaN N N
+0 0 7  NaN 7  NaN   7  NaN 7 -inf N N
+0 0 7  NaN 7  NaN   7  NaN 7   -1 N N
+0 0 7  NaN 7   -0   7  NaN 7   -0 N N
+0 0 7  NaN 7   +0   7  NaN 7   +0 N N
+0 0 7  NaN 7  NaN   7  NaN 7    1 N N
+0 0 7  NaN 7  NaN   7  NaN 7 +inf N N
+0 0 7  NaN 7  NaN   7  NaN 7  NaN N N
+
+# purely real argument
++ 0 50 -0x12cd9fc44eb98p-48 50 -0   7 -1 7 -0 N N
++ 0 50 -0x12cd9fc44eb98p-48 50 +0   7 -1 7 +0 N N
+- 0 50  0x12cd9fc44eb98p-48 50 -0   7  1 7 -0 N N
+- 0 50  0x12cd9fc44eb98p-48 50 +0   7  1 7 +0 N N
+
+# purely imaginary argument
+0 - 50 -0 50 -0xd76aa47848678p-52   7   -0 7 -1 N N
+0 + 50 -0 50  0xd76aa47848678p-52   7   -0 7  1 N N
+0 - 50 +0 50 -0xd76aa47848678p-52   7   +0 7 -1 N N
+0 + 50 +0 50  0xd76aa47848678p-52   7   +0 7  1 N N
+
+# values with +1 and -1
++ - 50 -0xa28cfec023fc8p-52 50 -0x14c67b74f6cc5p-48   7 -1 7 -1 N N
++ + 50 -0xa28cfec023fc8p-52 50  0x14c67b74f6cc5p-48   7 -1 7  1 N N
+- - 50  0xa28cfec023fc8p-52 50 -0x14c67b74f6cc5p-48   7  1 7 -1 N N
+- + 50  0xa28cfec023fc8p-52 50  0x14c67b74f6cc5p-48   7  1 7  1 N N
+
+# IEEE-754 double precision
+- - 53 0xF48D4FDF29C53p-105 53 2   53 0x15124271980435p-52 53 0x3243F6A8885A3p-49 N N
+
+# huge values
++ - 53 +inf 53 -inf 53 0x4580CBF242683p-3 53 -0x1B3E8A3660D279p-3 N N
++ + 53 +inf 53 +inf 53 -0x1B3E8A3660D279p-3 53 0x4580CBF242683p-3 N N
diff --git a/mpc/tests/sqr.dat b/mpc/tests/sqr.dat
new file mode 100644
index 0000000..18293bb
--- /dev/null
+++ b/mpc/tests/sqr.dat
@@ -0,0 +1,147 @@
+# Data file for mpc_sqr.
+#
+# Copyright (C) INRIA, 2008, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# see sin.dat for precisions
+
+# special values (following ISO C99 standard)
+0 0 53  nan 53 +inf     53 -inf 53 -inf N N
+0 0 53 +inf 53 +inf     53 -inf 53   -1 N N
+0 0 53 +inf 53  nan     53 -inf 53   -0 N N
+0 0 53 +inf 53  nan     53 -inf 53   +0 N N
+0 0 53 +inf 53 -inf     53 -inf 53   +1 N N
+0 0 53  nan 53 -inf     53 -inf 53 +inf N N
+0 0 53  nan 53  nan     53 -inf 53  nan N N
+0 0 53 -inf 53 +inf     53   -1 53 -inf N N
+0 0 53   +1 53   +0     53   -1 53   -0 N N
+0 0 53   +1 53   -0     53   -1 53   +0 N N
+0 0 53 -inf 53 -inf     53   -1 53 +inf N N
+0 0 53  nan 53  nan     53   -1 53  nan N N
+0 0 53 -inf 53  nan     53   -0 53 -inf N N
+0 0 53   -1 53   +0     53   -0 53   -1 N N
+0 0 53    0 53   +0     53   -0 53   -0 N N
+0 0 53    0 53   -0     53   -0 53   +0 N N
+0 0 53   -1 53   -0     53   -0 53   +1 N N
+0 0 53 -inf 53  nan     53   -0 53 +inf N N
+0 0 53  nan 53  nan     53   -0 53  nan N N
+0 0 53 -inf 53  nan     53   +0 53 -inf N N
+0 0 53   -1 53   -0     53   +0 53   -1 N N
+0 0 53    0 53   -0     53   +0 53   -0 N N
+0 0 53    0 53   +0     53   +0 53   +0 N N
+0 0 53   -1 53   +0     53   +0 53   +1 N N
+0 0 53 -inf 53  nan     53   +0 53 +inf N N
+0 0 53  nan 53  nan     53   +0 53  nan N N
+0 0 53 -inf 53 -inf     53   +1 53 -inf N N
+0 0 53   +1 53   -0     53   +1 53   -0 N N
+0 0 53   +1 53   +0     53   +1 53   +0 N N
+0 0 53 -inf 53 +inf     53   +1 53 +inf N N
+0 0 53  nan 53  nan     53   +1 53  nan N N
+0 0 53  nan 53 -inf     53 +inf 53 -inf N N
+0 0 53 +inf 53 -inf     53 +inf 53   -1 N N
+0 0 53 +inf 53  nan     53 +inf 53   -0 N N
+0 0 53 +inf 53  nan     53 +inf 53   +0 N N
+0 0 53 +inf 53 +inf     53 +inf 53   +1 N N
+0 0 53  nan 53 +inf     53 +inf 53 +inf N N
+0 0 53  nan 53  nan     53 +inf 53  nan N N
+0 0 53  nan 53  nan     53  nan 53 -inf N N
+0 0 53  nan 53  nan     53  nan 53   -1 N N
+0 0 53  nan 53  nan     53  nan 53   -0 N N
+0 0 53  nan 53  nan     53  nan 53   +0 N N
+0 0 53  nan 53  nan     53  nan 53   +1 N N
+0 0 53  nan 53  nan     53  nan 53 +inf N N
+0 0 53  nan 53  nan     53  nan 53  nan N N
+
+# pure real argument
++ 0 53 0x12345676543230p+52  2 +0    53  0x1111111000000f 17 +0 N N
+- 0 53 0x1234567654322fp+52  3 -0    54 -0x1111111000000f 16 +0 Z N
++ 0 53 0x12345676543230p+52  4 -0    55  0x1111111000000f 15 -0 U N
+- 0 53 0x1234567654322fp+52  5 +0    56 -0x1111111000000f 14 -0 D N
+- 0 53 0x1234567654322fp+52  6 +0    57  0x1111111000000f 13 +0 Z Z
++ 0 53 0x12345676543230p+52  7 -0    58 -0x1111111000000f 12 +0 U Z
+- 0 53 0x1234567654322fp+52  8 -0    59  0x1111111000000f 11 -0 D Z
++ 0 53 0x12345676543230p+52  9 +0    60 -0x1111111000000f 10 -0 N Z
++ 0 53 0x12345676543230p+52 10 +0    61  0x1111111000000f  9 +0 U U
+- 0 53 0x1234567654322fp+52 11 -0    62 -0x1111111000000f  8 +0 D U
++ 0 53 0x12345676543230p+52 12 -0    63  0x1111111000000f  7 -0 N U
+- 0 53 0x1234567654322fp+52 13 +0    64 -0x1111111000000f  6 -0 Z U
+- 0 53 0x1234567654322fp+52 14 +0    65  0x1111111000000f  5 +0 D D
++ 0 53 0x12345676543230p+52 15 -0    66 -0x1111111000000f  4 +0 N D
+- 0 53 0x1234567654322fp+52 16 -0    67  0x1111111000000f  3 -0 Z D
++ 0 53 0x12345676543230p+52 17 +0    68 -0x1111111000000f  2 -0 U D
+
+# pure imaginary argument
+- 0 53 -0xE1000002000000p+56 53 +0    53 +0 53  0xf0000001111111 N N
++ 0 53 -0xe1000001fffff8p+56 52 -0    51 -0 54  0xf0000001111111 Z N
++ 0 53 -0xe1000001fffff8p+56 51 -0    49 +0 55 -0xf0000001111111 U N
+- 0 53 -0xe1000002000000p+56 50 +0    47 -0 56 -0xf0000001111111 D N
++ 0 53 -0xe1000001fffff8p+56 49 +0    45 +0 57  0xf0000001111111 Z Z
++ 0 53 -0xe1000001fffff8p+56 48 -0    43 -0 58  0xf0000001111111 U Z
+- 0 53 -0xe1000002000000p+56 47 -0    41 +0 59 -0xf0000001111111 D Z
+- 0 53 -0xe1000002000000p+56 46 +0    39 -0 60 -0xf0000001111111 N Z
++ 0 53 -0xe1000001fffff8p+56 45 +0    37 +0 61  0xf0000001111111 U U
+- 0 53 -0xe1000002000000p+56 44 -0    35 -0 62  0xf0000001111111 D U
+- 0 53 -0xe1000002000000p+56 43 -0    33 +0 63 -0xf0000001111111 N U
++ 0 53 -0xe1000001fffff8p+56 42 +0    31 -0 64 -0xf0000001111111 Z U
+- 0 53 -0xe1000002000000p+56 41 +0    29 +0 65  0xf0000001111111 D D
+- 0 53 -0xe1000002000000p+56 40 -0    27 -0 66  0xf0000001111111 N D
++ 0 53 -0xe1000001fffff8p+56 39 -0    25 +0 67 -0xf0000001111111 Z D
++ 0 53 -0xe1000001fffff8p+56 38 +0    23 -0 68 -0xf0000001111111 U D
+
+# IEEE-754 double precision
+- + 53  0x10000000020000p+04   53  0x10000000effff         53  0x400008000180fp-22   53  0x7ffff0077efcbp-32   N N
+- - 53  0x3ffffffffffffd       53  0x7ffffffffffff4p+52    53  0x1fffffffffffff      53  0x1ffffffffffffe      Z N
++ + 53  0x1c16e5d4c4d5e7p-45   53 -0x7ffffff800007p-47     53  0xf                   53 -0x1111111000000fp-53  U N
+- + 53  0xfdbac097c8dc50p+2096 53  0x7f6e5d4c3b2a2p+1036   53  0xfedcba9876543p+1024 53  0x10000000000001p-42  D N
++ - 53 -0x10000000020000p+04   53  0x10000000efffefp-04    53  0x7ffff0077efcbp-32   53  0x400008000180fp-22   Z Z
++ + 53  0x3ffffffffffffe       53 -0x7ffffffffffff4p+52    53  0x1fffffffffffff      53 -0x1ffffffffffffe      U Z
+- - 53  0xe0b72ea626af3p-44    53  0x7ffffff800007p-47     53  0xf                   53  0x1111111000000fp-53  D Z
+- - 53 -0xfdbac097c8dc58p+2096 53  0x7f6e5d4c3b2a1cp+1032  53 -0x10000000000001p-42  53 -0xfedcba9876543p+1024 N Z
++ + 53  0x10000000020001p+04   53 -0x10000000efffefp-04    53  0x400008000180fp-22   53 -0x7ffff0077efcbp-32   U U
+- + 53 -0x3ffffffffffffe       53 -0x7ffffffffffff4p+52    53 -0x1ffffffffffffe      53  0x1fffffffffffff      D U
+- + 53 -0x1C16E5D4C4D5E7p-45   53  0x1ffffffe00001dp-49    53 -0x1111111000000fp-53  53 -0xf                   N U
++ + 53 -0xfdbac097c8dc50p+2096 53 -0x7f6e5d4c3b2a1cp+1032  53  0x10000000000001p-42  53 -0xfedcba9876543p+1024 Z U
+- - 53 -0x10000000020001p+04   53 -0x10000000effff         53 -0x7ffff0077efcbp-32   53  0x400008000180fp-22   D D
+- - 53  0x3ffffffffffffd       53 -0x7ffffffffffff8p+52    53 -0x1fffffffffffff      53  0x1ffffffffffffe      N D
++ - 53 -0xE0B72EA626AF3p-44    53 -0x1FFFFFFE00001Dp-49    53  0x1111111000000fp-53  53 -0xf                   Z D
++ - 53  0xfdbac097c8dc58p+2096 53 -0x7f6e5d4c3b2a2p+1036   53 -0xfedcba9876543p+1024 53  0x10000000000001p-42  U D
+
+# improve test coverage:
+# For op=x+i*y, we need a case where x+y and x-y are inexact at the
+# higher computing precision, and where x and y do not have too
+# distinct exponents so that Karatsuba gets triggered...
+# (2^44 + i*(2^29 + 1))^2 \approx (2^88-2^58) + i*2^45*(2^29+1)
++ 0 30 309485009533114692573069312 30 18889465966662952943616  30 17592186044416 30 536870913 N N
+# ...and a case where x+y or x-y are 0.
+0 0 4 0 4 2  4 1 4 1 N N
+
+# a few values, previously hard-coded in tsqr.c
+0 0 8 7 8 24  8 4 8 3 N N
++ + 8 0b1.1000111e-3 8 0b1.1100111e-3  27 0b1.11111011011000010101000000e-2 27 0b1.11010001010110111001110001e-3 N N
+
+# bug 20090930, infinite loop
++ + 3464 inf 3464 inf  866 -0x2.5763c6519ef1510f8afa101a210b8030b1909cc17004db561a25d9b53e2c08c41c01e8bbac5af6299b9d8786030aa14943d841798c8c369287942e4d4cec42a60ab0922af931159805e631128e97f973754ad53972d5d320a651a3b4a667f0ef2b92dbd698d159c3642675140@192158913 866 -0xd.15f2d530934dd930d66e89d70762d2337a8f973dd6915eb6b532fd372fcc955df1d852632d4e46fe64154ceda991a1302caf1b0ec622497e3e5724dd05b1c89a06e28d7e18e8af58f5ff4c9998cb31714688867524f41e0b31e847c1bf40de5127f858069998efd7c3e599080@192158893 N N
+
+# bug 20091001, infinite loop
+? + 2256 0 2256 -0  564 0xc.87999bfd1cb1a64288881e214b7cf1af979863b23c030b79c4a8bebb39177967608388a2e4df527977e7755a25df8af8f72fdd6dd2f42bd00de83088b4e9b59ce85caf2e6b0c0@-184298749 564 -0x2.5109af459d4daf357e09475ec991cdc9b02c8f7dfacdc060d2a24710d09c997f8aea6dbd46f10828c30b583fdcc90d7dcbb895689d594d3813db40784d2309e450d1fb6e38da8@-184298726 N N
diff --git a/mpc/tests/sqrt.dat b/mpc/tests/sqrt.dat
new file mode 100644
index 0000000..7ffaedc
--- /dev/null
+++ b/mpc/tests/sqrt.dat
@@ -0,0 +1,140 @@
+# Data file for mpc_sqrt.
+#
+# Copyright (C) INRIA, 2008, 2010
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP_RE  OP_RE  PREC_OP_IM  OP_IM  RND_RE  RND_IM
+#
+# see sin.dat for precisions
+
+# special values (following ISO C99 standard)
+0 0 53 +inf 53 -inf     53 -inf 53 -inf N N
+0 0 53   +0 53 -inf     53 -inf 53   -1 N N
+0 0 53   +0 53 -inf     53 -inf 53   -0 N N
+0 0 53   +0 53 +inf     53 -inf 53   +0 N N
+0 0 53   +0 53 +inf     53 -inf 53   +1 N N
+0 0 53 +inf 53 +inf     53 -inf 53 +inf N N
+0 0 53  nan 53  inf     53 -inf 53  nan N N
+0 0 53 +inf 53 -inf     53   -1 53 -inf N N
+0 0 53   +0 53   -1     53   -1 53   -0 N N
+0 0 53   +0 53   +1     53   -1 53   +0 N N
+0 0 53 +inf 53 +inf     53   -1 53 +inf N N
+0 0 53  nan 53  nan     53   -1 53  nan N N
+0 0 53 +inf 53 -inf     53   -0 53 -inf N N
+0 0 53   +1 53   -1     53   -0 53   -2 N N
+0 0 53   +0 53   -0     53   -0 53   -0 N N
+0 0 53   +0 53   +0     53   -0 53   +0 N N
+0 0 53   +1 53   +1     53   -0 53   +2 N N
+0 0 53 +inf 53 +inf     53   -0 53 +inf N N
+0 0 53  nan 53  nan     53   -0 53  nan N N
+0 0 53 +inf 53 -inf     53   +0 53 -inf N N
+0 0 53   +1 53   -1     53   +0 53   -2 N N
+0 0 53   +0 53   -0     53   +0 53   -0 N N
+0 0 53   +0 53   +0     53   +0 53   +0 N N
+0 0 53   +1 53   +1     53   +0 53   +2 N N
+0 0 53 +inf 53 +inf     53   +0 53 +inf N N
+0 0 53  nan 53  nan     53   +0 53  nan N N
+0 0 53 +inf 53 -inf     53   +1 53 -inf N N
+0 0 53   +1 53   -0     53   +1 53   -0 N N
+0 0 53   +1 53   +0     53   +1 53   +0 N N
+0 0 53 +inf 53 +inf     53   +1 53 +inf N N
+0 0 53  nan 53  nan     53   +1 53  nan N N
+0 0 53 +inf 53 -inf     53 +inf 53 -inf N N
+0 0 53 +inf 53   -0     53 +inf 53   -1 N N
+0 0 53 +inf 53   -0     53 +inf 53   -0 N N
+0 0 53 +inf 53   +0     53 +inf 53   +0 N N
+0 0 53 +inf 53   +0     53 +inf 53   +1 N N
+0 0 53 +inf 53 +inf     53 +inf 53 +inf N N
+0 0 53 +inf 53  nan     53 +inf 53  nan N N
+0 0 53 +inf 53 -inf     53  nan 53 -inf N N
+0 0 53  nan 53  nan     53  nan 53   -1 N N
+0 0 53  nan 53  nan     53  nan 53   -0 N N
+0 0 53  nan 53  nan     53  nan 53   +0 N N
+0 0 53  nan 53  nan     53  nan 53   +1 N N
+0 0 53 +inf 53 +inf     53  nan 53 +inf N N
+0 0 53  nan 53  nan     53  nan 53  nan N N
+
+# purely real argument
+# sqrt(x +i*0) = sqrt(x) +i*0, when x>0
+# sqrt(x -i*0) = sqrt(x) -i*0, when x>0
+# sqrt(x +i*0) = +0 +i*sqrt(-x) +i*0, when x<0
+# sqrt(x -i*0) = +0 -i*sqrt(-x) +i*0, when x<0
++ 0 53  0x16a09e667f3bcdp-52 53                    +0    53  2 17 +0 N N
+0 + 53                    +0 53  0x16a09e667f3bcdp-52    54 -2 16 +0 Z N
++ 0 53  0x16a09e667f3bcdp-52 53                    -0    55  2 15 -0 U N
+0 - 53                    +0 53 -0x16a09e667f3bcdp-52    56 -2 14 -0 D N
+- 0 53  0x5a827999fcef30p-54 53                    +0    57  2 13 +0 Z Z
+0 - 53                    +0 53  0x5a827999fcef30p-54    58 -2 12 +0 U Z
+- 0 53  0x5a827999fcef30p-54 53                    -0    59  2 11 -0 D Z
+0 + 53                    +0 53 -0x5a827999fcef30p-54    60 -2 10 -0 N Z
++ 0 53  0x16a09e667f3bcdp-52 53                    +0    61  2  9 +0 U U
+0 + 53                    +0 53  0x16a09e667f3bcdp-52    62 -2  8 +0 D U
++ 0 53  0x16a09e667f3bcdp-52 53                    -0    63  2  7 -0 N U
+0 + 53                    +0 53 -0x5a827999fcef30p-54    64 -2  6 -0 Z U
+- 0 53  0x5a827999fcef30p-54 53                    +0    65  2  5 +0 D D
+0 - 53                    +0 53  0x5a827999fcef30p-54    66 -2  4 +0 N D
+- 0 53  0x5a827999fcef30p-54 53                    -0    67  2  3 -0 Z D
+0 - 53                    +0 53 -0x16a09e667f3bcdp-52    68 -2  2 -0 U D
+
+# purely imaginary argument
+# sqrt(+/-0 +i*y) = sqrt(y/2) * (1 +i), when y >0
+# sqrt(+/-0 +i*y) = sqrt(-y/2) * (1 -i), when y < 0
++ + 53 0x16a09e667f3bcdp-52 53  0x16a09e667f3bcdp-52    53 +0 53  4 N N
+- + 53 0x5a827999fcef30p-54 53  0x16a09e667f3bcdp-52    51 -0 54  4 Z N
++ - 53 0x16a09e667f3bcdp-52 53 -0x16a09e667f3bcdp-52    49 +0 55 -4 U N
+- - 53 0x5a827999fcef30p-54 53 -0x16a09e667f3bcdp-52    47 -0 56 -4 D N
+- - 53 0x5a827999fcef30p-54 53  0x5a827999fcef30p-54    45 +0 57  4 Z Z
++ - 53 0x16a09e667f3bcdp-52 53  0x5a827999fcef30p-54    43 -0 58  4 U Z
+- + 53 0x5a827999fcef30p-54 53 -0x5a827999fcef30p-54    41 +0 59 -4 D Z
++ + 53 0x16a09e667f3bcdp-52 53 -0x5a827999fcef30p-54    39 -0 60 -4 N Z
++ + 53 0x16a09e667f3bcdp-52 53  0x16a09e667f3bcdp-52    37 +0 61  4 U U
+- + 53 0x5a827999fcef30p-54 53  0x16a09e667f3bcdp-52    35 -0 62  4 D U
++ + 53 0x16a09e667f3bcdp-52 53 -0x5a827999fcef30p-54    33 +0 63 -4 N U
+- + 53 0x5a827999fcef30p-54 53 -0x5a827999fcef30p-54    31 -0 64 -4 Z U
+- - 53 0x5a827999fcef30p-54 53  0x5a827999fcef30p-54    29 +0 65  4 D D
++ - 53 0x16a09e667f3bcdp-52 53  0x5a827999fcef30p-54    27 -0 66  4 N D
+- - 53 0x5a827999fcef30p-54 53 -0x16a09e667f3bcdp-52    25 +0 67 -4 Z D
++ - 53 0x16a09e667f3bcdp-52 53 -0x16a09e667f3bcdp-52    23 -0 68 -4 U D
+
+# bugs fixed in r160 2008-07-15
+- + 19 0b11101001001001001100p+39 19 -0b1010110101100111011p-236    19 0b1.101010001010100000p+117 19 -0b1.001110111101100001p-158 N Z
+- + 2 0b11p+100 2 -0b11p+100    2         -0 2 -0b11p+203 N Z
+0 + 2         0 2 -0b10p+117    2 -0b11p+235 2         -0 N Z
+
+# close to infinite loop reported by Emmanuel Thome, 22 Oct 2010,
+# and all its variants of signs and directed roundings
+- + 375 1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281177 375 1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 N N
++ + 375 0x1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281177 375 1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 U U
+- - 375 1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef5fffffffffffffffffffffffffffffffffffffffffffep-202281177 375 1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 D D
+- - 375 1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef5fffffffffffffffffffffffffffffffffffffffffffep-202281177 375 1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 Z Z
+- - 375 1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281177 375 1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 N N
++ + 375 0x1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004 375  -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef5fffffffffffffffffffffffffffffffffffffffffffep-202281177 375 1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 U U
+- - 375 1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281177 375 1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 D D
+- + 375 1 375  -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef5fffffffffffffffffffffffffffffffffffffffffffep-202281177 375 1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 Z Z
++ - 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281177 375 1 375 -1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 N N
++ + 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281177 375 0x1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004 375 -1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 U U
+- - 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef5fffffffffffffffffffffffffffffffffffffffffffep-202281177 375 1 375 -1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 D D
+- - 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef5fffffffffffffffffffffffffffffffffffffffffffep-202281177 375 1 375 -1 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 Z Z
++ + 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281177 375 -1 375 -1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 N N
++ + 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281177 375 -1 375 -1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 U U
+- - 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef5fffffffffffffffffffffffffffffffffffffffffffep-202281177 375 -0x1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004 375 -1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 D D
+- + 375 0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef5fffffffffffffffffffffffffffffffffffffffffffep-202281177 375 -1 375 -1 375 -0xf.8a8aae3080b3dd665e316d262fd54c1ca22a83dc9acb92ef6p-202281176 Z Z
diff --git a/mpc/tests/strtoc.dat b/mpc/tests/strtoc.dat
new file mode 100644
index 0000000..eb953fa
--- /dev/null
+++ b/mpc/tests/strtoc.dat
@@ -0,0 +1,170 @@
+# Data file for mpc_strtoc.
+#
+# Copyright (C) INRIA, 2009
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The format respects the parameter order in function prototype as follow:
+#
+# INEX_RE INEX_IM PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  "NSTRING" "RSTRING" BASE  RND_RE  RND_IM
+#
+# The string NSTRING is considered as a complex number rop = rop1 + i*rop2
+# written in base BASE. The remainder of the string, i.e. non-whitespace
+# characters being not part of the number, is equal to RSTRING.
+#
+# ROP_RE is checked against rop1 rounded to the precision PREC_ROP_RE
+#   in the direction RND_RE
+# ROP_IM is checked against rop2 rounded to the precision PREC_ROP_IM
+#   in the direction RND_IM
+# INEX_RE is the ternary value for the real part with the following notation:
+# "?" ternary value not checked
+# "!" function should return error indicator -1
+# "+" if ROP_RE is greater than the exact mathematical result
+# "0" if ROP_RE is exactly the mathematical result
+# "-" if ROP_RE is less than the exact mathematical result
+# (m.m. INEX_IM)
+# rounding modes notation:
+# "N" is rounding to nearest
+# "Z" is rounding towards zero
+# "U" is rounding towards plus infinity
+# "D" is rounding towards minus infinity
+# Use prefixes "0b" for values in base two, "0x" for values in base sixteen,
+#   no prefix for value in base ten.
+# In all bases, "nan" is NaN, "inf" is infinity;
+# The sign of the result is checked with "+inf", "-inf", "-0", or "+0".
+
+# invalid base
+! ! 53 nan 53 nan      "(1 1)"                    "(1 1)"          99 N N
+! ! 53 nan 53 nan      "(1 1)"                    "(1 1)"           1 N N
+
+# invalid strings
+! ! 53 nan 53 nan      ""                         ""               10 N N
+! ! 53 nan 53 nan      "non"                      "non"            10 N N
+! ! 53 nan 53 nan      "NON"                      "NON"            10 N N
+! ! 53 nan 53 nan      "N A N"                    "N A N"          10 N N
+! ! 53 nan 53 nan      "(1) 1"                    "(1) 1"          10 N N #no imaginary part
+! ! 53 nan 53 nan      "."                        "."              10 N N
+! ! 53 nan 53 nan      ". 1"                      ". 1"            10 N N #no space allowed here
+! ! 53 nan 53 nan      "+ 1"                      "+ 1"             2 N N #no space allowed here
+! ! 53 nan 53 nan      "+3 "                      "+3 "             2 N N #invalid digit
+! ! 53 nan 53 nan      "+ INF "                   "+ INF "         10 N N #no space allowed here
+! ! 53 nan 53 nan      "( +INF)"                  "( +INF)"        10 N N
+! ! 53 nan 53 nan      "(1 +1 "                   "(1 +1 "         10 N N
+! ! 53 nan 53 nan      "(1+1)"                    "(1+1)"          10 N N
+! ! 53 nan 53 nan      "(1 + 1)"                  "(1 + 1)"        10 N N
+! ! 53 nan 53 nan      "(@nan@(quiet)"            "(@nan@(quiet)"  10 N N
+! ! 53 nan 53 nan      "zero"                     "zero"           10 N N
+! ! 53 nan 53 nan      "&^+"                      "&^+"            10 N N
+! ! 53 nan 53 nan      "i"                        "i"              18 N N
+! ! 53 nan 53 nan      "I"                        "I"              18 N N
+! ! 53 nan 53 nan      "z"                        "z"              35 N N
+! ! 53 nan 53 nan      "Z"                        "Z"              35 N N
+! ! 53 nan 53 nan      "(i 0)"                    "(i 0)"          18 N N
+! ! 53 nan 53 nan      "(I 0)"                    "(I 0)"          18 N N
+! ! 53 nan 53 nan      "(z 0)"                    "(z 0)"          35 N N
+! ! 53 nan 53 nan      "(Z 0)"                    "(Z 0)"          35 N N
+! ! 53 nan 53 nan      "(0 i)"                    "(0 i)"          18 N N
+! ! 53 nan 53 nan      "(0 I)"                    "(0 I)"          18 N N
+! ! 53 nan 53 nan      "(0 z)"                    "(0 z)"          35 N N
+! ! 53 nan 53 nan      "(0 Z)"                    "(0 Z)"          35 N N
+
+# special values
+0 0 53  nan 53   +0    "nan"                      ""               10 N N
+0 0 53 +nan 53   +0    "+NAN"                     ""               10 N N
+0 0 53  nan 53   +0    "  @NAN@  "                "  "             10 N N
+0 0 53  nan 53  nan    "(@nan@(QUIET) nan)"       ""               10 N N
+0 0 53  nan 53   +0    "@nan@(quiet"              "(quiet"         10 N N
+0 0 53  nan 53   +0    "NaN((keep out))"          "((keep out))"   10 N N
+0 0 53  nan 53   +0    "nan(0 1)"                 "(0 1)"          10 N N
+0 0 53  nan 53   +0    "nan(0-1)"                 "(0-1)"          10 N N
+0 0 53  nan 53   +0    "nan(0_1)"                 ""               10 N N
+0 0 53  nan 53   +0    " nan nan nan nan"         " nan nan nan"   10 N N
+0 0 53  inf 53   +0    "inf"                      ""               10 N N
+0 0 53 -inf 53   +0    "-inf"                     ""               10 N N
+0 0 53 +inf 53   +0    "       infinity"          ""               10 N N
+0 0 53 +inf 53   +0    "+INF            x"        "            x"  10 N N
+0 0 53   +0 53 +inf    "(0 +inf)"                 ""               10 N N
+0 0 53   +0 53 +inf    "  (+0 INF)  "             "  "             10 N N
+0 0 53   +0 53 -inf    "(0 -infinity)"            ""               10 N N
+0 0 53   +0 53 -inf    "  (+0 -INF)"              ""               10 N N
+0 0 53 -inf 53   -0    " (-@inf@ -0)"             ""               10 N N
+0 0 53 +inf 53  nan    "(+inf nan(9u137))     "   "     "          10 N N
+0 0 53  nan 53   +0    "NaN  + inf"               "  + inf"        10 N N
+
+# pure real argument
+0 0 53                     +0 53 +0    "0"                 ""      10 N N
+0 0 53                     +0 53 +0    "00000"             ""      10 N N
+0 0 53                     +0 53 +0    "+0"                ""      10 N N
+0 0 53                     -0 53 +0    "-0"                ""      10 N N
+0 0 53                     +1 53 +0    "1"                 ""      10 N N
+0 0 53                     +1 53 +0    "001"               ""      10 N N
+0 0 53                     +1 53 +0    "1 +1"              " +1"   10 N N
+0 0 53                     +1 53 +0    "1a"                "a"     10 N N
+0 0 53                     +1 53 +0    "1e-"               "e-"    10 N N
+0 0 53                     +1 53 +0    "1+2"               "+2"    10 N N
+- 0 53   +0x9D70A3D70A3D7p-51 53 +0    "(+1.23 0.0)"       ""      10 N N
+0 0 53                    -10 53 +0    "(-10. 0000) "      " "     10 N N
+0 0 53                +0x5p-3 53 -0    "(.625 -0)"         ""      10 N N
+- 0 53 +0x14E718D7D7625Ap+612 53 +0    "(1e200  0)"        ""      10 N N
+0 0 53                +0x7530 53 +0    " (3e+4 0)"         ""      10 N N
+- 0 53  +0x10C6F7A0B5ED8Dp-73 53 +0    ".5e-6"             ""      10 N N
+- 0 53  +0x1B1C1E0D914133p-83 53 +0    "(7.89E-10 0)"      ""      10 N N
++ 0 53  -0x7B426FAB61F00Cp+56 53 +0    "  -25@+32"         ""      10 N N
+0 0 53                    -25 53 +0    "-25p+32"           "p+32"  10 N N
+0 0 53                 +43981 53 +0    "0xabcd"            ""      16 N N
+0 0 53                     +0 53 +0    "0xabcd"            "xabcd" 10 N N #no prefix in base ten
+0 0 53                     +2 53 +0    "+0b010"            ""       2 N N
+0 0 53                     +0 53 +0    "+0b010"            "b010"  10 N N #no prefix in base ten
+0 0 53                     +1 53 +0    "1*i"               "*i"    10 N N
+0 0 53                    +18 53 +0    "i*i"               "*i"    20 N N
+0 0 53 18 53 0                         "i"                   ""    19 N N
+0 0 53 35 53 0                         "z"                   ""    36 N N
+0 0 53 35 53 0                         "Z"                   ""    36 N N
+
+# pure imaginary argument
+0 0 53 +0 53                     +1    "(0 1)"               ""    10 N N
+0 0 53 +0 53                     +1    "(0 +1)"              ""    20 N N
+0 0 53 -0 53                     -1    "  (-0 -1)"           ""    10 N N
+0 0 53 -0 53                     -2    "(-0 -2)   "          "   " 10 N N
+0 0 53 +0 53                     +2    "(+0 2)"              ""    10 N N
+0 0 53 +0 53                    +17    "(0 h)"               ""    20 N N
+0 0 53 +0 53                    +18    "(0 i)"               ""    20 N N
+0 + 53 +0 53  -0x14F800008637BDp-44    "(0 -33.55000005e+1)" ""    10 N Z
+0 + 53 +0 53  -0xA1765976008AFp-401    "(+0 -.550000E-105) " " "   10 N U
+0 0 53 0 53 18                         "(0 i)"               ""    19 N N
+0 0 53 0 53 18                         "(0 I)"               ""    19 N N
+0 0 53 0 53 35                         "(0 z)"               ""    36 N N
+0 0 53 0 53 35                         "(0 Z)"               ""    36 N N
+
+# complex argument
+0 0 53            +1 53          +1    "(  1   +1)"          ""    10 N N
+0 0 53            +1 53          +1    " (1   +1)     "      "     " 10 N N
+0 0 53            +7 53         +14    "(7  14)"             ""    10 N N
+0 0 53           +17 53          +1    "(+17 1)"             ""    10 N N
+0 0 53           +27 53          +1    " (+17 +1)"           ""    20 N N
+0 0 53           -18 53          -1    "(-i -1)"             ""    20 N N
+0 0 53           +18 53          -1    "(i -1)"              ""    20 N N
+0 0 53           -18 53          +1    "(-i +1)"             ""    20 N N
+0 0 53           +18 53         +18    "(i +i)"              ""    20 N N
+0 0 53        -14643 53      +20328    "(-bar foo)"          ""    36 N N
+0 0 53      -1647190 53     -512315    "(-zaza -azaz)"       ""    36 N N
+0 0 53       +0b1010 53     +0xabcd    "(0b1010 +0xabcd)"    ""     0 N N #base autodetection
+0 0 53       +0xabcd 53     +0b1010    "(+0xa.bcd@+3 0b.101p4)" ""  0 N N #base autodetection
+
+# white space before the closing ')'
+0 0 53            +1 53          +1    "(  1   +1   )1"      "1"    10 N N
diff --git a/mpc/tests/sub.dat b/mpc/tests/sub.dat
new file mode 100644
index 0000000..2fedc28
--- /dev/null
+++ b/mpc/tests/sub.dat
@@ -0,0 +1,96 @@
+# Data file for mpc_sub.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# The line format respects the parameter order in function prototype as
+# follow:
+#
+# INEX_RE  INEX_IM  PREC_ROP_RE  ROP_RE  PREC_ROP_IM  ROP_IM  PREC_OP1_RE  OP1_RE  PREC_OP1_IM  OP1_IM  PREC_OP2_RE  OP2_RE  PREC_OP2_IM  OP2_IM  RND_RE  RND_IM
+#
+# see add.dat for details.
+
+# special values (following ISO C99 standard)
+0 0 53  nan 53  nan    53 -inf 53 -inf 53 -inf 53 -inf N Z
+0 0 53 -inf 53 +inf    53 -inf 53 +inf 53   +1 53 -inf Z U
+0 0 53  nan 53 -inf    53 +inf 53 -inf 53 +inf 53   +0 U D
+0 0 53 +inf 53 +inf    53 +inf 53 +inf 53   -0 53   -1 D N
+0 0 53 -inf 53 -inf    53 -inf 53 -inf 53   -0 53   -1 N U
+0 0 53 -inf 53  nan    53 -inf 53 +inf 53 +inf 53  nan Z D
+0 0 53  nan 53 -inf    53 +inf 53 -inf 53  nan 53   -1 U N
+0 0 53 +inf 53  nan    53 +inf 53 +inf 53   -0 53  nan D Z
+0 0 53  nan 53  nan    53 -inf 53 -inf 53  nan 53  nan N D
+
+0 0 53 -inf 53 -inf    53   -1 53 -inf 53 +inf 53   -1 N D
+0 0 53 -inf 53   +1    53 -inf 53   +1 53 +inf 53   -0 Z N
+0 0 53   +1 53 -inf    53   +1 53 -inf 53   -0 53   +1 U Z
+0 0 53 +inf 53   +1    53 +inf 53   +1 53   -0 53   -0 D U
+0 0 53 -inf 53  nan    53   -1 53 -inf 53 +inf 53  nan N N
+0 0 53  nan 53   +0    53 -inf 53   +1 53  nan 53   +1 Z Z
+0 0 53   +1 53  nan    53   +1 53 -inf 53   -0 53  nan U U
+0 0 53  nan 53  nan    53 +inf 53   +1 53  nan 53  nan D D
+
+0 0 53   -0 53 -inf    53   -0 53 -inf 53   +0 53 +inf D D
+0 0 53 -inf 53   +0    53 -inf 53   +0 53   +1 53   -0 N Z
+0 0 53   +0 53 -inf    53   +0 53 -inf 53   -0 53   -0 Z U
+0 0 53 +inf 53  nan    53 +inf 53   +0 53 -inf 53  nan U D
+0 0 53  nan 53 -inf    53   -0 53 -inf 53  nan 53   -1 D N
+0 0 53 -inf 53  nan    53 -inf 53   +0 53   +0 53  nan N U
+0 0 53  nan 53  nan    53   +0 53 -inf 53  nan 53  nan Z D
+
+0 0 53   +0 53   +2    53   +0 53   +1 53   -0 53   -1 Z D
+0 0 53   -1 53   +0    53   -1 53   -0 53   +0 53   -0 U N
+0 0 53  nan 53 -inf    53   -0 53   +1 53  nan 53 +inf D Z
+0 0 53   +2 53  nan    53   +1 53   -0 53   -1 53  nan N D
+0 0 53  nan 53   +1    53   +0 53   +1 53  nan 53   -0 Z N
+0 0 53  nan 53  nan    53   -1 53   -0 53  nan 53  nan U Z
+
+0 0 53   -0 53   +0    53   -0 53   +0 53   +0 53   -0 U Z
+0 0 53  nan 53 +inf    53   +0 53   -0 53  nan 53 -inf D U
+0 0 53   +1 53  nan    53   +0 53   +0 53   -1 53  nan N N
+0 0 53  nan 53   +0    53   -0 53   -0 53  nan 53   -0 Z Z
+0 0 53  nan 53  nan    53   -0 53   +0 53  nan 53  nan U U
+
+0 0 53  nan 53 -inf    53  nan 53 -inf 53  nan 53 +inf U U
+0 0 53 +inf 53  nan    53 +inf 53  nan 53   -1 53  nan D D
+0 0 53  nan 53 -inf    53  nan 53 -inf 53  nan 53   -0 N Z
+0 0 53  nan 53  nan    53 -inf 53  nan 53  nan 53  nan Z U
+
+0 0 53  nan 53  nan    53   +1 53  nan 53  nan 53   -1 Z U
+0 0 53  nan 53  nan    53  nan 53   +1 53   -0 53  nan U D
+0 0 53  nan 53  nan    53   -1 53  nan 53  nan 53  nan D N
+
+0 0 53  nan 53  nan    53  nan 53   +0 53   +0 53  nan D N
+0 0 53  nan 53  nan    53   +0 53  nan 53  nan 53  nan N U
+
+0 0 53  nan 53  nan    53  nan 53  nan 53  nan 53  nan N U
+
+# pure real argument
++ 0 53  0x10000000000000p-52  53 +0    53 +1 53 -0 53 0x1p-105 53 -0 N N
+- 0 53  0x1fffffffffffffp-53  53 +0    53 +1 53 -0 53 0x1p-105 53 -0 Z Z
++ 0 53  0x10000000000000p-52  53 +0    53 +1 53 -0 53 0x1p-105 53 -0 U U
+- 0 53  0x1fffffffffffffp-53  53 -0    53 +1 53 -0 53 0x1p-105 53 -0 D D
+
+# pure imaginary argument
+0 - 53 +0 53 -0x10000000000000p-52     53 -0 53 0x10000000000000p-106 53 -0 53 +1 N N
+0 + 53 +0 53 -0x1fffffffffffffp-53     53 -0 53 0x10000000000001p-106 53 -0 53 +1 N N
+0 + 53 +0 53 -0x1fffffffffffffp-53     53 +0 53 0x10000000000001p-106 53 -0 53 +1 Z Z
+0 + 53 +0 53 -0x1fffffffffffffp-53     53 +0 53 0x10000000000001p-106 53 -0 53 +1 U U
+0 - 53 -0 53 -0x10000000000000p-52     53 -0 53 0x10000000000001p-106 53 -0 53 +1 D D
+
diff --git a/mpc/tests/sub_fr.dat b/mpc/tests/sub_fr.dat
new file mode 100644
index 0000000..1f25c5b
--- /dev/null
+++ b/mpc/tests/sub_fr.dat
@@ -0,0 +1,380 @@
+# Data file for mpc_sub_fr.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see add_fr.dat.
+
+# special values
+0 0 7  nan 7 -inf   7 -inf 7 -inf  7 -inf  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7   -1  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7   -0  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7   +0  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7    1  N N
+0 0 7 -inf 7 -inf   7 -inf 7 -inf  7 +inf  N N
+0 0 7  nan 7 -inf   7 -inf 7 -inf  7  nan  N N
+0 0 7  nan 7   -1   7 -inf 7   -1  7 -inf  N N
+0 0 7 -inf 7   -1   7 -inf 7   -1  7   -1  N N
+0 0 7 -inf 7   -1   7 -inf 7   -1  7   -0  N N
+0 0 7 -inf 7   -1   7 -inf 7   -1  7   +0  N N
+0 0 7 -inf 7   -1   7 -inf 7   -1  7    1  N N
+0 0 7 -inf 7   -1   7 -inf 7   -1  7 +inf  N N
+0 0 7  nan 7   -1   7 -inf 7   -1  7  nan  N N
+0 0 7  nan 7   -0   7 -inf 7   -0  7 -inf  N N
+0 0 7 -inf 7   -0   7 -inf 7   -0  7   -1  N N
+0 0 7 -inf 7   -0   7 -inf 7   -0  7   -0  N N
+0 0 7 -inf 7   -0   7 -inf 7   -0  7   +0  N N
+0 0 7 -inf 7   -0   7 -inf 7   -0  7    1  N N
+0 0 7 -inf 7   -0   7 -inf 7   -0  7 +inf  N N
+0 0 7  nan 7   -0   7 -inf 7   -0  7  nan  N N
+0 0 7  nan 7   +0   7 -inf 7   +0  7 -inf  N N
+0 0 7 -inf 7   +0   7 -inf 7   +0  7   -1  N N
+0 0 7 -inf 7   +0   7 -inf 7   +0  7   -0  N N
+0 0 7 -inf 7   +0   7 -inf 7   +0  7   +0  N N
+0 0 7 -inf 7   +0   7 -inf 7   +0  7    1  N N
+0 0 7 -inf 7   +0   7 -inf 7   +0  7 +inf  N N
+0 0 7  nan 7   +0   7 -inf 7   +0  7  nan  N N
+0 0 7  nan 7    1   7 -inf 7    1  7 -inf  N N
+0 0 7 -inf 7    1   7 -inf 7    1  7   -1  N N
+0 0 7 -inf 7    1   7 -inf 7    1  7   -0  N N
+0 0 7 -inf 7    1   7 -inf 7    1  7   +0  N N
+0 0 7 -inf 7    1   7 -inf 7    1  7    1  N N
+0 0 7 -inf 7    1   7 -inf 7    1  7 +inf  N N
+0 0 7  nan 7    1   7 -inf 7    1  7  nan  N N
+0 0 7  nan 7 +inf   7 -inf 7 +inf  7 -inf  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7   -1  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7   -0  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7   +0  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7    1  N N
+0 0 7 -inf 7 +inf   7 -inf 7 +inf  7 +inf  N N
+0 0 7  nan 7 +inf   7 -inf 7 +inf  7  nan  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7 -inf  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7   -1  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7   -0  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7   +0  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7    1  N N
+0 0 7 -inf 7  nan   7 -inf 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7 -inf 7  nan  7  nan  N N
+0 0 7 +inf 7 -inf   7   -1 7 -inf  7 -inf  N N
+0 0 7    0 7 -inf   7   -1 7 -inf  7   -1  N N
+0 0 7   -1 7 -inf   7   -1 7 -inf  7   -0  N N
+0 0 7   -1 7 -inf   7   -1 7 -inf  7   +0  N N
+0 0 7   -2 7 -inf   7   -1 7 -inf  7    1  N N
+0 0 7 -inf 7 -inf   7   -1 7 -inf  7 +inf  N N
+0 0 7  nan 7 -inf   7   -1 7 -inf  7  nan  N N
+0 0 7 +inf 7   -1   7   -1 7   -1  7 -inf  N N
+0 0 7 -inf 7   -1   7   -1 7   -1  7 +inf  N N
+0 0 7  nan 7   -1   7   -1 7   -1  7  nan  N N
+0 0 7 +inf 7   -0   7   -1 7   -0  7 -inf  N N
+0 0 7 -inf 7   -0   7   -1 7   -0  7 +inf  N N
+0 0 7  nan 7   -0   7   -1 7   -0  7  nan  N N
+0 0 7 +inf 7   +0   7   -1 7   +0  7 -inf  N N
+0 0 7 -inf 7   +0   7   -1 7   +0  7 +inf  N N
+0 0 7  nan 7   +0   7   -1 7   +0  7  nan  N N
+0 0 7 +inf 7    1   7   -1 7    1  7 -inf  N N
+0 0 7 -inf 7    1   7   -1 7    1  7 +inf  N N
+0 0 7  nan 7    1   7   -1 7    1  7  nan  N N
+0 0 7 +inf 7 +inf   7   -1 7 +inf  7 -inf  N N
+0 0 7    0 7 +inf   7   -1 7 +inf  7   -1  N N
+0 0 7   -1 7 +inf   7   -1 7 +inf  7   -0  N N
+0 0 7   -1 7 +inf   7   -1 7 +inf  7   +0  N N
+0 0 7   -2 7 +inf   7   -1 7 +inf  7    1  N N
+0 0 7 -inf 7 +inf   7   -1 7 +inf  7 +inf  N N
+0 0 7  nan 7 +inf   7   -1 7 +inf  7  nan  N N
+0 0 7 +inf 7  nan   7   -1 7  nan  7 -inf  N N
+0 0 7    0 7  nan   7   -1 7  nan  7   -1  N N
+0 0 7   -1 7  nan   7   -1 7  nan  7   -0  N N
+0 0 7   -1 7  nan   7   -1 7  nan  7   +0  N N
+0 0 7   -2 7  nan   7   -1 7  nan  7    1  N N
+0 0 7 -inf 7  nan   7   -1 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   -1 7  nan  7  nan  N N
+0 0 7 +inf 7 -inf   7   -0 7 -inf  7 -inf  N N
+0 0 7    1 7 -inf   7   -0 7 -inf  7   -1  N N
+0 0 7    0 7 -inf   7   -0 7 -inf  7   -0  N N
+0 0 7   -0 7 -inf   7   -0 7 -inf  7   +0  N N
+0 0 7   -1 7 -inf   7   -0 7 -inf  7    1  N N
+0 0 7 -inf 7 -inf   7   -0 7 -inf  7 +inf  N N
+0 0 7  nan 7 -inf   7   -0 7 -inf  7  nan  N N
+0 0 7 +inf 7   -1   7   -0 7   -1  7 -inf  N N
+0 0 7 -inf 7   -1   7   -0 7   -1  7 +inf  N N
+0 0 7  nan 7   -1   7   -0 7   -1  7  nan  N N
+0 0 7 +inf 7   -0   7   -0 7   -0  7 -inf  N N
+0 0 7 -inf 7   -0   7   -0 7   -0  7 +inf  N N
+0 0 7  nan 7   -0   7   -0 7   -0  7  nan  N N
+0 0 7 +inf 7   +0   7   -0 7   +0  7 -inf  N N
+0 0 7 -inf 7   +0   7   -0 7   +0  7 +inf  N N
+0 0 7  nan 7   +0   7   -0 7   +0  7  nan  N N
+0 0 7 +inf 7    1   7   -0 7    1  7 -inf  N N
+0 0 7 -inf 7    1   7   -0 7    1  7 +inf  N N
+0 0 7  nan 7    1   7   -0 7    1  7  nan  N N
+0 0 7 +inf 7 +inf   7   -0 7 +inf  7 -inf  N N
+0 0 7    1 7 +inf   7   -0 7 +inf  7   -1  N N
+0 0 7    0 7 +inf   7   -0 7 +inf  7   -0  N N
+0 0 7   -0 7 +inf   7   -0 7 +inf  7   +0  N N
+0 0 7   -1 7 +inf   7   -0 7 +inf  7    1  N N
+0 0 7 -inf 7 +inf   7   -0 7 +inf  7 +inf  N N
+0 0 7  nan 7 +inf   7   -0 7 +inf  7  nan  N N
+0 0 7 +inf 7  nan   7   -0 7  nan  7 -inf  N N
+0 0 7    1 7  nan   7   -0 7  nan  7   -1  N N
+0 0 7    0 7  nan   7   -0 7  nan  7   -0  N N
+0 0 7   -0 7  nan   7   -0 7  nan  7   +0  N N
+0 0 7   -1 7  nan   7   -0 7  nan  7    1  N N
+0 0 7 -inf 7  nan   7   -0 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   -0 7  nan  7  nan  N N
+0 0 7 +inf 7 -inf   7   +0 7 -inf  7 -inf  N N
+0 0 7    1 7 -inf   7   +0 7 -inf  7   -1  N N
+0 0 7   +0 7 -inf   7   +0 7 -inf  7   -0  N N
+0 0 7    0 7 -inf   7   +0 7 -inf  7   +0  N N
+0 0 7   -1 7 -inf   7   +0 7 -inf  7    1  N N
+0 0 7 -inf 7 -inf   7   +0 7 -inf  7 +inf  N N
+0 0 7  nan 7 -inf   7   +0 7 -inf  7  nan  N N
+0 0 7 +inf 7   -1   7   +0 7   -1  7 -inf  N N
+0 0 7 -inf 7   -1   7   +0 7   -1  7 +inf  N N
+0 0 7  nan 7   -1   7   +0 7   -1  7  nan  N N
+0 0 7 +inf 7   -0   7   +0 7   -0  7 -inf  N N
+0 0 7 -inf 7   -0   7   +0 7   -0  7 +inf  N N
+0 0 7  nan 7   -0   7   +0 7   -0  7  nan  N N
+0 0 7 +inf 7   +0   7   +0 7   +0  7 -inf  N N
+0 0 7 -inf 7   +0   7   +0 7   +0  7 +inf  N N
+0 0 7  nan 7   +0   7   +0 7   +0  7  nan  N N
+0 0 7 +inf 7    1   7   +0 7    1  7 -inf  N N
+0 0 7 -inf 7    1   7   +0 7    1  7 +inf  N N
+0 0 7  nan 7    1   7   +0 7    1  7  nan  N N
+0 0 7 +inf 7 +inf   7   +0 7 +inf  7 -inf  N N
+0 0 7    1 7 +inf   7   +0 7 +inf  7   -1  N N
+0 0 7   +0 7 +inf   7   +0 7 +inf  7   -0  N N
+0 0 7    0 7 +inf   7   +0 7 +inf  7   +0  N N
+0 0 7   -1 7 +inf   7   +0 7 +inf  7    1  N N
+0 0 7 -inf 7 +inf   7   +0 7 +inf  7 +inf  N N
+0 0 7  nan 7 +inf   7   +0 7 +inf  7  nan  N N
+0 0 7 +inf 7  nan   7   +0 7  nan  7 -inf  N N
+0 0 7    1 7  nan   7   +0 7  nan  7   -1  N N
+0 0 7   +0 7  nan   7   +0 7  nan  7   -0  N N
+0 0 7    0 7  nan   7   +0 7  nan  7   +0  N N
+0 0 7   -1 7  nan   7   +0 7  nan  7    1  N N
+0 0 7 -inf 7  nan   7   +0 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7   +0 7  nan  7  nan  N N
+0 0 7 +inf 7 -inf   7    1 7 -inf  7 -inf  N N
+0 0 7    2 7 -inf   7    1 7 -inf  7   -1  N N
+0 0 7    1 7 -inf   7    1 7 -inf  7   -0  N N
+0 0 7    1 7 -inf   7    1 7 -inf  7   +0  N N
+0 0 7    0 7 -inf   7    1 7 -inf  7    1  N N
+0 0 7 -inf 7 -inf   7    1 7 -inf  7 +inf  N N
+0 0 7  nan 7 -inf   7    1 7 -inf  7  nan  N N
+0 0 7 +inf 7   -1   7    1 7   -1  7 -inf  N N
+0 0 7 -inf 7   -1   7    1 7   -1  7 +inf  N N
+0 0 7  nan 7   -1   7    1 7   -1  7  nan  N N
+0 0 7 +inf 7   -0   7    1 7   -0  7 -inf  N N
+0 0 7 -inf 7   -0   7    1 7   -0  7 +inf  N N
+0 0 7  nan 7   -0   7    1 7   -0  7  nan  N N
+0 0 7 +inf 7   +0   7    1 7   +0  7 -inf  N N
+0 0 7 -inf 7   +0   7    1 7   +0  7 +inf  N N
+0 0 7  nan 7   +0   7    1 7   +0  7  nan  N N
+0 0 7 +inf 7    1   7    1 7    1  7 -inf  N N
+0 0 7 -inf 7    1   7    1 7    1  7 +inf  N N
+0 0 7  nan 7    1   7    1 7    1  7  nan  N N
+0 0 7 +inf 7 +inf   7    1 7 +inf  7 -inf  N N
+0 0 7    2 7 +inf   7    1 7 +inf  7   -1  N N
+0 0 7    1 7 +inf   7    1 7 +inf  7   -0  N N
+0 0 7    1 7 +inf   7    1 7 +inf  7   +0  N N
+0 0 7    0 7 +inf   7    1 7 +inf  7    1  N N
+0 0 7 -inf 7 +inf   7    1 7 +inf  7 +inf  N N
+0 0 7  nan 7 +inf   7    1 7 +inf  7  nan  N N
+0 0 7 +inf 7  nan   7    1 7  nan  7 -inf  N N
+0 0 7    2 7  nan   7    1 7  nan  7   -1  N N
+0 0 7    1 7  nan   7    1 7  nan  7   -0  N N
+0 0 7    1 7  nan   7    1 7  nan  7   +0  N N
+0 0 7    0 7  nan   7    1 7  nan  7    1  N N
+0 0 7 -inf 7  nan   7    1 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7    1 7  nan  7  nan  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7 -inf  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7   -1  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7   -0  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7   +0  N N
+0 0 7 +inf 7 -inf   7 +inf 7 -inf  7    1  N N
+0 0 7  nan 7 -inf   7 +inf 7 -inf  7 +inf  N N
+0 0 7  nan 7 -inf   7 +inf 7 -inf  7  nan  N N
+0 0 7 +inf 7   -1   7 +inf 7   -1  7 -inf  N N
+0 0 7 +inf 7   -1   7 +inf 7   -1  7   -1  N N
+0 0 7 +inf 7   -1   7 +inf 7   -1  7   -0  N N
+0 0 7 +inf 7   -1   7 +inf 7   -1  7   +0  N N
+0 0 7 +inf 7   -1   7 +inf 7   -1  7    1  N N
+0 0 7  nan 7   -1   7 +inf 7   -1  7 +inf  N N
+0 0 7  nan 7   -1   7 +inf 7   -1  7  nan  N N
+0 0 7 +inf 7   -0   7 +inf 7   -0  7 -inf  N N
+0 0 7 +inf 7   -0   7 +inf 7   -0  7   -1  N N
+0 0 7 +inf 7   -0   7 +inf 7   -0  7   -0  N N
+0 0 7 +inf 7   -0   7 +inf 7   -0  7   +0  N N
+0 0 7 +inf 7   -0   7 +inf 7   -0  7    1  N N
+0 0 7  nan 7   -0   7 +inf 7   -0  7 +inf  N N
+0 0 7  nan 7   -0   7 +inf 7   -0  7  nan  N N
+0 0 7 +inf 7   +0   7 +inf 7   +0  7 -inf  N N
+0 0 7 +inf 7   +0   7 +inf 7   +0  7   -1  N N
+0 0 7 +inf 7   +0   7 +inf 7   +0  7   -0  N N
+0 0 7 +inf 7   +0   7 +inf 7   +0  7   +0  N N
+0 0 7 +inf 7   +0   7 +inf 7   +0  7    1  N N
+0 0 7  nan 7   +0   7 +inf 7   +0  7 +inf  N N
+0 0 7  nan 7   +0   7 +inf 7   +0  7  nan  N N
+0 0 7 +inf 7    1   7 +inf 7    1  7 -inf  N N
+0 0 7 +inf 7    1   7 +inf 7    1  7   -1  N N
+0 0 7 +inf 7    1   7 +inf 7    1  7   -0  N N
+0 0 7 +inf 7    1   7 +inf 7    1  7   +0  N N
+0 0 7 +inf 7    1   7 +inf 7    1  7    1  N N
+0 0 7  nan 7    1   7 +inf 7    1  7 +inf  N N
+0 0 7  nan 7    1   7 +inf 7    1  7  nan  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7 -inf  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7   -1  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7   -0  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7   +0  N N
+0 0 7 +inf 7 +inf   7 +inf 7 +inf  7    1  N N
+0 0 7  nan 7 +inf   7 +inf 7 +inf  7 +inf  N N
+0 0 7  nan 7 +inf   7 +inf 7 +inf  7  nan  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7 -inf  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7   -1  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7   -0  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7   +0  N N
+0 0 7 +inf 7  nan   7 +inf 7  nan  7    1  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7 +inf 7  nan  7  nan  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7 -inf  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7   -1  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7   -0  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7   +0  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7    1  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7 +inf  N N
+0 0 7  nan 7 -inf   7  nan 7 -inf  7  nan  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7 -inf  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7   -1  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7   -0  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7   +0  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7    1  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7 +inf  N N
+0 0 7  nan 7   -1   7  nan 7   -1  7  nan  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7 -inf  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7   -1  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7   -0  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7   +0  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7    1  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7 +inf  N N
+0 0 7  nan 7   -0   7  nan 7   -0  7  nan  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7 -inf  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7   -1  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7   -0  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7   +0  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7    1  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7 +inf  N N
+0 0 7  nan 7   +0   7  nan 7   +0  7  nan  N N
+0 0 7  nan 7    1   7  nan 7    1  7 -inf  N N
+0 0 7  nan 7    1   7  nan 7    1  7   -1  N N
+0 0 7  nan 7    1   7  nan 7    1  7   -0  N N
+0 0 7  nan 7    1   7  nan 7    1  7   +0  N N
+0 0 7  nan 7    1   7  nan 7    1  7    1  N N
+0 0 7  nan 7    1   7  nan 7    1  7 +inf  N N
+0 0 7  nan 7    1   7  nan 7    1  7  nan  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7 -inf  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7   -1  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7   -0  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7   +0  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7    1  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7 +inf  N N
+0 0 7  nan 7 +inf   7  nan 7 +inf  7  nan  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 -inf  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -1  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   -0  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7   +0  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7    1  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7 +inf  N N
+0 0 7  nan 7  nan   7  nan 7  nan  7  nan  N N
+
+# values with only 1, -1, +0, -0
+0 0 7    0 7   -1   7   -1 7   -1  7   -1  N N
+0 0 7   -1 7   -1   7   -1 7   -1  7   -0  N N
+0 0 7   -1 7   -1   7   -1 7   -1  7   +0  N N
+0 0 7   -2 7   -1   7   -1 7   -1  7    1  N N
+0 0 7    0 7   -0   7   -1 7   -0  7   -1  N N
+0 0 7   -1 7   -0   7   -1 7   -0  7   -0  N N
+0 0 7   -1 7   -0   7   -1 7   -0  7   +0  N N
+0 0 7   -2 7   -0   7   -1 7   -0  7    1  N N
+0 0 7    0 7   +0   7   -1 7   +0  7   -1  N N
+0 0 7   -1 7   +0   7   -1 7   +0  7   -0  N N
+0 0 7   -1 7   +0   7   -1 7   +0  7   +0  N N
+0 0 7   -2 7   +0   7   -1 7   +0  7    1  N N
+0 0 7    0 7    1   7   -1 7    1  7   -1  N N
+0 0 7   -1 7    1   7   -1 7    1  7   -0  N N
+0 0 7   -1 7    1   7   -1 7    1  7   +0  N N
+0 0 7   -2 7    1   7   -1 7    1  7    1  N N
+0 0 7    1 7   -1   7   -0 7   -1  7   -1  N N
+0 0 7    0 7   -1   7   -0 7   -1  7   -0  N N
+0 0 7   -0 7   -1   7   -0 7   -1  7   +0  N N
+0 0 7   -1 7   -1   7   -0 7   -1  7    1  N N
+0 0 7    1 7   -0   7   -0 7   -0  7   -1  N N
+0 0 7    0 7   -0   7   -0 7   -0  7   -0  N N
+0 0 7   -0 7   -0   7   -0 7   -0  7   +0  N N
+0 0 7   -1 7   -0   7   -0 7   -0  7    1  N N
+0 0 7    1 7   +0   7   -0 7   +0  7   -1  N N
+0 0 7    0 7   +0   7   -0 7   +0  7   -0  N N
+0 0 7   -0 7   +0   7   -0 7   +0  7   +0  N N
+0 0 7   -1 7   +0   7   -0 7   +0  7    1  N N
+0 0 7    1 7    1   7   -0 7    1  7   -1  N N
+0 0 7    0 7    1   7   -0 7    1  7   -0  N N
+0 0 7   -0 7    1   7   -0 7    1  7   +0  N N
+0 0 7   -1 7    1   7   -0 7    1  7    1  N N
+0 0 7    1 7   -1   7   +0 7   -1  7   -1  N N
+0 0 7   +0 7   -1   7   +0 7   -1  7   -0  N N
+0 0 7    0 7   -1   7   +0 7   -1  7   +0  N N
+0 0 7   -1 7   -1   7   +0 7   -1  7    1  N N
+0 0 7    1 7   -0   7   +0 7   -0  7   -1  N N
+0 0 7   +0 7   -0   7   +0 7   -0  7   -0  N N
+0 0 7    0 7   -0   7   +0 7   -0  7   +0  N N
+0 0 7   -1 7   -0   7   +0 7   -0  7    1  N N
+0 0 7    1 7   +0   7   +0 7   +0  7   -1  N N
+0 0 7   +0 7   +0   7   +0 7   +0  7   -0  N N
+0 0 7    0 7   +0   7   +0 7   +0  7   +0  N N
+0 0 7   -1 7   +0   7   +0 7   +0  7    1  N N
+0 0 7    1 7    1   7   +0 7    1  7   -1  N N
+0 0 7   +0 7    1   7   +0 7    1  7   -0  N N
+0 0 7    0 7    1   7   +0 7    1  7   +0  N N
+0 0 7   -1 7    1   7   +0 7    1  7    1  N N
+0 0 7    2 7   -1   7    1 7   -1  7   -1  N N
+0 0 7    1 7   -1   7    1 7   -1  7   -0  N N
+0 0 7    1 7   -1   7    1 7   -1  7   +0  N N
+0 0 7    0 7   -1   7    1 7   -1  7    1  N N
+0 0 7    2 7   -0   7    1 7   -0  7   -1  N N
+0 0 7    1 7   -0   7    1 7   -0  7   -0  N N
+0 0 7    1 7   -0   7    1 7   -0  7   +0  N N
+0 0 7    0 7   -0   7    1 7   -0  7    1  N N
+0 0 7    2 7   +0   7    1 7   +0  7   -1  N N
+0 0 7    1 7   +0   7    1 7   +0  7   -0  N N
+0 0 7    1 7   +0   7    1 7   +0  7   +0  N N
+0 0 7    0 7   +0   7    1 7   +0  7    1  N N
+0 0 7    2 7    1   7    1 7    1  7   -1  N N
+0 0 7    1 7    1   7    1 7    1  7   -0  N N
+0 0 7    1 7    1   7    1 7    1  7   +0  N N
+0 0 7    0 7    1   7    1 7    1  7    1  N N
+
+# also check the imaginary part is correctly rounded
+0 - 2 nan 2 16     2 nan 5 17     2 nan   N N
+0 + 2 nan 2 24     2 nan 5 17     2 nan   N U
+0 - 2 nan 2 16     2 nan 5 17     2 nan   N D
+0 - 2 nan 2 16     2 nan 5 17     2 nan   N Z
+0 + 2 nan 2 -16    2 nan 5 -17    2 nan   N N
+0 + 2 nan 2 -16    2 nan 5 -17    2 nan   N U
+0 - 2 nan 2 -24    2 nan 5 -17    2 nan   N D
+0 + 2 nan 2 -16    2 nan 5 -17    2 nan   N Z
+
diff --git a/mpc/tests/tabs.c b/mpc/tests/tabs.c
new file mode 100644
index 0000000..6af7e55
--- /dev/null
+++ b/mpc/tests/tabs.c
@@ -0,0 +1,37 @@
+/* tabs -- test file for mpc_abs.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (FC, f, mpc_abs);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 1, 0);
+  data_check (f, "abs.dat");
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tacos.c b/mpc/tests/tacos.c
new file mode 100644
index 0000000..d31fb1f
--- /dev/null
+++ b/mpc/tests/tacos.c
@@ -0,0 +1,37 @@
+/* test file for mpc_acos.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_acos);
+
+  test_start ();
+
+  data_check (f, "acos.dat");
+  tgeneric (f, 2, 512, 7, 7);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tacosh.c b/mpc/tests/tacosh.c
new file mode 100644
index 0000000..b09613c
--- /dev/null
+++ b/mpc/tests/tacosh.c
@@ -0,0 +1,58 @@
+/* test file for mpc_acosh.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+static void
+bug20091120 (void)
+{
+  mpc_t x, y;
+
+  mpc_init2 (x, 53);
+  mpc_init3 (y, 17, 42);
+  mpc_set_ui_ui (x, 1, 1, MPC_RNDNN);
+  mpc_acosh (y, x, MPC_RNDNN);
+  if (mpfr_get_prec (mpc_realref(y)) != 17 ||
+      mpfr_get_prec (mpc_imagref(y)) != 42)
+    {
+      printf ("Error, mpc_acosh changed the precisions!!!\n");
+      exit (1);
+    }
+  mpc_clear (x);
+  mpc_clear (y);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_acosh);
+
+  test_start ();
+
+  bug20091120 ();
+
+  data_check (f, "acosh.dat");
+  tgeneric (f, 2, 512, 7, 7);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tadd.c b/mpc/tests/tadd.c
new file mode 100644
index 0000000..04ed6f1
--- /dev/null
+++ b/mpc/tests/tadd.c
@@ -0,0 +1,71 @@
+/* tadd - test file for mpc_add.
+
+Copyright (C) INRIA, 2008, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+static void
+check_ternary_value (void)
+{
+  mpc_t x, y, z;
+  mpfr_prec_t prec;
+
+  mpc_init2 (x, 2);
+  mpc_init2 (y, 2);
+  mpc_init2 (z, 2);
+
+  for (prec = 2; prec <= 1000; prec++)
+    {
+      mpc_set_prec (x, prec);
+      mpc_set_prec (y, prec);
+
+      mpc_set_ui (x, 1, MPC_RNDNN);
+      mpc_mul_2exp (x, x, (unsigned long int) prec, MPC_RNDNN);
+      mpc_set_ui (y, 1, MPC_RNDNN);
+
+      if (mpc_add (z, x, y, MPC_RNDNN) == 0)
+        {
+          fprintf (stderr, "Error in mpc_add: 2^(-prec)+1 cannot be exact\n");
+          exit (1);
+        }
+    }
+
+  mpc_clear (x);
+  mpc_clear (y);
+  mpc_clear (z);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (C_CC, f, mpc_add);
+  f.properties = FUNC_PROP_SYMETRIC;
+
+  test_start ();
+
+  check_ternary_value();
+  data_check (f, "add.dat");
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tadd_fr.c b/mpc/tests/tadd_fr.c
new file mode 100644
index 0000000..5f756b4
--- /dev/null
+++ b/mpc/tests/tadd_fr.c
@@ -0,0 +1,73 @@
+/* test file for mpc_add_fr.
+
+Copyright (C) INRIA, 2008, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+static void
+check_ternary_value (mpfr_prec_t prec_max, mpfr_prec_t step)
+{
+  mpfr_prec_t prec;
+  mpc_t z;
+  mpfr_t f;
+
+  mpc_init2 (z, 2);
+  mpfr_init (f);
+
+  for (prec = 2; prec < prec_max; prec += step)
+    {
+      mpc_set_prec (z, prec);
+      mpfr_set_prec (f, prec);
+
+      mpc_set_ui (z, 1, MPC_RNDNN);
+      mpfr_set_ui (f, 1, GMP_RNDN);
+      if (mpc_add_fr (z, z, f, MPC_RNDNZ))
+        {
+          printf ("Error in mpc_add_fr: 1+1 should be exact\n");
+          exit (1);
+        }
+
+      mpc_set_ui (z, 1, MPC_RNDNN);
+      mpc_mul_2exp (z, z, (unsigned long int) prec, MPC_RNDNN);
+      if (mpc_add_fr (z, z, f, MPC_RNDNN) == 0)
+        {
+          fprintf (stderr, "Error in mpc_add_fr: 2^prec+1 cannot be exact\n");
+          exit (1);
+        }
+    }
+  mpc_clear (z);
+  mpfr_clear (f);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CCF, f, mpc_add_fr);
+  test_start ();
+
+  check_ternary_value (1024, 1);
+
+  data_check (f, "add_fr.dat");
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+  return 0;
+}
diff --git a/mpc/tests/tadd_si.c b/mpc/tests/tadd_si.c
new file mode 100644
index 0000000..7f70e61
--- /dev/null
+++ b/mpc/tests/tadd_si.c
@@ -0,0 +1,69 @@
+/* test file for mpc_add_si.
+
+Copyright (C) INRIA, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+static void
+check_ternary_value (void)
+{
+   mpfr_prec_t prec;
+   mpc_t z;
+   const long int s = -1;
+
+   mpc_init2 (z, 2);
+
+   for (prec=2; prec <= 1024; prec++) {
+      mpc_set_prec (z, prec);
+      mpc_set_ui (z, 3ul, MPC_RNDNN);
+      if (mpc_add_si (z, z, s, MPC_RNDDU)) {
+         printf ("Error in mpc_add_si: 3+(-1) should be exact\n");
+         exit (1);
+      }
+      else if (mpc_cmp_si (z, 2l) != 0) {
+         printf ("Error in mpc_add_si: 3+(-1) should be 2\n");
+         exit (1);
+      }
+
+      mpc_mul_2exp (z, z, (unsigned long int) prec, MPC_RNDNN);
+      if (mpc_add_si (z, z, s, MPC_RNDNN) == 0) {
+         printf ("Error in mpc_add_si: 2^(prec+1)-1 cannot be exact\n");
+         exit (1);
+      }
+    }
+
+    mpc_clear (z);
+}
+
+int
+main (void)
+{
+   DECL_FUNC (CCU, f, mpc_add_ui);
+
+   test_start ();
+
+   check_ternary_value ();
+   tgeneric (f, 2, 1024, 11, -2);
+
+   test_end ();
+
+   return 0;
+}
diff --git a/mpc/tests/tadd_ui.c b/mpc/tests/tadd_ui.c
new file mode 100644
index 0000000..ef7766c
--- /dev/null
+++ b/mpc/tests/tadd_ui.c
@@ -0,0 +1,69 @@
+/* test file for mpc_add_ui.
+
+Copyright (C) INRIA, 2008, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+static void
+check_ternary_value (void)
+{
+  mpfr_prec_t prec;
+  mpc_t z;
+
+  mpc_init2 (z, 2);
+
+  for (prec=2; prec <= 1024; prec++)
+    {
+      mpc_set_prec (z, prec);
+
+      mpc_set_ui (z, 1, MPC_RNDNN);
+      if (mpc_add_ui (z, z, 1, MPC_RNDNZ))
+        {
+          printf ("Error in mpc_add_ui: 1+1 should be exact\n");
+          exit (1);
+        }
+
+      mpc_set_ui (z, 1, MPC_RNDNN);
+      mpc_mul_2exp (z, z, (unsigned long int) prec, MPC_RNDNN);
+      if (mpc_add_ui (z, z, 1, MPC_RNDNN) == 0)
+        {
+          printf ("Error in mpc_add_ui: 2^prec+1 cannot be exact\n");
+          exit (1);
+        }
+    }
+
+  mpc_clear (z);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CCU, f, mpc_add_ui);
+
+  test_start ();
+
+  check_ternary_value ();
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tan.dat b/mpc/tests/tan.dat
new file mode 100644
index 0000000..dcb014c
--- /dev/null
+++ b/mpc/tests/tan.dat
@@ -0,0 +1,130 @@
+# Data test file for mpc_tan.
+
+# Copyright (C) INRIA, 2008, 2010
+
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+
+# See file sin.dat for the format description.
+
+# Special values, following ISO C99 standard, Annex G,
+# more precisely Section G.6.2.6 "The ctanh functions"
+# since G.6 defines ctan(z) as -i * ctanh(i*z)
+
+# Rule [conj]: tan(conj(z)) = conj(tan(z))
+# Rule [odd]:  tan(-z) = -tan(z)
+
+# Note: for each rule, we cite the rule for tanh from C99,
+#       and below the translated rule for tan, using tanh(z) = i tan(-iz),
+#       thus tanh(a+i*b) = c+i*d translates to tan(b-i*a) = d-i*c
+
+# tanh(+0 + i*0) = +0 + i*0
+# tan (+0 - i*0) = +0 - i*0
+0 0 2 +0 2 -0   2 +0 2 -0   N N
+# [conj]: tan(+0 + i*0) =  +0 + i*0
+0 0 2 +0 2 +0   2 +0 2 +0   N N
+# [odd]: tan(-0 + i*0) =  -0 + i*0
+0 0 2 -0 2 +0   2 -0 2 +0   N N
+# [odd+conj]: tan(-0 - i*0) =  -0 - i*0
+0 0 2 -0 2 -0   2 -0 2 -0   N N
+
+# tanh(x + i*inf) = nan + i*nan for finite x
+# tan (inf - i*x) = nan + i*nan for finite x
+0 0 2 nan 2 nan   2 +inf 2 +1   N N
+0 0 2 nan 2 nan   2 +inf 2 +0   N N
+0 0 2 nan 2 nan   2 +inf 2 -0   N N
+0 0 2 nan 2 nan   2 +inf 2 -1   N N
+# [conj] does not make sense since we already considered x < 0
+# [odd]: tan(-inf + i*x) = nan + i*nan for finite x
+0 0 2 nan 2 nan   2 -inf 2 +1   N N
+0 0 2 nan 2 nan   2 -inf 2 +0   N N
+0 0 2 nan 2 nan   2 -inf 2 -0   N N
+0 0 2 nan 2 nan   2 -inf 2 -1   N N
+
+# tanh(x + i*nan) = nan + i*nan for finite x
+# tan (nan + i*x) = nan + i*nan for finite x
+0 0 2 nan 2 nan   2 nan 2  1    N N
+0 0 2 nan 2 nan   2 nan 2 +0    N N
+0 0 2 nan 2 nan   2 nan 2 -0    N N
+0 0 2 nan 2 nan   2 nan 2 -1    N N
+# [conj] makes no sense since we already considered x < 0
+# idem for [odd] since nan has no sign
+
+# tanh(+inf + i*y) = 1 + i*0*sin(2y) for positive-signed finite y
+# tan (y - i*inf) = 0*sin(2*y) - i*1 for positive-signed finite y
+0 0 2 +0 2 -1   2 1 2 -inf   N N
+0 0 2 -0 2 -1   2 2 2 -inf   N N
+# [conj]: tan (y + i*inf) = 0*sin(2*y) + i*1
+0 0 2 +0 2 +1   2 1 2 +inf   N N
+0 0 2 -0 2 +1   2 2 2 +inf   N N
+# [odd]: tan (-y + i*inf) = -0*sin(2*y) + i*1
+0 0 2 -0 2 +1   2 -1 2 +inf   N N
+0 0 2 +0 2 +1   2 -2 2 +inf   N N
+# [odd+conj]: tan (-y - i*inf) = -0*sin(2*y) - i*1
+0 0 2 -0 2 -1   2 -1 2 -inf   N N
+0 0 2 +0 2 -1   2 -2 2 -inf   N N
+
+# tanh(+inf + i*inf) = 1 +/- i*0 (unspecified sign of zero for C99)
+# tan (+inf - i*inf) = +/-0 - i*1
+0 0 2 0 2 -1   2 +inf 2 -inf   N N
+# [conj]: tan (+inf + i*inf) = +/-0 + i*1
+0 0 2 0 2 +1   2 +inf 2 +inf   N N
+# [odd]:  tan (-inf + i*inf) = +/-0 + i*1
+0 0 2 0 2 +1   2 -inf 2 +inf   N N
+# [odd+conj]: tan (-inf - i*inf) = +/-0 - i*1
+0 0 2 0 2 -1   2 -inf 2 -inf   N N
+
+# tanh(+inf + i*nan) = 1 +/- i*0 (unspecified sign of zero for C99)
+# tan (nan  - i*inf) = +/-0 - i*1
+0 0 2 0 2 -1   2 nan 2 -inf   N N
+# [conj]: tan (nan + i*inf) = +/-0 + i*1
+0 0 2 0 2 +1   2 nan 2 +inf   N N
+# [odd] = [conj] since nan has no sign, and -(+/-0) = +/-0
+
+# tanh(nan + i*0) = nan + i*0
+# tan(+0 + i*nan) = +0 + i*nan
+0 0 2 +0 2 nan   2 +0 2 nan   N N
+# [conj] gives the same identity since nan has no sign
+# [odd]: tan(-0 + i*nan) = -0 + i*nan
+0 0 2 -0 2 nan   2 -0 2 nan   N N
+
+# tanh(nan + i*y) = nan + i*nan for all nonzero y
+# tan (y + i*nan) = nan + i*nan
+0 0 2 nan 2 nan   2 +inf 2 nan   N N
+0 0 2 nan 2 nan   2 +1   2 nan   N N
+0 0 2 nan 2 nan   2 -1   2 nan   N N
+0 0 2 nan 2 nan   2 -inf 2 nan   N N
+# [conj] gives no new relation since nan has no sign
+# [odd] gives no new relation since we already considered y < 0
+
+# tanh(nan + i*nan) = nan + i*nan
+0 0 2 nan 2 nan   2 nan 2 nan   N N
+
+# corner case: op = atan (2^(-k) + i*2^k) for k=200 and k=1000
++ + 100 0x1@-50 100 0x1@50  1000 0x1.921fb54442d18469898cc51701b839a252049c1114cf98e804177d4c76273644a29410f31c6809bbdf2a33679a748636605614dbe4be286e9fc26adadaa3848bc90b6aecc4bcfd8de89884d34c6fdad617feb96de80d6fdbdc70d7f6b5133f4b5d3e4822f8963fcc9250cca3d9c8b67b8400f97142c77e0b31b4906c38 1000 0x1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555548888888888888888888888888888888888888888888888888a@-50 N N
++ + 100 0x1@-250 100 0x1@250  4000 0x1.921fb54442d18469898cc51701b839a252049c1114cf98e804177d4c76273644a29410f31c6809bbdf2a33679a748636605614dbe4be286e9fc26adadaa3848bc90b6aecc4bcfd8de89885d34c6fdad617feb96de80d6fdbdc70d7f6b5133f4b5d3e4822f8963fcc9250cca3d9c8b67b8400f97142c77e0b31b4906c38aba734d22c7f51fa499ebf06caba47b9475b2c38c5e6ac410aa5773daa520ee12d2cdace186a9c95793009e2e8d811943042f86520bc8c5c6d9c77c73cee58301d0c07364f0745d80f451f6b8abbe0de98a593bc5797ed2ab02e30732a92f9d52ad5ca2ba44c3131f40a202ae51cb51555885b5a662e1a08a0f46750aa4357be3974c9d9f70a08b1b7de1515d4e2aeba0c18fb672e1f0b4dc3c98f57eb5d19b61267ae3d1929c0944ac33b9dc7a44c35a5dcd7e25ff40db31410c9b0ec04e67d90d4c8a43e56302ef6401977c22eaef4c2bad8ee13118175b28dc411c49f40e9cb566287b6b7f9c1fa211c9705a2415242100234e478254f0fccaf10e334217b74b64d33864e30d5e9c4783528d0696c2a17b44b07d39455a899d1b77785b609bd1df25d1df8283f7d954c50f8b28e9cd780bb33652c9f412187444677430ca2b7cfda3ec252e19dc5af5f7037baec42e09039a00d224fab60b5532769d5311b1fbb830dff6fb9214d811e9be86b92680509246d87f56a 4000 0x
+
+# yet another absurd case: op = atan (2^200) + 2^(-200000)*I;
+# expensive to compute
+#- - 50 0x1@50 50 0x1@-49900  1000 0x1.921fb54442d18469898cc51701b839a252049c1114cf98e803177d4c76273644a29410f31c6809bbdf2a33679a748636605614dbe4be286e9fc26adadaa3848bc90b6aecc4bcfd8de8988628a1c5302b6d540ec33d62c53131c62d4c0a6894a0b2939d784deb9521e7a621f92f1e0bd0d9564ec6981cd3608709e5c18e 1000 0x1@-50000 N N
+
+# corner case
+- + 9 -0x9bp-51 9 -1    9 -0x16dp-8 9 -0x77p-3   N N
+
+# huge values
++ - 53 -0 53 -1  53 0x4580CBF242683p-3 53 -0x1B3E8A3660D279p-3 N N
++ + 53 -0 53 +1  53 -0x1B3E8A3660D279p-3 53 0x4580CBF242683p-3 N N
diff --git a/mpc/tests/tanh.dat b/mpc/tests/tanh.dat
new file mode 100644
index 0000000..5c3019a
--- /dev/null
+++ b/mpc/tests/tanh.dat
@@ -0,0 +1,83 @@
+# Data file for mpc_tanh.
+#
+# Copyright (C) INRIA, 2008
+#
+# This file is part of the MPC Library.
+#
+# The MPC Library is free software; you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation; either version 2.1 of the License, or (at your
+# option) any later version.
+#
+# The MPC Library is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+# License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with the MPC Library; see the file COPYING.LIB.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+# MA 02111-1307, USA.
+#
+# For explanations on the file format, see sin.dat.
+
+# special values (following ISO C99 standard)
+0 0 7   -1 7    0   7 -inf 7 -inf N N
+0 0 7   -1 7   -0   7 -inf 7   -1 N N
+0 0 7   -1 7   -0   7 -inf 7   -0 N N
+0 0 7   -1 7   +0   7 -inf 7   +0 N N
+0 0 7   -1 7   +0   7 -inf 7    1 N N
+0 0 7   -1 7    0   7 -inf 7 +inf N N
+0 0 7   -1 7    0   7 -inf 7  NaN N N
+0 0 7  NaN 7  NaN   7   -1 7 -inf N N
+0 0 7  NaN 7  NaN   7   -1 7 +inf N N
+0 0 7  NaN 7  NaN   7   -1 7  NaN N N
+0 0 7  NaN 7  NaN   7   -0 7 -inf N N
+0 0 7   -0 7   -0   7   -0 7   -0 N N
+0 0 7   -0 7   +0   7   -0 7   +0 N N
+0 0 7  NaN 7  NaN   7   -0 7 +inf N N
+0 0 7  NaN 7  NaN   7   -0 7  NaN N N
+0 0 7  NaN 7  NaN   7   +0 7 -inf N N
+0 0 7   +0 7   -0   7   +0 7   -0 N N
+0 0 7   +0 7   +0   7   +0 7   +0 N N
+0 0 7  NaN 7  NaN   7   +0 7 +inf N N
+0 0 7  NaN 7  NaN   7   +0 7  NaN N N
+0 0 7  NaN 7  NaN   7    1 7 -inf N N
+0 0 7  NaN 7  NaN   7    1 7 +inf N N
+0 0 7  NaN 7  NaN   7    1 7  NaN N N
+0 0 7    1 7    0   7 +inf 7 -inf N N
+0 0 7    1 7   -0   7 +inf 7   -1 N N
+0 0 7    1 7   -0   7 +inf 7   -0 N N
+0 0 7    1 7   +0   7 +inf 7   +0 N N
+0 0 7    1 7   +0   7 +inf 7    1 N N
+0 0 7    1 7    0   7 +inf 7 +inf N N
+0 0 7    1 7    0   7 +inf 7  NaN N N
+0 0 7  NaN 7  NaN   7  NaN 7 -inf N N
+0 0 7  NaN 7  NaN   7  NaN 7   -1 N N
+0 0 7  NaN 7   -0   7  NaN 7   -0 N N
+0 0 7  NaN 7   +0   7  NaN 7   +0 N N
+0 0 7  NaN 7  NaN   7  NaN 7    1 N N
+0 0 7  NaN 7  NaN   7  NaN 7 +inf N N
+0 0 7  NaN 7  NaN   7  NaN 7  NaN N N
+
+# purely real argument
+- 0 50 -0xc2f7d5a8a79ccp-52 50 -0   7 -1 7 -0 N N
+- 0 50 -0xc2f7d5a8a79ccp-52 50 +0   7 -1 7 +0 N N
++ 0 50  0xc2f7d5a8a79ccp-52 50 -0   7  1 7 -0 N N
++ 0 50  0xc2f7d5a8a79ccp-52 50 +0   7  1 7 +0 N N
+
+# purely imaginary argument
+0 - 50 -0 50 -0x18eb245cbee3a8p-52   7 -0 7 -1 N N
+0 + 50 -0 50  0x18eb245cbee3a8p-52   7 -0 7  1 N N
+0 - 50 +0 50 -0x18eb245cbee3a8p-52   7 +0 7 -1 N N
+0 + 50 +0 50  0x18eb245cbee3a8p-52   7 +0 7  1 N N
+
+# values with +1 and -1
+- - 50 -0x1157bffca4a8cp-48 50 -0x459193d28cfe2p-52   7 -1 7 -1 N N
+- + 50 -0x1157bffca4a8cp-48 50  0x459193d28cfe2p-52   7 -1 7  1 N N
++ - 50  0x1157bffca4a8cp-48 50 -0x459193d28cfe2p-52   7  1 7 -1 N N
++ + 50  0x1157bffca4a8cp-48 50  0x459193d28cfe2p-52   7  1 7  1 N N
+
+# IEEE-754 double precision
++ - 53 0x10000000000001p-53  53 0x1FFFFFFFFFFFFFp-53   53 0x1E938CBCEB16DFp-55 53 0x1B1F56FDEEF00Fp-53 N N
+
diff --git a/mpc/tests/targ.c b/mpc/tests/targ.c
new file mode 100644
index 0000000..4396613
--- /dev/null
+++ b/mpc/tests/targ.c
@@ -0,0 +1,37 @@
+/* targ.c -- test file for mpc_arg.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (FC, f, mpc_arg);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 1, 4096);
+  data_check (f, "arg.dat");
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tasin.c b/mpc/tests/tasin.c
new file mode 100644
index 0000000..4d04f1d
--- /dev/null
+++ b/mpc/tests/tasin.c
@@ -0,0 +1,37 @@
+/* test file for mpc_asin.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_asin);
+
+  test_start ();
+
+  data_check (f, "asin.dat");
+  tgeneric (f, 2, 512, 7, 7);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tasinh.c b/mpc/tests/tasinh.c
new file mode 100644
index 0000000..22e8f45
--- /dev/null
+++ b/mpc/tests/tasinh.c
@@ -0,0 +1,58 @@
+/* test file for mpc_asinh.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+static void
+bug20091120 (void)
+{
+  mpc_t x, y;
+
+  mpc_init2 (x, 53);
+  mpc_init3 (y, 17, 42);
+  mpc_set_ui_ui (x, 1, 1, MPC_RNDNN);
+  mpc_asinh (y, x, MPC_RNDNN);
+  if (mpfr_get_prec (mpc_realref(y)) != 17 ||
+      mpfr_get_prec (mpc_imagref(y)) != 42)
+    {
+      printf ("Error, mpc_asinh changed the precisions!!!\n");
+      exit (1);
+    }
+  mpc_clear (x);
+  mpc_clear (y);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_asinh);
+
+  test_start ();
+
+  bug20091120 ();
+
+  data_check (f, "asinh.dat");
+  tgeneric (f, 2, 512, 7, 7);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tatan.c b/mpc/tests/tatan.c
new file mode 100644
index 0000000..60c9ff1
--- /dev/null
+++ b/mpc/tests/tatan.c
@@ -0,0 +1,38 @@
+/* test file for mpc_atan.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_atan);
+
+  test_start ();
+
+  data_check (f, "atan.dat");
+  tgeneric (f, 2, 512, 5, 128);
+
+  test_end ();
+
+  return 0;
+}
+
diff --git a/mpc/tests/tatanh.c b/mpc/tests/tatanh.c
new file mode 100644
index 0000000..103c942
--- /dev/null
+++ b/mpc/tests/tatanh.c
@@ -0,0 +1,58 @@
+/* test file for mpc_atanh.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+static void
+bug20091120 (void)
+{
+  mpc_t x, y;
+
+  mpc_init2 (x, 53);
+  mpc_init3 (y, 17, 42);
+  mpc_set_ui_ui (x, 1, 1, MPC_RNDNN);
+  mpc_atanh (y, x, MPC_RNDNN);
+  if (mpfr_get_prec (mpc_realref(y)) != 17 ||
+      mpfr_get_prec (mpc_imagref(y)) != 42)
+    {
+      printf ("Error, mpc_atanh changed the precisions!!!\n");
+      exit (1);
+    }
+  mpc_clear (x);
+  mpc_clear (y);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_atanh);
+
+  test_start ();
+
+  bug20091120 ();
+
+  data_check (f, "atanh.dat");
+  tgeneric (f, 2, 512, 5, 128);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tconj.c b/mpc/tests/tconj.c
new file mode 100644
index 0000000..b384ad7
--- /dev/null
+++ b/mpc/tests/tconj.c
@@ -0,0 +1,37 @@
+/* tconj -- test file for mpc_conj.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_conj);
+
+  test_start ();
+
+  data_check (f, "conj.dat");
+  tgeneric (f, 2, 1024, 1, 0);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tcos.c b/mpc/tests/tcos.c
new file mode 100644
index 0000000..d69a66b
--- /dev/null
+++ b/mpc/tests/tcos.c
@@ -0,0 +1,66 @@
+/* test file for mpc_cos.
+
+Copyright (C) INRIA, 2008, 2009, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+static void
+bug20090105 (void)
+{
+  /* this bug appeared on 32-bits machines */
+  mpc_t op, expected, got;
+  mpc_init2 (op, 324);
+  mpc_init2 (expected, 324);
+  mpc_init2 (got, 324);
+
+  mpfr_set_str (MPC_RE(op), "-3.f1813b1487372434fea4414a520f65a343a16d0ec1ffb"
+                "b2b880154db8d63377ce788fc4215c450300@1", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM(op), "-2.b7a0c80bcacf1ccbbac614bf53a58b672b1b503161bee"
+                "59a82e46a23570b652f7ba5f01ef766d1c50", 16,GMP_RNDN);
+  mpfr_set_str (MPC_RE(expected), "7.57c5b08a2b11b660d906a354289b0724b9c4b237"
+                "95abe33424e8d9858e534bd5d776ddd18e34b0240", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM(expected), "-1.f41a389646d068e0263561cb3c5d1df763945ad"
+                "ed9339f2a98387a3c4f97dbfd8a08b7d0af2f11b46", 16,GMP_RNDN);
+
+  mpc_cos (got, op, MPC_RNDNN);
+  if (mpc_cmp (got, expected) != 0)
+    TEST_FAILED ("mpc_cos", op, got, expected, MPC_RNDNN);
+
+  mpc_clear (got);
+  mpc_clear(expected);
+  mpc_clear (op);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_cos);
+
+  test_start ();
+
+  data_check (f, "cos.dat");
+  tgeneric (f, 2, 512, 7, 7);
+
+  bug20090105 ();
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tcosh.c b/mpc/tests/tcosh.c
new file mode 100644
index 0000000..71b71a3
--- /dev/null
+++ b/mpc/tests/tcosh.c
@@ -0,0 +1,136 @@
+/* test file for mpc_cosh.
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h>
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+static void
+pure_real_argument (void)
+{
+  /* cosh(x -i*0) = cosh(x) +i*0 if x<0 */
+  /* cosh(x -i*0) = cosh(x) -i*0 if x>0 */
+  /* cosh(x +i*0) = cosh(x) -i*0 if x<0 */
+  /* cosh(x -i*0) = cosh(x) +i*0 if x>0 */
+  mpc_t u;
+  mpc_t z;
+  mpc_t cosh_z;
+
+  mpc_init2 (z, 2);
+  mpc_init2 (u, 100);
+  mpc_init2 (cosh_z, 100);
+
+  /* cosh(1 +i*0) = cosh(1) +i*0 */
+  mpc_set_ui_ui (z, 1, 0, MPC_RNDNN);
+  mpfr_cosh (MPC_RE (u), MPC_RE (z), GMP_RNDN);
+  mpfr_set_ui (MPC_IM (u), 0, GMP_RNDN);
+  mpc_cosh (cosh_z, z, MPC_RNDNN);
+  if (mpc_cmp (cosh_z, u) != 0 || mpfr_signbit (MPC_IM (cosh_z)))
+    TEST_FAILED ("mpc_cosh", z, cosh_z, u, MPC_RNDNN);
+
+  /* cosh(1 -i*0) = cosh(1) -i*0 */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpc_conj (u, u, MPC_RNDNN);
+  mpc_cosh (cosh_z, z, MPC_RNDNN);
+  if (mpc_cmp (cosh_z, u) != 0 || !mpfr_signbit (MPC_IM (cosh_z)))
+    TEST_FAILED ("mpc_cosh", z, cosh_z, u, MPC_RNDNN);
+
+  /* cosh(-1 +i*0) = cosh(1) -i*0 */
+  mpc_neg (z, z, MPC_RNDNN);
+  mpc_cosh (cosh_z, z, MPC_RNDNN);
+  if (mpc_cmp (cosh_z, u) != 0 || !mpfr_signbit (MPC_IM (cosh_z)))
+    TEST_FAILED ("mpc_cosh", z, cosh_z, u, MPC_RNDNN);
+
+  /* cosh(-1 -i*0) = cosh(1) +i*0 */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpc_conj (u, u, MPC_RNDNN);
+  mpc_cosh (cosh_z, z, MPC_RNDNN);
+  if (mpc_cmp (cosh_z, u) != 0 || mpfr_signbit (MPC_IM (cosh_z)))
+    TEST_FAILED ("mpc_cosh", z, cosh_z, u, MPC_RNDNN);
+
+  mpc_clear (cosh_z);
+  mpc_clear (z);
+  mpc_clear (u);
+}
+
+static void
+pure_imaginary_argument (void)
+{
+  /* cosh(+0 +i*y) = cos y +i*0*sin y */
+  /* cosh(-0 +i*y) = cos y -i*0*sin y */
+  mpc_t u;
+  mpc_t z;
+  mpc_t cosh_z;
+
+  mpc_init2 (z, 2);
+  mpc_init2 (u, 100);
+  mpc_init2 (cosh_z, 100);
+
+  /* cosh(+0 +i) = cos(1) + i*0 */
+  mpc_set_ui_ui (z, 0, 1, MPC_RNDNN);
+  mpfr_cos (MPC_RE (u), MPC_IM (z), GMP_RNDN);
+  mpfr_set_ui (MPC_IM (u), 0, GMP_RNDN);
+  mpc_cosh (cosh_z, z, MPC_RNDNN);
+  if (mpc_cmp (cosh_z, u) != 0 || mpfr_signbit (MPC_IM (cosh_z)))
+    TEST_FAILED ("mpc_cosh", z, cosh_z, u, MPC_RNDNN);
+
+  /* cosh(+0 -i) = cos(1) - i*0 */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpc_conj (u, u, MPC_RNDNN);
+  mpc_cosh (cosh_z, z, MPC_RNDNN);
+  if (mpc_cmp (cosh_z, u) != 0 || !mpfr_signbit (MPC_IM (cosh_z)))
+    TEST_FAILED ("mpc_cosh", z, cosh_z, u, MPC_RNDNN);
+
+  /* cosh(-0 +i) = cos(1) - i*0 */
+  mpc_neg (z, z, MPC_RNDNN);
+  mpc_cosh (cosh_z, z, MPC_RNDNN);
+  if (mpc_cmp (cosh_z, u) != 0 || !mpfr_signbit (MPC_IM (cosh_z)))
+    TEST_FAILED ("mpc_cosh", z, cosh_z, u, MPC_RNDNN);
+
+  /* cosh(-0 -i) = cos(1) + i*0 */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpc_conj (u, u, MPC_RNDNN);
+  mpc_cosh (cosh_z, z, MPC_RNDNN);
+  if (mpc_cmp (cosh_z, u) != 0 || mpfr_signbit (MPC_IM (cosh_z)))
+    TEST_FAILED ("mpc_cosh", z, cosh_z, u, MPC_RNDNN);
+
+  mpc_clear (cosh_z);
+  mpc_clear (z);
+  mpc_clear (u);
+}
+
+int
+main (void)
+{
+  DECL_FUNC(CC, f,mpc_cosh);
+
+  test_start ();
+
+  data_check (f, "cosh.dat");
+  tgeneric (f, 2, 512, 7, 7);
+
+  pure_real_argument ();
+  pure_imaginary_argument ();
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tdiv.c b/mpc/tests/tdiv.c
new file mode 100644
index 0000000..fed6df3
--- /dev/null
+++ b/mpc/tests/tdiv.c
@@ -0,0 +1,128 @@
+/* tdiv -- test file for mpc_div.
+
+Copyright (C) INRIA, 2002, 2008, 2009, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+static void
+check_regular (void)
+{
+  mpc_t b, c, q;
+  int inex;
+
+  mpc_init2 (b, 10);
+  mpc_init2 (c, 10);
+  mpc_init2 (q, 10);
+
+  /* inexact result */
+  mpc_set_ui_ui (b, 973, 964, MPC_RNDNN);
+  mpc_set_ui_ui (c, 725, 745, MPC_RNDNN);
+  inex = mpc_div (q, b, c, MPC_RNDZZ);
+  mpc_set_si_si (b, 43136, -787, MPC_RNDNN);
+  mpc_div_2exp (b, b, 15, MPC_RNDNN);
+  if (mpc_cmp (q, b) || MPC_INEX_RE (inex) == 0 || MPC_INEX_IM (inex) == 0)
+    {
+      printf ("mpc_div failed for (973+I*964)/(725+I*745)\n");
+      exit (1);
+    }
+
+  /* exact result */
+  mpc_set_si_si (b, -837, 637, MPC_RNDNN);
+  mpc_set_si_si (c, 63, -5, MPC_RNDNN);
+  inex = mpc_div (q, b, c, MPC_RNDZN);
+  mpc_set_si_si (b, -14, 9, MPC_RNDNN);
+  if (mpc_cmp (q, b) || inex != 0)
+    {
+      printf ("mpc_div failed for (-837+I*637)/(63-I*5)\n");
+      exit (1);
+    }
+
+  mpc_set_prec (b, 2);
+  mpc_set_prec (c, 2);
+  mpc_set_prec (q, 2);
+
+  /* exact result */
+  mpc_set_ui_ui (b, 4, 3, MPC_RNDNN);
+  mpc_set_ui_ui (c, 1, 2, MPC_RNDNN);
+  inex = mpc_div (q, b, c, MPC_RNDNN);
+  mpc_set_si_si (b, 2, -1, MPC_RNDNN);
+  if (mpc_cmp (q, b) || inex != 0)
+    {
+      printf ("mpc_div failed for (4+I*3)/(1+I*2)\n");
+      exit (1);
+    }
+
+  /* pure real dividend BUG-20080923 */
+  mpc_set_prec (b, 4);
+  mpc_set_prec (c, 4);
+  mpc_set_prec (q, 4);
+
+  mpc_set_si_si (b, -3, 0, MPC_RNDNN);
+  mpc_div_2exp (b, b, 206, MPC_RNDNN);
+  mpc_set_si_si (c, -1, -5, MPC_RNDNN);
+  mpfr_div_2ui (MPC_RE (c), MPC_RE (c), 733, GMP_RNDN);
+  mpfr_div_2ui (MPC_IM (c), MPC_IM (c), 1750, GMP_RNDN);
+  inex = mpc_div (q, b, c, MPC_RNDNZ);
+  mpc_set_si_si (b, 3, -7, MPC_RNDNN);
+  mpfr_mul_2ui (MPC_RE (b), MPC_RE (b), 527, GMP_RNDN);
+  mpfr_div_2ui (MPC_IM (b), MPC_IM (b), 489, GMP_RNDN);
+
+  if (mpc_cmp (q, b))
+    {
+      printf ("mpc_div failed for -3p-206/(-1p-733 -I* 5p-1750)\n");
+      exit (1);
+    }
+
+  /* pure real divisor */
+  mpc_set_prec (b, 4);
+  mpc_set_prec (c, 4);
+  mpc_set_prec (q, 4);
+  mpc_set_si_si (b, 15, 14, MPC_RNDNN);
+  mpc_set_si_si (c, 11, 0, MPC_RNDNN);
+  inex = mpc_div (q, b, c, MPC_RNDNN); /* should be 11/8 + 5/4*I */
+  mpc_set_si_si (b, 11, 10, MPC_RNDNN);
+  mpc_div_ui (b, b, 8, MPC_RNDNN);
+  if (mpc_cmp (q, b) || inex != MPC_INEX(1, -1))
+    {
+      printf ("mpc_div failed for (15+14*I)/11\n");
+      exit (1);
+    }
+
+  mpc_clear (b);
+  mpc_clear (c);
+  mpc_clear (q);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (C_CC, f, mpc_div);
+
+  test_start ();
+
+  check_regular ();
+
+  data_check (f, "div.dat");
+  tgeneric (f, 2, 1024, 7, 4096);
+
+  test_end ();
+  return 0;
+}
diff --git a/mpc/tests/tdiv_2exp.c b/mpc/tests/tdiv_2exp.c
new file mode 100644
index 0000000..e313ea0
--- /dev/null
+++ b/mpc/tests/tdiv_2exp.c
@@ -0,0 +1,36 @@
+/* test file for mpc_div_2exp.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCU, f, mpc_div_2exp);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tdiv_fr.c b/mpc/tests/tdiv_fr.c
new file mode 100644
index 0000000..5972b7c
--- /dev/null
+++ b/mpc/tests/tdiv_fr.c
@@ -0,0 +1,37 @@
+/* test file for mpc_div_fr.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCF, f, mpc_div_fr);
+
+  test_start ();
+
+  data_check (f, "div_fr.dat");
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tdiv_ui.c b/mpc/tests/tdiv_ui.c
new file mode 100644
index 0000000..e56bade
--- /dev/null
+++ b/mpc/tests/tdiv_ui.c
@@ -0,0 +1,36 @@
+/* test file for mpc_div_ui.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCU, f, mpc_div_ui);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/texp.c b/mpc/tests/texp.c
new file mode 100644
index 0000000..d7645a4
--- /dev/null
+++ b/mpc/tests/texp.c
@@ -0,0 +1,37 @@
+/* test file for mpc_exp.
+
+Copyright (C) INRIA, 2002, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_exp);
+
+  test_start ();
+
+  data_check (f, "exp.dat");
+  tgeneric (f, 2, 512, 7, 256);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tfma.c b/mpc/tests/tfma.c
new file mode 100644
index 0000000..6d4fabd
--- /dev/null
+++ b/mpc/tests/tfma.c
@@ -0,0 +1,37 @@
+/* test file for mpc_fma.
+
+Copyright (C) INRIA, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCCC, f, mpc_fma);
+
+  test_start ();
+
+  data_check (f, "fma.dat");
+  tgeneric (f, 2, 1024, 1, 256);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tfr_div.c b/mpc/tests/tfr_div.c
new file mode 100644
index 0000000..09a16db
--- /dev/null
+++ b/mpc/tests/tfr_div.c
@@ -0,0 +1,35 @@
+/* tfr_div -- test file for mpc_fr_div.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CFC, f, mpc_fr_div);
+  test_start();
+
+  data_check (f, "fr_div.dat");
+  tgeneric (f, 2, 1024, 7, 65535);
+
+  test_end ();
+  return 0;
+}
diff --git a/mpc/tests/tfr_sub.c b/mpc/tests/tfr_sub.c
new file mode 100644
index 0000000..c1858c6
--- /dev/null
+++ b/mpc/tests/tfr_sub.c
@@ -0,0 +1,36 @@
+/* tfr_div -- test file for mpc_fr_sub.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC(CFC, f, mpc_fr_sub);
+
+  test_start();
+
+  data_check (f, "fr_sub.dat");
+  tgeneric (f, 2, 4096, 7, 0);
+
+  test_end ();
+  return 0;
+}
diff --git a/mpc/tests/tgeneric.c b/mpc/tests/tgeneric.c
new file mode 100644
index 0000000..f698584
--- /dev/null
+++ b/mpc/tests/tgeneric.c
@@ -0,0 +1,1341 @@
+/* File for generic tests.
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+/* #include <stdlib.h> */
+
+#include "mpc-tests.h"
+
+/* Warning: unlike the MPFR macro (defined in mpfr-impl.h), this one returns
+   true when b is singular */
+#define MPFR_CAN_ROUND(b,err,prec,rnd)                                  \
+  (mpfr_zero_p (b) || mpfr_inf_p (b)                                    \
+   || mpfr_can_round (b, (long)mpfr_get_prec (b) - (err), (rnd),        \
+                      GMP_RNDZ, (prec) + ((rnd)==GMP_RNDN)))
+
+/* functions with one input, one output */
+static void
+tgeneric_cc (mpc_function *function, mpc_ptr op, mpc_ptr rop,
+             mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  /* We compute the result with four times the precision and check whether the
+     rounding is correct. Error reports in this part of the algorithm might
+     still be wrong, though, since there are two consecutive roundings (but we
+     try to avoid them).  */
+  function->pointer.CC (rop4, op, rnd);
+  function->pointer.CC (rop, op, rnd);
+
+  /* can't use the mpfr_can_round function when argument is singular,
+     use a custom macro instead. */
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    /* avoid double rounding error */
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  /* rounding failed */
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPC_OUT (op);
+
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+static void
+tgeneric_cc_c (mpc_function *function, mpc_ptr op, mpc_ptr rop1, mpc_ptr rop2,
+   mpc_ptr rop14, mpc_ptr rop24, mpc_ptr rop14rnd, mpc_ptr rop24rnd,
+   mpc_rnd_t rnd1, mpc_rnd_t rnd2)
+{
+   /* same as the previous function, but for mpc functions computing two
+      results from one argument                                          */
+   known_signs_t ks = {1, 1};
+
+   function->pointer.CC_C (rop14, rop24, op, rnd1, rnd2);
+   function->pointer.CC_C (rop1,  rop2,  op, rnd1, rnd2);
+
+   if (   MPFR_CAN_ROUND (MPC_RE (rop14), 1, MPC_PREC_RE (rop1),
+                          MPC_RND_RE (rnd1))
+       && MPFR_CAN_ROUND (MPC_IM (rop14), 1, MPC_PREC_IM (rop1),
+                          MPC_RND_IM (rnd1))
+       && MPFR_CAN_ROUND (MPC_RE (rop24), 1, MPC_PREC_RE (rop2),
+                          MPC_RND_RE (rnd2))
+       && MPFR_CAN_ROUND (MPC_IM (rop24), 1, MPC_PREC_IM (rop2),
+                          MPC_RND_IM (rnd2))) {
+     mpc_set (rop14rnd, rop14, rnd1);
+     mpc_set (rop24rnd, rop24, rnd2);
+   }
+   else
+     return;
+
+   if (!same_mpc_value (rop1, rop14rnd, ks)) {
+      /* rounding failed for first result */
+      printf ("Rounding might be incorrect for the first result of %s at\n", function->name);
+      MPC_OUT (op);
+      printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd1)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd1)));
+      printf ("\n%s                     gives ", function->name);
+      MPC_OUT (rop1);
+      printf ("%s quadruple precision gives ", function->name);
+      MPC_OUT (rop14);
+      printf ("and is rounded to                  ");
+      MPC_OUT (rop14rnd);
+      exit (1);
+   }
+   else if (!same_mpc_value (rop2, rop24rnd, ks)) {
+      /* rounding failed for second result */
+      printf ("Rounding might be incorrect for the second result of %s at\n", function->name);
+      MPC_OUT (op);
+      printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd2)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd2)));
+      printf ("\n%s                     gives ", function->name);
+      MPC_OUT (rop2);
+      printf ("%s quadruple precision gives ", function->name);
+      MPC_OUT (rop24);
+      printf ("and is rounded to                  ");
+      MPC_OUT (rop24rnd);
+      exit (1);
+   }
+}
+
+static void
+tgeneric_fc (mpc_function *function, mpc_ptr op, mpfr_ptr rop,
+             mpfr_ptr rop4, mpfr_ptr rop4rnd, mpfr_rnd_t rnd)
+{
+  function->pointer.FC (rop4, op, rnd);
+  function->pointer.FC (rop, op, rnd);
+  if (MPFR_CAN_ROUND (rop4, 1, mpfr_get_prec (rop), rnd))
+    mpfr_set (rop4rnd, rop4, rnd);
+  else
+    return;
+
+  if (same_mpfr_value (rop, rop4rnd, 1))
+    return;
+
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPC_OUT (op);
+  printf ("with rounding mode %s", mpfr_print_rnd_mode (rnd));
+
+  printf ("\n%s                     gives ", function->name);
+  MPFR_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPFR_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPFR_OUT (rop4rnd);
+
+  exit (1);
+}
+
+static void
+tgeneric_cfc (mpc_function *function, mpfr_ptr op1, mpc_ptr op2,
+              mpc_ptr rop, mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  function->pointer.CFC (rop4, op1, op2, rnd);
+  function->pointer.CFC (rop, op1, op2, rnd);
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPFR_OUT (op1);
+  MPC_OUT (op2);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+static void
+tgeneric_ccf (mpc_function *function, mpc_ptr op1, mpfr_ptr op2,
+              mpc_ptr rop, mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  function->pointer.CCF (rop4, op1, op2, rnd);
+  function->pointer.CCF (rop, op1, op2, rnd);
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPC_OUT (op1);
+  MPFR_OUT (op2);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+/* for functions with one mpc_t output, two mpc_t inputs */
+static void
+tgeneric_c_cc (mpc_function *function, mpc_ptr op1, mpc_ptr op2,
+	       mpc_ptr rop, mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  /* We compute the result with four times the precision and check whether the
+     rounding is correct. Error reports in this part of the algorithm might
+     still be wrong, though, since there are two consecutive roundings (but we
+     try to avoid them).  */
+  function->pointer.C_CC (rop4, op1, op2, rnd);
+  function->pointer.C_CC (rop, op1, op2, rnd);
+
+  /* can't use mpfr_can_round when argument is singular */
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    /* avoid double rounding error */
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  /* rounding failed */
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPC_OUT (op1);
+  MPC_OUT (op2);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+static void
+tgeneric_cccc (mpc_function *function, mpc_ptr op1, mpc_ptr op2, mpc_ptr op3,
+              mpc_ptr rop, mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  /* We compute the result with four times the precision and check whether the
+     rounding is correct. Error reports in this part of the algorithm might
+     still be wrong, though, since there are two consecutive roundings (but we
+     try to avoid them).  */
+  function->pointer.CCCC (rop4, op1, op2, op3, rnd);
+  function->pointer.CCCC (rop, op1, op2, op3, rnd);
+
+  /* can't use mpfr_can_round when argument is singular */
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    /* avoid double rounding error */
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  /* rounding failed */
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPC_OUT (op1);
+  MPC_OUT (op2);
+  MPC_OUT (op3);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+static void
+tgeneric_ccu (mpc_function *function, mpc_ptr op1, unsigned long int op2,
+              mpc_ptr rop, mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  function->pointer.CCU (rop4, op1, op2, rnd);
+  function->pointer.CCU (rop, op1, op2, rnd);
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPC_OUT (op1);
+  printf ("op2=%lu\n", op2);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+static void
+tgeneric_cuc (mpc_function *function, unsigned long int op1, mpc_ptr op2,
+              mpc_ptr rop, mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  function->pointer.CUC (rop4, op1, op2, rnd);
+  function->pointer.CUC (rop, op1, op2, rnd);
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  printf ("op1=%lu\n", op1);
+  MPC_OUT (op2);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+static void
+tgeneric_ccs (mpc_function *function, mpc_ptr op1, long int op2,
+              mpc_ptr rop, mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  function->pointer.CCS (rop4, op1, op2, rnd);
+  function->pointer.CCS (rop, op1, op2, rnd);
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPC_OUT (op1);
+  printf ("op2=%ld\n", op2);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+
+static void
+tgeneric_cci (mpc_function *function, mpc_ptr op1, int op2,
+              mpc_ptr rop, mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  function->pointer.CCI (rop4, op1, op2, rnd);
+  function->pointer.CCI (rop, op1, op2, rnd);
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  MPC_OUT (op1);
+  printf ("op2=%d\n", op2);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+static void
+tgeneric_cuuc (mpc_function *function, unsigned long int op1,
+               unsigned long int op2, mpc_ptr op3, mpc_ptr rop,
+               mpc_ptr rop4, mpc_ptr rop4rnd, mpc_rnd_t rnd)
+{
+  known_signs_t ks = {1, 1};
+
+  function->pointer.CUUC (rop4, op1, op2, op3, rnd);
+  function->pointer.CUUC (rop, op1, op2, op3, rnd);
+  if (MPFR_CAN_ROUND (MPC_RE (rop4), 1, MPC_PREC_RE (rop),
+                      MPC_RND_RE (rnd))
+      && MPFR_CAN_ROUND (MPC_IM (rop4), 1, MPC_PREC_IM (rop),
+                         MPC_RND_IM (rnd)))
+    mpc_set (rop4rnd, rop4, rnd);
+  else
+    return;
+
+  if (same_mpc_value (rop, rop4rnd, ks))
+    return;
+
+  printf ("Rounding in %s might be incorrect for\n", function->name);
+  printf ("op1=%lu\n", op1);
+  printf ("op2=%lu\n", op2);
+  MPC_OUT (op3);
+  printf ("with rounding mode (%s, %s)",
+          mpfr_print_rnd_mode (MPC_RND_RE (rnd)),
+          mpfr_print_rnd_mode (MPC_RND_IM (rnd)));
+
+  printf ("\n%s                     gives ", function->name);
+  MPC_OUT (rop);
+  printf ("%s quadruple precision gives ", function->name);
+  MPC_OUT (rop4);
+  printf ("and is rounded to                  ");
+  MPC_OUT (rop4rnd);
+
+  exit (1);
+}
+
+
+/* Test parameter reuse: the function should not use its output parameter in
+   internal computations. */
+static void
+reuse_cc (mpc_function* function, mpc_srcptr z, mpc_ptr got, mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CC (expected, z, MPC_RNDNN);
+  function->pointer.CC (got, got, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, z) for\n", function->name);
+      MPC_OUT (z);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_cc_c (mpc_function* function, mpc_srcptr z, mpc_ptr got1, mpc_ptr got2,
+            mpc_ptr exp1, mpc_ptr exp2)
+{
+   known_signs_t ks = {1, 1};
+
+   function->pointer.CC_C (exp1, exp2, z, MPC_RNDNN, MPC_RNDNN);
+   mpc_set (got1, z, MPC_RNDNN); /* exact */
+   function->pointer.CC_C (got1, got2, got1, MPC_RNDNN, MPC_RNDNN);
+   if (   !same_mpc_value (got1, exp1, ks)
+       || !same_mpc_value (got2, exp2, ks)) {
+      printf ("Reuse error in first result of %s for\n", function->name);
+      MPC_OUT (z);
+      MPC_OUT (exp1);
+      MPC_OUT (got1);
+      MPC_OUT (exp2);
+      MPC_OUT (got2);
+      exit (1);
+   }
+   mpc_set (got2, z, MPC_RNDNN); /* exact */
+   function->pointer.CC_C (got1, got2, got2, MPC_RNDNN, MPC_RNDNN);
+   if (   !same_mpc_value (got1, exp1, ks)
+       || !same_mpc_value (got2, exp2, ks)) {
+      printf ("Reuse error in second result of %s for\n", function->name);
+      MPC_OUT (z);
+      MPC_OUT (exp1);
+      MPC_OUT (got1);
+      MPC_OUT (exp2);
+      MPC_OUT (got2);
+      exit (1);
+   }
+}
+
+static void
+reuse_fc (mpc_function* function, mpc_ptr z, mpc_ptr x, mpfr_ptr expected)
+{
+  mpc_set (x, z, MPC_RNDNN); /* exact */
+  function->pointer.FC (expected, z, GMP_RNDN);
+  function->pointer.FC (MPC_RE (x), x, GMP_RNDN);
+  if (!same_mpfr_value (MPC_RE (x), expected, 1))
+    {
+      mpfr_t got;
+      got[0] = MPC_RE(x)[0]; /* display sensible name */
+      printf ("Error for %s(MPC_RE(z), z) for\n", function->name);
+      MPC_OUT (z);
+      MPFR_OUT (expected);
+      MPFR_OUT (got);
+
+      exit (1);
+    }
+  mpc_set (x, z, MPC_RNDNN); /* exact */
+  function->pointer.FC (MPC_IM (x), x, GMP_RNDN);
+  if (!same_mpfr_value (MPC_IM (x), expected, 1))
+    {
+      mpfr_t got;
+      got[0] = MPC_IM(x)[0]; /* display sensible name */
+      printf ("Error for %s(MPC_IM(z), z) for \n", function->name);
+      MPC_OUT (z);
+      MPFR_OUT (expected);
+      MPFR_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_cfc (mpc_function* function, mpc_srcptr z, mpfr_srcptr x, mpc_ptr got,
+           mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CFC (expected, x, z, MPC_RNDNN);
+  function->pointer.CFC (got, x, got, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, x, z) for\n", function->name);
+      MPFR_OUT (x);
+      MPC_OUT (z);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_ccf (mpc_function* function, mpc_srcptr z, mpfr_srcptr x, mpc_ptr got,
+           mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CCF (expected, z, x, MPC_RNDNN);
+  function->pointer.CCF (got, got, x, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, z, x) for\n", function->name);
+      MPC_OUT (z);
+      MPFR_OUT (x);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+/* for functions with one mpc_t output, two mpc_t inputs */
+static void
+reuse_c_cc (mpc_function* function, mpc_srcptr z, mpc_srcptr x,
+           mpc_ptr got, mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.C_CC (expected, z, x, MPC_RNDNN);
+  function->pointer.C_CC (got, got, x, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, z, x) for\n", function->name);
+      MPC_OUT (z);
+      MPC_OUT (x);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+  mpc_set (got, x, MPC_RNDNN); /* exact */
+  function->pointer.C_CC (expected, z, x, MPC_RNDNN);
+  function->pointer.C_CC (got, z, got, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(x, z, x) for\n", function->name);
+      MPC_OUT (z);
+      MPC_OUT (x);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+  mpc_set (got, x, MPC_RNDNN); /* exact */
+  function->pointer.C_CC (expected, x, x, MPC_RNDNN);
+  function->pointer.C_CC (got, got, got, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(x, x, x) for\n", function->name);
+      MPC_OUT (x);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_cccc (mpc_function* function, mpc_srcptr z, mpc_srcptr x, mpc_srcptr y,
+	    mpc_ptr got, mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CCCC (expected, z, x, y, MPC_RNDNN);
+  function->pointer.CCCC (got, got, x, y, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, z, x, y) for\n", function->name);
+      MPC_OUT (z);
+      MPC_OUT (x);
+      MPC_OUT (y);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+
+  mpc_set (got, x, MPC_RNDNN); /* exact */
+  function->pointer.CCCC (expected, z, x, y, MPC_RNDNN);
+  function->pointer.CCCC (got, z, got, y, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(x, z, x, y) for\n", function->name);
+      MPC_OUT (z);
+      MPC_OUT (x);
+      MPC_OUT (y);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+
+  mpc_set (got, y, MPC_RNDNN); /* exact */
+  function->pointer.CCCC (expected, z, x, y, MPC_RNDNN);
+  function->pointer.CCCC (got, z, x, got, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(y, z, x, y) for\n", function->name);
+      MPC_OUT (z);
+      MPC_OUT (x);
+      MPC_OUT (y);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+
+  mpc_set (got, x, MPC_RNDNN); /* exact */
+  function->pointer.CCCC (expected, x, x, x, MPC_RNDNN);
+  function->pointer.CCCC (got, got, got, got, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(x, x, x, x) for\n", function->name);
+      MPC_OUT (x);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_ccu (mpc_function* function, mpc_srcptr z, unsigned long ul,
+           mpc_ptr got, mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CCU (expected, z, ul, MPC_RNDNN);
+  function->pointer.CCU (got, got, ul, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, z, n) for\n", function->name);
+      MPC_OUT (z);
+      printf ("n=%lu\n", ul);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_cuc (mpc_function* function, unsigned long ul, mpc_srcptr z,
+           mpc_ptr got, mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CUC (expected, ul, z,MPC_RNDNN);
+  function->pointer.CUC (got, ul, got, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, n, z) for\n", function->name);
+      printf ("n=%lu\n", ul);
+      MPC_OUT (z);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_ccs (mpc_function* function, mpc_srcptr z, long lo,
+           mpc_ptr got, mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CCS (expected, z, lo, MPC_RNDNN);
+  function->pointer.CCS (got, got, lo, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, z, n) for\n", function->name);
+      MPC_OUT (z);
+      printf ("n=%ld\n", lo);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_cci (mpc_function* function, mpc_srcptr z, int i,
+           mpc_ptr got, mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CCI (expected, z, i, MPC_RNDNN);
+  function->pointer.CCI (got, got, i, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, z, n) for\n", function->name);
+      MPC_OUT (z);
+      printf ("n=%d\n", i);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+static void
+reuse_cuuc (mpc_function* function, unsigned long ul1, unsigned long ul2,
+            mpc_srcptr z, mpc_ptr got, mpc_ptr expected)
+{
+  known_signs_t ks = {1, 1};
+
+  mpc_set (got, z, MPC_RNDNN); /* exact */
+  function->pointer.CUUC (expected, ul1, ul2, z,MPC_RNDNN);
+  function->pointer.CUUC (got, ul1, ul2, got, MPC_RNDNN);
+  if (!same_mpc_value (got, expected, ks))
+    {
+      printf ("Error for %s(z, m, n, z) for\n", function->name);
+      printf ("m=%lu\n", ul1);
+      printf ("n=%lu\n", ul2);
+      MPC_OUT (z);
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+}
+
+
+/* helper functions for iterating over mpfr rounding modes */
+static mpfr_rnd_t
+first_rnd_mode (void)
+{
+   return GMP_RNDN;
+}
+
+static mpfr_rnd_t
+next_rnd_mode (mpfr_rnd_t curr)
+   /* assumes that all rounding modes are non-negative, and returns -1
+      when curr is the last rounding mode                              */
+{
+   switch (curr) {
+      case GMP_RNDN:
+         return GMP_RNDZ;
+      case GMP_RNDZ:
+         return GMP_RNDU;
+      case GMP_RNDU:
+         return GMP_RNDD;
+      default:
+         /* return invalid guard value in mpfr_rnd_t */
+#if MPFR_VERSION_MAJOR < 3
+         return GMP_RNDNA;
+#else
+         return MPFR_RNDA; /* valid rounding type, but not (yet) used in mpc */
+#endif
+   }
+}
+
+static int
+is_valid_rnd_mode (mpfr_rnd_t curr)
+   /* returns 1 if curr is a valid rounding mode, and 0otherwise */
+{
+   if (   curr == GMP_RNDN || curr == GMP_RNDZ
+       || curr == GMP_RNDU || curr == GMP_RNDD)
+      return 1;
+   else
+      return 0;
+}
+
+/* tgeneric(prec_min, prec_max, step, exp_max) checks rounding with random
+   numbers:
+   - with precision ranging from prec_min to prec_max with an increment of
+   step,
+   - with exponent between -exp_max and exp_max.
+
+   It also checks parameter reuse (it is assumed here that either two mpc_t
+   variables are equal or they are different, in the sense that the real part
+   of one of them cannot be the imaginary part of the other). */
+void
+tgeneric (mpc_function function, mpfr_prec_t prec_min,
+          mpfr_prec_t prec_max, mpfr_prec_t step, mpfr_exp_t exp_max)
+{
+  unsigned long ul1 = 0, ul2 = 0;
+  long lo = 0;
+  int i = 0;
+  mpfr_t x1, x2, xxxx;
+  mpc_t  z1, z2, z3, z4, z5, zzzz, zzzz2;
+
+  mpfr_rnd_t rnd_re, rnd_im, rnd2_re, rnd2_im;
+  mpfr_prec_t prec;
+  mpfr_exp_t exp_min;
+  int special, special_cases;
+
+  mpc_init2 (z1, prec_max);
+  switch (function.type)
+    {
+    case C_CC:
+      mpc_init2 (z2, prec_max);
+      mpc_init2 (z3, prec_max);
+      mpc_init2 (z4, prec_max);
+      mpc_init2 (zzzz, 4*prec_max);
+      special_cases = 4;
+      break;
+    case CCCC:
+      mpc_init2 (z2, prec_max);
+      mpc_init2 (z3, prec_max);
+      mpc_init2 (z4, prec_max);
+      mpc_init2 (z5, prec_max);
+      mpc_init2 (zzzz, 4*prec_max);
+      special_cases = 4;
+      break;
+    case FC:
+      mpfr_init2 (x1, prec_max);
+      mpfr_init2 (x2, prec_max);
+      mpfr_init2 (xxxx, 4*prec_max);
+      mpc_init2 (z2, prec_max);
+      special_cases = 2;
+      break;
+    case CCF: case CFC:
+      mpfr_init2 (x1, prec_max);
+      mpc_init2 (z2, prec_max);
+      mpc_init2 (z3, prec_max);
+      mpc_init2 (zzzz, 4*prec_max);
+      special_cases = 3;
+      break;
+    case CCI: case CCS:
+    case CCU: case CUC:
+      mpc_init2 (z2, prec_max);
+      mpc_init2 (z3, prec_max);
+      mpc_init2 (zzzz, 4*prec_max);
+      special_cases = 3;
+      break;
+    case CUUC:
+      mpc_init2 (z2, prec_max);
+      mpc_init2 (z3, prec_max);
+      mpc_init2 (zzzz, 4*prec_max);
+      special_cases = 2;
+      break;
+    case CC_C:
+      mpc_init2 (z2, prec_max);
+      mpc_init2 (z3, prec_max);
+      mpc_init2 (z4, prec_max);
+      mpc_init2 (z5, prec_max);
+      mpc_init2 (zzzz, 4*prec_max);
+      mpc_init2 (zzzz2, 4*prec_max);
+      special_cases = 2;
+      break;
+    case CC:
+    default:
+      mpc_init2 (z2, prec_max);
+      mpc_init2 (z3, prec_max);
+      mpc_init2 (zzzz, 4*prec_max);
+      special_cases = 2;
+    }
+
+  exp_min = mpfr_get_emin ();
+  if (exp_max <= 0 || exp_max > mpfr_get_emax ())
+    exp_max = mpfr_get_emax();
+  if (-exp_max > exp_min)
+    exp_min = - exp_max;
+
+  if (step < 1)
+    step = 1;
+
+  for (prec = prec_min, special = 0;
+       prec <= prec_max || special <= special_cases;
+       prec+=step, special += (prec > prec_max ? 1 : 0))
+       /* In the end, test functions in special cases of purely real and
+          purely imaginary arguments */
+    {
+
+      /* probability of one zero part in 256th (25 is almost 10%) */
+      const unsigned int zero_probability = special != 0 ? 0 : 25;
+
+      mpc_set_prec (z1, prec);
+      test_default_random (z1, exp_min, exp_max, 128, zero_probability);
+
+      switch (function.type)
+        {
+        case C_CC:
+          mpc_set_prec (z2, prec);
+          test_default_random (z2, exp_min, exp_max, 128, zero_probability);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (z4, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            case 3:
+              mpfr_set_ui (MPC_RE (z2), 0, GMP_RNDN);
+              break;
+            case 4:
+              mpfr_set_ui (MPC_IM (z2), 0, GMP_RNDN);
+              break;
+            }
+          break;
+        case CCCC:
+          mpc_set_prec (z2, prec);
+          test_default_random (z2, exp_min, exp_max, 128, zero_probability);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (z4, prec);
+          mpc_set_prec (z5, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            case 3:
+              mpfr_set_ui (MPC_RE (z2), 0, GMP_RNDN);
+              break;
+            case 4:
+              mpfr_set_ui (MPC_IM (z2), 0, GMP_RNDN);
+              break;
+            }
+          break;
+        case FC:
+          mpc_set_prec (z2, prec);
+          mpfr_set_prec (x1, prec);
+          mpfr_set_prec (x2, prec);
+          mpfr_set_prec (xxxx, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            }
+          break;
+        case CCU: case CUC:
+          mpc_set_prec (z2, 128);
+          do {
+            test_default_random (z2, 0, 64, 128, zero_probability);
+          } while (!mpfr_fits_ulong_p (MPC_RE (z2), GMP_RNDN));
+          ul1 = mpfr_get_ui (MPC_RE(z2), GMP_RNDN);
+          mpc_set_prec (z2, prec);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            case 3:
+              ul1 = 0;
+              break;
+            }
+          break;
+        case CUUC:
+          mpc_set_prec (z2, 128);
+          do {
+            test_default_random (z2, 0, 64, 128, zero_probability);
+          } while (!mpfr_fits_ulong_p (MPC_RE (z2), GMP_RNDN)
+                   ||!mpfr_fits_ulong_p (MPC_IM (z2), GMP_RNDN));
+          ul1 = mpfr_get_ui (MPC_RE(z2), GMP_RNDN);
+          ul2 = mpfr_get_ui (MPC_IM(z2), GMP_RNDN);
+          mpc_set_prec (z2, prec);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            case 3:
+              ul1 = 0;
+              break;
+            case 4:
+              ul2 = 0;
+              break;
+            }
+          break;
+        case CCS:
+          mpc_set_prec (z2, 128);
+          do {
+            test_default_random (z2, 0, 64, 128, zero_probability);
+          } while (!mpfr_fits_slong_p (MPC_RE (z2), GMP_RNDN));
+          lo = mpfr_get_si (MPC_RE(z2), GMP_RNDN);
+          mpc_set_prec (z2, prec);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            case 3:
+              lo = 0;
+              break;
+            }
+          break;
+        case CCI:
+          mpc_set_prec (z2, 128);
+          do {
+            test_default_random (z2, 0, 64, 128, zero_probability);
+          } while (!mpfr_fits_slong_p (MPC_RE (z2), GMP_RNDN));
+          i = (int)mpfr_get_si (MPC_RE(z2), GMP_RNDN);
+          mpc_set_prec (z2, prec);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            case 3:
+              i = 0;
+              break;
+            }
+          break;
+        case CCF: case CFC:
+          mpfr_set_prec (x1, prec);
+          mpfr_set (x1, MPC_RE (z1), GMP_RNDN);
+          test_default_random (z1, exp_min, exp_max, 128, zero_probability);
+          mpc_set_prec (z2, prec);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            case 3:
+              mpfr_set_ui (x1, 0, GMP_RNDN);
+              break;
+            }
+          break;
+        case CC_C:
+          mpc_set_prec (z2, prec);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (z4, prec);
+          mpc_set_prec (z5, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          mpc_set_prec (zzzz2, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            }
+          break;
+        case CC:
+        default:
+          mpc_set_prec (z2, prec);
+          mpc_set_prec (z3, prec);
+          mpc_set_prec (zzzz, 4*prec);
+          switch (special)
+            {
+            case 1:
+              mpfr_set_ui (MPC_RE (z1), 0, GMP_RNDN);
+              break;
+            case 2:
+              mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+              break;
+            }
+        }
+
+      for (rnd_re = first_rnd_mode (); is_valid_rnd_mode (rnd_re); rnd_re = next_rnd_mode (rnd_re))
+        switch (function.type)
+          {
+          case C_CC:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_c_cc (&function, z1, z2, z3, zzzz, z4,
+			     RNDC (rnd_re, rnd_im));
+            reuse_c_cc (&function, z1, z2, z3, z4);
+            break;
+          case CCCC:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_cccc (&function, z1, z2, z3, z4, zzzz, z5,
+                            RNDC (rnd_re, rnd_im));
+            reuse_cccc (&function, z1, z2, z3, z4, z5);
+            break;
+          case FC:
+            tgeneric_fc (&function, z1, x1, xxxx, x2, rnd_re);
+            reuse_fc (&function, z1, z2, x1);
+            break;
+          case CC:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_cc (&function, z1, z2, zzzz, z3,
+                           RNDC (rnd_re, rnd_im));
+            reuse_cc (&function, z1, z2, z3);
+            break;
+          case CC_C:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+               for (rnd2_re = first_rnd_mode (); is_valid_rnd_mode (rnd2_re); rnd2_re = next_rnd_mode (rnd2_re))
+                  for (rnd2_im = first_rnd_mode (); is_valid_rnd_mode (rnd2_im); rnd2_im = next_rnd_mode (rnd2_im))
+                     tgeneric_cc_c (&function, z1, z2, z3, zzzz, zzzz2, z4, z5,
+                           RNDC (rnd_re, rnd_im), RNDC (rnd2_re, rnd2_im));
+             reuse_cc_c (&function, z1, z2, z3, z4, z5);
+            break;
+          case CFC:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_cfc (&function, x1, z1, z2, zzzz, z3,
+                            RNDC (rnd_re, rnd_im));
+            reuse_cfc (&function, z1, x1, z2, z3);
+            break;
+          case CCF:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_ccf (&function, z1, x1, z2, zzzz, z3,
+                            RNDC (rnd_re, rnd_im));
+            reuse_ccf (&function, z1, x1, z2, z3);
+            break;
+          case CCU:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_ccu (&function, z1, ul1, z2, zzzz, z3,
+                            RNDC (rnd_re, rnd_im));
+            reuse_ccu (&function, z1, ul1, z2, z3);
+            break;
+          case CUC:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_cuc (&function, ul1, z1, z2, zzzz, z3,
+                            RNDC (rnd_re, rnd_im));
+            reuse_cuc (&function, ul1, z1, z2, z3);
+            break;
+          case CCS:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_ccs (&function, z1, lo, z2, zzzz, z3,
+                            RNDC (rnd_re, rnd_im));
+            reuse_ccs (&function, z1, lo, z2, z3);
+            break;
+          case CCI:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_cci (&function, z1, i, z2, zzzz, z3,
+                            RNDC (rnd_re, rnd_im));
+            reuse_cci (&function, z1, i, z2, z3);
+            break;
+          case CUUC:
+            for (rnd_im = first_rnd_mode (); is_valid_rnd_mode (rnd_im); rnd_im = next_rnd_mode (rnd_im))
+              tgeneric_cuuc (&function, ul1, ul2, z1, z2, zzzz, z3,
+                             RNDC (rnd_re, rnd_im));
+            reuse_cuuc (&function, ul1, ul2, z1, z2, z3);
+            break;
+          default:
+            printf ("tgeneric not yet implemented for this kind of"
+                    "function\n");
+            exit (1);
+          }
+    }
+
+  mpc_clear (z1);
+  switch (function.type)
+    {
+    case C_CC:
+      mpc_clear (z2);
+      mpc_clear (z3);
+      mpc_clear (z4);
+      mpc_clear (zzzz);
+      break;
+    case CCCC:
+      mpc_clear (z2);
+      mpc_clear (z3);
+      mpc_clear (z4);
+      mpc_clear (z5);
+      mpc_clear (zzzz);
+      break;
+    case FC:
+      mpc_clear (z2);
+      mpfr_clear (x1);
+      mpfr_clear (x2);
+      mpfr_clear (xxxx);
+      break;
+    case CCF: case CFC:
+      mpfr_clear (x1);
+      mpc_clear (z2);
+      mpc_clear (z3);
+      mpc_clear (zzzz);
+      break;
+    case CC_C:
+      mpc_clear (z2);
+      mpc_clear (z3);
+      mpc_clear (z4);
+      mpc_clear (z5);
+      mpc_clear (zzzz);
+      mpc_clear (zzzz2);
+      break;
+    case CUUC:
+    case CCI: case CCS:
+    case CCU: case CUC:
+    case CC:
+    default:
+      mpc_clear (z2);
+      mpc_clear (z3);
+      mpc_clear (zzzz);
+    }
+}
diff --git a/mpc/tests/tget_version.c b/mpc/tests/tget_version.c
new file mode 100644
index 0000000..817bc5c
--- /dev/null
+++ b/mpc/tests/tget_version.c
@@ -0,0 +1,54 @@
+/* tget_version.c -- Test file for mpc_get_version
+
+Copyright (C) INRIA, 2002, 2003, 2004, 2005, 2007, 2008, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+#ifdef __MPIR_VERSION
+  printf ("MPIR: include %d.%d.%d, lib %s\n",
+          __MPIR_VERSION, __MPIR_VERSION_MINOR, __MPIR_VERSION_PATCHLEVEL,
+          mpir_version);
+#else
+  printf ("GMP: include %d.%d.%d, lib %s\n",
+          __GNU_MP_VERSION, __GNU_MP_VERSION_MINOR, __GNU_MP_VERSION_PATCHLEVEL,
+          gmp_version);
+#endif
+  printf ("MPFR: include %s, lib %s\n",
+          MPFR_VERSION_STRING,
+          mpfr_get_version ());
+  printf ("MPC: include %s, lib %s\n", MPC_VERSION_STRING,
+          mpc_get_version ());
+
+  if (strcmp (mpc_get_version (), MPC_VERSION_STRING) != 0)
+    {
+      printf ("Error: header and library do not match\n"
+              "mpc_get_version: \"%s\"\nMPC_VERSION_STRING: \"%s\"\n",
+              mpc_get_version(), MPC_VERSION_STRING);
+      exit (1);
+    }
+
+  return 0;
+}
diff --git a/mpc/tests/timag.c b/mpc/tests/timag.c
new file mode 100644
index 0000000..b6f02bb
--- /dev/null
+++ b/mpc/tests/timag.c
@@ -0,0 +1,36 @@
+/* timag -- test file for mpc_imag.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (FC, f, mpc_imag);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 1, 4096);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tio_str.c b/mpc/tests/tio_str.c
new file mode 100644
index 0000000..110bc34
--- /dev/null
+++ b/mpc/tests/tio_str.c
@@ -0,0 +1,255 @@
+/* tio_str.c -- Test file for mpc_inp_str and mpc_out_str.
+
+Copyright (C) INRIA, 2009, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#define  _XOPEN_SOURCE /* for fileno */
+#include <stdio.h>
+#include <string.h>
+
+#include "mpc-tests.h"
+
+#ifdef HAVE_UNISTD_H
+#include <unistd.h>
+#endif
+
+extern unsigned long line_number;
+/* character appearing next in the file, may be EOF */
+extern int nextchar;
+extern const char *rnd_mode[];
+
+static void
+check_file (const char* file_name)
+{
+  FILE *fp;
+
+  int tmp;
+  int base;
+  int inex_re;
+  int inex_im;
+  mpc_t expected, got;
+  mpc_rnd_t rnd = MPC_RNDNN;
+  int inex = 0, expected_inex;
+  size_t expected_size, size;
+  known_signs_t ks = {1, 1};
+
+  fp = open_data_file (file_name);
+
+  mpc_init2 (expected, 53);
+  mpc_init2 (got, 53);
+
+  /* read data file */
+  line_number = 1;
+  nextchar = getc (fp);
+  skip_whitespace_comments (fp);
+
+  while (nextchar != EOF)
+    {
+      /* 1. read a line of data: expected result, base, rounding mode */
+      read_ternary (fp, &inex_re);
+      read_ternary (fp, &inex_im);
+      read_mpc (fp, expected, &ks);
+      if (inex_re == TERNARY_ERROR || inex_im == TERNARY_ERROR)
+         expected_inex = -1;
+      else
+         expected_inex = MPC_INEX (inex_re, inex_im);
+      read_int (fp, &tmp, "size");
+      expected_size = (size_t)tmp;
+      read_int (fp, &base, "base");
+      read_mpc_rounding_mode (fp, &rnd);
+
+      /* 2. read string at the same precision as the expected result */
+      while (nextchar != '"')
+        nextchar = getc (fp);
+      mpfr_set_prec (MPC_RE (got), MPC_PREC_RE (expected));
+      mpfr_set_prec (MPC_IM (got), MPC_PREC_IM (expected));
+      inex = mpc_inp_str (got, fp, &size, base, rnd);
+
+      /* 3. compare this result with the expected one */
+      if (inex != expected_inex || !same_mpc_value (got, expected, ks)
+          || size != expected_size)
+        {
+          printf ("mpc_inp_str failed (line %lu) with rounding mode %s\n",
+                  line_number, rnd_mode[rnd]);
+          if (inex != expected_inex)
+            printf("     got inexact value: %d\nexpected inexact value: %d\n",
+                   inex, expected_inex);
+          if (size !=  expected_size)
+            printf ("     got size: %lu\nexpected size: %lu\n     ",
+                    (unsigned long int) size, (unsigned long int) expected_size);
+          printf ("    ");
+          MPC_OUT (got);
+          MPC_OUT (expected);
+
+          exit (1);
+        }
+
+      while ((nextchar = getc (fp)) != '"');
+      nextchar = getc (fp);
+
+      skip_whitespace_comments (fp);
+    }
+
+  mpc_clear (expected);
+  mpc_clear (got);
+  close_data_file (fp);
+}
+
+static void
+check_io_str (mpc_ptr read_number, mpc_ptr expected)
+{
+  char tmp_file[] = "mpc_test";
+  FILE *fp;
+  size_t sz;
+
+  if (!(fp = fopen (tmp_file, "w")))
+    {
+      printf ("Error: Could not open file %s\n", tmp_file);
+
+      exit (1);
+    }
+
+  mpc_out_str (fp, 10, 0, expected, MPC_RNDNN);
+  fclose (fp);
+
+  if (!(fp = fopen (tmp_file, "r")))
+    {
+      printf ("Error: Could not open file %s\n", tmp_file);
+
+      exit (1);
+    };
+  if (mpc_inp_str (read_number, fp, &sz, 10, MPC_RNDNN) == -1)
+    {
+      printf ("Error: mpc_inp_str cannot correctly re-read number "
+              "in file %s\n", tmp_file);
+
+      exit (1);
+    }
+  fclose (fp);
+
+  /* mpc_cmp set erange flag when an operand is a NaN */
+  mpfr_clear_flags ();
+  if (mpc_cmp (read_number, expected) != 0 || mpfr_erangeflag_p())
+    {
+      printf ("Error: inp_str o out_str <> Id\n");
+      MPC_OUT (read_number);
+      MPC_OUT (expected);
+
+      exit (1);
+    }
+}
+
+#ifndef NO_STREAM_REDIRECTION
+/* test out_str with stream=NULL */
+static void
+check_stdout (mpc_ptr read_number, mpc_ptr expected)
+{
+  char tmp_file[] = "mpc_test";
+  int fd;
+  size_t sz;
+
+  fflush(stdout);
+  fd = dup(fileno(stdout));
+  if (freopen(tmp_file, "w", stdout) == NULL)
+  {
+     printf ("mpc_inp_str cannot redirect stdout\n");
+     exit (1);
+  }
+  mpc_out_str (NULL, 2, 0, expected, MPC_RNDNN);
+  fflush(stdout);
+  dup2(fd, fileno(stdout));
+  close(fd);
+  clearerr(stdout);
+
+  fflush(stdin);
+  fd = dup(fileno(stdin));
+  if (freopen(tmp_file, "r", stdin) == NULL)
+  {
+     printf ("mpc_inp_str cannot redirect stdout\n");
+     exit (1);
+  }
+  if (mpc_inp_str (read_number, NULL, &sz, 2, MPC_RNDNN) == -1)
+    {
+      printf ("mpc_inp_str cannot correctly re-read number "
+              "in file %s\n", tmp_file);
+      exit (1);
+    }
+  mpfr_clear_flags (); /* mpc_cmp set erange flag when an operand is
+                          a NaN */
+  if (mpc_cmp (read_number, expected) != 0 || mpfr_erangeflag_p())
+    {
+      printf ("mpc_inp_str did not read the number which was written by "
+              "mpc_out_str\n");
+      MPC_OUT (read_number);
+      MPC_OUT (expected);
+      exit (1);
+    }
+  fflush(stdin);
+  dup2(fd, fileno(stdin));
+  close(fd);
+  clearerr(stdin);
+}
+#endif /* NO_STREAM_REDIRECTION */
+
+int
+main (void)
+{
+  mpc_t z, x;
+  mpfr_prec_t prec;
+
+  test_start ();
+
+  mpc_init2 (z, 1000);
+  mpc_init2 (x, 1000);
+
+  check_file ("inp_str.dat");
+
+  for (prec = 2; prec <= 1000; prec+=7)
+    {
+      mpc_set_prec (z, prec);
+      mpc_set_prec (x, prec);
+
+      mpc_set_si_si (x, 1, 1, MPC_RNDNN);
+      check_io_str (z, x);
+
+      mpc_set_si_si (x, -1, 1, MPC_RNDNN);
+      check_io_str (z, x);
+
+      mpfr_set_inf (MPC_RE(x), -1);
+      mpfr_set_inf (MPC_IM(x), +1);
+      check_io_str (z, x);
+
+      test_default_random (x,  -1024, 1024, 128, 25);
+      check_io_str (z, x);
+    }
+
+#ifndef NO_STREAM_REDIRECTION
+  mpc_set_si_si (x, 1, -4, MPC_RNDNN);
+  mpc_div_ui (x, x, 3, MPC_RNDDU);
+
+  check_stdout(z, x);
+#endif
+
+  mpc_clear (z);
+  mpc_clear (x);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tlog.c b/mpc/tests/tlog.c
new file mode 100644
index 0000000..ab19524
--- /dev/null
+++ b/mpc/tests/tlog.c
@@ -0,0 +1,38 @@
+/* test file for mpc_log.
+
+Copyright (C) INRIA, 2008, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_log);
+
+  test_start ();
+
+  data_check (f, "log.dat");
+  tgeneric (f, 2, 512, 7, 128);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tmul.c b/mpc/tests/tmul.c
new file mode 100644
index 0000000..fc2e490
--- /dev/null
+++ b/mpc/tests/tmul.c
@@ -0,0 +1,222 @@
+/* tmul -- test file for mpc_mul.
+
+Copyright (C) INRIA, 2002, 2005, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#ifdef TIMING
+#include <sys/times.h>
+#endif
+#include "mpc-tests.h"
+
+static void
+cmpmul (mpc_srcptr x, mpc_srcptr y, mpc_rnd_t rnd)
+   /* computes the product of x and y with the naive and Karatsuba methods */
+   /* using the rounding mode rnd and compares the results and return      */
+   /* values.                                                              */
+   /* In our current test suite, the real and imaginary parts of x and y   */
+   /* all have the same precision, and we use this precision also for the  */
+   /* result.                                                              */
+{
+  mpc_t z, t;
+  int   inexact_z, inexact_t;
+
+  mpc_init2 (z, MPC_MAX_PREC (x));
+  mpc_init2 (t, MPC_MAX_PREC (x));
+
+  inexact_z = mpc_mul_naive (z, x, y, rnd);
+  inexact_t = mpc_mul_karatsuba (t, x, y, rnd);
+
+  if (mpc_cmp (z, t))
+    {
+      fprintf (stderr, "mul and mul2 differ for rnd=(%s,%s) \nx=",
+               mpfr_print_rnd_mode(MPC_RND_RE(rnd)),
+               mpfr_print_rnd_mode(MPC_RND_IM(rnd)));
+      mpc_out_str (stderr, 2, 0, x, MPC_RNDNN);
+      fprintf (stderr, "\nand y=");
+      mpc_out_str (stderr, 2, 0, y, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_mul_naive     gives ");
+      mpc_out_str (stderr, 2, 0, z, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_mul_karatsuba gives ");
+      mpc_out_str (stderr, 2, 0, t, MPC_RNDNN);
+      fprintf (stderr, "\n");
+      exit (1);
+    }
+  if (inexact_z != inexact_t)
+    {
+      fprintf (stderr, "The return values of mul and mul2 differ for rnd=(%s,%s) \nx=",
+               mpfr_print_rnd_mode(MPC_RND_RE(rnd)),
+               mpfr_print_rnd_mode(MPC_RND_IM(rnd)));
+      mpc_out_str (stderr, 2, 0, x, MPC_RNDNN);
+      fprintf (stderr, "\nand y=");
+      mpc_out_str (stderr, 2, 0, y, MPC_RNDNN);
+      fprintf (stderr, "\nand x*y=");
+      mpc_out_str (stderr, 2, 0, z, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_mul_naive     gives %i", inexact_z);
+      fprintf (stderr, "\nmpc_mul_karatsuba gives %i", inexact_t);
+      fprintf (stderr, "\n");
+      exit (1);
+    }
+
+  mpc_clear (z);
+  mpc_clear (t);
+}
+
+
+static void
+testmul (long a, long b, long c, long d, mpfr_prec_t prec, mpc_rnd_t rnd)
+{
+  mpc_t x, y;
+
+  mpc_init2 (x, prec);
+  mpc_init2 (y, prec);
+
+  mpc_set_si_si (x, a, b, rnd);
+  mpc_set_si_si (y, c, d, rnd);
+
+  cmpmul (x, y, rnd);
+
+  mpc_clear (x);
+  mpc_clear (y);
+}
+
+
+static void
+check_regular (void)
+{
+  mpc_t x, y;
+  mpc_rnd_t rnd_re, rnd_im;
+  mpfr_prec_t prec;
+
+  testmul (247, -65, -223, 416, 8, 24);
+  testmul (5, -896, 5, -32, 3, 2);
+  testmul (-3, -512, -1, -1, 2, 16);
+  testmul (266013312, 121990769, 110585572, 116491059, 27, 0);
+  testmul (170, 9, 450, 251, 8, 0);
+  testmul (768, 85, 169, 440, 8, 16);
+  testmul (145, 1816, 848, 169, 8, 24);
+  testmul (0, 1816, 848, 169, 8, 24);
+  testmul (145, 0, 848, 169, 8, 24);
+  testmul (145, 1816, 0, 169, 8, 24);
+  testmul (145, 1816, 848, 0, 8, 24);
+
+  mpc_init2 (x, 1000);
+  mpc_init2 (y, 1000);
+
+  /* Bug 20081114: mpc_mul_karatsuba returned wrong inexact value for
+     imaginary part */
+  mpc_set_prec (x, 7);
+  mpc_set_prec (y, 7);
+  mpfr_set_str (MPC_RE (x), "0xB4p+733", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (x), "0x90p+244", 16, GMP_RNDN);
+  mpfr_set_str (MPC_RE (y), "0xECp-146", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (y), "0xACp-471", 16, GMP_RNDN);
+  cmpmul (x, y, MPC_RNDNN);
+  mpfr_set_str (MPC_RE (x), "0xB4p+733", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (x), "0x90p+244", 16, GMP_RNDN);
+  mpfr_set_str (MPC_RE (y), "0xACp-471", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (y), "-0xECp-146", 16, GMP_RNDN);
+  cmpmul (x, y, MPC_RNDNN);
+
+  for (prec = 2; prec < 1000; prec = (mpfr_prec_t) (prec * 1.1 + 1))
+    {
+      mpc_set_prec (x, prec);
+      mpc_set_prec (y, prec);
+
+      test_default_random (x, -1024, 1024, 128, 25);
+      test_default_random (y, -1024, 1024, 128, 25);
+
+      for (rnd_re = 0; rnd_re < 4; rnd_re ++)
+        for (rnd_im = 0; rnd_im < 4; rnd_im ++)
+          cmpmul (x, y, RNDC(rnd_re, rnd_im));
+    }
+
+  mpc_clear (x);
+  mpc_clear (y);
+}
+
+
+#ifdef TIMING
+static void
+timemul (void)
+{
+  /* measures the time needed with different precisions for naive and */
+  /* Karatsuba multiplication                                         */
+
+  mpc_t             x, y, z;
+  unsigned long int i, j;
+  const unsigned long int tests = 10000;
+  struct tms        time_old, time_new;
+  double            passed1, passed2;
+
+  mpc_init (x);
+  mpc_init (y);
+  mpc_init_set_ui_ui (z, 1, 0, MPC_RNDNN);
+
+  for (i = 1; i < 50; i++)
+    {
+      mpc_set_prec (x, i * BITS_PER_MP_LIMB);
+      mpc_set_prec (y, i * BITS_PER_MP_LIMB);
+      mpc_set_prec (z, i * BITS_PER_MP_LIMB);
+      test_default_random (x, -1, 1, 128, 25);
+      test_default_random (y, -1, 1, 128, 25);
+
+      times (&time_old);
+      for (j = 0; j < tests; j++)
+        mpc_mul_naive (z, x, y, MPC_RNDNN);
+      times (&time_new);
+      passed1 = ((double) (time_new.tms_utime - time_old.tms_utime)) / 100;
+
+      times (&time_old);
+      for (j = 0; j < tests; j++)
+        mpc_mul_karatsuba (z, x, y, MPC_RNDNN);
+      times (&time_new);
+      passed2 = ((double) (time_new.tms_utime - time_old.tms_utime)) / 100;
+
+      printf ("Time for %3li limbs naive/Karatsuba: %5.2f %5.2f\n", i,
+              passed1, passed2);
+    }
+
+  mpc_clear (x);
+  mpc_clear (y);
+  mpc_clear (z);
+}
+#endif
+
+
+int
+main (void)
+{
+  DECL_FUNC (C_CC, f, mpc_mul);
+  f.properties = FUNC_PROP_SYMETRIC;
+
+  test_start ();
+
+#ifdef TIMING
+  timemul ();
+#endif
+
+  check_regular ();
+
+  data_check (f, "mul.dat");
+  tgeneric (f, 2, 4096, 41, 100);
+
+  test_end ();
+  return 0;
+}
diff --git a/mpc/tests/tmul_2exp.c b/mpc/tests/tmul_2exp.c
new file mode 100644
index 0000000..15c0439
--- /dev/null
+++ b/mpc/tests/tmul_2exp.c
@@ -0,0 +1,36 @@
+/* test file for mpc_mul_2exp.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCU, f, mpc_mul_2exp);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tmul_fr.c b/mpc/tests/tmul_fr.c
new file mode 100644
index 0000000..5414a19
--- /dev/null
+++ b/mpc/tests/tmul_fr.c
@@ -0,0 +1,37 @@
+/* test file for mpc_mul_fr.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCF, f, mpc_mul_fr);
+
+  test_start ();
+
+  data_check (f, "mul_fr.dat");
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tmul_i.c b/mpc/tests/tmul_i.c
new file mode 100644
index 0000000..f4f4206
--- /dev/null
+++ b/mpc/tests/tmul_i.c
@@ -0,0 +1,97 @@
+/* tmul_i -- test file for mpc_mul_i.
+
+Copyright (C) INRIA, 2008, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+static void
+check_different_precisions(void)
+{
+  /* check reuse when real and imaginary part have different precisions. */
+  mpc_t z, expected, got;
+  int res;
+
+  mpc_init2(z, 128);
+  mpc_init2(expected, 128);
+  mpc_init2(got, 128);
+
+  /* change precision of one part */
+  mpfr_set_prec (MPC_IM (z), 32);
+  mpfr_set_prec (MPC_IM (expected), 32);
+  mpfr_set_prec (MPC_IM (got), 32);
+
+  mpfr_set_str (MPC_RE (z), "0x100000000fp-32", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (z), "-1", 2, GMP_RNDN);
+  mpfr_set_str (MPC_RE (expected), "+1", 2, GMP_RNDN);
+  mpfr_set_str (MPC_IM (expected), "0x100000000fp-32", 16, GMP_RNDN);
+
+  mpc_set (got, z, MPC_RNDNN);
+  res = mpc_mul_i (got, got, +1, MPC_RNDNN);
+  if (MPC_INEX_RE(res) != 0 || MPC_INEX_IM(res) >=0)
+    {
+      printf("Wrong inexact flag for mpc_mul_i(z, z, n)\n"
+             "     got (re=%2d, im=%2d)\nexpected (re= 0, im=-1)\n",
+             MPC_INEX_RE(res), MPC_INEX_IM(res));
+      exit(1);
+    }
+  if (mpc_cmp(got, expected) != 0)
+    {
+      printf ("Error for mpc_mul_i(z, z, n) for\n");
+      MPC_OUT (z);
+      printf ("n=+1\n");
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+
+  mpc_neg (expected, expected, MPC_RNDNN);
+  mpc_set (got, z, MPC_RNDNN);
+  mpc_mul_i (got, got, -1, MPC_RNDNN);
+  if (mpc_cmp(got, expected) != 0)
+    {
+      printf ("Error for mpc_mul_i(z, z, n) for\n");
+      MPC_OUT (z);
+      printf ("n=-1\n");
+      MPC_OUT (expected);
+      MPC_OUT (got);
+
+      exit (1);
+    }
+
+  mpc_clear (z);
+  mpc_clear (expected);
+  mpc_clear (got);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CCI, f, mpc_mul_i);
+
+  test_start ();
+
+  check_different_precisions ();
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tmul_si.c b/mpc/tests/tmul_si.c
new file mode 100644
index 0000000..2e6a299
--- /dev/null
+++ b/mpc/tests/tmul_si.c
@@ -0,0 +1,35 @@
+/* tmul -- test file for mpc_mul_si.
+
+Copyright (C) INRIA, 2002, 2005, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCS, f, mpc_mul_si);
+  test_start ();
+
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tmul_ui.c b/mpc/tests/tmul_ui.c
new file mode 100644
index 0000000..01046f3
--- /dev/null
+++ b/mpc/tests/tmul_ui.c
@@ -0,0 +1,36 @@
+/* tmul_ui -- test file for mpc_mul_ui.
+
+Copyright (C) INRIA, 2002, 2005, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCU, f, mpc_mul_ui);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tneg.c b/mpc/tests/tneg.c
new file mode 100644
index 0000000..ad70091
--- /dev/null
+++ b/mpc/tests/tneg.c
@@ -0,0 +1,36 @@
+/* tneg -- test file for mpc_neg.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_neg);
+  test_start ();
+
+  data_check (f, "neg.dat");
+  tgeneric (f, 2, 1024, 1, 0);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tnorm.c b/mpc/tests/tnorm.c
new file mode 100644
index 0000000..00c589b
--- /dev/null
+++ b/mpc/tests/tnorm.c
@@ -0,0 +1,37 @@
+/* tnorm -- test file for mpc_norm.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (FC, f, mpc_norm);
+
+  test_start ();
+
+  data_check (f, "norm.dat");
+  tgeneric (f, 2, 1024, 1, 4096);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tpow.c b/mpc/tests/tpow.c
new file mode 100644
index 0000000..d7c49e9
--- /dev/null
+++ b/mpc/tests/tpow.c
@@ -0,0 +1,37 @@
+/* test file for mpc_pow.
+
+Copyright (C) INRIA, 2009, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (C_CC, f, mpc_pow);
+
+  test_start ();
+
+  data_check (f, "pow.dat");
+  tgeneric (f, 2, 1024, 7, 10);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tpow_d.c b/mpc/tests/tpow_d.c
new file mode 100644
index 0000000..b983379
--- /dev/null
+++ b/mpc/tests/tpow_d.c
@@ -0,0 +1,62 @@
+/* test file for mpc_pow_d.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  mpc_t z;
+
+  test_start ();
+
+  mpc_init2 (z, 11);
+
+  mpc_set_ui_ui (z, 2, 3, MPC_RNDNN);
+  mpc_pow_d (z, z, 3.0, MPC_RNDNN);
+  if (mpc_cmp_si_si (z, -46, 9) != 0)
+    {
+      printf ("Error for mpc_pow_d (1)\n");
+      exit (1);
+    }
+
+  mpc_set_si_si (z, -3, 4, MPC_RNDNN);
+  mpc_pow_d (z, z, 0.5, MPC_RNDNN);
+  if (mpc_cmp_si_si (z, 1, 2) != 0)
+    {
+      printf ("Error for mpc_pow_d (2)\n");
+      exit (1);
+    }
+
+  mpc_set_ui_ui (z, 2, 3, MPC_RNDNN);
+  mpc_pow_d (z, z, 6.0, MPC_RNDNN);
+  if (mpc_cmp_si_si (z, 2035, -828) != 0)
+    {
+      printf ("Error for mpc_pow_d (3)\n");
+      exit (1);
+    }
+
+  mpc_clear (z);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tpow_fr.c b/mpc/tests/tpow_fr.c
new file mode 100644
index 0000000..85d0039
--- /dev/null
+++ b/mpc/tests/tpow_fr.c
@@ -0,0 +1,48 @@
+/* test file for mpc_pow_fr.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  mpc_t z;
+  mpfr_t f;
+
+  test_start ();
+
+  mpc_init2 (z, 5);
+  mpfr_init2 (f, 3);
+  mpc_set_ui_ui (z, 3, 2, MPC_RNDNN);
+  mpfr_set_ui (f, 3, GMP_RNDN);
+  mpc_pow_fr (z, z, f, MPC_RNDNN);
+  if (mpc_cmp_si_si (z, -9, 46) != 0)
+    {
+      printf ("Error for mpc_pow_fr (1)\n");
+      exit (1);
+    }
+  mpc_clear (z);
+  mpfr_clear (f);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tpow_ld.c b/mpc/tests/tpow_ld.c
new file mode 100644
index 0000000..691d171
--- /dev/null
+++ b/mpc/tests/tpow_ld.c
@@ -0,0 +1,44 @@
+/* test file for mpc_pow_ld.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  mpc_t z;
+
+  test_start ();
+
+  mpc_init2 (z, 5);
+  mpc_set_ui_ui (z, 3, 2, MPC_RNDNN);
+  mpc_pow_ld (z, z, (long double) 3.0, MPC_RNDNN);
+  if (mpc_cmp_si_si (z, -9, 46) != 0)
+    {
+      printf ("Error for mpc_pow_ld (1)\n");
+      exit (1);
+    }
+  mpc_clear (z);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tpow_si.c b/mpc/tests/tpow_si.c
new file mode 100644
index 0000000..dd874a6
--- /dev/null
+++ b/mpc/tests/tpow_si.c
@@ -0,0 +1,91 @@
+/* test file for mpc_pow_si.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <limits.h> /* for CHAR_BIT */
+#include "mpc-tests.h"
+
+static void
+compare_mpc_pow (mpfr_prec_t pmax, int iter, unsigned long nbits)
+   /* copied from tpow_ui.c and replaced unsigned by signed */
+{
+  mpfr_prec_t p;
+  mpc_t x, y, z, t;
+  long n;
+  int i, inex_pow, inex_pow_si;
+  gmp_randstate_t state;
+  mpc_rnd_t rnd;
+
+  gmp_randinit_default (state);
+  mpc_init3 (y, sizeof (unsigned long) * CHAR_BIT, MPFR_PREC_MIN);
+  for (p = MPFR_PREC_MIN; p <= pmax; p++)
+    for (i = 0; i < iter; i++)
+      {
+        mpc_init2 (x, p);
+        mpc_init2 (z, p);
+        mpc_init2 (t, p);
+        mpc_urandom (x, state);
+        n = (signed long) gmp_urandomb_ui (state, nbits);
+        mpc_set_si (y, n, MPC_RNDNN);
+        for (rnd = 0; rnd < 16; rnd ++)
+          {
+            inex_pow = mpc_pow (z, x, y, rnd);
+            inex_pow_si = mpc_pow_si (t, x, n, rnd);
+            if (mpc_cmp (z, t) != 0)
+              {
+                printf ("mpc_pow and mpc_pow_si differ for x=");
+                mpc_out_str (stdout, 10, 0, x, MPC_RNDNN);
+                printf (" n=%li\n", n);
+                printf ("mpc_pow gives ");
+                mpc_out_str (stdout, 10, 0, z, MPC_RNDNN);
+                printf ("\nmpc_pow_si gives ");
+                mpc_out_str (stdout, 10, 0, t, MPC_RNDNN);
+                printf ("\n");
+                exit (1);
+              }
+            if (inex_pow != inex_pow_si)
+              {
+                printf ("mpc_pow and mpc_pow_si give different flags for x=");
+                mpc_out_str (stdout, 10, 0, x, MPC_RNDNN);
+                printf (" n=%li\n", n);
+                printf ("mpc_pow gives %d\n", inex_pow);
+                printf ("mpc_pow_si gives %d\n", inex_pow_si);
+                exit (1);
+              }
+          }
+        mpc_clear (x);
+        mpc_clear (z);
+        mpc_clear (t);
+      }
+  mpc_clear (y);
+  gmp_randclear (state);
+}
+
+int
+main (void)
+{
+  test_start ();
+
+  compare_mpc_pow (100, 5, 19);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tpow_ui.c b/mpc/tests/tpow_ui.c
new file mode 100644
index 0000000..b80be0a
--- /dev/null
+++ b/mpc/tests/tpow_ui.c
@@ -0,0 +1,122 @@
+/* test file for mpc_pow_ui.
+
+Copyright (C) INRIA, 2009, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <limits.h> /* for CHAR_BIT */
+#include "mpc-tests.h"
+
+static void
+compare_mpc_pow (mpfr_prec_t pmax, int iter, unsigned long nbits)
+{
+  mpfr_prec_t p;
+  mpc_t x, y, z, t;
+  unsigned long n;
+  int i, inex_pow, inex_pow_ui;
+  gmp_randstate_t state;
+  mpc_rnd_t rnd;
+
+  gmp_randinit_default (state);
+  mpc_init3 (y, sizeof (unsigned long) * CHAR_BIT, MPFR_PREC_MIN);
+  for (p = MPFR_PREC_MIN; p <= pmax; p++)
+    for (i = 0; i < iter; i++)
+      {
+        mpc_init2 (x, p);
+        mpc_init2 (z, p);
+        mpc_init2 (t, p);
+        mpc_urandom (x, state);
+        n = gmp_urandomb_ui (state, nbits); /* 0 <= n < 2^nbits */
+        mpc_set_ui (y, n, MPC_RNDNN);
+        for (rnd = 0; rnd < 16; rnd ++)
+          {
+            inex_pow = mpc_pow (z, x, y, rnd);
+            inex_pow_ui = mpc_pow_ui (t, x, n, rnd);
+            if (mpc_cmp (z, t) != 0)
+              {
+                printf ("mpc_pow and mpc_pow_ui differ for x=");
+                mpc_out_str (stdout, 10, 0, x, MPC_RNDNN);
+                printf (" n=%lu\n", n);
+                printf ("mpc_pow gives ");
+                mpc_out_str (stdout, 10, 0, z, MPC_RNDNN);
+                printf ("\nmpc_pow_ui gives ");
+                mpc_out_str (stdout, 10, 0, t, MPC_RNDNN);
+                printf ("\n");
+                exit (1);
+              }
+            if (inex_pow != inex_pow_ui)
+              {
+                printf ("mpc_pow and mpc_pow_ui give different flags for x=");
+                mpc_out_str (stdout, 10, 0, x, MPC_RNDNN);
+                printf (" n=%lu\n", n);
+                printf ("mpc_pow gives %d\n", inex_pow);
+                printf ("mpc_pow_ui gives %d\n", inex_pow_ui);
+                exit (1);
+              }
+          }
+        mpc_clear (x);
+        mpc_clear (z);
+        mpc_clear (t);
+      }
+  mpc_clear (y);
+  gmp_randclear (state);
+}
+
+int
+main (int argc, char *argv[])
+{
+  mpc_t z;
+
+  DECL_FUNC (CCU, f, mpc_pow_ui);
+
+  if (argc != 1)
+    {
+      mpfr_prec_t p;
+      long int n, k;
+      mpc_t res;
+      if (argc != 3 && argc != 4)
+        {
+          printf ("Usage: tpow_ui precision exponent [k]\n");
+          exit (1);
+        }
+      p = atoi (argv[1]);
+      n = atoi (argv[2]);
+      MPC_ASSERT (n >= 0);
+      k = (argc > 3) ? atoi (argv[3]) : 1;
+      MPC_ASSERT (k >= 0);
+      mpc_init2 (z, p);
+      mpc_init2 (res, p);
+      mpfr_const_pi (mpc_realref (z), GMP_RNDN);
+      mpfr_div_2exp (mpc_realref (z), mpc_realref (z), 2, GMP_RNDN);
+      mpfr_const_log2 (mpc_imagref (z), GMP_RNDN);
+      while (k--)
+        mpc_pow_ui (res, z, (unsigned long int) n, MPC_RNDNN);
+      mpc_clear (z);
+      mpc_clear (res);
+      return 0;
+    }
+
+  test_start ();
+  data_check (f, "pow_ui.dat");
+
+  compare_mpc_pow (100, 5, 19);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tpow_z.c b/mpc/tests/tpow_z.c
new file mode 100644
index 0000000..47f0cbb
--- /dev/null
+++ b/mpc/tests/tpow_z.c
@@ -0,0 +1,47 @@
+/* test file for mpc_pow_z.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  mpc_t z;
+  mpz_t t;
+
+  test_start ();
+
+  mpc_init2 (z, 5);
+  mpz_init_set_ui (t, 1);
+  mpc_set_ui_ui (z, 17, 42, MPC_RNDNN);
+  mpc_pow_z (z, z, t, MPC_RNDNN);
+  if (mpc_cmp_si_si (z, 17, 42) != 0)
+    {
+      printf ("Error for mpc_pow_z (1)\n");
+      exit (1);
+    }
+  mpc_clear (z);
+  mpz_clear (t);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tprec.c b/mpc/tests/tprec.c
new file mode 100644
index 0000000..0d23962
--- /dev/null
+++ b/mpc/tests/tprec.c
@@ -0,0 +1,70 @@
+/* tprec.c -- Test file for mpc_set_prec, mpc_get_prec and mpc_get_prec2.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  mpc_t z;
+  mpfr_prec_t prec, pr, pi;
+
+  mpc_init2 (z, 1000);
+
+  for (prec = 2; prec <= 1000; prec++)
+    {
+      /* check set_prec/get_prec */
+      mpfr_set_prec (MPC_RE (z), prec);
+      mpfr_set_prec (MPC_IM (z), prec + 1);
+      if (mpc_get_prec (z) != 0)
+        {
+          printf ("Error in mpc_get_prec for prec (re) = %lu, "
+                  "prec (im) = %lu\n", (unsigned long int) prec,
+                  (unsigned long int) prec + 1ul);
+
+          exit (1);
+        }
+
+      mpc_get_prec2 (&pr, &pi, z);
+      if (pr != prec || pi != prec + 1)
+        {
+          printf ("Error in mpc_get_prec2 for prec (re) = %lu, "
+                  "prec (im) = %lu\n", (unsigned long int) prec,
+                  (unsigned long int) prec + 1ul);
+
+          exit (1);
+        }
+
+      mpc_set_prec (z, prec);
+      if (mpc_get_prec (z) != prec)
+        {
+          printf ("Error in mpc_get_prec for prec = %lu\n",
+                  (unsigned long int) prec);
+
+          exit (1);
+        }
+    }
+
+  mpc_clear (z);
+
+  return 0;
+}
diff --git a/mpc/tests/tproj.c b/mpc/tests/tproj.c
new file mode 100644
index 0000000..e4860aa
--- /dev/null
+++ b/mpc/tests/tproj.c
@@ -0,0 +1,37 @@
+/* tproj -- test file for mpc_proj.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_proj);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 1, 4096);
+  data_check (f, "proj.dat");
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/treal.c b/mpc/tests/treal.c
new file mode 100644
index 0000000..a2b984d
--- /dev/null
+++ b/mpc/tests/treal.c
@@ -0,0 +1,36 @@
+/* treal -- test file for mpc_real.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (FC, f, mpc_real);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 1, 4096);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/treimref.c b/mpc/tests/treimref.c
new file mode 100644
index 0000000..095f37b
--- /dev/null
+++ b/mpc/tests/treimref.c
@@ -0,0 +1,49 @@
+/* test file for mpc_realref and mpc_imagref.
+
+Copyright (C) INRIA, 2009
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  mpc_t z;
+
+  test_start ();
+  test_end ();
+
+  mpc_init2 (z, 6);
+  mpc_set_ui_ui (z, 17, 42, MPC_RNDNN);
+  mpfr_set_ui (mpc_realref (z), 18, GMP_RNDN);
+  if (mpfr_get_ui (mpc_realref (z), GMP_RNDN) != 18)
+    {
+      fprintf (stderr, "Error in mpfr_set_ui/mpc_realref\n");
+      exit (1);
+    }
+  mpfr_set_ui (mpc_imagref (z), 43, GMP_RNDN);
+  if (mpfr_get_ui (mpc_imagref (z), GMP_RNDN) != 43)
+    {
+      fprintf (stderr, "Error in mpfr_set_ui/mpc_imagref\n");
+      exit (1);
+    }
+  mpc_clear (z);
+
+  return 0;
+}
diff --git a/mpc/tests/tset.c b/mpc/tests/tset.c
new file mode 100644
index 0000000..ecae3e4
--- /dev/null
+++ b/mpc/tests/tset.c
@@ -0,0 +1,440 @@
+/* tset.c -- Test file for mpc_set_x and mpc_set_x_x functions.
+
+Copyright (C) INRIA, 2009, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "config.h"
+#include <limits.h> /* for LONG_MAX */
+
+#if HAVE_INTTYPES_H
+# include <inttypes.h> /* for intmax_t */
+#else
+# if HAVE_STDINT_H
+#  include <stdint.h>
+# endif
+#endif
+
+#if HAVE_COMPLEX_H
+# include <complex.h>
+#endif
+
+#ifdef HAVE_LOCALE_H
+#include <locale.h>
+#endif
+
+#include "mpc-tests.h"
+
+#define PRINT_ERROR(function_name, precision, a)                \
+  do {                                                          \
+    printf ("Error in "function_name" for prec = %lu\n",        \
+            (unsigned long int) precision);                     \
+    MPC_OUT(a);                                                     \
+    exit (1);                                                   \
+  } while (0)
+
+/* test MPC_SET_X_Y though some functions */
+static int
+mpc_set_ui_fr (mpc_ptr z, unsigned long int a, mpfr_srcptr b, mpc_rnd_t rnd)
+  MPC_SET_X_Y (ui, fr, z, a, b, rnd)
+
+static int
+mpc_set_fr_ui (mpc_ptr z, mpfr_srcptr a, unsigned long int b, mpc_rnd_t rnd)
+  MPC_SET_X_Y (fr, ui, z, a, b, rnd)
+
+static int
+mpc_set_f_si (mpc_ptr z, mpf_t a, long int b, mpc_rnd_t rnd)
+  MPC_SET_X_Y (f, si, z, a, b, rnd)
+
+
+static void
+check_set (void)
+{
+  long int lo;
+  mpz_t mpz;
+  mpq_t mpq;
+  mpf_t mpf;
+  mpfr_t fr;
+  mpc_t x, z;
+  mpfr_prec_t prec;
+
+  mpz_init (mpz);
+  mpq_init (mpq);
+  mpf_init2 (mpf, 1000);
+  mpfr_init2 (fr, 1000);
+  mpc_init2 (x, 1000);
+  mpc_init2 (z, 1000);
+
+  mpz_set_ui (mpz, 0x4217);
+  mpq_set_si (mpq, -1, 0x4321);
+  mpf_set_q (mpf, mpq);
+
+  for (prec = 2; prec <= 1000; prec++)
+    {
+      unsigned long int u = (unsigned long int) prec;
+
+      mpc_set_prec (z, prec);
+      mpfr_set_prec (fr, prec);
+
+      lo = -prec;
+
+      mpfr_set_d (fr, 1.23456789, GMP_RNDN);
+
+      mpc_set_d (z, 1.23456789, MPC_RNDNN);
+      if (mpfr_cmp (MPC_RE(z), fr) != 0 || mpfr_cmp_si (MPC_IM(z), 0) != 0)
+        PRINT_ERROR ("mpc_set_d", prec, z);
+
+#if defined _MPC_H_HAVE_COMPLEX
+      mpc_set_dc (z, I*1.23456789+1.23456789, MPC_RNDNN);
+      if (mpfr_cmp (MPC_RE(z), fr) != 0 || mpfr_cmp (MPC_IM(z), fr) != 0)
+        PRINT_ERROR ("mpc_set_c", prec, z);
+#endif
+
+      mpc_set_ui (z, u, MPC_RNDNN);
+      if (mpfr_cmp_ui (MPC_RE(z), u) != 0
+          || mpfr_cmp_ui (MPC_IM(z), 0) != 0)
+        PRINT_ERROR ("mpc_set_ui", prec, z);
+
+      mpc_set_d_d (z, 1.23456789, 1.23456789, MPC_RNDNN);
+      if (mpfr_cmp (MPC_RE(z), fr) != 0 || mpfr_cmp (MPC_IM(z), fr) != 0)
+        PRINT_ERROR ("mpc_set_d_d", prec, z);
+
+      mpc_set_si (z, lo, MPC_RNDNN);
+      if (mpfr_cmp_si (MPC_RE(z), lo) != 0 || mpfr_cmp_ui (MPC_IM(z), 0) != 0)
+        PRINT_ERROR ("mpc_set_si", prec, z);
+
+      mpfr_set_ld (fr, 1.23456789L, GMP_RNDN);
+
+      mpc_set_ld_ld (z, 1.23456789L, 1.23456789L, MPC_RNDNN);
+      if (mpfr_cmp (MPC_RE(z), fr) != 0 || mpfr_cmp (MPC_IM(z), fr) != 0)
+        PRINT_ERROR ("mpc_set_ld_ld", prec, z);
+
+#if defined _MPC_H_HAVE_COMPLEX
+      mpc_set_ldc (z, I*1.23456789L+1.23456789L, MPC_RNDNN);
+      if (mpfr_cmp (MPC_RE(z), fr) != 0 || mpfr_cmp (MPC_IM(z), fr) != 0)
+        PRINT_ERROR ("mpc_set_lc", prec, z);
+#endif
+      mpc_set_ui_ui (z, u, u, MPC_RNDNN);
+      if (mpfr_cmp_ui (MPC_RE(z), u) != 0
+          || mpfr_cmp_ui (MPC_IM(z), u) != 0)
+        PRINT_ERROR ("mpc_set_ui_ui", prec, z);
+
+      mpc_set_ld (z, 1.23456789L, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp_ui (MPC_IM(z), 0) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_ld", prec, z);
+
+      mpc_set_prec (x, prec);
+      mpfr_set_ui(fr, 1, GMP_RNDN);
+      mpfr_div_ui(fr, fr, 3, GMP_RNDN);
+      mpfr_set(MPC_RE(x), fr, GMP_RNDN);
+      mpfr_set(MPC_IM(x), fr, GMP_RNDN);
+
+      mpc_set (z, x, MPC_RNDNN);
+      mpfr_clear_flags (); /* mpc_cmp set erange flag when an operand is a
+                              NaN */
+      if (mpc_cmp (z, x) != 0 || mpfr_erangeflag_p())
+        {
+          printf ("Error in mpc_set for prec = %lu\n",
+                  (unsigned long int) prec);
+          MPC_OUT(z);
+          MPC_OUT(x);
+          exit (1);
+        }
+
+      mpc_set_si_si (z, lo, lo, MPC_RNDNN);
+      if (mpfr_cmp_si (MPC_RE(z), lo) != 0
+          || mpfr_cmp_si (MPC_IM(z), lo) != 0)
+        PRINT_ERROR ("mpc_set_si_si", prec, z);
+
+      mpc_set_fr (z, fr, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp_ui (MPC_IM(z), 0) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_fr", prec, z);
+
+      mpfr_set_z (fr, mpz, GMP_RNDN);
+      mpc_set_z_z (z, mpz, mpz, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp (MPC_IM(z), fr) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_z_z", prec, z);
+
+      mpc_set_fr_fr (z, fr, fr, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp (MPC_IM(z), fr) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_fr_fr", prec, z);
+
+      mpc_set_z (z, mpz, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp_ui (MPC_IM(z), 0) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_z", prec, z);
+
+      mpfr_set_q (fr, mpq, GMP_RNDN);
+      mpc_set_q_q (z, mpq, mpq, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp (MPC_IM(z), fr) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_q_q", prec, z);
+
+      mpc_set_ui_fr (z, u, fr, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp_ui (MPC_RE (z), u) != 0
+          || mpfr_cmp (MPC_IM (z), fr) != 0
+          || mpfr_erangeflag_p ())
+        PRINT_ERROR ("mpc_set_ui_fr", prec, z);
+
+      mpc_set_fr_ui (z, fr, u, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE (z), fr) != 0
+          || mpfr_cmp_ui (MPC_IM (z), u) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_fr_ui", prec, z);
+
+      mpc_set_q (z, mpq, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp_ui (MPC_IM(z), 0) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_q", prec, z);
+
+      mpfr_set_f (fr, mpf, GMP_RNDN);
+      mpc_set_f_f (z, mpf, mpf, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp (MPC_IM(z), fr) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_f_f", prec, z);
+
+      mpc_set_f (z, mpf, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE(z), fr) != 0
+          || mpfr_cmp_ui (MPC_IM(z), 0) != 0
+          || mpfr_erangeflag_p())
+        PRINT_ERROR ("mpc_set_f", prec, z);
+
+      mpc_set_f_si (z, mpf, lo, MPC_RNDNN);
+      mpfr_clear_flags ();
+      if (mpfr_cmp (MPC_RE (z), fr) != 0
+          || mpfr_cmp_si (MPC_IM (z), lo) != 0
+          || mpfr_erangeflag_p ())
+        PRINT_ERROR ("mpc_set_f", prec, z);
+
+      mpc_set_nan (z);
+      if (!mpfr_nan_p (MPC_RE(z)) || !mpfr_nan_p (MPC_IM(z)))
+        PRINT_ERROR ("mpc_set_nan", prec, z);
+
+#ifdef _MPC_H_HAVE_INTMAX_T
+      {
+        uintmax_t uim = (uintmax_t) prec;
+        intmax_t im = (intmax_t) prec;
+
+        mpc_set_uj (z, uim, MPC_RNDNN);
+        if (mpfr_cmp_ui (MPC_RE(z), u) != 0
+            || mpfr_cmp_ui (MPC_IM(z), 0) != 0)
+          PRINT_ERROR ("mpc_set_uj", prec, z);
+
+        mpc_set_sj (z, im, MPC_RNDNN);
+        if (mpfr_cmp_ui (MPC_RE(z), u) != 0
+            || mpfr_cmp_ui (MPC_IM(z), 0) != 0)
+          PRINT_ERROR ("mpc_set_sj (1)", prec, z);
+
+        mpc_set_uj_uj (z, uim, uim, MPC_RNDNN);
+        if (mpfr_cmp_ui (MPC_RE(z), u) != 0
+            || mpfr_cmp_ui (MPC_IM(z), u) != 0)
+          PRINT_ERROR ("mpc_set_uj_uj", prec, z);
+
+        mpc_set_sj_sj (z, im, im, MPC_RNDNN);
+        if (mpfr_cmp_ui (MPC_RE(z), u) != 0
+            || mpfr_cmp_ui (MPC_IM(z), u) != 0)
+          PRINT_ERROR ("mpc_set_sj_sj (1)", prec, z);
+
+        im = LONG_MAX;
+        if (sizeof (intmax_t) == 2 * sizeof (unsigned long))
+          im = 2 * im * im + 4 * im + 1; /* gives 2^(2n-1)-1 from 2^(n-1)-1 */
+
+        mpc_set_sj (z, im, MPC_RNDNN);
+        if (mpfr_get_sj (MPC_RE(z), GMP_RNDN) != im ||
+            mpfr_cmp_ui (MPC_IM(z), 0) != 0)
+          PRINT_ERROR ("mpc_set_sj (2)", im, z);
+
+        mpc_set_sj_sj (z, im, im, MPC_RNDNN);
+        if (mpfr_get_sj (MPC_RE(z), GMP_RNDN) != im ||
+            mpfr_get_sj (MPC_IM(z), GMP_RNDN) != im)
+          PRINT_ERROR ("mpc_set_sj_sj (2)", im, z);
+      }
+#endif /* _MPC_H_HAVE_INTMAX_T */
+
+#if defined _MPC_H_HAVE_COMPLEX
+      {
+         double _Complex c = 1.0 - 2.0*I;
+         long double _Complex lc = c;
+
+         mpc_set_dc (z, c, MPC_RNDNN);
+         if (mpc_get_dc (z, MPC_RNDNN) != c)
+            PRINT_ERROR ("mpc_get_c", prec, z);
+         mpc_set_ldc (z, lc, MPC_RNDNN);
+         if (mpc_get_ldc (z, MPC_RNDNN) != lc)
+            PRINT_ERROR ("mpc_get_lc", prec, z);
+      }
+#endif
+    }
+
+  mpz_clear (mpz);
+  mpq_clear (mpq);
+  mpf_clear (mpf);
+  mpfr_clear (fr);
+  mpc_clear (x);
+  mpc_clear (z);
+}
+
+static void
+check_set_str (mpfr_exp_t exp_max)
+{
+  mpc_t expected;
+  mpc_t got;
+  char *str;
+
+  mpfr_prec_t prec;
+  mpfr_exp_t exp_min;
+  int base;
+
+  mpc_init2 (expected, 1024);
+  mpc_init2 (got, 1024);
+
+  exp_min = mpfr_get_emin ();
+  if (exp_max <= 0)
+    exp_max = mpfr_get_emax ();
+  else if (exp_max > mpfr_get_emax ())
+    exp_max = mpfr_get_emax();
+  if (-exp_max > exp_min)
+    exp_min = - exp_max;
+
+  for (prec = 2; prec < 1024; prec += 7)
+    {
+      mpc_set_prec (got, prec);
+      mpc_set_prec (expected, prec);
+
+      base = 2 + (int) gmp_urandomm_ui (rands, 35);
+         /* uses external variable rands from random.c */
+
+      mpfr_set_nan (MPC_RE (expected));
+      mpfr_set_inf (MPC_IM (expected), prec % 2 - 1);
+      str = mpc_get_str (base, 0, expected, MPC_RNDNN);
+      if (mpfr_nan_p (MPC_RE (got)) == 0
+          || mpfr_cmp (MPC_IM (got), MPC_IM (expected)) != 0)
+        {
+          printf ("Error: mpc_set_str o mpc_get_str != Id\n"
+                  "in base %u with str=\"%s\"\n", base, str);
+          MPC_OUT (expected);
+          printf ("     ");
+          MPC_OUT (got);
+          exit (1);
+        }
+      mpc_free_str (str);
+
+      test_default_random (expected, exp_min, exp_max, 128, 25);
+      str = mpc_get_str (base, 0, expected, MPC_RNDNN);
+      if (mpc_set_str (got, str, base, MPC_RNDNN) == -1
+          || mpc_cmp (got, expected) != 0)
+        {
+          printf ("Error: mpc_set_str o mpc_get_str != Id\n"
+                  "in base %u with str=\"%s\"\n", base, str);
+          MPC_OUT (expected);
+          printf ("     ");
+          MPC_OUT (got);
+          exit (1);
+        }
+      mpc_free_str (str);
+    }
+
+#ifdef HAVE_SETLOCALE
+  {
+    /* Check with ',' as a decimal point */
+    char *old_locale;
+
+    old_locale = setlocale (LC_ALL, "de_DE");
+    if (old_locale != NULL)
+      {
+        str = mpc_get_str (10, 0, expected, MPC_RNDNN);
+        if (mpc_set_str (got, str, 10, MPC_RNDNN) == -1
+            || mpc_cmp (got, expected) != 0)
+          {
+            printf ("Error: mpc_set_str o mpc_get_str != Id\n"
+                    "with str=\"%s\"\n", str);
+            MPC_OUT (expected);
+            printf ("     ");
+            MPC_OUT (got);
+            exit (1);
+          }
+        mpc_free_str (str);
+
+        setlocale (LC_ALL, old_locale);
+      }
+  }
+#endif /* HAVE_SETLOCALE */
+
+  /* the real part has a zero exponent in base ten (fixed in r439) */
+  mpc_set_prec (expected, 37);
+  mpc_set_prec (got, 37);
+  mpc_set_str (expected, "921FC04EDp-35  ", 16, GMP_RNDN);
+  str = mpc_get_str (10, 0, expected, MPC_RNDNN);
+  if (mpc_set_str (got, str, 10, MPC_RNDNN) == -1
+      || mpc_cmp (got, expected) != 0)
+    {
+      printf ("Error: mpc_set_str o mpc_get_str != Id\n"
+              "with str=\"%s\"\n", str);
+      MPC_OUT (expected);
+      printf ("     ");
+      MPC_OUT (got);
+      exit (1);
+    }
+  mpc_free_str (str);
+
+  str = mpc_get_str (1, 0, expected, MPC_RNDNN);
+  if (str != NULL)
+    {
+      printf ("Error: mpc_get_str with base==1 should fail\n");
+      exit (1);
+    }
+
+  mpc_clear (expected);
+  mpc_clear (got);
+}
+
+int
+main (void)
+{
+  test_start ();
+
+  check_set ();
+  check_set_str (1024);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tsin.c b/mpc/tests/tsin.c
new file mode 100644
index 0000000..72b3378
--- /dev/null
+++ b/mpc/tests/tsin.c
@@ -0,0 +1,37 @@
+/* test file for mpc_sin.
+
+Copyright (C) INRIA, 2007, 2008, 2010
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_sin);
+
+  test_start ();
+
+  data_check (f, "sin.dat");
+  tgeneric (f, 2, 512, 7, 7);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tsin_cos.c b/mpc/tests/tsin_cos.c
new file mode 100644
index 0000000..55c1799
--- /dev/null
+++ b/mpc/tests/tsin_cos.c
@@ -0,0 +1,36 @@
+/* test file for mpc_sin_cos.
+
+Copyright (C) INRIA, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC_C, f, mpc_sin_cos);
+
+  test_start ();
+
+  tgeneric (f, 2, 512, 13, 7);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tsinh.c b/mpc/tests/tsinh.c
new file mode 100644
index 0000000..23579d4
--- /dev/null
+++ b/mpc/tests/tsinh.c
@@ -0,0 +1,37 @@
+/* test file for mpc_sinh.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_sinh);
+
+  test_start ();
+
+  data_check (f, "sinh.dat");
+  tgeneric (f, 2, 512, 7, 7);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tsqr.c b/mpc/tests/tsqr.c
new file mode 100644
index 0000000..d5d2da4
--- /dev/null
+++ b/mpc/tests/tsqr.c
@@ -0,0 +1,190 @@
+/* tsqr -- test file for mpc_sqr.
+
+Copyright (C) INRIA, 2002, 2005, 2008, 2010, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdio.h>
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+static void cmpsqr (mpc_srcptr x, mpc_rnd_t rnd)
+   /* computes the square of x with the specific function or by simple     */
+   /* multiplication using the rounding mode rnd and compares the results  */
+   /* and return values.                                                   */
+   /* In our current test suite, the real and imaginary parts of x have    */
+   /* the same precision, and we use this precision also for the result.   */
+   /* Furthermore, we check whether computing the square in the same       */
+   /* place yields the same result.                                        */
+   /* We also compute the result with four times the precision and check   */
+   /* whether the rounding is correct. Error reports in this part of the   */
+   /* algorithm might still be wrong, though, since there are two          */
+   /* consecutive roundings.                                               */
+{
+  mpc_t z, t, u;
+  int   inexact_z, inexact_t;
+
+  mpc_init2 (z, MPC_MAX_PREC (x));
+  mpc_init2 (t, MPC_MAX_PREC (x));
+  mpc_init2 (u, 4 * MPC_MAX_PREC (x));
+
+  inexact_z = mpc_sqr (z, x, rnd);
+  inexact_t = mpc_mul (t, x, x, rnd);
+
+  if (mpc_cmp (z, t))
+    {
+      fprintf (stderr, "sqr and mul differ for rnd=(%s,%s) \nx=",
+               mpfr_print_rnd_mode(MPC_RND_RE(rnd)),
+               mpfr_print_rnd_mode(MPC_RND_IM(rnd)));
+      mpc_out_str (stderr, 2, 0, x, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_sqr gives ");
+      mpc_out_str (stderr, 2, 0, z, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_mul gives ");
+      mpc_out_str (stderr, 2, 0, t, MPC_RNDNN);
+      fprintf (stderr, "\n");
+      exit (1);
+    }
+  if (inexact_z != inexact_t)
+    {
+      fprintf (stderr, "The return values of sqr and mul differ for rnd=(%s,%s) \nx=  ",
+               mpfr_print_rnd_mode(MPC_RND_RE(rnd)),
+               mpfr_print_rnd_mode(MPC_RND_IM(rnd)));
+      mpc_out_str (stderr, 2, 0, x, MPC_RNDNN);
+      fprintf (stderr, "\nx^2=");
+      mpc_out_str (stderr, 2, 0, z, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_sqr gives %i", inexact_z);
+      fprintf (stderr, "\nmpc_mul gives %i", inexact_t);
+      fprintf (stderr, "\n");
+      exit (1);
+    }
+
+  mpc_set (t, x, MPC_RNDNN);
+  inexact_t = mpc_sqr (t, t, rnd);
+  if (mpc_cmp (z, t))
+    {
+      fprintf (stderr, "sqr and sqr in place differ for rnd=(%s,%s) \nx=",
+               mpfr_print_rnd_mode(MPC_RND_RE(rnd)),
+               mpfr_print_rnd_mode(MPC_RND_IM(rnd)));
+      mpc_out_str (stderr, 2, 0, x, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_sqr          gives ");
+      mpc_out_str (stderr, 2, 0, z, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_sqr in place gives ");
+      mpc_out_str (stderr, 2, 0, t, MPC_RNDNN);
+      fprintf (stderr, "\n");
+      exit (1);
+    }
+  if (inexact_z != inexact_t)
+    {
+      fprintf (stderr, "The return values of sqr and sqr in place differ for rnd=(%s,%s) \nx=  ",
+               mpfr_print_rnd_mode(MPC_RND_RE(rnd)),
+               mpfr_print_rnd_mode(MPC_RND_IM(rnd)));
+      mpc_out_str (stderr, 2, 0, x, MPC_RNDNN);
+      fprintf (stderr, "\nx^2=");
+      mpc_out_str (stderr, 2, 0, z, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_sqr          gives %i", inexact_z);
+      fprintf (stderr, "\nmpc_sqr in place gives %i", inexact_t);
+      fprintf (stderr, "\n");
+      exit (1);
+    }
+
+  mpc_sqr (u, x, rnd);
+  mpc_set (t, u, rnd);
+  if (mpc_cmp (z, t))
+    {
+      fprintf (stderr, "rounding in sqr might be incorrect for rnd=(%s,%s) \nx=",
+               mpfr_print_rnd_mode(MPC_RND_RE(rnd)),
+               mpfr_print_rnd_mode(MPC_RND_IM(rnd)));
+      mpc_out_str (stderr, 2, 0, x, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_sqr                     gives ");
+      mpc_out_str (stderr, 2, 0, z, MPC_RNDNN);
+      fprintf (stderr, "\nmpc_sqr quadruple precision gives ");
+      mpc_out_str (stderr, 2, 0, u, MPC_RNDNN);
+      fprintf (stderr, "\nand is rounded to                 ");
+      mpc_out_str (stderr, 2, 0, t, MPC_RNDNN);
+      fprintf (stderr, "\n");
+      exit (1);
+    }
+
+  mpc_clear (z);
+  mpc_clear (t);
+  mpc_clear (u);
+}
+
+
+static void
+testsqr (long a, long b, mpfr_prec_t prec, mpc_rnd_t rnd)
+{
+  mpc_t x;
+
+  mpc_init2 (x, prec);
+
+  mpc_set_si_si (x, a, b, rnd);
+
+  cmpsqr (x, rnd);
+
+  mpc_clear (x);
+}
+
+
+static void
+reuse_bug (void)
+{
+  mpc_t z1;
+
+  /* reuse bug found by Paul Zimmermann 20081021 */
+  mpc_init2 (z1, 2);
+  /* RE (z1^2) overflows, IM(z^2) = -0 */
+  mpfr_set_str (MPC_RE (z1), "0.11", 2, GMP_RNDN);
+  mpfr_mul_2si (MPC_RE (z1), MPC_RE (z1), mpfr_get_emax (), GMP_RNDN);
+  mpfr_set_ui (MPC_IM (z1), 0, GMP_RNDN);
+  mpc_conj (z1, z1, MPC_RNDNN);
+  mpc_sqr (z1, z1, MPC_RNDNN);
+  if (!mpfr_inf_p (MPC_RE (z1)) || mpfr_signbit (MPC_RE (z1))
+      ||!mpfr_zero_p (MPC_IM (z1)) || !mpfr_signbit (MPC_IM (z1)))
+    {
+      printf ("Error: Regression, bug 20081021 reproduced\n");
+      MPC_OUT (z1);
+      exit (1);
+    }
+
+  mpc_clear (z1);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_sqr);
+  test_start ();
+
+  testsqr (247, -65, 8, 24);
+  testsqr (5, -896, 3, 2);
+  testsqr (-3, -512, 2, 16);
+  testsqr (266013312, 121990769, 27, 0);
+  testsqr (170, 9, 8, 0);
+  testsqr (768, 85, 8, 16);
+  testsqr (145, 1816, 8, 24);
+  testsqr (0, 1816, 8, 24);
+  testsqr (145, 0, 8, 24);
+
+  data_check (f, "sqr.dat");
+  tgeneric (f, 2, 1024, 1, 0);
+
+  reuse_bug ();
+
+  return 0;
+}
diff --git a/mpc/tests/tsqrt.c b/mpc/tests/tsqrt.c
new file mode 100644
index 0000000..15c4619
--- /dev/null
+++ b/mpc/tests/tsqrt.c
@@ -0,0 +1,37 @@
+/* tsqrt -- test file for mpc_sqrt.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_sqrt);
+
+  test_start ();
+
+  data_check (f, "sqrt.dat");
+  tgeneric (f, 2, 1024, 7, 256);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tstrtoc.c b/mpc/tests/tstrtoc.c
new file mode 100644
index 0000000..c00bc49
--- /dev/null
+++ b/mpc/tests/tstrtoc.c
@@ -0,0 +1,167 @@
+/* test file for mpc_strtoc.
+
+Copyright (C) INRIA, 2009, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <string.h>
+#include <stdlib.h>
+
+#include "mpc-tests.h"
+
+extern unsigned long line_number;
+extern int nextchar;
+extern char *pathname;
+
+/* names of rounding modes */
+extern const char *rnd_mode[];
+
+static void
+check_file (const char* file_name)
+{
+  FILE *fp;
+  unsigned long test_line_number;
+
+  size_t str_len = 255;
+  char *str = NULL;
+  size_t rstr_len = 255;
+  char *rstr = NULL;
+  char *end = NULL;
+
+  int base;
+  int inex_re;
+  int inex_im;
+  mpc_t expected, got;
+  mpc_rnd_t rnd = MPC_RNDNN;
+  int inex = 0, inex_expected;
+  known_signs_t ks = {1, 1};
+
+
+  fp = open_data_file (file_name);
+
+  /* initializations */
+  str = (char *) malloc (str_len);
+  if (str == NULL)
+    {
+      printf ("Cannot allocate memory\n");
+      exit (1);
+    }
+  rstr = (char *) malloc (rstr_len);
+  if (rstr == NULL)
+    {
+      printf ("Cannot allocate memory\n");
+      exit (1);
+    }
+  mpc_init2 (expected, 53);
+  mpc_init2 (got, 53);
+
+  /* read data file */
+  line_number = 1;
+  nextchar = getc (fp);
+  while (nextchar != EOF)
+    {
+      skip_whitespace_comments (fp);
+
+      /* 1. read a line of data: expected result, base, rounding mode */
+      test_line_number = line_number;
+      read_ternary (fp, &inex_re);
+      read_ternary (fp, &inex_im);
+      read_mpc (fp, expected, NULL);
+      if (inex_re == TERNARY_ERROR || inex_im == TERNARY_ERROR)
+         inex_expected = -1;
+      else
+         inex_expected = MPC_INEX (inex_re, inex_im);
+
+      str_len = read_string (fp, &str, str_len, "number string");
+      rstr_len = read_string (fp, &rstr, rstr_len, "string remainder");
+      read_int (fp, &base, "base");
+      read_mpc_rounding_mode (fp, &rnd);
+
+      /* 2. convert string at the same precision as the expected result */
+      mpfr_set_prec (MPC_RE (got), MPC_PREC_RE (expected));
+      mpfr_set_prec (MPC_IM (got), MPC_PREC_IM (expected));
+      inex = mpc_strtoc (got, str, &end, base, rnd);
+
+      /* 3. compare this result with the expected one */
+      if (inex != inex_expected
+          || !same_mpc_value (got, expected, ks)
+          || strcmp (end, rstr) != 0)
+        {
+          printf ("mpc_strtoc(str) failed (line %lu)\nwith base=%d and "
+                  "rounding mode %s\n", test_line_number, base,
+                  rnd_mode[rnd]);
+          if (inex != MPC_INEX (inex_re, inex_im))
+            printf ("ternary value: got %s, expected (%s, %s)\n",
+                    MPC_INEX_STR (inex),
+                    (inex_re == +1 ? "+1" : (inex_re == -1 ? "-1" : "0")),
+                    (inex_im == +1 ? "+1" : (inex_im == -1 ? "-1" : "0")));
+          printf ("str = \"%s\"\n", str);
+          if (strcmp (end, rstr) != 0)
+            printf ("string remainder expected \"%s\"\n"
+                    "                 got      \"%s\"\n",
+                    rstr, end);
+          else
+            {
+              printf ("     ");
+              MPC_OUT (got);
+              MPC_OUT (expected);
+            }
+          exit (1);
+        }
+
+      end = NULL;
+    }
+
+  mpc_clear (expected);
+  mpc_clear (got);
+  if (str != NULL)
+    free (str);
+  if (rstr != NULL)
+    free (rstr);
+  close_data_file (fp);
+}
+
+static void
+check_null (void)
+{
+  int inex;
+  char *end;
+  mpc_t z;
+
+  mpc_init2 (z, 53);
+
+  inex = mpc_strtoc (z, NULL, &end, 10, MPC_RNDNN);
+  if (end != NULL || inex != -1 || mpfr_nan_p (MPC_RE (z)) == 0
+      || mpfr_nan_p (MPC_IM (z)) == 0)
+    {
+      printf ("Error: mpc_strtoc(z, NULL) with a NULL pointer should fail"
+              " and the z value should be set to NaN +I*NaN\ngot ");
+      MPC_OUT (z);
+      exit (1);
+    }
+
+  mpc_clear (z);
+}
+
+int
+main (void)
+{
+  check_null ();
+  check_file ("strtoc.dat");
+  return 0;
+}
diff --git a/mpc/tests/tsub.c b/mpc/tests/tsub.c
new file mode 100644
index 0000000..50ef414
--- /dev/null
+++ b/mpc/tests/tsub.c
@@ -0,0 +1,37 @@
+/* test file for mpc_sub.
+
+Copyright (C) INRIA, 2008, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (C_CC, f, mpc_sub);
+
+  test_start ();
+
+  data_check (f, "sub.dat");
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tsub_fr.c b/mpc/tests/tsub_fr.c
new file mode 100644
index 0000000..5355002
--- /dev/null
+++ b/mpc/tests/tsub_fr.c
@@ -0,0 +1,37 @@
+/* test file for mpc_sub_fr.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCF, f, mpc_sub_fr);
+
+  test_start ();
+
+  data_check (f, "sub_fr.dat");
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tsub_ui.c b/mpc/tests/tsub_ui.c
new file mode 100644
index 0000000..71427a7
--- /dev/null
+++ b/mpc/tests/tsub_ui.c
@@ -0,0 +1,36 @@
+/* test file for mpc_sub_ui.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CCU, f, mpc_sub_ui);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/ttan.c b/mpc/tests/ttan.c
new file mode 100644
index 0000000..175471d
--- /dev/null
+++ b/mpc/tests/ttan.c
@@ -0,0 +1,265 @@
+/* test file for mpc_tan.
+
+Copyright (C) INRIA, 2008, 2011
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include <stdlib.h>
+#include "mpc-tests.h"
+
+static void
+pure_real_argument (void)
+{
+  /* tan(x -i*0) = tan(x) -i*0 */
+  /* tan(x +i*0) = tan(x) +i*0 */
+  mpfr_t x;
+  mpfr_t tan_x;
+  mpc_t z;
+  mpc_t tan_z;
+
+  mpfr_init2 (x, 79);
+  mpfr_init2 (tan_x, 113);
+  mpc_init2 (z, 79);
+  mpc_init2 (tan_z, 113);
+
+  /* tan(1 +i*0) = tan(1) +i*0 */
+  mpc_set_ui_ui (z, 1, 0, MPC_RNDNN);
+  mpfr_set_ui (x, 1, GMP_RNDN);
+  mpfr_tan (tan_x, x, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_RE (tan_z), tan_x) != 0
+      || !mpfr_zero_p (MPC_IM (tan_z)) || mpfr_signbit (MPC_IM (tan_z)))
+    {
+      printf ("mpc_tan(1 + i * 0) failed\n");
+      exit (1);
+    }
+
+  /* tan(1 -i*0) = tan(1) -i*0 */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_RE (tan_z), tan_x) != 0
+      || !mpfr_zero_p (MPC_IM (tan_z)) || !mpfr_signbit (MPC_IM (tan_z)))
+    {
+      printf ("mpc_tan(1 - i * 0) failed\n");
+      exit (1);
+    }
+
+  /* tan(Pi/2 +i*0) = +Inf +i*0 */
+  mpfr_const_pi (x, GMP_RNDN);
+  mpfr_div_2ui (x, x, 1, GMP_RNDN);
+  mpfr_set (MPC_RE (z), x, GMP_RNDN);
+  mpfr_set_ui (MPC_IM (z), 0, GMP_RNDN);
+  mpfr_tan (tan_x, x, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_RE (tan_z), tan_x) != 0
+      || !mpfr_zero_p (MPC_IM (tan_z)) || mpfr_signbit (MPC_IM (tan_z)))
+    {
+      printf ("mpc_tan(Pi/2 + i * 0) failed\n");
+      exit (1);
+    }
+
+  /* tan(Pi/2 -i*0) = +Inf -i*0 */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_RE (tan_z), tan_x) != 0
+      || !mpfr_zero_p (MPC_IM (tan_z)) || !mpfr_signbit (MPC_IM (tan_z)))
+    {
+      printf ("mpc_tan(Pi/2 - i * 0) failed\n");
+      exit (1);
+    }
+
+  /* tan(-Pi/2 +i*0) = -Inf +i*0 */
+  mpfr_neg (x, x, GMP_RNDN);
+  mpc_neg (z, z, MPC_RNDNN);
+  mpfr_tan (tan_x, x, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_RE (tan_z), tan_x) != 0
+      || !mpfr_zero_p (MPC_IM (tan_z)) || mpfr_signbit (MPC_IM (tan_z)))
+    {
+      printf ("mpc_tan(-Pi/2 + i * 0) failed\n");
+      exit (1);
+    }
+
+  /* tan(-Pi/2 -i*0) = -Inf -i*0 */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_RE (tan_z), tan_x) != 0
+      || !mpfr_zero_p (MPC_IM (tan_z)) || !mpfr_signbit (MPC_IM (tan_z)))
+    {
+      printf ("mpc_tan(-Pi/2 - i * 0) failed\n");
+      exit (1);
+    }
+
+  mpc_clear (tan_z);
+  mpc_clear (z);
+  mpfr_clear (tan_x);
+  mpfr_clear (x);
+}
+
+static void
+pure_imaginary_argument (void)
+{
+  /* tan(-0 +i*y) = -0 +i*tanh(y) */
+  /* tan(+0 +i*y) = +0 +i*tanh(y) */
+  mpfr_t y;
+  mpfr_t tanh_y;
+  mpc_t z;
+  mpc_t tan_z;
+  mpfr_prec_t prec = (mpfr_prec_t) 111;
+
+  mpfr_init2 (y, 2);
+  mpfr_init2 (tanh_y, prec);
+  mpc_init2 (z, 2);
+  mpc_init2 (tan_z, prec);
+
+  /* tan(0 +i) = +0 +i*tanh(1) */
+  mpc_set_ui_ui (z, 0, 1, MPC_RNDNN);
+  mpfr_set_ui (y, 1, GMP_RNDN);
+  mpfr_tanh (tanh_y, y, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_IM (tan_z), tanh_y) != 0
+      || !mpfr_zero_p (MPC_RE (tan_z)) || mpfr_signbit (MPC_RE (tan_z)))
+    {
+      mpc_t c99;
+
+      mpc_init2 (c99, prec);
+      mpfr_set_ui (MPC_RE (c99), 0, GMP_RNDN);
+      mpfr_set (MPC_IM (c99), tanh_y, GMP_RNDN);
+
+      TEST_FAILED ("mpc_tan", z, tan_z, c99, MPC_RNDNN);
+    }
+
+  /* tan(0 -i) = +0 +i*tanh(-1) */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpfr_neg (tanh_y, tanh_y, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_IM (tan_z), tanh_y) != 0
+      || !mpfr_zero_p (MPC_RE (tan_z)) || mpfr_signbit (MPC_RE (tan_z)))
+    {
+      mpc_t c99;
+
+      mpc_init2 (c99, prec);
+      mpfr_set_ui (MPC_RE (c99), 0, GMP_RNDN);
+      mpfr_set (MPC_IM (c99), tanh_y, GMP_RNDN);
+
+      TEST_FAILED ("mpc_tan", z, tan_z, c99, MPC_RNDNN);
+    }
+
+  /* tan(-0 +i) = -0 +i*tanh(1) */
+  mpc_neg (z, z, MPC_RNDNN);
+  mpfr_neg (tanh_y, tanh_y, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_IM (tan_z), tanh_y) != 0
+      || !mpfr_zero_p (MPC_RE (tan_z)) || !mpfr_signbit (MPC_RE (tan_z)))
+    {
+      mpc_t c99;
+
+      mpc_init2 (c99, prec);
+      mpfr_set_ui (MPC_RE (c99), 0, GMP_RNDN);
+      mpfr_set (MPC_IM (c99), tanh_y, GMP_RNDN);
+
+      TEST_FAILED ("mpc_tan", z, tan_z, c99, MPC_RNDNN);
+    }
+
+  /* tan(-0 -i) = -0 +i*tanh(-1) */
+  mpc_conj (z, z, MPC_RNDNN);
+  mpfr_neg (tanh_y, tanh_y, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpfr_cmp (MPC_IM (tan_z), tanh_y) != 0
+      || !mpfr_zero_p (MPC_RE (tan_z)) || !mpfr_signbit (MPC_RE (tan_z)))
+    {
+      mpc_t c99;
+
+      mpc_init2 (c99, prec);
+      mpfr_set_ui (MPC_RE (c99), 0, GMP_RNDN);
+      mpfr_set (MPC_IM (c99), tanh_y, GMP_RNDN);
+
+      TEST_FAILED ("mpc_tan", z, tan_z, c99, MPC_RNDNN);
+    }
+
+  mpc_clear (tan_z);
+  mpc_clear (z);
+  mpfr_clear (tanh_y);
+  mpfr_clear (y);
+}
+
+static void
+check_53 (void)
+{
+  mpc_t z;
+  mpc_t tan_z;
+  mpc_t t;
+
+  mpc_init2 (z, 53);
+  mpc_init2 (tan_z, 53);
+  mpc_init2 (t, 53);
+
+  /* Let's play around the poles */
+  /* x = Re(z) = Pi/2 rounded to nearest to 53 bits precision */
+  /* y = Im(z) = Pi/2 - Re(z) rounded to nearest to 53 bits precision */
+  mpfr_set_str (MPC_RE (z), "3243F6A8885A30p-53", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (z), "11A62633145C07p-106", 16, GMP_RNDN);
+  mpfr_set_str (MPC_RE (t), "1D02967C31CDB5", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (t), "1D02967C31CDB5", 16, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpc_cmp (tan_z, t) != 0)
+    TEST_FAILED ("mpc_tan", z, tan_z, t, MPC_RNDNN);
+
+  mpfr_set_str (MPC_RE (t), "1D02967C31CDB4", 16, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDDU);
+  if (mpc_cmp (tan_z, t) != 0)
+    TEST_FAILED ("mpc_tan", z, tan_z, t, MPC_RNDDU);
+
+  mpfr_set_str (MPC_IM (t), "1D02967C31CDB4", 16, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDZD);
+  if (mpc_cmp (tan_z, t) != 0)
+    TEST_FAILED ("mpc_tan", z, tan_z, t, MPC_RNDZD);
+
+  /* Re(z) = x + 2^(-52) */
+  /* Im(z) = y - 2^(-52) */
+  mpfr_set_str (MPC_RE (z), "1921FB54442D19p-52", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (z), "-172CECE675D1FDp-105", 16, GMP_RNDN);
+  mpfr_set_str (MPC_RE (t), "-B0BD0AA4A3B3D", 16, GMP_RNDN);
+  mpfr_set_str (MPC_IM (t), "-B0BD0AA4A3B3D", 16, GMP_RNDN);
+  mpc_tan (tan_z, z, MPC_RNDNN);
+  if (mpc_cmp (tan_z, t) != 0)
+    TEST_FAILED ("mpc_tan", z, tan_z, t, MPC_RNDNN);
+
+  mpc_clear (t);
+  mpc_clear (tan_z);
+  mpc_clear (z);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_tan);
+
+  test_start ();
+
+  data_check (f, "tan.dat");
+  tgeneric (f, 2, 512, 7, 4);
+
+  pure_real_argument ();
+  pure_imaginary_argument ();
+  check_53 ();
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/ttanh.c b/mpc/tests/ttanh.c
new file mode 100644
index 0000000..0bbb959
--- /dev/null
+++ b/mpc/tests/ttanh.c
@@ -0,0 +1,37 @@
+/* test file for mpc_tanh.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CC, f, mpc_tanh);
+
+  test_start ();
+
+  data_check (f, "tanh.dat");
+  tgeneric (f, 2, 512, 7, 4);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tui_div.c b/mpc/tests/tui_div.c
new file mode 100644
index 0000000..f7e3d3d
--- /dev/null
+++ b/mpc/tests/tui_div.c
@@ -0,0 +1,103 @@
+/* test file for mpc_ui_div.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+static void
+special (void)
+{
+  mpc_t a, b;
+
+  mpc_init2 (a, 10);
+  mpc_init2 (b, 10);
+
+  mpc_set_ui_ui (a, 2, 4, MPC_RNDNN);
+  mpc_ui_div (b, 10, a, MPC_RNDNN);
+  if (mpc_cmp_si_si (b, 1, -2) != 0)
+    {
+      printf ("10/(2,4) failed\n");
+      printf ("expected (1,-2)\n");
+      printf ("got      ");
+      mpc_out_str (stdout, 10, 0, b, MPC_RNDNN);
+      printf ("\n");
+      exit (1);
+    }
+
+  /* 0/(-1-0*I) should give (-0, +0) */
+  mpfr_set_str (MPC_RE(a), "-1", 10, GMP_RNDN);
+  mpfr_set_str (MPC_IM(a), "-0", 10, GMP_RNDN);
+  mpc_ui_div (b, 0, a, MPC_RNDNN);
+  if ((mpc_cmp_si_si (b, 0, 0) != 0) || (MPFR_SIGN (MPC_RE(b)) > 0)
+      || (MPFR_SIGN (MPC_IM(b)) < 0))
+    {
+      printf ("0/(-1,-0) failed\n");
+      printf ("expected (-0,+0)\n");
+      printf ("got      ");
+      mpc_out_str (stdout, 10, 0, b, MPC_RNDNN);
+      printf ("\n");
+      exit (1);
+    }
+
+  mpc_set_ui_ui (a, 1, 0, MPC_RNDNN);
+  mpc_ui_div (b, 1, a, MPC_RNDNN);
+  if (mpc_cmp_si_si (b, 1, 0) != 0)
+    {
+      printf ("1/(1,0) failed\n");
+      printf ("expected (1,0)\n");
+      printf ("got      ");
+      mpc_out_str (stdout, 10, 0, b, MPC_RNDNN);
+      printf ("\n");
+      exit (1);
+    }
+
+  /* problem reported by Timo Hartmann with mpc-0.7, 21 Oct 2009 */
+  mpc_set_ui_ui (a, 4, 0, MPC_RNDNN);
+  mpc_ui_div (b, 1, a, MPC_RNDNN);
+  if (mpfr_cmp_ui_2exp (MPC_RE(b), 1, -2) != 0 ||
+      mpfr_cmp_ui (MPC_IM(b), 0) != 0 || mpfr_signbit (MPC_IM(b)) != 0)
+    {
+      printf ("1/(4,0) failed\n");
+      printf ("expected (1/4,0)\n");
+      printf ("got      ");
+      mpc_out_str (stdout, 10, 0, b, MPC_RNDNN);
+      printf ("\n");
+      exit (1);
+    }
+
+  mpc_clear (a);
+  mpc_clear (b);
+}
+
+int
+main (void)
+{
+  DECL_FUNC (CUC, f, mpc_ui_div);
+
+  test_start ();
+
+  special ();
+
+  tgeneric (f, 2, 1024, 7, 4096);
+
+  test_end ();
+
+  return 0;
+}
diff --git a/mpc/tests/tui_ui_sub.c b/mpc/tests/tui_ui_sub.c
new file mode 100644
index 0000000..fda20f3
--- /dev/null
+++ b/mpc/tests/tui_ui_sub.c
@@ -0,0 +1,36 @@
+/* test file for mpc_ui_ui_sub.
+
+Copyright (C) INRIA, 2008
+
+This file is part of the MPC Library.
+
+The MPC Library is free software; you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation; either version 2.1 of the License, or (at your
+option) any later version.
+
+The MPC Library is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
+or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
+License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with the MPC Library; see the file COPYING.LIB.  If not, write to
+the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
+MA 02111-1307, USA. */
+
+#include "mpc-tests.h"
+
+int
+main (void)
+{
+  DECL_FUNC (CUUC, f, mpc_ui_ui_sub);
+
+  test_start ();
+
+  tgeneric (f, 2, 1024, 7, -1);
+
+  test_end ();
+
+  return 0;
+}
-- 
1.7.9.5

